hello
wandb: Currently logged in as: janezdu (janezdu-uiuc). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.17.9 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.7
wandb: Run data is saved locally in /scratch/users/zd16/sparseIRM-resnet-ver/wandb/run-20240907_204547-chgrottc
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run name_random
wandb: ⭐️ View project at https://wandb.ai/janezdu-uiuc/irm
wandb: 🚀 View run at https://wandb.ai/janezdu-uiuc/irm/runs/chgrottc
=> Reading YAML config from configs/smallscale/resnet18/resnet18-usc-unsigned.yaml
Namespace(data='dataset/', optimizer='adam', weight_opt='adam', set='mnistcifar', arch='ResNet18', config='configs/smallscale/resnet18/resnet18-usc-unsigned.yaml', log_dir=None, workers=4, epochs=50, start_epoch=None, batch_size=390, lr=0.006, warmup_length=0, momentum=0.9, weight_decay=0.0, print_freq=10, num_classes=1, resume='', resume_train_weights='', evaluate=False, pretrained=None, pretrained_distill=None, alpha_distill=0.95, T_distill=2, seed=0, multigpu=[0], lr_policy='cosine_lr', lr_adjust=30, lr_gamma=0.1, name='baseline', save_every=-1, prune_rate=1.0, param_prune_rate=0.0, pr_start=1.0, low_data=1, width_mult=1.0, nesterov=False, threetimes=False, random_subnet=False, one_batch=False, conv_type='DenseConv', freeze_weights=False, st=False, mode='fan_in', nonlinearity='relu', bn_type='LearnedBatchNorm', init='kaiming_normal', no_bn_decay=False, scale_fan=False, first_layer_dense=False, last_layer_dense=True, approx=False, zero=False, flip=False, bs=False, gumbel_sample=False, multiply_prob=False, no_multiply=False, multiply_cont=False, multiply_prob_bs=False, indiv=False, label_smoothing=None, first_layer_type=None, trainer='default', score_init_constant=1.0, K=1, update_freq=20, D=0.01, T=1, TA=True, TA2=False, TA_grow=False, center=False, straight_through=False, PLA_factor=0.1, PLA_patience=10, gradient_loss_para=0, abs_loss_para=0, thres=0.9, runs_name='name_random', resume_compare_loss1='', resume_compare_loss2='', init_weights='', trained_mask='', weight_rescaling=False, constrain_by_layer=False, weight_rescaling_data=False, use_running_stats=False, not_clipping=False, rescaling_para=False, lasso_para=0, dont_freeze_weights=False, iterative=True, prob_by_weight=False, rescale_at_fix_subnet=False, train_weights_at_the_same_time=False, sample_from_training_set=False, load_true_para=False, distill=False, finetune=False, stablize=False, prev_best=0, weight_opt_lr=0.0006, n=500, ts=0.28, te=0.6, d=20000, s=80, c=0.75, init_prob=False, thres_before=0.001, wide_ratio=0.001, noise=1, cal_p_q=False, just_finetune=False, snip=False, envs_num=2, l2_regularizer_weight=0.001, data_num=50000, env_type='linear', irm_type='irmv1', hidden_dim=390, penalty_anneal_iters=200, penalty_weight=10000.0, grayscale_model=0, weight_lr_schedule=False, fix_subnet=False, freeze_weight=False, step='ours', prior_sd_coef=0, dim_inv=2, variance_gamma=1.0, dim_spu=10, image_scale=32, cons_ratio='0.999_0.7_0.1', noise_ratio=0.2, step_gamma=0.1, step_round=3, inner_steps=1, use_pgd=True, z=15.0, pgd_anneal_iters=600, pgd_skip_steps=5, fraction_z=0.99)
=> Creating model 'ResNet18'
Here!!!!!!!!
==> Conv Type: DenseConv
==> BN Type: LearnedBatchNorm
<class 'torch.nn.modules.conv.Conv2d'>
<class 'torch.nn.modules.batchnorm.BatchNorm2d'>
==> Building first layer with <class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): Linear(in_features=512, out_features=1, bias=True)
)
=> Parallelizing on [0] gpus
<DEBUG> gradient to module.conv1.weight
<DEBUG> gradient to module.bn1.weight
<DEBUG> gradient to module.bn1.bias
<DEBUG> gradient to module.layer1.0.conv1.weight
<DEBUG> gradient to module.layer1.0.bn1.weight
<DEBUG> gradient to module.layer1.0.bn1.bias
<DEBUG> gradient to module.layer1.0.conv2.weight
<DEBUG> gradient to module.layer1.0.bn2.weight
<DEBUG> gradient to module.layer1.0.bn2.bias
<DEBUG> gradient to module.layer1.1.conv1.weight
<DEBUG> gradient to module.layer1.1.bn1.weight
<DEBUG> gradient to module.layer1.1.bn1.bias
<DEBUG> gradient to module.layer1.1.conv2.weight
<DEBUG> gradient to module.layer1.1.bn2.weight
<DEBUG> gradient to module.layer1.1.bn2.bias
<DEBUG> gradient to module.layer2.0.conv1.weight
<DEBUG> gradient to module.layer2.0.bn1.weight
<DEBUG> gradient to module.layer2.0.bn1.bias
<DEBUG> gradient to module.layer2.0.conv2.weight
<DEBUG> gradient to module.layer2.0.bn2.weight
<DEBUG> gradient to module.layer2.0.bn2.bias
<DEBUG> gradient to module.layer2.0.downsample.0.weight
<DEBUG> gradient to module.layer2.0.downsample.1.weight
<DEBUG> gradient to module.layer2.0.downsample.1.bias
<DEBUG> gradient to module.layer2.1.conv1.weight
<DEBUG> gradient to module.layer2.1.bn1.weight
<DEBUG> gradient to module.layer2.1.bn1.bias
<DEBUG> gradient to module.layer2.1.conv2.weight
<DEBUG> gradient to module.layer2.1.bn2.weight
<DEBUG> gradient to module.layer2.1.bn2.bias
<DEBUG> gradient to module.layer3.0.conv1.weight
<DEBUG> gradient to module.layer3.0.bn1.weight
<DEBUG> gradient to module.layer3.0.bn1.bias
<DEBUG> gradient to module.layer3.0.conv2.weight
<DEBUG> gradient to module.layer3.0.bn2.weight
<DEBUG> gradient to module.layer3.0.bn2.bias
<DEBUG> gradient to module.layer3.0.downsample.0.weight
<DEBUG> gradient to module.layer3.0.downsample.1.weight
<DEBUG> gradient to module.layer3.0.downsample.1.bias
<DEBUG> gradient to module.layer3.1.conv1.weight
<DEBUG> gradient to module.layer3.1.bn1.weight
<DEBUG> gradient to module.layer3.1.bn1.bias
<DEBUG> gradient to module.layer3.1.conv2.weight
<DEBUG> gradient to module.layer3.1.bn2.weight
<DEBUG> gradient to module.layer3.1.bn2.bias
<DEBUG> gradient to module.layer4.0.conv1.weight
<DEBUG> gradient to module.layer4.0.bn1.weight
<DEBUG> gradient to module.layer4.0.bn1.bias
<DEBUG> gradient to module.layer4.0.conv2.weight
<DEBUG> gradient to module.layer4.0.bn2.weight
<DEBUG> gradient to module.layer4.0.bn2.bias
<DEBUG> gradient to module.layer4.0.downsample.0.weight
<DEBUG> gradient to module.layer4.0.downsample.1.weight
<DEBUG> gradient to module.layer4.0.downsample.1.bias
<DEBUG> gradient to module.layer4.1.conv1.weight
<DEBUG> gradient to module.layer4.1.bn1.weight
<DEBUG> gradient to module.layer4.1.bn1.bias
<DEBUG> gradient to module.layer4.1.conv2.weight
<DEBUG> gradient to module.layer4.1.bn2.weight
<DEBUG> gradient to module.layer4.1.bn2.bias
<DEBUG> gradient to module.fc.weight
<DEBUG> gradient to module.fc.bias
Files already downloaded and verified
Files already downloaded and verified
Adding Noise to Label, len(Y)=12000, Label_noise=1223
Xmp (7877, 3, 32, 32) (6903, 3, 32, 32)
Xcp (6031, 3, 32, 32) (5969, 3, 32, 32)
env=0 2497 2497 3 3
xn 2500 xp 2500
env=1 1750 1750 750 750
xn 2500 xp 2500
env=2 50 50 450 450
xn 500 xp 500
=> Creating model 'EBD'
EBD(
  (embedings): Embedding(2, 1)
)
=> Parallelizing on [0] gpus
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:01<00:39,  1.57s/it] 19%|#9        | 5/26 [00:01<00:05,  3.89it/s] 35%|###4      | 9/26 [00:01<00:02,  7.63it/s] 50%|#####     | 13/26 [00:01<00:01, 11.61it/s] 65%|######5   | 17/26 [00:02<00:00, 15.66it/s] 81%|########  | 21/26 [00:02<00:00, 19.39it/s] 96%|#########6| 25/26 [00:02<00:00, 22.82it/s]100%|##########| 26/26 [00:02<00:00,  9.88it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 0 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 2 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 3 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 4 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 5 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 6 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 7 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 8 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 9 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 10 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 11 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 12 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 13 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 14 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 15 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 16 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 17 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 18 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 19 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 20 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 21 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 22 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 23 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 24 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 25 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [0][  26/  26]	Loss 0.441 (0.600)	train_nll   0.44 (  0.60)	train_penalty   0.05 (  0.33)	weight_norm  21.03 ( 18.20)	train_acc   0.82 (  0.78)	train_minacc   0.02 (  0.11)	train_majacc   0.99 (  0.90)	train_corr   0.00 (  0.00)	l1 7.3753 (8.0529)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.60it/s] 27%|##6       | 7/26 [00:00<00:00, 25.00it/s]                                               27%|##6       | 7/26 [00:00<00:00, 25.00it/s] 46%|####6     | 12/26 [00:00<00:00, 32.62it/s] 65%|######5   | 17/26 [00:00<00:00, 33.06it/s]                                                65%|######5   | 17/26 [00:00<00:00, 33.06it/s] 88%|########8 | 23/26 [00:00<00:00, 39.62it/s]100%|##########| 26/26 [00:00<00:00, 31.28it/s]
Test: [   0/  26]	Loss 0.414 (0.414)	test_acc   0.84 (  0.84)	test_minacc   0.02 (  0.02)	test_majacc   0.98 (  0.98)	Loss_d 0.414 (0.414)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.02 (  0.02)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.96 (  0.96)
Test: [  10/  26]	Loss 0.424 (0.424)	test_acc   0.85 (  0.84)	test_minacc   0.02 (  0.02)	test_majacc   0.99 (  0.99)	Loss_d 0.424 (0.424)	test_acc_d   0.85 (  0.84)	test_minacc_d   0.02 (  0.02)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.96)
Test: [  20/  26]	Loss 0.403 (0.419)	test_acc   0.86 (  0.85)	test_minacc   0.04 (  0.02)	test_majacc   0.99 (  0.99)	Loss_d 0.403 (0.419)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.04 (  0.02)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.96)
Test: [  26/  26]	Loss 0.439 (0.423)	test_acc   0.82 (  0.84)	test_minacc   0.02 (  0.02)	test_majacc   0.99 (  0.99)	Loss_d 0.439 (0.423)	test_acc_d   0.82 (  0.84)	test_minacc_d   0.02 (  0.02)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.94 (  0.96)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00,  2.52it/s]100%|##########| 1/1 [00:00<00:00,  2.52it/s]
Test: [  0/  1]	Loss 1.470 (1.470)	test_acc   0.12 (  0.12)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 1.470 (1.470)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.95 (  0.95)
Test: [  1/  1]	Loss 1.470 (1.470)	test_acc   0.12 (  0.12)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 1.470 (1.470)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.95 (  0.95)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/159/checkpoints/model_best.pth
Overall Timing[  0/  1]	epoch_time 0.0774 (0.0774)	validation_time 0.0068 (0.0068)	train_time 0.0662 (0.0662)
record: (train_acc, test_acc) (0.8432000231742859, 0.1210000067949295)
last accs (train_acc, test_acc) (0.8432000231742859, 0.1210000067949295)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.30it/s] 15%|#5        | 4/26 [00:00<00:01, 17.77it/s] 31%|###       | 8/26 [00:00<00:00, 25.69it/s] 46%|####6     | 12/26 [00:00<00:00, 29.86it/s] 62%|######1   | 16/26 [00:00<00:00, 32.31it/s] 77%|#######6  | 20/26 [00:00<00:00, 33.95it/s] 92%|#########2| 24/26 [00:00<00:00, 34.41it/s]100%|##########| 26/26 [00:00<00:00, 28.80it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 26 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 27 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 28 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 29 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 30 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 31 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 32 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 33 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 34 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 35 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 36 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 37 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 38 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 39 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 40 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 41 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 42 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 43 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 44 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 45 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 46 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 47 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 48 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 49 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 50 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 51 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [1][  26/  26]	Loss 0.420 (0.419)	train_nll   0.42 (  0.42)	train_penalty   0.05 (  0.06)	weight_norm  22.18 ( 21.83)	train_acc   0.83 (  0.84)	train_minacc   0.02 (  0.02)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 7.4987 (7.5741)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.71it/s]  8%|7         | 2/26 [00:00<00:05,  4.60it/s] 27%|##6       | 7/26 [00:00<00:01, 16.89it/s]                                               27%|##6       | 7/26 [00:00<00:01, 16.89it/s] 46%|####6     | 12/26 [00:00<00:00, 25.59it/s] 65%|######5   | 17/26 [00:00<00:00, 31.65it/s]                                                65%|######5   | 17/26 [00:00<00:00, 31.65it/s] 85%|########4 | 22/26 [00:00<00:00, 33.29it/s]100%|##########| 26/26 [00:01<00:00, 25.20it/s]
Test: [   0/  26]	Loss 0.439 (0.439)	test_acc   0.84 (  0.84)	test_minacc   0.10 (  0.10)	test_majacc   0.97 (  0.97)	Loss_d 0.439 (0.439)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.10 (  0.10)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.94 (  0.94)
Test: [  10/  26]	Loss 0.449 (0.434)	test_acc   0.84 (  0.84)	test_minacc   0.09 (  0.10)	test_majacc   0.97 (  0.97)	Loss_d 0.449 (0.434)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.09 (  0.10)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.95 (  0.95)
Test: [  20/  26]	Loss 0.411 (0.426)	test_acc   0.85 (  0.84)	test_minacc   0.17 (  0.10)	test_majacc   0.96 (  0.97)	Loss_d 0.411 (0.426)	test_acc_d   0.85 (  0.84)	test_minacc_d   0.17 (  0.10)	test_majacc_d   0.96 (  0.97)	test_corr_d   0.94 (  0.95)
Test: [  26/  26]	Loss 0.425 (0.431)	test_acc   0.83 (  0.84)	test_minacc   0.12 (  0.10)	test_majacc   0.98 (  0.97)	Loss_d 0.425 (0.431)	test_acc_d   0.83 (  0.84)	test_minacc_d   0.12 (  0.10)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.93 (  0.95)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.23it/s]
Test: [  0/  1]	Loss 1.539 (1.539)	test_acc   0.18 (  0.18)	test_minacc   0.08 (  0.08)	test_majacc   1.00 (  1.00)	Loss_d 1.539 (1.539)	test_acc_d   0.18 (  0.18)	test_minacc_d   0.08 (  0.08)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.91 (  0.91)
Test: [  1/  1]	Loss 1.539 (1.539)	test_acc   0.18 (  0.18)	test_minacc   0.08 (  0.08)	test_majacc   1.00 (  1.00)	Loss_d 1.539 (1.539)	test_acc_d   0.18 (  0.18)	test_minacc_d   0.08 (  0.08)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.91 (  0.91)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/159/checkpoints/model_best.pth
Overall Timing[  1/  1]	epoch_time 0.0418 (0.0596)	validation_time 0.0004 (0.0036)	train_time 0.0414 (0.0538)
record: (train_acc, test_acc) (0.8405000247955322, 0.17500001192092896)
last accs (train_acc, test_acc) (0.8405000247955322, 0.17500001192092896)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.07it/s] 19%|#9        | 5/26 [00:00<00:00, 24.12it/s] 35%|###4      | 9/26 [00:00<00:00, 28.77it/s] 50%|#####     | 13/26 [00:00<00:00, 29.83it/s] 65%|######5   | 17/26 [00:00<00:00, 31.33it/s] 81%|########  | 21/26 [00:00<00:00, 32.61it/s] 96%|#########6| 25/26 [00:00<00:00, 33.84it/s]100%|##########| 26/26 [00:00<00:00, 29.42it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 52 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 53 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 54 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 55 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 56 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 57 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 58 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 59 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 60 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 61 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 62 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 63 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 64 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 65 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 66 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 67 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 68 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 69 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 70 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 71 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 72 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 73 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 74 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 75 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 76 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 77 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [2][  26/  26]	Loss 0.437 (0.412)	train_nll   0.44 (  0.41)	train_penalty   0.05 (  0.05)	weight_norm  22.30 ( 22.26)	train_acc   0.81 (  0.85)	train_minacc   0.09 (  0.05)	train_majacc   0.96 (  0.99)	train_corr   0.00 (  0.00)	l1 7.2527 (7.4281)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.73it/s] 27%|##6       | 7/26 [00:00<00:00, 36.96it/s]                                               27%|##6       | 7/26 [00:00<00:00, 36.96it/s] 42%|####2     | 11/26 [00:00<00:00, 38.29it/s] 62%|######1   | 16/26 [00:00<00:00, 41.09it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.09it/s] 81%|########  | 21/26 [00:00<00:00, 38.46it/s]100%|##########| 26/26 [00:00<00:00, 41.41it/s]100%|##########| 26/26 [00:00<00:00, 35.98it/s]
Test: [   0/  26]	Loss 0.370 (0.370)	test_acc   0.85 (  0.85)	test_minacc   0.10 (  0.10)	test_majacc   0.98 (  0.98)	Loss_d 0.370 (0.370)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.10 (  0.10)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.91 (  0.91)
Test: [  10/  26]	Loss 0.387 (0.380)	test_acc   0.85 (  0.85)	test_minacc   0.18 (  0.13)	test_majacc   0.96 (  0.98)	Loss_d 0.387 (0.380)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.18 (  0.13)	test_majacc_d   0.96 (  0.98)	test_corr_d   0.91 (  0.91)
Test: [  20/  26]	Loss 0.366 (0.374)	test_acc   0.86 (  0.85)	test_minacc   0.15 (  0.13)	test_majacc   0.97 (  0.98)	Loss_d 0.366 (0.374)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.15 (  0.13)	test_majacc_d   0.97 (  0.98)	test_corr_d   0.91 (  0.91)
Test: [  26/  26]	Loss 0.405 (0.377)	test_acc   0.82 (  0.85)	test_minacc   0.14 (  0.12)	test_majacc   0.96 (  0.98)	Loss_d 0.405 (0.377)	test_acc_d   0.82 (  0.85)	test_minacc_d   0.14 (  0.12)	test_majacc_d   0.96 (  0.98)	test_corr_d   0.90 (  0.91)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 56.88it/s]
Test: [  0/  1]	Loss 1.507 (1.507)	test_acc   0.21 (  0.21)	test_minacc   0.12 (  0.12)	test_majacc   1.00 (  1.00)	Loss_d 1.507 (1.507)	test_acc_d   0.21 (  0.21)	test_minacc_d   0.12 (  0.12)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.81 (  0.81)
Test: [  1/  1]	Loss 1.507 (1.507)	test_acc   0.21 (  0.21)	test_minacc   0.12 (  0.12)	test_majacc   1.00 (  1.00)	Loss_d 1.507 (1.507)	test_acc_d   0.21 (  0.21)	test_minacc_d   0.12 (  0.12)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.81 (  0.81)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/159/checkpoints/model_best.pth
Overall Timing[  2/  1]	epoch_time 0.0405 (0.0532)	validation_time 0.0009 (0.0027)	train_time 0.0396 (0.0491)
record: (train_acc, test_acc) (0.8475000264048577, 0.20600001513957977)
last accs (train_acc, test_acc) (0.8475000264048577, 0.20600001513957977)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 17.17it/s] 27%|##6       | 7/26 [00:00<00:00, 25.24it/s] 42%|####2     | 11/26 [00:00<00:00, 29.25it/s] 58%|#####7    | 15/26 [00:00<00:00, 31.44it/s] 73%|#######3  | 19/26 [00:00<00:00, 32.53it/s] 88%|########8 | 23/26 [00:00<00:00, 33.35it/s]100%|##########| 26/26 [00:00<00:00, 29.10it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 78 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 79 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 80 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 81 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 82 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 83 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 84 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 85 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 86 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 87 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 88 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 89 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 90 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 91 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 92 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 93 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 94 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 95 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 96 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 97 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 98 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 99 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 100 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 101 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 102 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 103 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [3][  26/  26]	Loss 0.414 (0.373)	train_nll   0.41 (  0.37)	train_penalty   0.05 (  0.04)	weight_norm  22.34 ( 22.32)	train_acc   0.82 (  0.85)	train_minacc   0.12 (  0.10)	train_majacc   0.96 (  0.98)	train_corr   0.00 (  0.00)	l1 7.1535 (7.2401)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.51it/s] 27%|##6       | 7/26 [00:00<00:00, 33.55it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.55it/s] 46%|####6     | 12/26 [00:00<00:00, 38.92it/s] 65%|######5   | 17/26 [00:00<00:00, 37.56it/s]                                                65%|######5   | 17/26 [00:00<00:00, 37.56it/s] 85%|########4 | 22/26 [00:00<00:00, 40.50it/s]100%|##########| 26/26 [00:00<00:00, 35.36it/s]
Test: [   0/  26]	Loss 0.370 (0.370)	test_acc   0.86 (  0.86)	test_minacc   0.10 (  0.10)	test_majacc   0.99 (  0.99)	Loss_d 0.370 (0.370)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.10 (  0.10)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.93 (  0.93)
Test: [  10/  26]	Loss 0.390 (0.387)	test_acc   0.86 (  0.85)	test_minacc   0.09 (  0.09)	test_majacc   0.99 (  0.99)	Loss_d 0.390 (0.387)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.09 (  0.09)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.92 (  0.93)
Test: [  20/  26]	Loss 0.356 (0.374)	test_acc   0.86 (  0.85)	test_minacc   0.11 (  0.09)	test_majacc   0.99 (  0.99)	Loss_d 0.356 (0.374)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.11 (  0.09)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.92 (  0.93)
Test: [  26/  26]	Loss 0.391 (0.375)	test_acc   0.83 (  0.85)	test_minacc   0.07 (  0.09)	test_majacc   0.99 (  0.99)	Loss_d 0.391 (0.375)	test_acc_d   0.83 (  0.85)	test_minacc_d   0.07 (  0.09)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.93 (  0.93)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.05it/s]
Test: [  0/  1]	Loss 1.699 (1.699)	test_acc   0.16 (  0.16)	test_minacc   0.07 (  0.07)	test_majacc   0.99 (  0.99)	Loss_d 1.699 (1.699)	test_acc_d   0.16 (  0.16)	test_minacc_d   0.07 (  0.07)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.85 (  0.85)
Test: [  1/  1]	Loss 1.699 (1.699)	test_acc   0.16 (  0.16)	test_minacc   0.07 (  0.07)	test_majacc   0.99 (  0.99)	Loss_d 1.699 (1.699)	test_acc_d   0.16 (  0.16)	test_minacc_d   0.07 (  0.07)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.85 (  0.85)
Overall Timing[  3/  1]	epoch_time 0.0440 (0.0509)	validation_time 0.0004 (0.0021)	train_time 0.0436 (0.0477)
record: (train_acc, test_acc) (0.8475000264048577, 0.20600001513957977)
last accs (train_acc, test_acc) (0.851000025331974, 0.16200000047683716)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.62it/s] 23%|##3       | 6/26 [00:00<00:00, 26.63it/s] 38%|###8      | 10/26 [00:00<00:00, 30.08it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.22it/s] 69%|######9   | 18/26 [00:00<00:00, 33.34it/s] 85%|########4 | 22/26 [00:00<00:00, 34.27it/s]100%|##########| 26/26 [00:00<00:00, 34.55it/s]100%|##########| 26/26 [00:00<00:00, 30.08it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 104 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 105 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 106 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 107 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 108 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 109 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 110 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 111 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 112 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 113 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 114 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 115 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 116 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 117 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 118 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 119 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 120 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 121 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 122 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 123 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 124 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 125 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 126 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 127 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 128 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 129 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [4][  26/  26]	Loss 0.422 (0.364)	train_nll   0.42 (  0.36)	train_penalty   0.05 (  0.03)	weight_norm  22.40 ( 22.37)	train_acc   0.82 (  0.85)	train_minacc   0.30 (  0.11)	train_majacc   0.93 (  0.98)	train_corr   0.00 (  0.00)	l1 7.3169 (7.1432)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.95it/s] 27%|##6       | 7/26 [00:00<00:00, 22.94it/s]                                               27%|##6       | 7/26 [00:00<00:00, 22.94it/s] 46%|####6     | 12/26 [00:00<00:00, 30.56it/s] 65%|######5   | 17/26 [00:00<00:00, 34.84it/s]                                                65%|######5   | 17/26 [00:00<00:00, 34.84it/s] 85%|########4 | 22/26 [00:00<00:00, 35.84it/s]100%|##########| 26/26 [00:00<00:00, 30.30it/s]
Test: [   0/  26]	Loss 0.345 (0.345)	test_acc   0.85 (  0.85)	test_minacc   0.16 (  0.16)	test_majacc   0.97 (  0.97)	Loss_d 0.345 (0.345)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.16 (  0.16)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.90 (  0.90)
Test: [  10/  26]	Loss 0.390 (0.373)	test_acc   0.84 (  0.85)	test_minacc   0.18 (  0.18)	test_majacc   0.95 (  0.97)	Loss_d 0.390 (0.373)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.18 (  0.18)	test_majacc_d   0.95 (  0.97)	test_corr_d   0.89 (  0.90)
Test: [  20/  26]	Loss 0.341 (0.360)	test_acc   0.87 (  0.85)	test_minacc   0.24 (  0.19)	test_majacc   0.97 (  0.97)	Loss_d 0.341 (0.360)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.24 (  0.19)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.90 (  0.90)
Test: [  26/  26]	Loss 0.370 (0.360)	test_acc   0.82 (  0.85)	test_minacc   0.19 (  0.20)	test_majacc   0.96 (  0.97)	Loss_d 0.370 (0.360)	test_acc_d   0.82 (  0.85)	test_minacc_d   0.19 (  0.20)	test_majacc_d   0.96 (  0.97)	test_corr_d   0.89 (  0.90)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.06it/s]
Test: [  0/  1]	Loss 1.701 (1.701)	test_acc   0.26 (  0.26)	test_minacc   0.18 (  0.18)	test_majacc   0.96 (  0.96)	Loss_d 1.701 (1.701)	test_acc_d   0.26 (  0.26)	test_minacc_d   0.18 (  0.18)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.72 (  0.72)
Test: [  1/  1]	Loss 1.701 (1.701)	test_acc   0.26 (  0.26)	test_minacc   0.18 (  0.18)	test_majacc   0.96 (  0.96)	Loss_d 1.701 (1.701)	test_acc_d   0.26 (  0.26)	test_minacc_d   0.18 (  0.18)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.72 (  0.72)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/159/checkpoints/model_best.pth
Overall Timing[  4/  1]	epoch_time 0.0437 (0.0495)	validation_time 0.0006 (0.0018)	train_time 0.0430 (0.0468)
record: (train_acc, test_acc) (0.8533000227808952, 0.26200002431869507)
last accs (train_acc, test_acc) (0.8533000227808952, 0.26200002431869507)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.29it/s] 23%|##3       | 6/26 [00:00<00:00, 26.74it/s] 38%|###8      | 10/26 [00:00<00:00, 31.00it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.87it/s] 69%|######9   | 18/26 [00:00<00:00, 33.61it/s] 85%|########4 | 22/26 [00:00<00:00, 34.46it/s]100%|##########| 26/26 [00:00<00:00, 35.11it/s]100%|##########| 26/26 [00:00<00:00, 30.32it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 130 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 131 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 132 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 133 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 134 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 135 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 136 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 137 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 138 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 139 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 140 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 141 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 142 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 143 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 144 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 145 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 146 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 147 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 148 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 149 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 150 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 151 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 152 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 153 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 154 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 155 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [5][  26/  26]	Loss 0.419 (0.351)	train_nll   0.42 (  0.35)	train_penalty   0.05 (  0.03)	weight_norm  22.47 ( 22.43)	train_acc   0.81 (  0.85)	train_minacc   0.40 (  0.16)	train_majacc   0.90 (  0.97)	train_corr   0.00 (  0.00)	l1 7.4622 (7.0800)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  4.10it/s] 23%|##3       | 6/26 [00:00<00:00, 20.72it/s]                                               23%|##3       | 6/26 [00:00<00:00, 20.72it/s] 42%|####2     | 11/26 [00:00<00:00, 29.50it/s] 62%|######1   | 16/26 [00:00<00:00, 35.44it/s]                                                62%|######1   | 16/26 [00:00<00:00, 35.44it/s] 81%|########  | 21/26 [00:00<00:00, 35.13it/s]100%|##########| 26/26 [00:00<00:00, 38.53it/s]100%|##########| 26/26 [00:00<00:00, 29.62it/s]
Test: [   0/  26]	Loss 0.306 (0.306)	test_acc   0.88 (  0.88)	test_minacc   0.43 (  0.43)	test_majacc   0.95 (  0.95)	Loss_d 0.306 (0.306)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.87 (  0.87)
Test: [  10/  26]	Loss 0.347 (0.337)	test_acc   0.85 (  0.86)	test_minacc   0.32 (  0.35)	test_majacc   0.93 (  0.95)	Loss_d 0.347 (0.337)	test_acc_d   0.85 (  0.86)	test_minacc_d   0.32 (  0.35)	test_majacc_d   0.93 (  0.95)	test_corr_d   0.86 (  0.88)
Test: [  20/  26]	Loss 0.308 (0.326)	test_acc   0.86 (  0.86)	test_minacc   0.26 (  0.34)	test_majacc   0.96 (  0.95)	Loss_d 0.308 (0.326)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.26 (  0.34)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.89 (  0.88)
Test: [  26/  26]	Loss 0.367 (0.325)	test_acc   0.85 (  0.86)	test_minacc   0.42 (  0.34)	test_majacc   0.94 (  0.95)	Loss_d 0.367 (0.325)	test_acc_d   0.85 (  0.86)	test_minacc_d   0.42 (  0.34)	test_majacc_d   0.94 (  0.95)	test_corr_d   0.85 (  0.88)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.68it/s]
Test: [  0/  1]	Loss 1.698 (1.698)	test_acc   0.37 (  0.37)	test_minacc   0.30 (  0.30)	test_majacc   0.99 (  0.99)	Loss_d 1.698 (1.698)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.61 (  0.61)
Test: [  1/  1]	Loss 1.698 (1.698)	test_acc   0.37 (  0.37)	test_minacc   0.30 (  0.30)	test_majacc   0.99 (  0.99)	Loss_d 1.698 (1.698)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.61 (  0.61)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/159/checkpoints/model_best.pth
Overall Timing[  5/  1]	epoch_time 0.0392 (0.0478)	validation_time 0.0003 (0.0016)	train_time 0.0388 (0.0454)
record: (train_acc, test_acc) (0.859600023329258, 0.36500000953674316)
last accs (train_acc, test_acc) (0.859600023329258, 0.36500000953674316)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.03it/s] 19%|#9        | 5/26 [00:00<00:01, 20.64it/s] 35%|###4      | 9/26 [00:00<00:00, 26.17it/s] 50%|#####     | 13/26 [00:00<00:00, 29.23it/s] 65%|######5   | 17/26 [00:00<00:00, 30.31it/s] 81%|########  | 21/26 [00:00<00:00, 31.19it/s] 96%|#########6| 25/26 [00:00<00:00, 33.08it/s]100%|##########| 26/26 [00:00<00:00, 27.44it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 156 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 157 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 158 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 159 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 160 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 161 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 162 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 163 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 164 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 165 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 166 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 167 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 168 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 169 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 170 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 171 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 172 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 173 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 174 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 175 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 176 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 177 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 178 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 179 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 180 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 181 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [6][  26/  26]	Loss 0.391 (0.328)	train_nll   0.39 (  0.33)	train_penalty   0.02 (  0.02)	weight_norm  22.56 ( 22.51)	train_acc   0.80 (  0.86)	train_minacc   0.30 (  0.24)	train_majacc   0.90 (  0.97)	train_corr   0.00 (  0.00)	l1 7.3644 (6.9989)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.54it/s] 23%|##3       | 6/26 [00:00<00:00, 27.30it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.30it/s] 42%|####2     | 11/26 [00:00<00:00, 36.39it/s] 62%|######1   | 16/26 [00:00<00:00, 40.23it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.23it/s] 81%|########  | 21/26 [00:00<00:00, 38.33it/s]100%|##########| 26/26 [00:00<00:00, 41.48it/s]100%|##########| 26/26 [00:00<00:00, 34.13it/s]
Test: [   0/  26]	Loss 0.322 (0.322)	test_acc   0.87 (  0.87)	test_minacc   0.41 (  0.41)	test_majacc   0.95 (  0.95)	Loss_d 0.322 (0.322)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.84 (  0.84)
Test: [  10/  26]	Loss 0.390 (0.352)	test_acc   0.81 (  0.85)	test_minacc   0.48 (  0.45)	test_majacc   0.86 (  0.92)	Loss_d 0.390 (0.352)	test_acc_d   0.81 (  0.85)	test_minacc_d   0.48 (  0.45)	test_majacc_d   0.86 (  0.92)	test_corr_d   0.78 (  0.82)
Test: [  20/  26]	Loss 0.306 (0.333)	test_acc   0.87 (  0.86)	test_minacc   0.50 (  0.47)	test_majacc   0.93 (  0.92)	Loss_d 0.306 (0.333)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.50 (  0.47)	test_majacc_d   0.93 (  0.92)	test_corr_d   0.83 (  0.82)
Test: [  26/  26]	Loss 0.338 (0.332)	test_acc   0.82 (  0.86)	test_minacc   0.35 (  0.48)	test_majacc   0.92 (  0.92)	Loss_d 0.338 (0.332)	test_acc_d   0.82 (  0.86)	test_minacc_d   0.35 (  0.48)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.82 (  0.82)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.89it/s]
Test: [  0/  1]	Loss 1.481 (1.481)	test_acc   0.48 (  0.48)	test_minacc   0.42 (  0.42)	test_majacc   0.96 (  0.96)	Loss_d 1.481 (1.481)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.42 (  0.42)
Test: [  1/  1]	Loss 1.481 (1.481)	test_acc   0.48 (  0.48)	test_minacc   0.42 (  0.42)	test_majacc   0.96 (  0.96)	Loss_d 1.481 (1.481)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.42 (  0.42)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/159/checkpoints/model_best.pth
Overall Timing[  6/  1]	epoch_time 0.0388 (0.0465)	validation_time 0.0004 (0.0014)	train_time 0.0384 (0.0444)
record: (train_acc, test_acc) (0.8558000237941742, 0.47700002789497375)
last accs (train_acc, test_acc) (0.8558000237941742, 0.47700002789497375)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.82it/s] 12%|#1        | 3/26 [00:00<00:01, 13.10it/s] 27%|##6       | 7/26 [00:00<00:00, 23.32it/s] 42%|####2     | 11/26 [00:00<00:00, 27.70it/s] 58%|#####7    | 15/26 [00:00<00:00, 30.14it/s] 73%|#######3  | 19/26 [00:00<00:00, 31.67it/s] 88%|########8 | 23/26 [00:00<00:00, 32.90it/s]100%|##########| 26/26 [00:00<00:00, 27.43it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 182 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 183 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 184 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 185 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 186 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 187 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 188 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 189 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 190 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 191 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 192 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 193 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 194 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 195 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 196 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 197 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 198 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 199 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 200 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 201 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 202 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 203 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 204 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 205 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 206 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 207 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [7][  26/  26]	Loss 0.001 (0.232)	train_nll   0.33 (  0.35)	train_penalty   0.00 (  0.02)	weight_norm  22.69 ( 22.62)	train_acc   0.85 (  0.84)	train_minacc   0.74 (  0.34)	train_majacc   0.87 (  0.93)	train_corr   0.00 (  0.00)	l1 7.2340 (6.9814)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.24it/s] 23%|##3       | 6/26 [00:00<00:00, 26.34it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.34it/s] 42%|####2     | 11/26 [00:00<00:00, 34.38it/s] 65%|######5   | 17/26 [00:00<00:00, 37.69it/s]                                                65%|######5   | 17/26 [00:00<00:00, 37.69it/s] 85%|########4 | 22/26 [00:00<00:00, 41.26it/s]100%|##########| 26/26 [00:00<00:00, 33.95it/s]
Test: [   0/  26]	Loss 0.323 (0.323)	test_acc   0.87 (  0.87)	test_minacc   0.64 (  0.64)	test_majacc   0.91 (  0.91)	Loss_d 0.323 (0.323)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.76 (  0.76)
Test: [  10/  26]	Loss 0.402 (0.356)	test_acc   0.79 (  0.84)	test_minacc   0.66 (  0.61)	test_majacc   0.82 (  0.88)	Loss_d 0.402 (0.356)	test_acc_d   0.79 (  0.84)	test_minacc_d   0.66 (  0.61)	test_majacc_d   0.82 (  0.88)	test_corr_d   0.67 (  0.73)
Test: [  20/  26]	Loss 0.364 (0.350)	test_acc   0.83 (  0.84)	test_minacc   0.56 (  0.61)	test_majacc   0.87 (  0.88)	Loss_d 0.364 (0.350)	test_acc_d   0.83 (  0.84)	test_minacc_d   0.56 (  0.61)	test_majacc_d   0.87 (  0.88)	test_corr_d   0.72 (  0.73)
Test: [  26/  26]	Loss 0.343 (0.351)	test_acc   0.84 (  0.84)	test_minacc   0.63 (  0.61)	test_majacc   0.88 (  0.88)	Loss_d 0.343 (0.351)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.63 (  0.61)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.70 (  0.72)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.70it/s]
Test: [  0/  1]	Loss 1.220 (1.220)	test_acc   0.58 (  0.58)	test_minacc   0.53 (  0.53)	test_majacc   0.96 (  0.96)	Loss_d 1.220 (1.220)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.26 (  0.26)
Test: [  1/  1]	Loss 1.220 (1.220)	test_acc   0.58 (  0.58)	test_minacc   0.53 (  0.53)	test_majacc   0.96 (  0.96)	Loss_d 1.220 (1.220)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.26 (  0.26)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/159/checkpoints/model_best.pth
Overall Timing[  7/  1]	epoch_time 0.0408 (0.0458)	validation_time 0.0003 (0.0013)	train_time 0.0405 (0.0439)
record: (train_acc, test_acc) (0.8392000204324722, 0.5750000476837158)
last accs (train_acc, test_acc) (0.8392000204324722, 0.5750000476837158)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.49it/s] 19%|#9        | 5/26 [00:00<00:00, 21.23it/s] 35%|###4      | 9/26 [00:00<00:00, 26.85it/s] 50%|#####     | 13/26 [00:00<00:00, 29.66it/s] 65%|######5   | 17/26 [00:00<00:00, 30.74it/s] 81%|########  | 21/26 [00:00<00:00, 32.54it/s] 96%|#########6| 25/26 [00:00<00:00, 33.20it/s]100%|##########| 26/26 [00:00<00:00, 27.91it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 208 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 209 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 210 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 211 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 212 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 213 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 214 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 215 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 216 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 217 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 218 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 219 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 220 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 221 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 222 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 223 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 224 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 225 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 226 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 227 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 228 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 229 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 230 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 231 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 232 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 233 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [8][  26/  26]	Loss 0.002 (0.003)	train_nll   0.47 (  0.46)	train_penalty   0.00 (  0.00)	weight_norm  22.74 ( 22.73)	train_acc   0.77 (  0.75)	train_minacc   0.81 (  0.76)	train_majacc   0.76 (  0.75)	train_corr   0.00 (  0.00)	l1 6.4097 (6.7808)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.09it/s] 27%|##6       | 7/26 [00:00<00:00, 32.96it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.96it/s] 46%|####6     | 12/26 [00:00<00:00, 38.70it/s] 65%|######5   | 17/26 [00:00<00:00, 38.68it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.68it/s] 85%|########4 | 22/26 [00:00<00:00, 41.86it/s]100%|##########| 26/26 [00:00<00:00, 36.30it/s]
Test: [   0/  26]	Loss 0.469 (0.469)	test_acc   0.75 (  0.75)	test_minacc   0.76 (  0.76)	test_majacc   0.74 (  0.74)	Loss_d 0.469 (0.469)	test_acc_d   0.75 (  0.75)	test_minacc_d   0.76 (  0.76)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.59 (  0.59)
Test: [  10/  26]	Loss 0.516 (0.472)	test_acc   0.68 (  0.75)	test_minacc   0.80 (  0.77)	test_majacc   0.66 (  0.74)	Loss_d 0.516 (0.472)	test_acc_d   0.68 (  0.75)	test_minacc_d   0.80 (  0.77)	test_majacc_d   0.66 (  0.74)	test_corr_d   0.55 (  0.58)
Test: [  20/  26]	Loss 0.481 (0.472)	test_acc   0.72 (  0.74)	test_minacc   0.80 (  0.77)	test_majacc   0.71 (  0.74)	Loss_d 0.481 (0.472)	test_acc_d   0.72 (  0.74)	test_minacc_d   0.80 (  0.77)	test_majacc_d   0.71 (  0.74)	test_corr_d   0.58 (  0.58)
Test: [  26/  26]	Loss 0.463 (0.474)	test_acc   0.77 (  0.74)	test_minacc   0.81 (  0.77)	test_majacc   0.76 (  0.74)	Loss_d 0.463 (0.474)	test_acc_d   0.77 (  0.74)	test_minacc_d   0.81 (  0.77)	test_majacc_d   0.76 (  0.74)	test_corr_d   0.54 (  0.58)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.70it/s]
Test: [  0/  1]	Loss 0.886 (0.886)	test_acc   0.66 (  0.66)	test_minacc   0.64 (  0.64)	test_majacc   0.84 (  0.84)	Loss_d 0.886 (0.886)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.84 (  0.84)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 0.886 (0.886)	test_acc   0.66 (  0.66)	test_minacc   0.64 (  0.64)	test_majacc   0.84 (  0.84)	Loss_d 0.886 (0.886)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.84 (  0.84)	test_corr_d   0.11 (  0.11)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/159/checkpoints/model_best.pth
Overall Timing[  8/  1]	epoch_time 0.0421 (0.0454)	validation_time 0.0006 (0.0012)	train_time 0.0414 (0.0437)
record: (train_acc, test_acc) (0.74290003490448, 0.6580000519752502)
last accs (train_acc, test_acc) (0.74290003490448, 0.6580000519752502)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.85it/s] 19%|#9        | 5/26 [00:00<00:01, 19.97it/s] 35%|###4      | 9/26 [00:00<00:00, 26.19it/s] 50%|#####     | 13/26 [00:00<00:00, 29.54it/s] 65%|######5   | 17/26 [00:00<00:00, 31.61it/s] 81%|########  | 21/26 [00:00<00:00, 32.98it/s] 96%|#########6| 25/26 [00:00<00:00, 33.67it/s]100%|##########| 26/26 [00:00<00:00, 27.70it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 234 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 235 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 236 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 237 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 238 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 239 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 240 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 241 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 242 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 243 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 244 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 245 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 246 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 247 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 248 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 249 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 250 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 251 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 252 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 253 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 254 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 255 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 256 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 257 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 258 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 259 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [9][  26/  26]	Loss 0.000 (0.002)	train_nll   0.48 (  0.51)	train_penalty   0.00 (  0.00)	weight_norm  22.75 ( 22.75)	train_acc   0.69 (  0.70)	train_minacc   0.70 (  0.79)	train_majacc   0.69 (  0.68)	train_corr   0.00 (  0.00)	l1 6.2704 (6.3632)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.37it/s] 27%|##6       | 7/26 [00:00<00:00, 33.60it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.60it/s] 46%|####6     | 12/26 [00:00<00:00, 39.79it/s] 65%|######5   | 17/26 [00:00<00:00, 41.88it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.88it/s] 85%|########4 | 22/26 [00:00<00:00, 39.58it/s]100%|##########| 26/26 [00:00<00:00, 37.14it/s]
Test: [   0/  26]	Loss 0.458 (0.458)	test_acc   0.73 (  0.73)	test_minacc   0.74 (  0.74)	test_majacc   0.73 (  0.73)	Loss_d 0.458 (0.458)	test_acc_d   0.73 (  0.73)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.56 (  0.56)
Test: [  10/  26]	Loss 0.470 (0.454)	test_acc   0.71 (  0.74)	test_minacc   0.75 (  0.74)	test_majacc   0.71 (  0.74)	Loss_d 0.470 (0.454)	test_acc_d   0.71 (  0.74)	test_minacc_d   0.75 (  0.74)	test_majacc_d   0.71 (  0.74)	test_corr_d   0.54 (  0.57)
Test: [  20/  26]	Loss 0.466 (0.458)	test_acc   0.71 (  0.73)	test_minacc   0.72 (  0.74)	test_majacc   0.71 (  0.73)	Loss_d 0.466 (0.458)	test_acc_d   0.71 (  0.73)	test_minacc_d   0.72 (  0.74)	test_majacc_d   0.71 (  0.73)	test_corr_d   0.56 (  0.56)
Test: [  26/  26]	Loss 0.477 (0.459)	test_acc   0.70 (  0.73)	test_minacc   0.70 (  0.74)	test_majacc   0.70 (  0.73)	Loss_d 0.477 (0.459)	test_acc_d   0.70 (  0.73)	test_minacc_d   0.70 (  0.74)	test_majacc_d   0.70 (  0.73)	test_corr_d   0.53 (  0.56)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.36it/s]
Test: [  0/  1]	Loss 0.891 (0.891)	test_acc   0.67 (  0.67)	test_minacc   0.65 (  0.65)	test_majacc   0.82 (  0.82)	Loss_d 0.891 (0.891)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.82 (  0.82)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 0.891 (0.891)	test_acc   0.67 (  0.67)	test_minacc   0.65 (  0.65)	test_majacc   0.82 (  0.82)	Loss_d 0.891 (0.891)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.82 (  0.82)	test_corr_d   0.09 (  0.09)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/159/checkpoints/model_best.pth
Overall Timing[  9/  1]	epoch_time 0.0427 (0.0451)	validation_time 0.0004 (0.0011)	train_time 0.0422 (0.0435)
record: (train_acc, test_acc) (0.7283000308871269, 0.6690000295639038)
last accs (train_acc, test_acc) (0.7283000308871269, 0.6690000295639038)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.08it/s] 23%|##3       | 6/26 [00:00<00:00, 26.00it/s] 38%|###8      | 10/26 [00:00<00:00, 30.28it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.46it/s] 69%|######9   | 18/26 [00:00<00:00, 33.23it/s] 85%|########4 | 22/26 [00:00<00:00, 33.43it/s]100%|##########| 26/26 [00:00<00:00, 34.20it/s]100%|##########| 26/26 [00:00<00:00, 29.41it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 260 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 261 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 262 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 263 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 264 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 265 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 266 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 267 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 268 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 269 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 270 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 271 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 272 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 273 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 274 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 275 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 276 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 277 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 278 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 279 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 280 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 281 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 282 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 283 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 284 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 285 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [10][  26/  26]	Loss 0.001 (0.002)	train_nll   0.53 (  0.49)	train_penalty   0.00 (  0.00)	weight_norm  22.76 ( 22.76)	train_acc   0.66 (  0.70)	train_minacc   0.74 (  0.76)	train_majacc   0.65 (  0.69)	train_corr   0.00 (  0.00)	l1 6.2441 (6.2467)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.47it/s] 23%|##3       | 6/26 [00:00<00:00, 24.63it/s]                                               23%|##3       | 6/26 [00:00<00:00, 24.63it/s] 42%|####2     | 11/26 [00:00<00:00, 32.73it/s] 62%|######1   | 16/26 [00:00<00:00, 37.63it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.63it/s] 81%|########  | 21/26 [00:00<00:00, 35.96it/s]100%|##########| 26/26 [00:00<00:00, 39.65it/s]100%|##########| 26/26 [00:00<00:00, 31.97it/s]
Test: [   0/  26]	Loss 0.522 (0.522)	test_acc   0.68 (  0.68)	test_minacc   0.74 (  0.74)	test_majacc   0.67 (  0.67)	Loss_d 0.522 (0.522)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.67 (  0.67)	test_corr_d   0.44 (  0.44)
Test: [  10/  26]	Loss 0.524 (0.507)	test_acc   0.68 (  0.69)	test_minacc   0.84 (  0.77)	test_majacc   0.66 (  0.68)	Loss_d 0.524 (0.507)	test_acc_d   0.68 (  0.69)	test_minacc_d   0.84 (  0.77)	test_majacc_d   0.66 (  0.68)	test_corr_d   0.43 (  0.45)
Test: [  20/  26]	Loss 0.522 (0.513)	test_acc   0.66 (  0.68)	test_minacc   0.74 (  0.77)	test_majacc   0.64 (  0.66)	Loss_d 0.522 (0.513)	test_acc_d   0.66 (  0.68)	test_minacc_d   0.74 (  0.77)	test_majacc_d   0.64 (  0.66)	test_corr_d   0.45 (  0.45)
Test: [  26/  26]	Loss 0.514 (0.513)	test_acc   0.68 (  0.68)	test_minacc   0.74 (  0.76)	test_majacc   0.66 (  0.67)	Loss_d 0.514 (0.513)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.74 (  0.76)	test_majacc_d   0.66 (  0.67)	test_corr_d   0.44 (  0.45)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.02it/s]
Test: [  0/  1]	Loss 0.845 (0.845)	test_acc   0.70 (  0.70)	test_minacc   0.69 (  0.69)	test_majacc   0.74 (  0.74)	Loss_d 0.845 (0.845)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.74 (  0.74)	test_corr_d  -0.03 ( -0.03)
Test: [  1/  1]	Loss 0.845 (0.845)	test_acc   0.70 (  0.70)	test_minacc   0.69 (  0.69)	test_majacc   0.74 (  0.74)	Loss_d 0.845 (0.845)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.74 (  0.74)	test_corr_d  -0.03 ( -0.03)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/159/checkpoints/model_best.pth
Overall Timing[ 10/  1]	epoch_time 0.0477 (0.0453)	validation_time 0.0003 (0.0011)	train_time 0.0474 (0.0439)
record: (train_acc, test_acc) (0.6807000269889831, 0.6990000605583191)
last accs (train_acc, test_acc) (0.6807000269889831, 0.6990000605583191)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.18it/s] 19%|#9        | 5/26 [00:00<00:01, 19.29it/s] 35%|###4      | 9/26 [00:00<00:00, 24.16it/s] 50%|#####     | 13/26 [00:00<00:00, 27.33it/s] 65%|######5   | 17/26 [00:00<00:00, 29.71it/s] 81%|########  | 21/26 [00:00<00:00, 31.77it/s] 96%|#########6| 25/26 [00:00<00:00, 33.30it/s]100%|##########| 26/26 [00:00<00:00, 26.90it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 286 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 287 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 288 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 289 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 290 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 291 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 292 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 293 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 294 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 295 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 296 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 297 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 298 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 299 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 300 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 301 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 302 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 303 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 304 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 305 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 306 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 307 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 308 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 309 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 310 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 311 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [11][  26/  26]	Loss 0.002 (0.002)	train_nll   0.54 (  0.50)	train_penalty   0.00 (  0.00)	weight_norm  22.77 ( 22.77)	train_acc   0.67 (  0.69)	train_minacc   0.72 (  0.75)	train_majacc   0.66 (  0.68)	train_corr   0.00 (  0.00)	l1 6.1601 (6.0838)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.78it/s] 23%|##3       | 6/26 [00:00<00:00, 31.32it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.32it/s] 42%|####2     | 11/26 [00:00<00:00, 36.15it/s] 62%|######1   | 16/26 [00:00<00:00, 40.24it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.24it/s] 81%|########  | 21/26 [00:00<00:00, 39.97it/s]100%|##########| 26/26 [00:00<00:00, 42.37it/s]100%|##########| 26/26 [00:00<00:00, 35.48it/s]
Test: [   0/  26]	Loss 0.559 (0.559)	test_acc   0.65 (  0.65)	test_minacc   0.74 (  0.74)	test_majacc   0.64 (  0.64)	Loss_d 0.559 (0.559)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.39 (  0.39)
Test: [  10/  26]	Loss 0.547 (0.544)	test_acc   0.66 (  0.66)	test_minacc   0.82 (  0.76)	test_majacc   0.63 (  0.65)	Loss_d 0.547 (0.544)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.82 (  0.76)	test_majacc_d   0.63 (  0.65)	test_corr_d   0.38 (  0.40)
Test: [  20/  26]	Loss 0.553 (0.548)	test_acc   0.65 (  0.66)	test_minacc   0.74 (  0.75)	test_majacc   0.63 (  0.64)	Loss_d 0.553 (0.548)	test_acc_d   0.65 (  0.66)	test_minacc_d   0.74 (  0.75)	test_majacc_d   0.63 (  0.64)	test_corr_d   0.39 (  0.39)
Test: [  26/  26]	Loss 0.539 (0.547)	test_acc   0.65 (  0.66)	test_minacc   0.70 (  0.75)	test_majacc   0.64 (  0.64)	Loss_d 0.539 (0.547)	test_acc_d   0.65 (  0.66)	test_minacc_d   0.70 (  0.75)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.40 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 58.74it/s]
Test: [  0/  1]	Loss 0.867 (0.867)	test_acc   0.70 (  0.70)	test_minacc   0.69 (  0.69)	test_majacc   0.71 (  0.71)	Loss_d 0.867 (0.867)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.71 (  0.71)	test_corr_d  -0.05 ( -0.05)
Test: [  1/  1]	Loss 0.867 (0.867)	test_acc   0.70 (  0.70)	test_minacc   0.69 (  0.69)	test_majacc   0.71 (  0.71)	Loss_d 0.867 (0.867)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.71 (  0.71)	test_corr_d  -0.05 ( -0.05)
Overall Timing[ 11/  1]	epoch_time 0.0410 (0.0450)	validation_time 0.0004 (0.0010)	train_time 0.0406 (0.0436)
record: (train_acc, test_acc) (0.6807000269889831, 0.6990000605583191)
last accs (train_acc, test_acc) (0.6572000259757041, 0.6950000524520874)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.68it/s] 19%|#9        | 5/26 [00:00<00:00, 23.14it/s] 35%|###4      | 9/26 [00:00<00:00, 28.67it/s] 50%|#####     | 13/26 [00:00<00:00, 31.02it/s] 65%|######5   | 17/26 [00:00<00:00, 32.30it/s] 81%|########  | 21/26 [00:00<00:00, 33.47it/s] 96%|#########6| 25/26 [00:00<00:00, 33.87it/s]100%|##########| 26/26 [00:00<00:00, 29.00it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 312 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 313 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 314 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 315 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 316 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 317 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 318 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 319 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 320 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 321 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 322 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 323 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 324 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 325 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 326 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 327 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 328 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 329 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 330 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 331 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 332 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 333 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 334 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 335 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 336 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 337 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [12][  26/  26]	Loss 0.000 (0.001)	train_nll   0.54 (  0.54)	train_penalty   0.00 (  0.00)	weight_norm  22.78 ( 22.78)	train_acc   0.65 (  0.66)	train_minacc   0.79 (  0.79)	train_majacc   0.62 (  0.63)	train_corr   0.00 (  0.00)	l1 5.9549 (5.9756)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.27it/s] 12%|#1        | 3/26 [00:00<00:01, 12.43it/s] 31%|###       | 8/26 [00:00<00:00, 23.77it/s]                                               31%|###       | 8/26 [00:00<00:00, 23.77it/s] 50%|#####     | 13/26 [00:00<00:00, 32.15it/s] 73%|#######3  | 19/26 [00:00<00:00, 38.19it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 38.19it/s] 92%|#########2| 24/26 [00:00<00:00, 40.88it/s]100%|##########| 26/26 [00:00<00:00, 31.67it/s]
Test: [   0/  26]	Loss 0.582 (0.582)	test_acc   0.59 (  0.59)	test_minacc   0.81 (  0.81)	test_majacc   0.55 (  0.55)	Loss_d 0.582 (0.582)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.81 (  0.81)	test_majacc_d   0.55 (  0.55)	test_corr_d   0.35 (  0.35)
Test: [  10/  26]	Loss 0.587 (0.570)	test_acc   0.60 (  0.62)	test_minacc   0.89 (  0.82)	test_majacc   0.55 (  0.58)	Loss_d 0.587 (0.570)	test_acc_d   0.60 (  0.62)	test_minacc_d   0.89 (  0.82)	test_majacc_d   0.55 (  0.58)	test_corr_d   0.35 (  0.35)
Test: [  20/  26]	Loss 0.576 (0.571)	test_acc   0.60 (  0.61)	test_minacc   0.85 (  0.83)	test_majacc   0.56 (  0.58)	Loss_d 0.576 (0.571)	test_acc_d   0.60 (  0.61)	test_minacc_d   0.85 (  0.83)	test_majacc_d   0.56 (  0.58)	test_corr_d   0.35 (  0.35)
Test: [  26/  26]	Loss 0.543 (0.571)	test_acc   0.65 (  0.62)	test_minacc   0.81 (  0.83)	test_majacc   0.61 (  0.58)	Loss_d 0.543 (0.571)	test_acc_d   0.65 (  0.62)	test_minacc_d   0.81 (  0.83)	test_majacc_d   0.61 (  0.58)	test_corr_d   0.37 (  0.36)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.33it/s]
Test: [  0/  1]	Loss 0.859 (0.859)	test_acc   0.74 (  0.74)	test_minacc   0.75 (  0.75)	test_majacc   0.63 (  0.63)	Loss_d 0.859 (0.859)	test_acc_d   0.74 (  0.74)	test_minacc_d   0.75 (  0.75)	test_majacc_d   0.63 (  0.63)	test_corr_d  -0.06 ( -0.06)
Test: [  1/  1]	Loss 0.859 (0.859)	test_acc   0.74 (  0.74)	test_minacc   0.75 (  0.75)	test_majacc   0.63 (  0.63)	Loss_d 0.859 (0.859)	test_acc_d   0.74 (  0.74)	test_minacc_d   0.75 (  0.75)	test_majacc_d   0.63 (  0.63)	test_corr_d  -0.06 ( -0.06)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/159/checkpoints/model_best.pth
Overall Timing[ 12/  1]	epoch_time 0.0391 (0.0445)	validation_time 0.0004 (0.0010)	train_time 0.0387 (0.0432)
record: (train_acc, test_acc) (0.6151000003814697, 0.7380000352859497)
last accs (train_acc, test_acc) (0.6151000003814697, 0.7380000352859497)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.48it/s] 23%|##3       | 6/26 [00:00<00:00, 25.61it/s] 38%|###8      | 10/26 [00:00<00:00, 29.90it/s] 54%|#####3    | 14/26 [00:00<00:00, 30.73it/s] 69%|######9   | 18/26 [00:00<00:00, 31.57it/s] 85%|########4 | 22/26 [00:00<00:00, 32.87it/s]100%|##########| 26/26 [00:00<00:00, 33.38it/s]100%|##########| 26/26 [00:00<00:00, 29.02it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 338 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 339 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 340 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 341 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 342 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 343 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 344 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 345 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 346 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 347 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 348 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 349 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 350 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 351 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 352 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 353 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 354 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 355 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 356 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 357 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 358 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 359 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 360 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 361 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 362 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 363 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [13][  26/  26]	Loss 0.000 (0.000)	train_nll   0.54 (  0.55)	train_penalty   0.00 (  0.00)	weight_norm  22.79 ( 22.79)	train_acc   0.65 (  0.64)	train_minacc   0.74 (  0.79)	train_majacc   0.63 (  0.62)	train_corr   0.00 (  0.00)	l1 5.9293 (5.9330)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.39it/s] 19%|#9        | 5/26 [00:00<00:00, 23.36it/s] 38%|###8      | 10/26 [00:00<00:00, 33.95it/s]                                                38%|###8      | 10/26 [00:00<00:00, 33.95it/s] 58%|#####7    | 15/26 [00:00<00:00, 35.04it/s] 77%|#######6  | 20/26 [00:00<00:00, 38.94it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 38.94it/s] 96%|#########6| 25/26 [00:00<00:00, 40.93it/s]100%|##########| 26/26 [00:00<00:00, 34.47it/s]
Test: [   0/  26]	Loss 0.567 (0.567)	test_acc   0.63 (  0.63)	test_minacc   0.81 (  0.81)	test_majacc   0.60 (  0.60)	Loss_d 0.567 (0.567)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.81 (  0.81)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.38 (  0.38)
Test: [  10/  26]	Loss 0.571 (0.560)	test_acc   0.62 (  0.63)	test_minacc   0.86 (  0.82)	test_majacc   0.57 (  0.60)	Loss_d 0.571 (0.560)	test_acc_d   0.62 (  0.63)	test_minacc_d   0.86 (  0.82)	test_majacc_d   0.57 (  0.60)	test_corr_d   0.38 (  0.38)
Test: [  20/  26]	Loss 0.566 (0.562)	test_acc   0.62 (  0.63)	test_minacc   0.76 (  0.81)	test_majacc   0.60 (  0.60)	Loss_d 0.566 (0.562)	test_acc_d   0.62 (  0.63)	test_minacc_d   0.76 (  0.81)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.38 (  0.38)
Test: [  26/  26]	Loss 0.543 (0.562)	test_acc   0.64 (  0.63)	test_minacc   0.74 (  0.81)	test_majacc   0.62 (  0.60)	Loss_d 0.543 (0.562)	test_acc_d   0.64 (  0.63)	test_minacc_d   0.74 (  0.81)	test_majacc_d   0.62 (  0.60)	test_corr_d   0.40 (  0.38)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.68it/s]
Test: [  0/  1]	Loss 0.876 (0.876)	test_acc   0.72 (  0.72)	test_minacc   0.72 (  0.72)	test_majacc   0.65 (  0.65)	Loss_d 0.876 (0.876)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.01 (  0.01)
Test: [  1/  1]	Loss 0.876 (0.876)	test_acc   0.72 (  0.72)	test_minacc   0.72 (  0.72)	test_majacc   0.65 (  0.65)	Loss_d 0.876 (0.876)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.01 (  0.01)
Overall Timing[ 13/  1]	epoch_time 0.0417 (0.0443)	validation_time 0.0003 (0.0009)	train_time 0.0414 (0.0431)
record: (train_acc, test_acc) (0.6151000003814697, 0.7380000352859497)
last accs (train_acc, test_acc) (0.6293000066280365, 0.7170000076293945)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.86it/s] 19%|#9        | 5/26 [00:00<00:00, 21.02it/s] 35%|###4      | 9/26 [00:00<00:00, 26.58it/s] 50%|#####     | 13/26 [00:00<00:00, 29.62it/s] 65%|######5   | 17/26 [00:00<00:00, 30.96it/s] 81%|########  | 21/26 [00:00<00:00, 32.11it/s] 96%|#########6| 25/26 [00:00<00:00, 32.83it/s]100%|##########| 26/26 [00:00<00:00, 27.49it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 364 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 365 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 366 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 367 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 368 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 369 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 370 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 371 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 372 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 373 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 374 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 375 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 376 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 377 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 378 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 379 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 380 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 381 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 382 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 383 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 384 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 385 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 386 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 387 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 388 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 389 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [14][  26/  26]	Loss 0.000 (0.000)	train_nll   0.54 (  0.56)	train_penalty   0.00 (  0.00)	weight_norm  22.79 ( 22.79)	train_acc   0.65 (  0.63)	train_minacc   0.74 (  0.80)	train_majacc   0.63 (  0.60)	train_corr   0.00 (  0.00)	l1 5.9111 (5.9305)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 12.44it/s] 27%|##6       | 7/26 [00:00<00:00, 28.86it/s]                                               27%|##6       | 7/26 [00:00<00:00, 28.86it/s] 46%|####6     | 12/26 [00:00<00:00, 35.71it/s] 65%|######5   | 17/26 [00:00<00:00, 39.35it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.35it/s] 85%|########4 | 22/26 [00:00<00:00, 38.23it/s]100%|##########| 26/26 [00:00<00:00, 34.44it/s]
Test: [   0/  26]	Loss 0.562 (0.562)	test_acc   0.62 (  0.62)	test_minacc   0.81 (  0.81)	test_majacc   0.59 (  0.59)	Loss_d 0.562 (0.562)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.81 (  0.81)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.40 (  0.40)
Test: [  10/  26]	Loss 0.570 (0.555)	test_acc   0.61 (  0.63)	test_minacc   0.88 (  0.82)	test_majacc   0.56 (  0.59)	Loss_d 0.570 (0.555)	test_acc_d   0.61 (  0.63)	test_minacc_d   0.88 (  0.82)	test_majacc_d   0.56 (  0.59)	test_corr_d   0.41 (  0.40)
Test: [  20/  26]	Loss 0.561 (0.556)	test_acc   0.59 (  0.62)	test_minacc   0.80 (  0.82)	test_majacc   0.56 (  0.59)	Loss_d 0.561 (0.556)	test_acc_d   0.59 (  0.62)	test_minacc_d   0.80 (  0.82)	test_majacc_d   0.56 (  0.59)	test_corr_d   0.40 (  0.40)
Test: [  26/  26]	Loss 0.541 (0.557)	test_acc   0.65 (  0.62)	test_minacc   0.74 (  0.81)	test_majacc   0.63 (  0.59)	Loss_d 0.541 (0.557)	test_acc_d   0.65 (  0.62)	test_minacc_d   0.74 (  0.81)	test_majacc_d   0.63 (  0.59)	test_corr_d   0.42 (  0.41)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.59it/s]
Test: [  0/  1]	Loss 0.888 (0.888)	test_acc   0.72 (  0.72)	test_minacc   0.73 (  0.73)	test_majacc   0.64 (  0.64)	Loss_d 0.888 (0.888)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.73 (  0.73)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.05 (  0.05)
Test: [  1/  1]	Loss 0.888 (0.888)	test_acc   0.72 (  0.72)	test_minacc   0.73 (  0.73)	test_majacc   0.64 (  0.64)	Loss_d 0.888 (0.888)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.73 (  0.73)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.05 (  0.05)
Overall Timing[ 14/  1]	epoch_time 0.0411 (0.0441)	validation_time 0.0004 (0.0009)	train_time 0.0407 (0.0429)
record: (train_acc, test_acc) (0.6151000003814697, 0.7380000352859497)
last accs (train_acc, test_acc) (0.623000008046627, 0.718000054359436)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.19it/s] 23%|##3       | 6/26 [00:00<00:00, 25.53it/s] 38%|###8      | 10/26 [00:00<00:00, 29.03it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.03it/s] 69%|######9   | 18/26 [00:00<00:00, 32.22it/s] 85%|########4 | 22/26 [00:00<00:00, 32.96it/s]100%|##########| 26/26 [00:00<00:00, 33.90it/s]100%|##########| 26/26 [00:00<00:00, 29.13it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 390 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 391 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 392 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 393 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 394 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 395 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 396 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 397 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 398 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 399 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 400 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 401 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 402 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 403 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 404 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 405 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 406 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 407 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 408 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 409 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 410 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 411 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 412 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 413 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 414 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 415 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [15][  26/  26]	Loss 0.000 (0.000)	train_nll   0.54 (  0.56)	train_penalty   0.00 (  0.00)	weight_norm  22.79 ( 22.79)	train_acc   0.66 (  0.62)	train_minacc   0.74 (  0.82)	train_majacc   0.64 (  0.59)	train_corr   0.00 (  0.00)	l1 5.9115 (5.9243)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.83it/s]  8%|7         | 2/26 [00:00<00:02,  8.45it/s] 31%|###       | 8/26 [00:00<00:00, 29.85it/s]                                               31%|###       | 8/26 [00:00<00:00, 29.85it/s] 50%|#####     | 13/26 [00:00<00:00, 35.93it/s] 69%|######9   | 18/26 [00:00<00:00, 36.57it/s]                                                69%|######9   | 18/26 [00:00<00:00, 36.57it/s] 88%|########8 | 23/26 [00:00<00:00, 39.51it/s]100%|##########| 26/26 [00:00<00:00, 32.76it/s]
Test: [   0/  26]	Loss 0.550 (0.550)	test_acc   0.64 (  0.64)	test_minacc   0.78 (  0.78)	test_majacc   0.61 (  0.61)	Loss_d 0.550 (0.550)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.78 (  0.78)	test_majacc_d   0.61 (  0.61)	test_corr_d   0.42 (  0.42)
Test: [  10/  26]	Loss 0.556 (0.543)	test_acc   0.63 (  0.64)	test_minacc   0.86 (  0.81)	test_majacc   0.59 (  0.61)	Loss_d 0.556 (0.543)	test_acc_d   0.63 (  0.64)	test_minacc_d   0.86 (  0.81)	test_majacc_d   0.59 (  0.61)	test_corr_d   0.43 (  0.43)
Test: [  20/  26]	Loss 0.551 (0.546)	test_acc   0.62 (  0.64)	test_minacc   0.76 (  0.80)	test_majacc   0.60 (  0.61)	Loss_d 0.551 (0.546)	test_acc_d   0.62 (  0.64)	test_minacc_d   0.76 (  0.80)	test_majacc_d   0.60 (  0.61)	test_corr_d   0.42 (  0.42)
Test: [  26/  26]	Loss 0.536 (0.546)	test_acc   0.66 (  0.64)	test_minacc   0.74 (  0.80)	test_majacc   0.64 (  0.61)	Loss_d 0.536 (0.546)	test_acc_d   0.66 (  0.64)	test_minacc_d   0.74 (  0.80)	test_majacc_d   0.64 (  0.61)	test_corr_d   0.43 (  0.43)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.23it/s]
Test: [  0/  1]	Loss 0.893 (0.893)	test_acc   0.71 (  0.71)	test_minacc   0.72 (  0.72)	test_majacc   0.65 (  0.65)	Loss_d 0.893 (0.893)	test_acc_d   0.71 (  0.71)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.06 (  0.06)
Test: [  1/  1]	Loss 0.893 (0.893)	test_acc   0.71 (  0.71)	test_minacc   0.72 (  0.72)	test_majacc   0.65 (  0.65)	Loss_d 0.893 (0.893)	test_acc_d   0.71 (  0.71)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.06 (  0.06)
Overall Timing[ 15/  1]	epoch_time 0.0420 (0.0440)	validation_time 0.0004 (0.0009)	train_time 0.0416 (0.0428)
record: (train_acc, test_acc) (0.6151000003814697, 0.7380000352859497)
last accs (train_acc, test_acc) (0.6385000123977661, 0.7110000252723694)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.41it/s] 19%|#9        | 5/26 [00:00<00:01, 19.89it/s] 35%|###4      | 9/26 [00:00<00:00, 25.53it/s] 50%|#####     | 13/26 [00:00<00:00, 29.17it/s] 65%|######5   | 17/26 [00:00<00:00, 31.04it/s] 81%|########  | 21/26 [00:00<00:00, 32.45it/s] 96%|#########6| 25/26 [00:00<00:00, 33.59it/s]100%|##########| 26/26 [00:00<00:00, 27.59it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 416 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 417 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 418 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 419 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 420 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 421 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 422 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 423 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 424 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 425 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 426 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 427 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 428 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 429 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 430 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 431 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 432 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 433 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 434 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 435 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 436 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 437 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 438 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 439 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 440 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 441 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [16][  26/  26]	Loss 0.000 (0.000)	train_nll   0.54 (  0.55)	train_penalty   0.00 (  0.00)	weight_norm  22.79 ( 22.79)	train_acc   0.66 (  0.63)	train_minacc   0.72 (  0.80)	train_majacc   0.64 (  0.60)	train_corr   0.00 (  0.00)	l1 5.9372 (5.9362)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.14it/s] 23%|##3       | 6/26 [00:00<00:00, 23.49it/s]                                               23%|##3       | 6/26 [00:00<00:00, 23.49it/s] 42%|####2     | 11/26 [00:00<00:00, 31.85it/s] 62%|######1   | 16/26 [00:00<00:00, 36.88it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.88it/s] 81%|########  | 21/26 [00:00<00:00, 36.36it/s]100%|##########| 26/26 [00:00<00:00, 31.84it/s]
Test: [   0/  26]	Loss 0.545 (0.545)	test_acc   0.64 (  0.64)	test_minacc   0.78 (  0.78)	test_majacc   0.62 (  0.62)	Loss_d 0.545 (0.545)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.78 (  0.78)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.42 (  0.42)
Test: [  10/  26]	Loss 0.547 (0.536)	test_acc   0.65 (  0.66)	test_minacc   0.84 (  0.80)	test_majacc   0.61 (  0.63)	Loss_d 0.547 (0.536)	test_acc_d   0.65 (  0.66)	test_minacc_d   0.84 (  0.80)	test_majacc_d   0.61 (  0.63)	test_corr_d   0.43 (  0.43)
Test: [  20/  26]	Loss 0.546 (0.540)	test_acc   0.63 (  0.65)	test_minacc   0.74 (  0.79)	test_majacc   0.61 (  0.62)	Loss_d 0.546 (0.540)	test_acc_d   0.63 (  0.65)	test_minacc_d   0.74 (  0.79)	test_majacc_d   0.61 (  0.62)	test_corr_d   0.42 (  0.43)
Test: [  26/  26]	Loss 0.535 (0.540)	test_acc   0.66 (  0.65)	test_minacc   0.72 (  0.78)	test_majacc   0.64 (  0.63)	Loss_d 0.535 (0.540)	test_acc_d   0.66 (  0.65)	test_minacc_d   0.72 (  0.78)	test_majacc_d   0.64 (  0.63)	test_corr_d   0.43 (  0.43)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.56it/s]
Test: [  0/  1]	Loss 0.891 (0.891)	test_acc   0.70 (  0.70)	test_minacc   0.71 (  0.71)	test_majacc   0.69 (  0.69)	Loss_d 0.891 (0.891)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.69 (  0.69)	test_corr_d   0.05 (  0.05)
Test: [  1/  1]	Loss 0.891 (0.891)	test_acc   0.70 (  0.70)	test_minacc   0.71 (  0.71)	test_majacc   0.69 (  0.69)	Loss_d 0.891 (0.891)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.69 (  0.69)	test_corr_d   0.05 (  0.05)
Overall Timing[ 16/  1]	epoch_time 0.0394 (0.0437)	validation_time 0.0003 (0.0008)	train_time 0.0391 (0.0426)
record: (train_acc, test_acc) (0.6151000003814697, 0.7380000352859497)
last accs (train_acc, test_acc) (0.6494000161886215, 0.7040000557899475)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.87it/s] 15%|#5        | 4/26 [00:00<00:01, 14.71it/s] 31%|###       | 8/26 [00:00<00:00, 22.44it/s] 46%|####6     | 12/26 [00:00<00:00, 27.00it/s] 62%|######1   | 16/26 [00:00<00:00, 29.31it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.55it/s] 92%|#########2| 24/26 [00:00<00:00, 31.47it/s]100%|##########| 26/26 [00:01<00:00, 25.74it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 442 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 443 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 444 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 445 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 446 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 447 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 448 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 449 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 450 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 451 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 452 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 453 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 454 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 455 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 456 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 457 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 458 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 459 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 460 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 461 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 462 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 463 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 464 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 465 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 466 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 467 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [17][  26/  26]	Loss 0.000 (0.000)	train_nll   0.54 (  0.54)	train_penalty   0.00 (  0.00)	weight_norm  22.79 ( 22.79)	train_acc   0.66 (  0.65)	train_minacc   0.72 (  0.79)	train_majacc   0.64 (  0.63)	train_corr   0.00 (  0.00)	l1 5.9836 (5.9492)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.86it/s] 23%|##3       | 6/26 [00:00<00:01, 19.72it/s]                                               23%|##3       | 6/26 [00:00<00:01, 19.72it/s] 42%|####2     | 11/26 [00:00<00:00, 28.14it/s] 62%|######1   | 16/26 [00:00<00:00, 34.20it/s]                                                62%|######1   | 16/26 [00:00<00:00, 34.20it/s] 81%|########  | 21/26 [00:00<00:00, 34.91it/s]100%|##########| 26/26 [00:00<00:00, 38.28it/s]100%|##########| 26/26 [00:00<00:00, 28.96it/s]
Test: [   0/  26]	Loss 0.548 (0.548)	test_acc   0.65 (  0.65)	test_minacc   0.78 (  0.78)	test_majacc   0.62 (  0.62)	Loss_d 0.548 (0.548)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.78 (  0.78)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.40 (  0.40)
Test: [  10/  26]	Loss 0.547 (0.539)	test_acc   0.65 (  0.66)	test_minacc   0.84 (  0.80)	test_majacc   0.62 (  0.63)	Loss_d 0.547 (0.539)	test_acc_d   0.65 (  0.66)	test_minacc_d   0.84 (  0.80)	test_majacc_d   0.62 (  0.63)	test_corr_d   0.41 (  0.41)
Test: [  20/  26]	Loss 0.550 (0.543)	test_acc   0.63 (  0.65)	test_minacc   0.76 (  0.79)	test_majacc   0.61 (  0.63)	Loss_d 0.550 (0.543)	test_acc_d   0.63 (  0.65)	test_minacc_d   0.76 (  0.79)	test_majacc_d   0.61 (  0.63)	test_corr_d   0.40 (  0.41)
Test: [  26/  26]	Loss 0.538 (0.543)	test_acc   0.66 (  0.65)	test_minacc   0.72 (  0.79)	test_majacc   0.65 (  0.63)	Loss_d 0.538 (0.543)	test_acc_d   0.66 (  0.65)	test_minacc_d   0.72 (  0.79)	test_majacc_d   0.65 (  0.63)	test_corr_d   0.42 (  0.41)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.76it/s]
Test: [  0/  1]	Loss 0.888 (0.888)	test_acc   0.70 (  0.70)	test_minacc   0.70 (  0.70)	test_majacc   0.69 (  0.69)	Loss_d 0.888 (0.888)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.69 (  0.69)	test_corr_d   0.01 (  0.01)
Test: [  1/  1]	Loss 0.888 (0.888)	test_acc   0.70 (  0.70)	test_minacc   0.70 (  0.70)	test_majacc   0.69 (  0.69)	Loss_d 0.888 (0.888)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.69 (  0.69)	test_corr_d   0.01 (  0.01)
Overall Timing[ 17/  1]	epoch_time 0.0441 (0.0437)	validation_time 0.0004 (0.0008)	train_time 0.0436 (0.0427)
record: (train_acc, test_acc) (0.6151000003814697, 0.7380000352859497)
last accs (train_acc, test_acc) (0.6521000185608864, 0.6990000605583191)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:10,  2.46it/s] 19%|#9        | 5/26 [00:00<00:01, 11.66it/s] 35%|###4      | 9/26 [00:00<00:00, 18.41it/s] 50%|#####     | 13/26 [00:00<00:00, 22.64it/s] 65%|######5   | 17/26 [00:00<00:00, 25.37it/s] 81%|########  | 21/26 [00:01<00:00, 27.63it/s] 96%|#########6| 25/26 [00:01<00:00, 29.72it/s]100%|##########| 26/26 [00:01<00:00, 21.33it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 468 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 469 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 470 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 471 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 472 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 473 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 474 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 475 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 476 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 477 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 478 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 479 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 480 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 481 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 482 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 483 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 484 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 485 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 486 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 487 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 488 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 489 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 490 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 491 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 492 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 493 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [18][  26/  26]	Loss 0.000 (0.000)	train_nll   0.54 (  0.54)	train_penalty   0.00 (  0.00)	weight_norm  22.79 ( 22.79)	train_acc   0.66 (  0.66)	train_minacc   0.72 (  0.79)	train_majacc   0.64 (  0.64)	train_corr   0.00 (  0.00)	l1 6.0117 (5.9652)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.91it/s] 27%|##6       | 7/26 [00:00<00:00, 34.37it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.37it/s] 46%|####6     | 12/26 [00:00<00:00, 39.63it/s] 65%|######5   | 17/26 [00:00<00:00, 41.62it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.62it/s] 85%|########4 | 22/26 [00:00<00:00, 40.11it/s]100%|##########| 26/26 [00:00<00:00, 37.69it/s]
Test: [   0/  26]	Loss 0.557 (0.557)	test_acc   0.65 (  0.65)	test_minacc   0.78 (  0.78)	test_majacc   0.62 (  0.62)	Loss_d 0.557 (0.557)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.78 (  0.78)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.38 (  0.38)
Test: [  10/  26]	Loss 0.555 (0.549)	test_acc   0.65 (  0.65)	test_minacc   0.84 (  0.81)	test_majacc   0.61 (  0.62)	Loss_d 0.555 (0.549)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.84 (  0.81)	test_majacc_d   0.61 (  0.62)	test_corr_d   0.39 (  0.39)
Test: [  20/  26]	Loss 0.561 (0.553)	test_acc   0.63 (  0.64)	test_minacc   0.78 (  0.80)	test_majacc   0.60 (  0.61)	Loss_d 0.561 (0.553)	test_acc_d   0.63 (  0.64)	test_minacc_d   0.78 (  0.80)	test_majacc_d   0.60 (  0.61)	test_corr_d   0.38 (  0.38)
Test: [  26/  26]	Loss 0.543 (0.553)	test_acc   0.65 (  0.64)	test_minacc   0.72 (  0.80)	test_majacc   0.64 (  0.62)	Loss_d 0.543 (0.553)	test_acc_d   0.65 (  0.64)	test_minacc_d   0.72 (  0.80)	test_majacc_d   0.64 (  0.62)	test_corr_d   0.39 (  0.39)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 58.37it/s]
Test: [  0/  1]	Loss 0.888 (0.888)	test_acc   0.71 (  0.71)	test_minacc   0.71 (  0.71)	test_majacc   0.66 (  0.66)	Loss_d 0.888 (0.888)	test_acc_d   0.71 (  0.71)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.66 (  0.66)	test_corr_d  -0.02 ( -0.02)
Test: [  1/  1]	Loss 0.888 (0.888)	test_acc   0.71 (  0.71)	test_minacc   0.71 (  0.71)	test_majacc   0.66 (  0.66)	Loss_d 0.888 (0.888)	test_acc_d   0.71 (  0.71)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.66 (  0.66)	test_corr_d  -0.02 ( -0.02)
Overall Timing[ 18/  1]	epoch_time 0.0398 (0.0435)	validation_time 0.0004 (0.0008)	train_time 0.0395 (0.0425)
record: (train_acc, test_acc) (0.6151000003814697, 0.7380000352859497)
last accs (train_acc, test_acc) (0.6445000139474869, 0.7080000042915344)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.22it/s] 19%|#9        | 5/26 [00:00<00:01, 18.25it/s] 35%|###4      | 9/26 [00:00<00:00, 24.98it/s] 50%|#####     | 13/26 [00:00<00:00, 28.93it/s] 65%|######5   | 17/26 [00:00<00:00, 31.20it/s] 81%|########  | 21/26 [00:00<00:00, 32.20it/s] 96%|#########6| 25/26 [00:00<00:00, 32.50it/s]100%|##########| 26/26 [00:00<00:00, 26.69it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 494 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 495 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 496 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 497 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 498 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 499 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 500 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 501 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 502 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 503 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 504 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 505 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 506 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 507 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 508 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 509 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 510 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 511 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 512 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 513 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 514 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 515 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 516 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 517 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 518 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 519 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [19][  26/  26]	Loss 0.000 (0.000)	train_nll   0.54 (  0.54)	train_penalty   0.00 (  0.00)	weight_norm  22.79 ( 22.79)	train_acc   0.65 (  0.66)	train_minacc   0.74 (  0.78)	train_majacc   0.63 (  0.64)	train_corr   0.00 (  0.00)	l1 6.0034 (5.9769)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.34it/s] 27%|##6       | 7/26 [00:00<00:00, 30.02it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.02it/s] 46%|####6     | 12/26 [00:00<00:00, 36.91it/s] 65%|######5   | 17/26 [00:00<00:00, 39.34it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.34it/s] 85%|########4 | 22/26 [00:00<00:00, 41.14it/s]100%|##########| 26/26 [00:00<00:00, 34.93it/s]
Test: [   0/  26]	Loss 0.564 (0.564)	test_acc   0.64 (  0.64)	test_minacc   0.81 (  0.81)	test_majacc   0.61 (  0.61)	Loss_d 0.564 (0.564)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.81 (  0.81)	test_majacc_d   0.61 (  0.61)	test_corr_d   0.36 (  0.36)
Test: [  10/  26]	Loss 0.565 (0.560)	test_acc   0.63 (  0.64)	test_minacc   0.86 (  0.82)	test_majacc   0.60 (  0.61)	Loss_d 0.565 (0.560)	test_acc_d   0.63 (  0.64)	test_minacc_d   0.86 (  0.82)	test_majacc_d   0.60 (  0.61)	test_corr_d   0.38 (  0.37)
Test: [  20/  26]	Loss 0.572 (0.563)	test_acc   0.62 (  0.63)	test_minacc   0.78 (  0.81)	test_majacc   0.60 (  0.60)	Loss_d 0.572 (0.563)	test_acc_d   0.62 (  0.63)	test_minacc_d   0.78 (  0.81)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.36 (  0.37)
Test: [  26/  26]	Loss 0.548 (0.563)	test_acc   0.65 (  0.63)	test_minacc   0.74 (  0.81)	test_majacc   0.63 (  0.60)	Loss_d 0.548 (0.563)	test_acc_d   0.65 (  0.63)	test_minacc_d   0.74 (  0.81)	test_majacc_d   0.63 (  0.60)	test_corr_d   0.38 (  0.37)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.99it/s]
Test: [  0/  1]	Loss 0.891 (0.891)	test_acc   0.72 (  0.72)	test_minacc   0.73 (  0.73)	test_majacc   0.65 (  0.65)	Loss_d 0.891 (0.891)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.73 (  0.73)	test_majacc_d   0.65 (  0.65)	test_corr_d  -0.02 ( -0.02)
Test: [  1/  1]	Loss 0.891 (0.891)	test_acc   0.72 (  0.72)	test_minacc   0.73 (  0.73)	test_majacc   0.65 (  0.65)	Loss_d 0.891 (0.891)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.73 (  0.73)	test_majacc_d   0.65 (  0.65)	test_corr_d  -0.02 ( -0.02)
Overall Timing[ 19/  1]	epoch_time 0.0443 (0.0436)	validation_time 0.0004 (0.0008)	train_time 0.0439 (0.0426)
record: (train_acc, test_acc) (0.6151000003814697, 0.7380000352859497)
last accs (train_acc, test_acc) (0.6344000096917153, 0.718000054359436)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.73it/s] 15%|#5        | 4/26 [00:00<00:01, 13.61it/s] 31%|###       | 8/26 [00:00<00:00, 21.06it/s] 46%|####6     | 12/26 [00:00<00:00, 25.50it/s] 62%|######1   | 16/26 [00:00<00:00, 28.76it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.79it/s] 92%|#########2| 24/26 [00:00<00:00, 32.06it/s]100%|##########| 26/26 [00:01<00:00, 25.33it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 520 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 521 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 522 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 523 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 524 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 525 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 526 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 527 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 528 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 529 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 530 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 531 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 532 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 533 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 534 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 535 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 536 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 537 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 538 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 539 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 540 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 541 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 542 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 543 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 544 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 545 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [20][  26/  26]	Loss 0.000 (0.000)	train_nll   0.54 (  0.55)	train_penalty   0.00 (  0.00)	weight_norm  22.80 ( 22.80)	train_acc   0.66 (  0.66)	train_minacc   0.74 (  0.79)	train_majacc   0.64 (  0.63)	train_corr   0.00 (  0.00)	l1 5.9702 (5.9744)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.62it/s] 23%|##3       | 6/26 [00:00<00:00, 32.60it/s]                                               23%|##3       | 6/26 [00:00<00:00, 32.60it/s] 42%|####2     | 11/26 [00:00<00:00, 39.57it/s] 62%|######1   | 16/26 [00:00<00:00, 41.66it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.66it/s] 81%|########  | 21/26 [00:00<00:00, 42.95it/s]100%|##########| 26/26 [00:00<00:00, 44.78it/s]100%|##########| 26/26 [00:00<00:00, 37.56it/s]
Test: [   0/  26]	Loss 0.561 (0.561)	test_acc   0.64 (  0.64)	test_minacc   0.84 (  0.84)	test_majacc   0.60 (  0.60)	Loss_d 0.561 (0.561)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.84 (  0.84)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.37 (  0.37)
Test: [  10/  26]	Loss 0.568 (0.559)	test_acc   0.62 (  0.64)	test_minacc   0.88 (  0.83)	test_majacc   0.58 (  0.60)	Loss_d 0.568 (0.559)	test_acc_d   0.62 (  0.64)	test_minacc_d   0.88 (  0.83)	test_majacc_d   0.58 (  0.60)	test_corr_d   0.39 (  0.38)
Test: [  20/  26]	Loss 0.573 (0.562)	test_acc   0.62 (  0.63)	test_minacc   0.78 (  0.82)	test_majacc   0.59 (  0.60)	Loss_d 0.573 (0.562)	test_acc_d   0.62 (  0.63)	test_minacc_d   0.78 (  0.82)	test_majacc_d   0.59 (  0.60)	test_corr_d   0.37 (  0.37)
Test: [  26/  26]	Loss 0.549 (0.563)	test_acc   0.66 (  0.63)	test_minacc   0.74 (  0.82)	test_majacc   0.64 (  0.60)	Loss_d 0.549 (0.563)	test_acc_d   0.66 (  0.63)	test_minacc_d   0.74 (  0.82)	test_majacc_d   0.64 (  0.60)	test_corr_d   0.39 (  0.37)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.48it/s]
Test: [  0/  1]	Loss 0.894 (0.894)	test_acc   0.72 (  0.72)	test_minacc   0.73 (  0.73)	test_majacc   0.64 (  0.64)	Loss_d 0.894 (0.894)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.73 (  0.73)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.00 (  0.00)
Test: [  1/  1]	Loss 0.894 (0.894)	test_acc   0.72 (  0.72)	test_minacc   0.73 (  0.73)	test_majacc   0.64 (  0.64)	Loss_d 0.894 (0.894)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.73 (  0.73)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.00 (  0.00)
Overall Timing[ 20/  1]	epoch_time 0.0387 (0.0433)	validation_time 0.0004 (0.0007)	train_time 0.0383 (0.0424)
record: (train_acc, test_acc) (0.6151000003814697, 0.7380000352859497)
last accs (train_acc, test_acc) (0.6317000044584274, 0.7230000495910645)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  4.03it/s] 15%|#5        | 4/26 [00:00<00:01, 11.89it/s] 31%|###       | 8/26 [00:00<00:00, 19.98it/s] 46%|####6     | 12/26 [00:00<00:00, 25.22it/s] 62%|######1   | 16/26 [00:00<00:00, 27.92it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.40it/s] 92%|#########2| 24/26 [00:00<00:00, 31.00it/s]100%|##########| 26/26 [00:01<00:00, 24.09it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 546 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 547 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 548 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 549 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 550 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 551 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 552 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 553 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 554 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 555 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 556 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 557 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 558 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 559 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 560 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 561 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 562 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 563 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 564 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 565 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 566 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 567 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 568 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 569 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 570 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 571 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [21][  26/  26]	Loss 0.000 (0.000)	train_nll   0.54 (  0.55)	train_penalty   0.00 (  0.00)	weight_norm  22.80 ( 22.80)	train_acc   0.66 (  0.64)	train_minacc   0.72 (  0.80)	train_majacc   0.64 (  0.61)	train_corr   0.00 (  0.00)	l1 5.9281 (5.9611)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.55it/s] 23%|##3       | 6/26 [00:00<00:00, 21.66it/s]                                               23%|##3       | 6/26 [00:00<00:00, 21.66it/s] 42%|####2     | 11/26 [00:00<00:00, 30.66it/s] 62%|######1   | 16/26 [00:00<00:00, 36.06it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.06it/s] 81%|########  | 21/26 [00:00<00:00, 38.38it/s]100%|##########| 26/26 [00:00<00:00, 41.30it/s]100%|##########| 26/26 [00:00<00:00, 31.82it/s]
Test: [   0/  26]	Loss 0.549 (0.549)	test_acc   0.64 (  0.64)	test_minacc   0.84 (  0.84)	test_majacc   0.61 (  0.61)	Loss_d 0.549 (0.549)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.84 (  0.84)	test_majacc_d   0.61 (  0.61)	test_corr_d   0.40 (  0.40)
Test: [  10/  26]	Loss 0.560 (0.549)	test_acc   0.63 (  0.64)	test_minacc   0.88 (  0.83)	test_majacc   0.59 (  0.61)	Loss_d 0.560 (0.549)	test_acc_d   0.63 (  0.64)	test_minacc_d   0.88 (  0.83)	test_majacc_d   0.59 (  0.61)	test_corr_d   0.41 (  0.41)
Test: [  20/  26]	Loss 0.564 (0.551)	test_acc   0.62 (  0.64)	test_minacc   0.78 (  0.82)	test_majacc   0.60 (  0.61)	Loss_d 0.564 (0.551)	test_acc_d   0.62 (  0.64)	test_minacc_d   0.78 (  0.82)	test_majacc_d   0.60 (  0.61)	test_corr_d   0.40 (  0.40)
Test: [  26/  26]	Loss 0.543 (0.553)	test_acc   0.65 (  0.64)	test_minacc   0.74 (  0.81)	test_majacc   0.63 (  0.61)	Loss_d 0.543 (0.553)	test_acc_d   0.65 (  0.64)	test_minacc_d   0.74 (  0.81)	test_majacc_d   0.63 (  0.61)	test_corr_d   0.41 (  0.41)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.00it/s]
Test: [  0/  1]	Loss 0.900 (0.900)	test_acc   0.71 (  0.71)	test_minacc   0.72 (  0.72)	test_majacc   0.67 (  0.67)	Loss_d 0.900 (0.900)	test_acc_d   0.71 (  0.71)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.67 (  0.67)	test_corr_d   0.04 (  0.04)
Test: [  1/  1]	Loss 0.900 (0.900)	test_acc   0.71 (  0.71)	test_minacc   0.72 (  0.72)	test_majacc   0.67 (  0.67)	Loss_d 0.900 (0.900)	test_acc_d   0.71 (  0.71)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.67 (  0.67)	test_corr_d   0.04 (  0.04)
Overall Timing[ 21/  1]	epoch_time 0.0408 (0.0432)	validation_time 0.0006 (0.0007)	train_time 0.0401 (0.0423)
record: (train_acc, test_acc) (0.6151000003814697, 0.7380000352859497)
last accs (train_acc, test_acc) (0.6380000154972076, 0.7140000462532043)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.55it/s] 19%|#9        | 5/26 [00:00<00:01, 17.67it/s] 35%|###4      | 9/26 [00:00<00:00, 24.71it/s] 50%|#####     | 13/26 [00:00<00:00, 28.72it/s] 65%|######5   | 17/26 [00:00<00:00, 31.13it/s] 81%|########  | 21/26 [00:00<00:00, 31.95it/s] 96%|#########6| 25/26 [00:00<00:00, 32.52it/s]100%|##########| 26/26 [00:00<00:00, 26.31it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 572 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 573 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 574 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 575 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 576 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 577 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 578 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 579 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 580 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 581 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 582 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 583 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 584 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 585 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 586 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 587 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 588 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 589 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 590 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 591 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 592 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 593 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 594 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 595 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 596 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 597 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [22][  26/  26]	Loss 0.000 (0.000)	train_nll   0.53 (  0.56)	train_penalty   0.00 (  0.00)	weight_norm  22.80 ( 22.80)	train_acc   0.65 (  0.63)	train_minacc   0.70 (  0.81)	train_majacc   0.64 (  0.60)	train_corr   0.00 (  0.00)	l1 5.8748 (5.9364)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.42it/s] 23%|##3       | 6/26 [00:00<00:00, 28.19it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.19it/s] 42%|####2     | 11/26 [00:00<00:00, 36.06it/s] 62%|######1   | 16/26 [00:00<00:00, 40.36it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.36it/s] 81%|########  | 21/26 [00:00<00:00, 38.27it/s]100%|##########| 26/26 [00:00<00:00, 41.72it/s]100%|##########| 26/26 [00:00<00:00, 34.43it/s]
Test: [   0/  26]	Loss 0.530 (0.530)	test_acc   0.66 (  0.66)	test_minacc   0.81 (  0.81)	test_majacc   0.64 (  0.64)	Loss_d 0.530 (0.530)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.81 (  0.81)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.44 (  0.44)
Test: [  10/  26]	Loss 0.542 (0.529)	test_acc   0.67 (  0.67)	test_minacc   0.84 (  0.80)	test_majacc   0.64 (  0.64)	Loss_d 0.542 (0.529)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.84 (  0.80)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.45 (  0.45)
Test: [  20/  26]	Loss 0.545 (0.533)	test_acc   0.63 (  0.65)	test_minacc   0.76 (  0.79)	test_majacc   0.61 (  0.63)	Loss_d 0.545 (0.533)	test_acc_d   0.63 (  0.65)	test_minacc_d   0.76 (  0.79)	test_majacc_d   0.61 (  0.63)	test_corr_d   0.44 (  0.45)
Test: [  26/  26]	Loss 0.530 (0.535)	test_acc   0.65 (  0.66)	test_minacc   0.70 (  0.78)	test_majacc   0.64 (  0.63)	Loss_d 0.530 (0.535)	test_acc_d   0.65 (  0.66)	test_minacc_d   0.70 (  0.78)	test_majacc_d   0.64 (  0.63)	test_corr_d   0.45 (  0.45)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.84it/s]
Test: [  0/  1]	Loss 0.905 (0.905)	test_acc   0.69 (  0.69)	test_minacc   0.68 (  0.68)	test_majacc   0.72 (  0.72)	Loss_d 0.905 (0.905)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.68 (  0.68)	test_majacc_d   0.72 (  0.72)	test_corr_d   0.08 (  0.08)
Test: [  1/  1]	Loss 0.905 (0.905)	test_acc   0.69 (  0.69)	test_minacc   0.68 (  0.68)	test_majacc   0.72 (  0.72)	Loss_d 0.905 (0.905)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.68 (  0.68)	test_majacc_d   0.72 (  0.72)	test_corr_d   0.08 (  0.08)
Overall Timing[ 22/  1]	epoch_time 0.0438 (0.0433)	validation_time 0.0004 (0.0007)	train_time 0.0434 (0.0423)
record: (train_acc, test_acc) (0.6151000003814697, 0.7380000352859497)
last accs (train_acc, test_acc) (0.6555000179409981, 0.687000036239624)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.13it/s] 19%|#9        | 5/26 [00:00<00:01, 19.27it/s] 31%|###       | 8/26 [00:00<00:00, 21.79it/s] 42%|####2     | 11/26 [00:00<00:00, 23.50it/s] 54%|#####3    | 14/26 [00:00<00:00, 24.33it/s] 69%|######9   | 18/26 [00:00<00:00, 25.92it/s] 85%|########4 | 22/26 [00:00<00:00, 28.79it/s]100%|##########| 26/26 [00:01<00:00, 30.61it/s]100%|##########| 26/26 [00:01<00:00, 24.29it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 598 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 599 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 600 200
penalty weights 10000.0
l1 at pgd_anneal_iters 5.9181694984436035
set z to 5.858987803459168
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 601 200
penalty weights 10000.0
args.step pgd_anneal_iters 601 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 602 200
penalty weights 10000.0
args.step pgd_anneal_iters 602 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 603 200
penalty weights 10000.0
args.step pgd_anneal_iters 603 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 604 200
penalty weights 10000.0
args.step pgd_anneal_iters 604 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 605 200
penalty weights 10000.0
args.step pgd_anneal_iters 605 600
dim_v 512
rho, theta 376 tensor(-0.0104, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 606 200
penalty weights 10000.0
args.step pgd_anneal_iters 606 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 607 200
penalty weights 10000.0
args.step pgd_anneal_iters 607 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 608 200
penalty weights 10000.0
args.step pgd_anneal_iters 608 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 609 200
penalty weights 10000.0
args.step pgd_anneal_iters 609 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 610 200
penalty weights 10000.0
args.step pgd_anneal_iters 610 600
dim_v 512
rho, theta 311 tensor(-0.0074, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 611 200
penalty weights 10000.0
args.step pgd_anneal_iters 611 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 612 200
penalty weights 10000.0
args.step pgd_anneal_iters 612 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 613 200
penalty weights 10000.0
args.step pgd_anneal_iters 613 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 614 200
penalty weights 10000.0
args.step pgd_anneal_iters 614 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 615 200
penalty weights 10000.0
args.step pgd_anneal_iters 615 600
dim_v 512
rho, theta 238 tensor(-0.0014, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 616 200
penalty weights 10000.0
args.step pgd_anneal_iters 616 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 617 200
penalty weights 10000.0
args.step pgd_anneal_iters 617 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 618 200
penalty weights 10000.0
args.step pgd_anneal_iters 618 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 619 200
penalty weights 10000.0
args.step pgd_anneal_iters 619 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 620 200
penalty weights 10000.0
args.step pgd_anneal_iters 620 600
dim_v 512
rho, theta 213 tensor(-0.0017, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 621 200
penalty weights 10000.0
args.step pgd_anneal_iters 621 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 622 200
penalty weights 10000.0
args.step pgd_anneal_iters 622 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 623 200
penalty weights 10000.0
args.step pgd_anneal_iters 623 600
final projection at end of training
dim_v 512
rho, theta 208 tensor(-0.0009, device='cuda:0')
Epoch: [23][  26/  26]	Loss 0.013 (0.441)	train_nll   0.67 (  0.74)	train_penalty   0.01 (  0.44)	weight_norm  31.35 ( 25.32)	train_acc   0.45 (  0.64)	train_minacc   0.56 (  0.52)	train_majacc   0.43 (  0.66)	train_corr   0.00 (  0.00)	l1 7.0575 (6.7863)	zero_count 0.0000 (35.3340)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.54it/s] 15%|#5        | 4/26 [00:00<00:01, 18.27it/s] 35%|###4      | 9/26 [00:00<00:00, 30.52it/s]                                               35%|###4      | 9/26 [00:00<00:00, 30.52it/s] 54%|#####3    | 14/26 [00:00<00:00, 33.85it/s] 73%|#######3  | 19/26 [00:00<00:00, 37.82it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 37.82it/s] 92%|#########2| 24/26 [00:00<00:00, 41.32it/s]100%|##########| 26/26 [00:00<00:00, 33.30it/s]
Test: [   0/  26]	Loss 0.631 (0.631)	test_acc   0.53 (  0.53)	test_minacc   0.59 (  0.59)	test_majacc   0.52 (  0.52)	Loss_d 0.631 (0.631)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.53 (  0.53)
Test: [  10/  26]	Loss 0.661 (0.677)	test_acc   0.56 (  0.50)	test_minacc   0.55 (  0.51)	test_majacc   0.56 (  0.50)	Loss_d 0.661 (0.677)	test_acc_d   0.56 (  0.50)	test_minacc_d   0.55 (  0.51)	test_majacc_d   0.56 (  0.50)	test_corr_d   0.46 (  0.52)
Test: [  20/  26]	Loss 0.672 (0.671)	test_acc   0.50 (  0.50)	test_minacc   0.41 (  0.51)	test_majacc   0.52 (  0.50)	Loss_d 0.672 (0.671)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.41 (  0.51)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.48 (  0.52)
Test: [  26/  26]	Loss 0.737 (0.674)	test_acc   0.44 (  0.50)	test_minacc   0.51 (  0.50)	test_majacc   0.42 (  0.50)	Loss_d 0.737 (0.674)	test_acc_d   0.44 (  0.50)	test_minacc_d   0.51 (  0.50)	test_majacc_d   0.42 (  0.50)	test_corr_d   0.57 (  0.52)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.61it/s]
Test: [  0/  1]	Loss 1.181 (1.181)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.181 (1.181)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.38 (  0.38)
Test: [  1/  1]	Loss 1.181 (1.181)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.181 (1.181)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.38 (  0.38)
Overall Timing[ 23/  1]	epoch_time 0.0463 (0.0434)	validation_time 0.0004 (0.0007)	train_time 0.0459 (0.0425)
record: (train_acc, test_acc) (0.6151000003814697, 0.7380000352859497)
last accs (train_acc, test_acc) (0.500000012010336, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.98it/s]  8%|7         | 2/26 [00:00<00:03,  7.78it/s] 23%|##3       | 6/26 [00:00<00:01, 19.66it/s] 35%|###4      | 9/26 [00:00<00:00, 23.00it/s] 46%|####6     | 12/26 [00:00<00:00, 25.01it/s] 62%|######1   | 16/26 [00:00<00:00, 28.18it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.42it/s] 88%|########8 | 23/26 [00:00<00:00, 29.43it/s]100%|##########| 26/26 [00:01<00:00, 24.76it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 624 200
penalty weights 10000.0
args.step pgd_anneal_iters 624 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 625 200
penalty weights 10000.0
args.step pgd_anneal_iters 625 600
dim_v 512
rho, theta 206 tensor(-0.0006, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 626 200
penalty weights 10000.0
args.step pgd_anneal_iters 626 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 627 200
penalty weights 10000.0
args.step pgd_anneal_iters 627 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 628 200
penalty weights 10000.0
args.step pgd_anneal_iters 628 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 629 200
penalty weights 10000.0
args.step pgd_anneal_iters 629 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 630 200
penalty weights 10000.0
args.step pgd_anneal_iters 630 600
dim_v 512
rho, theta 194 tensor(-0.0011, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 631 200
penalty weights 10000.0
args.step pgd_anneal_iters 631 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 632 200
penalty weights 10000.0
args.step pgd_anneal_iters 632 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 633 200
penalty weights 10000.0
args.step pgd_anneal_iters 633 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 634 200
penalty weights 10000.0
args.step pgd_anneal_iters 634 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 635 200
penalty weights 10000.0
args.step pgd_anneal_iters 635 600
dim_v 512
rho, theta 190 tensor(-0.0007, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 636 200
penalty weights 10000.0
args.step pgd_anneal_iters 636 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 637 200
penalty weights 10000.0
args.step pgd_anneal_iters 637 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 638 200
penalty weights 10000.0
args.step pgd_anneal_iters 638 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 639 200
penalty weights 10000.0
args.step pgd_anneal_iters 639 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 640 200
penalty weights 10000.0
args.step pgd_anneal_iters 640 600
dim_v 512
rho, theta 189 tensor(-0.0004, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 641 200
penalty weights 10000.0
args.step pgd_anneal_iters 641 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 642 200
penalty weights 10000.0
args.step pgd_anneal_iters 642 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 643 200
penalty weights 10000.0
args.step pgd_anneal_iters 643 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 644 200
penalty weights 10000.0
args.step pgd_anneal_iters 644 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 645 200
penalty weights 10000.0
args.step pgd_anneal_iters 645 600
dim_v 512
rho, theta 187 tensor(-0.0003, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 646 200
penalty weights 10000.0
args.step pgd_anneal_iters 646 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 647 200
penalty weights 10000.0
args.step pgd_anneal_iters 647 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 648 200
penalty weights 10000.0
args.step pgd_anneal_iters 648 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 649 200
penalty weights 10000.0
args.step pgd_anneal_iters 649 600
final projection at end of training
dim_v 512
rho, theta 188 tensor(-0.0001, device='cuda:0')
Epoch: [24][  26/  26]	Loss 0.000 (0.002)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  36.21 ( 34.74)	train_acc   0.54 (  0.59)	train_minacc   0.63 (  0.48)	train_majacc   0.52 (  0.61)	train_corr   0.00 (  0.00)	l1 6.0258 (6.2245)	zero_count 0.0000 (73.7880)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.43it/s] 23%|##3       | 6/26 [00:00<00:00, 29.75it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.75it/s] 42%|####2     | 11/26 [00:00<00:00, 36.26it/s] 62%|######1   | 16/26 [00:00<00:00, 40.53it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.53it/s] 81%|########  | 21/26 [00:00<00:00, 38.83it/s]100%|##########| 26/26 [00:00<00:00, 41.68it/s]100%|##########| 26/26 [00:00<00:00, 34.88it/s]
Test: [   0/  26]	Loss 0.636 (0.636)	test_acc   0.55 (  0.55)	test_minacc   0.59 (  0.59)	test_majacc   0.54 (  0.54)	Loss_d 0.636 (0.636)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.54 (  0.54)	test_corr_d   0.32 (  0.32)
Test: [  10/  26]	Loss 0.664 (0.654)	test_acc   0.62 (  0.55)	test_minacc   0.57 (  0.52)	test_majacc   0.63 (  0.55)	Loss_d 0.664 (0.654)	test_acc_d   0.62 (  0.55)	test_minacc_d   0.57 (  0.52)	test_majacc_d   0.63 (  0.55)	test_corr_d   0.29 (  0.32)
Test: [  20/  26]	Loss 0.660 (0.651)	test_acc   0.53 (  0.53)	test_minacc   0.39 (  0.51)	test_majacc   0.55 (  0.54)	Loss_d 0.660 (0.651)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.39 (  0.51)	test_majacc_d   0.55 (  0.54)	test_corr_d   0.31 (  0.33)
Test: [  26/  26]	Loss 0.667 (0.653)	test_acc   0.45 (  0.53)	test_minacc   0.53 (  0.50)	test_majacc   0.43 (  0.54)	Loss_d 0.667 (0.653)	test_acc_d   0.45 (  0.53)	test_minacc_d   0.53 (  0.50)	test_majacc_d   0.43 (  0.54)	test_corr_d   0.36 (  0.33)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.75it/s]
Test: [  0/  1]	Loss 0.844 (0.844)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.51 (  0.51)	Loss_d 0.844 (0.844)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 0.844 (0.844)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.51 (  0.51)	Loss_d 0.844 (0.844)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.09 (  0.09)
Overall Timing[ 24/  1]	epoch_time 0.0451 (0.0434)	validation_time 0.0003 (0.0007)	train_time 0.0448 (0.0426)
record: (train_acc, test_acc) (0.6151000003814697, 0.7380000352859497)
last accs (train_acc, test_acc) (0.5307000114321708, 0.503000020980835)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:10,  2.47it/s] 12%|#1        | 3/26 [00:00<00:03,  6.80it/s] 27%|##6       | 7/26 [00:00<00:01, 14.60it/s] 42%|####2     | 11/26 [00:00<00:00, 19.82it/s] 58%|#####7    | 15/26 [00:00<00:00, 23.82it/s] 69%|######9   | 18/26 [00:00<00:00, 25.15it/s] 81%|########  | 21/26 [00:01<00:00, 26.33it/s] 96%|#########6| 25/26 [00:01<00:00, 28.74it/s]100%|##########| 26/26 [00:01<00:00, 19.79it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 650 200
penalty weights 10000.0
args.step pgd_anneal_iters 650 600
dim_v 512
rho, theta 188 tensor(-2.9756e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 651 200
penalty weights 10000.0
args.step pgd_anneal_iters 651 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 652 200
penalty weights 10000.0
args.step pgd_anneal_iters 652 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 653 200
penalty weights 10000.0
args.step pgd_anneal_iters 653 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 654 200
penalty weights 10000.0
args.step pgd_anneal_iters 654 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 655 200
penalty weights 10000.0
args.step pgd_anneal_iters 655 600
dim_v 512
rho, theta 188 tensor(-0.0001, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 656 200
penalty weights 10000.0
args.step pgd_anneal_iters 656 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 657 200
penalty weights 10000.0
args.step pgd_anneal_iters 657 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 658 200
penalty weights 10000.0
args.step pgd_anneal_iters 658 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 659 200
penalty weights 10000.0
args.step pgd_anneal_iters 659 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 660 200
penalty weights 10000.0
args.step pgd_anneal_iters 660 600
dim_v 512
rho, theta 191 tensor(-9.5474e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 661 200
penalty weights 10000.0
args.step pgd_anneal_iters 661 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 662 200
penalty weights 10000.0
args.step pgd_anneal_iters 662 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 663 200
penalty weights 10000.0
args.step pgd_anneal_iters 663 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 664 200
penalty weights 10000.0
args.step pgd_anneal_iters 664 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 665 200
penalty weights 10000.0
args.step pgd_anneal_iters 665 600
dim_v 512
rho, theta 194 tensor(-7.0058e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 666 200
penalty weights 10000.0
args.step pgd_anneal_iters 666 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 667 200
penalty weights 10000.0
args.step pgd_anneal_iters 667 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 668 200
penalty weights 10000.0
args.step pgd_anneal_iters 668 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 669 200
penalty weights 10000.0
args.step pgd_anneal_iters 669 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 670 200
penalty weights 10000.0
args.step pgd_anneal_iters 670 600
dim_v 512
rho, theta 198 tensor(-5.0188e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 671 200
penalty weights 10000.0
args.step pgd_anneal_iters 671 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 672 200
penalty weights 10000.0
args.step pgd_anneal_iters 672 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 673 200
penalty weights 10000.0
args.step pgd_anneal_iters 673 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 674 200
penalty weights 10000.0
args.step pgd_anneal_iters 674 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 675 200
penalty weights 10000.0
args.step pgd_anneal_iters 675 600
dim_v 512
rho, theta 204 tensor(-4.5823e-05, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [25][  26/  26]	Loss 0.000 (0.001)	train_nll   0.67 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  36.60 ( 36.49)	train_acc   0.44 (  0.51)	train_minacc   0.51 (  0.51)	train_majacc   0.42 (  0.51)	train_corr   0.00 (  0.00)	l1 5.8901 (5.8943)	zero_count 0.0000 (74.8410)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.62it/s] 23%|##3       | 6/26 [00:00<00:00, 22.51it/s]                                               23%|##3       | 6/26 [00:00<00:00, 22.51it/s] 42%|####2     | 11/26 [00:00<00:00, 30.39it/s] 65%|######5   | 17/26 [00:00<00:00, 34.55it/s]                                                65%|######5   | 17/26 [00:00<00:00, 34.55it/s] 85%|########4 | 22/26 [00:00<00:00, 38.41it/s]100%|##########| 26/26 [00:00<00:00, 31.15it/s]
Test: [   0/  26]	Loss 0.650 (0.650)	test_acc   0.53 (  0.53)	test_minacc   0.59 (  0.59)	test_majacc   0.52 (  0.52)	Loss_d 0.650 (0.650)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.26 (  0.26)
Test: [  10/  26]	Loss 0.663 (0.660)	test_acc   0.56 (  0.50)	test_minacc   0.55 (  0.51)	test_majacc   0.56 (  0.50)	Loss_d 0.663 (0.660)	test_acc_d   0.56 (  0.50)	test_minacc_d   0.55 (  0.51)	test_majacc_d   0.56 (  0.50)	test_corr_d   0.24 (  0.27)
Test: [  20/  26]	Loss 0.664 (0.660)	test_acc   0.50 (  0.50)	test_minacc   0.41 (  0.51)	test_majacc   0.52 (  0.50)	Loss_d 0.664 (0.660)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.41 (  0.51)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.25 (  0.28)
Test: [  26/  26]	Loss 0.673 (0.661)	test_acc   0.44 (  0.50)	test_minacc   0.51 (  0.50)	test_majacc   0.42 (  0.50)	Loss_d 0.673 (0.661)	test_acc_d   0.44 (  0.50)	test_minacc_d   0.51 (  0.50)	test_majacc_d   0.42 (  0.50)	test_corr_d   0.30 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.53it/s]
Test: [  0/  1]	Loss 0.796 (0.796)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.796 (0.796)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.05 (  0.05)
Test: [  1/  1]	Loss 0.796 (0.796)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.796 (0.796)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.05 (  0.05)
Overall Timing[ 25/  1]	epoch_time 0.0437 (0.0435)	validation_time 0.0004 (0.0007)	train_time 0.0432 (0.0426)
record: (train_acc, test_acc) (0.6151000003814697, 0.7380000352859497)
last accs (train_acc, test_acc) (0.500000012010336, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.52it/s] 19%|#9        | 5/26 [00:00<00:00, 22.94it/s] 35%|###4      | 9/26 [00:00<00:00, 29.82it/s] 50%|#####     | 13/26 [00:00<00:00, 29.97it/s] 65%|######5   | 17/26 [00:00<00:00, 30.90it/s] 81%|########  | 21/26 [00:00<00:00, 30.95it/s] 96%|#########6| 25/26 [00:00<00:00, 31.24it/s]100%|##########| 26/26 [00:00<00:00, 27.92it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 676 200
penalty weights 10000.0
args.step pgd_anneal_iters 676 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 677 200
penalty weights 10000.0
args.step pgd_anneal_iters 677 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 678 200
penalty weights 10000.0
args.step pgd_anneal_iters 678 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 679 200
penalty weights 10000.0
args.step pgd_anneal_iters 679 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 680 200
penalty weights 10000.0
args.step pgd_anneal_iters 680 600
dim_v 512
rho, theta 217 tensor(-4.4265e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 681 200
penalty weights 10000.0
args.step pgd_anneal_iters 681 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 682 200
penalty weights 10000.0
args.step pgd_anneal_iters 682 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 683 200
penalty weights 10000.0
args.step pgd_anneal_iters 683 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 684 200
penalty weights 10000.0
args.step pgd_anneal_iters 684 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 685 200
penalty weights 10000.0
args.step pgd_anneal_iters 685 600
dim_v 512
rho, theta 222 tensor(-2.9040e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 686 200
penalty weights 10000.0
args.step pgd_anneal_iters 686 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 687 200
penalty weights 10000.0
args.step pgd_anneal_iters 687 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 688 200
penalty weights 10000.0
args.step pgd_anneal_iters 688 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 689 200
penalty weights 10000.0
args.step pgd_anneal_iters 689 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 690 200
penalty weights 10000.0
args.step pgd_anneal_iters 690 600
dim_v 512
rho, theta 230 tensor(-1.9718e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 691 200
penalty weights 10000.0
args.step pgd_anneal_iters 691 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 692 200
penalty weights 10000.0
args.step pgd_anneal_iters 692 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 693 200
penalty weights 10000.0
args.step pgd_anneal_iters 693 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 694 200
penalty weights 10000.0
args.step pgd_anneal_iters 694 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 695 200
penalty weights 10000.0
args.step pgd_anneal_iters 695 600
dim_v 512
rho, theta 233 tensor(-1.4378e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 696 200
penalty weights 10000.0
args.step pgd_anneal_iters 696 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 697 200
penalty weights 10000.0
args.step pgd_anneal_iters 697 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 698 200
penalty weights 10000.0
args.step pgd_anneal_iters 698 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 699 200
penalty weights 10000.0
args.step pgd_anneal_iters 699 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 700 200
penalty weights 10000.0
args.step pgd_anneal_iters 700 600
dim_v 512
rho, theta 236 tensor(-1.3351e-05, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 701 200
penalty weights 10000.0
args.step pgd_anneal_iters 701 600
final projection at end of training
dim_v 512
rho, theta 258 tensor(-4.3357e-06, device='cuda:0')
Epoch: [26][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  36.65 ( 36.63)	train_acc   0.44 (  0.50)	train_minacc   0.51 (  0.50)	train_majacc   0.42 (  0.50)	train_corr   0.00 (  0.00)	l1 5.8590 (5.8672)	zero_count 275.0000 (63.3860)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 26.83it/s] 31%|###       | 8/26 [00:00<00:00, 38.02it/s]                                               31%|###       | 8/26 [00:00<00:00, 38.02it/s] 50%|#####     | 13/26 [00:00<00:00, 40.97it/s] 69%|######9   | 18/26 [00:00<00:00, 38.96it/s]                                                69%|######9   | 18/26 [00:00<00:00, 38.96it/s] 88%|########8 | 23/26 [00:00<00:00, 40.96it/s]100%|##########| 26/26 [00:00<00:00, 37.77it/s]
Test: [   0/  26]	Loss 0.657 (0.657)	test_acc   0.53 (  0.53)	test_minacc   0.59 (  0.59)	test_majacc   0.52 (  0.52)	Loss_d 0.657 (0.657)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.22 (  0.22)
Test: [  10/  26]	Loss 0.665 (0.666)	test_acc   0.56 (  0.50)	test_minacc   0.55 (  0.51)	test_majacc   0.56 (  0.50)	Loss_d 0.665 (0.666)	test_acc_d   0.56 (  0.50)	test_minacc_d   0.55 (  0.51)	test_majacc_d   0.56 (  0.50)	test_corr_d   0.21 (  0.23)
Test: [  20/  26]	Loss 0.670 (0.665)	test_acc   0.50 (  0.50)	test_minacc   0.41 (  0.51)	test_majacc   0.52 (  0.50)	Loss_d 0.670 (0.665)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.41 (  0.51)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.22 (  0.24)
Test: [  26/  26]	Loss 0.677 (0.666)	test_acc   0.44 (  0.50)	test_minacc   0.51 (  0.50)	test_majacc   0.42 (  0.50)	Loss_d 0.677 (0.666)	test_acc_d   0.44 (  0.50)	test_minacc_d   0.51 (  0.50)	test_majacc_d   0.42 (  0.50)	test_corr_d   0.26 (  0.24)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.61it/s]
Test: [  0/  1]	Loss 0.780 (0.780)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.780 (0.780)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.03 (  0.03)
Test: [  1/  1]	Loss 0.780 (0.780)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.780 (0.780)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.03 (  0.03)
Overall Timing[ 26/  1]	epoch_time 0.0435 (0.0435)	validation_time 0.0003 (0.0007)	train_time 0.0431 (0.0426)
record: (train_acc, test_acc) (0.6151000003814697, 0.7380000352859497)
last accs (train_acc, test_acc) (0.500000012010336, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.00it/s] 15%|#5        | 4/26 [00:00<00:01, 18.72it/s] 31%|###       | 8/26 [00:00<00:00, 26.05it/s] 42%|####2     | 11/26 [00:00<00:00, 27.04it/s] 54%|#####3    | 14/26 [00:00<00:00, 27.97it/s] 69%|######9   | 18/26 [00:00<00:00, 30.38it/s] 85%|########4 | 22/26 [00:00<00:00, 30.25it/s]100%|##########| 26/26 [00:00<00:00, 30.07it/s]100%|##########| 26/26 [00:00<00:00, 26.18it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 702 200
penalty weights 10000.0
args.step pgd_anneal_iters 702 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 703 200
penalty weights 10000.0
args.step pgd_anneal_iters 703 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 704 200
penalty weights 10000.0
args.step pgd_anneal_iters 704 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 705 200
penalty weights 10000.0
args.step pgd_anneal_iters 705 600
dim_v 512
rho, theta 254 tensor(-1.8292e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 706 200
penalty weights 10000.0
args.step pgd_anneal_iters 706 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 707 200
penalty weights 10000.0
args.step pgd_anneal_iters 707 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 708 200
penalty weights 10000.0
args.step pgd_anneal_iters 708 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 709 200
penalty weights 10000.0
args.step pgd_anneal_iters 709 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 710 200
penalty weights 10000.0
args.step pgd_anneal_iters 710 600
dim_v 512
rho, theta 251 tensor(-2.0144e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 711 200
penalty weights 10000.0
args.step pgd_anneal_iters 711 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 712 200
penalty weights 10000.0
args.step pgd_anneal_iters 712 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 713 200
penalty weights 10000.0
args.step pgd_anneal_iters 713 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 714 200
penalty weights 10000.0
args.step pgd_anneal_iters 714 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 715 200
penalty weights 10000.0
args.step pgd_anneal_iters 715 600
dim_v 512
rho, theta 246 tensor(-1.3604e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 716 200
penalty weights 10000.0
args.step pgd_anneal_iters 716 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 717 200
penalty weights 10000.0
args.step pgd_anneal_iters 717 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 718 200
penalty weights 10000.0
args.step pgd_anneal_iters 718 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 719 200
penalty weights 10000.0
args.step pgd_anneal_iters 719 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 720 200
penalty weights 10000.0
args.step pgd_anneal_iters 720 600
dim_v 512
rho, theta 245 tensor(-1.0545e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 721 200
penalty weights 10000.0
args.step pgd_anneal_iters 721 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 722 200
penalty weights 10000.0
args.step pgd_anneal_iters 722 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 723 200
penalty weights 10000.0
args.step pgd_anneal_iters 723 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 724 200
penalty weights 10000.0
args.step pgd_anneal_iters 724 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 725 200
penalty weights 10000.0
args.step pgd_anneal_iters 725 600
dim_v 512
rho, theta 263 tensor(-7.6547e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 726 200
penalty weights 10000.0
args.step pgd_anneal_iters 726 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 727 200
penalty weights 10000.0
args.step pgd_anneal_iters 727 600
final projection at end of training
dim_v 512
rho, theta 258 tensor(-4.6321e-06, device='cuda:0')
Epoch: [27][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  36.66 ( 36.66)	train_acc   0.44 (  0.50)	train_minacc   0.51 (  0.50)	train_majacc   0.42 (  0.50)	train_corr   0.00 (  0.00)	l1 5.8607 (5.8636)	zero_count 0.0000 (60.4110)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.39it/s] 15%|#5        | 4/26 [00:00<00:01, 17.62it/s] 35%|###4      | 9/26 [00:00<00:00, 30.26it/s]                                               35%|###4      | 9/26 [00:00<00:00, 30.26it/s] 54%|#####3    | 14/26 [00:00<00:00, 36.40it/s] 73%|#######3  | 19/26 [00:00<00:00, 36.25it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 36.25it/s] 92%|#########2| 24/26 [00:00<00:00, 40.06it/s]100%|##########| 26/26 [00:00<00:00, 33.76it/s]
Test: [   0/  26]	Loss 0.659 (0.659)	test_acc   0.53 (  0.53)	test_minacc   0.59 (  0.59)	test_majacc   0.52 (  0.52)	Loss_d 0.659 (0.659)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.22 (  0.22)
Test: [  10/  26]	Loss 0.665 (0.666)	test_acc   0.56 (  0.50)	test_minacc   0.55 (  0.51)	test_majacc   0.56 (  0.50)	Loss_d 0.665 (0.666)	test_acc_d   0.56 (  0.50)	test_minacc_d   0.55 (  0.51)	test_majacc_d   0.56 (  0.50)	test_corr_d   0.20 (  0.22)
Test: [  20/  26]	Loss 0.670 (0.666)	test_acc   0.50 (  0.50)	test_minacc   0.41 (  0.51)	test_majacc   0.52 (  0.50)	Loss_d 0.670 (0.666)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.41 (  0.51)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.21 (  0.23)
Test: [  26/  26]	Loss 0.675 (0.666)	test_acc   0.44 (  0.50)	test_minacc   0.51 (  0.50)	test_majacc   0.42 (  0.50)	Loss_d 0.675 (0.666)	test_acc_d   0.44 (  0.50)	test_minacc_d   0.51 (  0.50)	test_majacc_d   0.42 (  0.50)	test_corr_d   0.25 (  0.22)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 58.32it/s]
Test: [  0/  1]	Loss 0.774 (0.774)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.774 (0.774)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.03 (  0.03)
Test: [  1/  1]	Loss 0.774 (0.774)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.774 (0.774)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.03 (  0.03)
Overall Timing[ 27/  1]	epoch_time 0.0439 (0.0435)	validation_time 0.0004 (0.0007)	train_time 0.0435 (0.0426)
record: (train_acc, test_acc) (0.6151000003814697, 0.7380000352859497)
last accs (train_acc, test_acc) (0.500000012010336, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.65it/s] 19%|#9        | 5/26 [00:00<00:00, 23.66it/s] 31%|###       | 8/26 [00:00<00:00, 25.71it/s] 46%|####6     | 12/26 [00:00<00:00, 29.54it/s] 58%|#####7    | 15/26 [00:00<00:00, 29.55it/s] 69%|######9   | 18/26 [00:00<00:00, 29.48it/s] 85%|########4 | 22/26 [00:00<00:00, 31.44it/s]100%|##########| 26/26 [00:00<00:00, 31.56it/s]100%|##########| 26/26 [00:00<00:00, 27.70it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 728 200
penalty weights 10000.0
args.step pgd_anneal_iters 728 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 729 200
penalty weights 10000.0
args.step pgd_anneal_iters 729 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 730 200
penalty weights 10000.0
args.step pgd_anneal_iters 730 600
dim_v 512
rho, theta 250 tensor(-8.4007e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 731 200
penalty weights 10000.0
args.step pgd_anneal_iters 731 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 732 200
penalty weights 10000.0
args.step pgd_anneal_iters 732 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 733 200
penalty weights 10000.0
args.step pgd_anneal_iters 733 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 734 200
penalty weights 10000.0
args.step pgd_anneal_iters 734 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 735 200
penalty weights 10000.0
args.step pgd_anneal_iters 735 600
dim_v 512
rho, theta 247 tensor(-1.2944e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 736 200
penalty weights 10000.0
args.step pgd_anneal_iters 736 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 737 200
penalty weights 10000.0
args.step pgd_anneal_iters 737 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 738 200
penalty weights 10000.0
args.step pgd_anneal_iters 738 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 739 200
penalty weights 10000.0
args.step pgd_anneal_iters 739 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 740 200
penalty weights 10000.0
args.step pgd_anneal_iters 740 600
dim_v 512
rho, theta 247 tensor(-8.7907e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 741 200
penalty weights 10000.0
args.step pgd_anneal_iters 741 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 742 200
penalty weights 10000.0
args.step pgd_anneal_iters 742 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 743 200
penalty weights 10000.0
args.step pgd_anneal_iters 743 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 744 200
penalty weights 10000.0
args.step pgd_anneal_iters 744 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 745 200
penalty weights 10000.0
args.step pgd_anneal_iters 745 600
dim_v 512
rho, theta 245 tensor(-7.6100e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 746 200
penalty weights 10000.0
args.step pgd_anneal_iters 746 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 747 200
penalty weights 10000.0
args.step pgd_anneal_iters 747 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 748 200
penalty weights 10000.0
args.step pgd_anneal_iters 748 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 749 200
penalty weights 10000.0
args.step pgd_anneal_iters 749 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 750 200
penalty weights 10000.0
args.step pgd_anneal_iters 750 600
dim_v 512
rho, theta 259 tensor(-5.5386e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 751 200
penalty weights 10000.0
args.step pgd_anneal_iters 751 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 752 200
penalty weights 10000.0
args.step pgd_anneal_iters 752 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 753 200
penalty weights 10000.0
args.step pgd_anneal_iters 753 600
final projection at end of training
dim_v 512
rho, theta 256 tensor(-5.4994e-06, device='cuda:0')
Epoch: [28][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  36.67 ( 36.67)	train_acc   0.44 (  0.50)	train_minacc   0.51 (  0.50)	train_majacc   0.42 (  0.50)	train_corr   0.00 (  0.00)	l1 5.8621 (5.8622)	zero_count 0.0000 (60.8400)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.74it/s] 15%|#5        | 4/26 [00:00<00:01, 18.48it/s] 35%|###4      | 9/26 [00:00<00:00, 30.70it/s]                                               35%|###4      | 9/26 [00:00<00:00, 30.70it/s] 58%|#####7    | 15/26 [00:00<00:00, 37.52it/s] 77%|#######6  | 20/26 [00:00<00:00, 38.86it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 38.86it/s] 96%|#########6| 25/26 [00:00<00:00, 41.18it/s]100%|##########| 26/26 [00:00<00:00, 33.61it/s]
Test: [   0/  26]	Loss 0.662 (0.662)	test_acc   0.53 (  0.53)	test_minacc   0.59 (  0.59)	test_majacc   0.52 (  0.52)	Loss_d 0.662 (0.662)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.20 (  0.20)
Test: [  10/  26]	Loss 0.666 (0.667)	test_acc   0.56 (  0.50)	test_minacc   0.55 (  0.51)	test_majacc   0.56 (  0.50)	Loss_d 0.666 (0.667)	test_acc_d   0.56 (  0.50)	test_minacc_d   0.55 (  0.51)	test_majacc_d   0.56 (  0.50)	test_corr_d   0.18 (  0.21)
Test: [  20/  26]	Loss 0.671 (0.667)	test_acc   0.50 (  0.50)	test_minacc   0.41 (  0.51)	test_majacc   0.52 (  0.50)	Loss_d 0.671 (0.667)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.41 (  0.51)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.20 (  0.21)
Test: [  26/  26]	Loss 0.675 (0.668)	test_acc   0.44 (  0.50)	test_minacc   0.51 (  0.50)	test_majacc   0.42 (  0.50)	Loss_d 0.675 (0.668)	test_acc_d   0.44 (  0.50)	test_minacc_d   0.51 (  0.50)	test_majacc_d   0.42 (  0.50)	test_corr_d   0.24 (  0.21)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.41it/s]
Test: [  0/  1]	Loss 0.769 (0.769)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.769 (0.769)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.02 (  0.02)
Test: [  1/  1]	Loss 0.769 (0.769)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.769 (0.769)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.02 (  0.02)
Overall Timing[ 28/  1]	epoch_time 0.0398 (0.0433)	validation_time 0.0004 (0.0007)	train_time 0.0393 (0.0425)
record: (train_acc, test_acc) (0.6151000003814697, 0.7380000352859497)
last accs (train_acc, test_acc) (0.500000012010336, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.68it/s] 15%|#5        | 4/26 [00:00<00:01, 16.06it/s] 31%|###       | 8/26 [00:00<00:00, 23.22it/s] 46%|####6     | 12/26 [00:00<00:00, 26.17it/s] 62%|######1   | 16/26 [00:00<00:00, 29.33it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.01it/s] 92%|#########2| 24/26 [00:00<00:00, 30.26it/s]100%|##########| 26/26 [00:01<00:00, 25.59it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 754 200
penalty weights 10000.0
args.step pgd_anneal_iters 754 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 755 200
penalty weights 10000.0
args.step pgd_anneal_iters 755 600
dim_v 512
rho, theta 253 tensor(-4.1639e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 756 200
penalty weights 10000.0
args.step pgd_anneal_iters 756 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 757 200
penalty weights 10000.0
args.step pgd_anneal_iters 757 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 758 200
penalty weights 10000.0
args.step pgd_anneal_iters 758 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 759 200
penalty weights 10000.0
args.step pgd_anneal_iters 759 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 760 200
penalty weights 10000.0
args.step pgd_anneal_iters 760 600
dim_v 512
rho, theta 244 tensor(-1.0358e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 761 200
penalty weights 10000.0
args.step pgd_anneal_iters 761 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 762 200
penalty weights 10000.0
args.step pgd_anneal_iters 762 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 763 200
penalty weights 10000.0
args.step pgd_anneal_iters 763 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 764 200
penalty weights 10000.0
args.step pgd_anneal_iters 764 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 765 200
penalty weights 10000.0
args.step pgd_anneal_iters 765 600
dim_v 512
rho, theta 243 tensor(-6.9200e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 766 200
penalty weights 10000.0
args.step pgd_anneal_iters 766 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 767 200
penalty weights 10000.0
args.step pgd_anneal_iters 767 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 768 200
penalty weights 10000.0
args.step pgd_anneal_iters 768 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 769 200
penalty weights 10000.0
args.step pgd_anneal_iters 769 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 770 200
penalty weights 10000.0
args.step pgd_anneal_iters 770 600
dim_v 512
rho, theta 247 tensor(-5.5528e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 771 200
penalty weights 10000.0
args.step pgd_anneal_iters 771 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 772 200
penalty weights 10000.0
args.step pgd_anneal_iters 772 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 773 200
penalty weights 10000.0
args.step pgd_anneal_iters 773 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 774 200
penalty weights 10000.0
args.step pgd_anneal_iters 774 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 775 200
penalty weights 10000.0
args.step pgd_anneal_iters 775 600
dim_v 512
rho, theta 255 tensor(-4.1332e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 776 200
penalty weights 10000.0
args.step pgd_anneal_iters 776 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 777 200
penalty weights 10000.0
args.step pgd_anneal_iters 777 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 778 200
penalty weights 10000.0
args.step pgd_anneal_iters 778 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 779 200
penalty weights 10000.0
args.step pgd_anneal_iters 779 600
final projection at end of training
dim_v 512
rho, theta 250 tensor(-5.5891e-06, device='cuda:0')
Epoch: [29][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  36.68 ( 36.68)	train_acc   0.44 (  0.50)	train_minacc   0.51 (  0.50)	train_majacc   0.42 (  0.50)	train_corr   0.00 (  0.00)	l1 5.8629 (5.8617)	zero_count 0.0000 (61.1520)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  4.12it/s] 27%|##6       | 7/26 [00:00<00:00, 24.53it/s]                                               27%|##6       | 7/26 [00:00<00:00, 24.53it/s] 50%|#####     | 13/26 [00:00<00:00, 34.42it/s] 73%|#######3  | 19/26 [00:00<00:00, 41.29it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 41.29it/s] 92%|#########2| 24/26 [00:00<00:00, 43.69it/s]100%|##########| 26/26 [00:00<00:00, 33.76it/s]
Test: [   0/  26]	Loss 0.663 (0.663)	test_acc   0.53 (  0.53)	test_minacc   0.59 (  0.59)	test_majacc   0.52 (  0.52)	Loss_d 0.663 (0.663)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.20 (  0.20)
Test: [  10/  26]	Loss 0.667 (0.668)	test_acc   0.56 (  0.50)	test_minacc   0.55 (  0.52)	test_majacc   0.56 (  0.50)	Loss_d 0.667 (0.668)	test_acc_d   0.56 (  0.50)	test_minacc_d   0.55 (  0.52)	test_majacc_d   0.56 (  0.50)	test_corr_d   0.18 (  0.20)
Test: [  20/  26]	Loss 0.672 (0.668)	test_acc   0.50 (  0.50)	test_minacc   0.41 (  0.51)	test_majacc   0.52 (  0.50)	Loss_d 0.672 (0.668)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.41 (  0.51)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.19 (  0.20)
Test: [  26/  26]	Loss 0.675 (0.669)	test_acc   0.44 (  0.50)	test_minacc   0.51 (  0.50)	test_majacc   0.42 (  0.50)	Loss_d 0.675 (0.669)	test_acc_d   0.44 (  0.50)	test_minacc_d   0.51 (  0.50)	test_majacc_d   0.42 (  0.50)	test_corr_d   0.24 (  0.20)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.32it/s]
Test: [  0/  1]	Loss 0.766 (0.766)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.766 (0.766)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.02 (  0.02)
Test: [  1/  1]	Loss 0.766 (0.766)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.766 (0.766)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.02 (  0.02)
Overall Timing[ 29/  1]	epoch_time 0.0414 (0.0433)	validation_time 0.0004 (0.0006)	train_time 0.0410 (0.0425)
record: (train_acc, test_acc) (0.6151000003814697, 0.7380000352859497)
last accs (train_acc, test_acc) (0.4999000120162964, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.93it/s] 19%|#9        | 5/26 [00:00<00:01, 18.28it/s] 31%|###       | 8/26 [00:00<00:00, 22.43it/s] 42%|####2     | 11/26 [00:00<00:00, 24.76it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.39it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.23it/s] 88%|########8 | 23/26 [00:00<00:00, 29.90it/s]100%|##########| 26/26 [00:01<00:00, 24.72it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 780 200
penalty weights 10000.0
args.step pgd_anneal_iters 780 600
dim_v 512
rho, theta 259 tensor(-1.5406e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 781 200
penalty weights 10000.0
args.step pgd_anneal_iters 781 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 782 200
penalty weights 10000.0
args.step pgd_anneal_iters 782 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 783 200
penalty weights 10000.0
args.step pgd_anneal_iters 783 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 784 200
penalty weights 10000.0
args.step pgd_anneal_iters 784 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 785 200
penalty weights 10000.0
args.step pgd_anneal_iters 785 600
dim_v 512
rho, theta 241 tensor(-8.5456e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 786 200
penalty weights 10000.0
args.step pgd_anneal_iters 786 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 787 200
penalty weights 10000.0
args.step pgd_anneal_iters 787 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 788 200
penalty weights 10000.0
args.step pgd_anneal_iters 788 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 789 200
penalty weights 10000.0
args.step pgd_anneal_iters 789 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 790 200
penalty weights 10000.0
args.step pgd_anneal_iters 790 600
dim_v 512
rho, theta 240 tensor(-6.0287e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 791 200
penalty weights 10000.0
args.step pgd_anneal_iters 791 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 792 200
penalty weights 10000.0
args.step pgd_anneal_iters 792 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 793 200
penalty weights 10000.0
args.step pgd_anneal_iters 793 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 794 200
penalty weights 10000.0
args.step pgd_anneal_iters 794 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 795 200
penalty weights 10000.0
args.step pgd_anneal_iters 795 600
dim_v 512
rho, theta 253 tensor(-4.5300e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 796 200
penalty weights 10000.0
args.step pgd_anneal_iters 796 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 797 200
penalty weights 10000.0
args.step pgd_anneal_iters 797 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 798 200
penalty weights 10000.0
args.step pgd_anneal_iters 798 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 799 200
penalty weights 10000.0
args.step pgd_anneal_iters 799 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 800 200
penalty weights 10000.0
args.step pgd_anneal_iters 800 600
dim_v 512
rho, theta 251 tensor(-4.0077e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 801 200
penalty weights 10000.0
args.step pgd_anneal_iters 801 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 802 200
penalty weights 10000.0
args.step pgd_anneal_iters 802 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 803 200
penalty weights 10000.0
args.step pgd_anneal_iters 803 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 804 200
penalty weights 10000.0
args.step pgd_anneal_iters 804 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 805 200
penalty weights 10000.0
args.step pgd_anneal_iters 805 600
dim_v 512
rho, theta 248 tensor(-5.5420e-06, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [30][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  36.69 ( 36.68)	train_acc   0.43 (  0.50)	train_minacc   0.51 (  0.51)	train_majacc   0.42 (  0.50)	train_corr   0.00 (  0.00)	l1 5.8635 (5.8616)	zero_count 0.0000 (61.3080)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.87it/s] 23%|##3       | 6/26 [00:00<00:00, 28.27it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.27it/s] 42%|####2     | 11/26 [00:00<00:00, 35.87it/s] 65%|######5   | 17/26 [00:00<00:00, 40.70it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.70it/s] 88%|########8 | 23/26 [00:00<00:00, 42.49it/s]100%|##########| 26/26 [00:00<00:00, 36.03it/s]
Test: [   0/  26]	Loss 0.665 (0.665)	test_acc   0.53 (  0.53)	test_minacc   0.59 (  0.59)	test_majacc   0.52 (  0.52)	Loss_d 0.665 (0.665)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.19 (  0.19)
Test: [  10/  26]	Loss 0.668 (0.669)	test_acc   0.57 (  0.50)	test_minacc   0.59 (  0.52)	test_majacc   0.56 (  0.50)	Loss_d 0.668 (0.669)	test_acc_d   0.57 (  0.50)	test_minacc_d   0.59 (  0.52)	test_majacc_d   0.56 (  0.50)	test_corr_d   0.17 (  0.19)
Test: [  20/  26]	Loss 0.673 (0.669)	test_acc   0.50 (  0.50)	test_minacc   0.41 (  0.51)	test_majacc   0.52 (  0.50)	Loss_d 0.673 (0.669)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.41 (  0.51)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.18 (  0.20)
Test: [  26/  26]	Loss 0.675 (0.670)	test_acc   0.43 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.42 (  0.50)	Loss_d 0.675 (0.670)	test_acc_d   0.43 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.42 (  0.50)	test_corr_d   0.23 (  0.20)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 57.31it/s]
Test: [  0/  1]	Loss 0.764 (0.764)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.764 (0.764)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.02 (  0.02)
Test: [  1/  1]	Loss 0.764 (0.764)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.764 (0.764)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.02 (  0.02)
Overall Timing[ 30/  1]	epoch_time 0.0408 (0.0432)	validation_time 0.0004 (0.0006)	train_time 0.0405 (0.0424)
record: (train_acc, test_acc) (0.6151000003814697, 0.7380000352859497)
last accs (train_acc, test_acc) (0.49920000836253164, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  4.16it/s] 19%|#9        | 5/26 [00:00<00:01, 15.30it/s] 35%|###4      | 9/26 [00:00<00:00, 21.92it/s] 46%|####6     | 12/26 [00:00<00:00, 24.05it/s] 58%|#####7    | 15/26 [00:00<00:00, 25.27it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.47it/s] 85%|########4 | 22/26 [00:00<00:00, 28.69it/s] 96%|#########6| 25/26 [00:01<00:00, 28.71it/s]100%|##########| 26/26 [00:01<00:00, 23.33it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 806 200
penalty weights 10000.0
args.step pgd_anneal_iters 806 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 807 200
penalty weights 10000.0
args.step pgd_anneal_iters 807 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 808 200
penalty weights 10000.0
args.step pgd_anneal_iters 808 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 809 200
penalty weights 10000.0
args.step pgd_anneal_iters 809 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 810 200
penalty weights 10000.0
args.step pgd_anneal_iters 810 600
dim_v 512
rho, theta 242 tensor(-7.0643e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 811 200
penalty weights 10000.0
args.step pgd_anneal_iters 811 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 812 200
penalty weights 10000.0
args.step pgd_anneal_iters 812 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 813 200
penalty weights 10000.0
args.step pgd_anneal_iters 813 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 814 200
penalty weights 10000.0
args.step pgd_anneal_iters 814 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 815 200
penalty weights 10000.0
args.step pgd_anneal_iters 815 600
dim_v 512
rho, theta 240 tensor(-5.4411e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 816 200
penalty weights 10000.0
args.step pgd_anneal_iters 816 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 817 200
penalty weights 10000.0
args.step pgd_anneal_iters 817 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 818 200
penalty weights 10000.0
args.step pgd_anneal_iters 818 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 819 200
penalty weights 10000.0
args.step pgd_anneal_iters 819 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 820 200
penalty weights 10000.0
args.step pgd_anneal_iters 820 600
dim_v 512
rho, theta 260 tensor(-3.4840e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 821 200
penalty weights 10000.0
args.step pgd_anneal_iters 821 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 822 200
penalty weights 10000.0
args.step pgd_anneal_iters 822 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 823 200
penalty weights 10000.0
args.step pgd_anneal_iters 823 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 824 200
penalty weights 10000.0
args.step pgd_anneal_iters 824 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 825 200
penalty weights 10000.0
args.step pgd_anneal_iters 825 600
dim_v 512
rho, theta 251 tensor(-3.8071e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 826 200
penalty weights 10000.0
args.step pgd_anneal_iters 826 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 827 200
penalty weights 10000.0
args.step pgd_anneal_iters 827 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 828 200
penalty weights 10000.0
args.step pgd_anneal_iters 828 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 829 200
penalty weights 10000.0
args.step pgd_anneal_iters 829 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 830 200
penalty weights 10000.0
args.step pgd_anneal_iters 830 600
dim_v 512
rho, theta 253 tensor(-4.0250e-06, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 831 200
penalty weights 10000.0
args.step pgd_anneal_iters 831 600
final projection at end of training
dim_v 512
rho, theta 265 tensor(-1.3552e-06, device='cuda:0')
Epoch: [31][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  36.69 ( 36.69)	train_acc   0.43 (  0.50)	train_minacc   0.51 (  0.51)	train_majacc   0.42 (  0.49)	train_corr   0.00 (  0.00)	l1 5.8590 (5.8613)	zero_count 258.0000 (57.6960)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.93it/s] 23%|##3       | 6/26 [00:00<00:00, 31.51it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.51it/s] 42%|####2     | 11/26 [00:00<00:00, 37.72it/s] 62%|######1   | 16/26 [00:00<00:00, 41.92it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.92it/s] 81%|########  | 21/26 [00:00<00:00, 39.68it/s]100%|##########| 26/26 [00:00<00:00, 42.52it/s]100%|##########| 26/26 [00:00<00:00, 35.91it/s]
Test: [   0/  26]	Loss 0.666 (0.666)	test_acc   0.53 (  0.53)	test_minacc   0.60 (  0.60)	test_majacc   0.52 (  0.52)	Loss_d 0.666 (0.666)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.18 (  0.18)
Test: [  10/  26]	Loss 0.669 (0.670)	test_acc   0.56 (  0.50)	test_minacc   0.61 (  0.53)	test_majacc   0.55 (  0.49)	Loss_d 0.669 (0.670)	test_acc_d   0.56 (  0.50)	test_minacc_d   0.61 (  0.53)	test_majacc_d   0.55 (  0.49)	test_corr_d   0.16 (  0.19)
Test: [  20/  26]	Loss 0.674 (0.670)	test_acc   0.49 (  0.49)	test_minacc   0.41 (  0.52)	test_majacc   0.51 (  0.49)	Loss_d 0.674 (0.670)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.41 (  0.52)	test_majacc_d   0.51 (  0.49)	test_corr_d   0.17 (  0.19)
Test: [  26/  26]	Loss 0.675 (0.670)	test_acc   0.43 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.42 (  0.49)	Loss_d 0.675 (0.670)	test_acc_d   0.43 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.42 (  0.49)	test_corr_d   0.23 (  0.19)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.74it/s]
Test: [  0/  1]	Loss 0.763 (0.763)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.763 (0.763)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.02 (  0.02)
Test: [  1/  1]	Loss 0.763 (0.763)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.763 (0.763)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.02 (  0.02)
Overall Timing[ 31/  1]	epoch_time 0.0421 (0.0432)	validation_time 0.0004 (0.0006)	train_time 0.0416 (0.0424)
record: (train_acc, test_acc) (0.6151000003814697, 0.7380000352859497)
last accs (train_acc, test_acc) (0.49590001088380814, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.34it/s] 15%|#5        | 4/26 [00:00<00:01, 19.82it/s] 31%|###       | 8/26 [00:00<00:00, 27.59it/s] 46%|####6     | 12/26 [00:00<00:00, 29.19it/s] 58%|#####7    | 15/26 [00:00<00:00, 29.03it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.24it/s] 88%|########8 | 23/26 [00:00<00:00, 31.43it/s]100%|##########| 26/26 [00:00<00:00, 27.06it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 832 200
penalty weights 10000.0
args.step pgd_anneal_iters 832 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 833 200
penalty weights 10000.0
args.step pgd_anneal_iters 833 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 834 200
penalty weights 10000.0
args.step pgd_anneal_iters 834 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 835 200
penalty weights 10000.0
args.step pgd_anneal_iters 835 600
dim_v 512
rho, theta 247 tensor(-4.8818e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 836 200
penalty weights 10000.0
args.step pgd_anneal_iters 836 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 837 200
penalty weights 10000.0
args.step pgd_anneal_iters 837 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 838 200
penalty weights 10000.0
args.step pgd_anneal_iters 838 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 839 200
penalty weights 10000.0
args.step pgd_anneal_iters 839 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 840 200
penalty weights 10000.0
args.step pgd_anneal_iters 840 600
dim_v 512
rho, theta 242 tensor(-5.1726e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 841 200
penalty weights 10000.0
args.step pgd_anneal_iters 841 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 842 200
penalty weights 10000.0
args.step pgd_anneal_iters 842 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 843 200
penalty weights 10000.0
args.step pgd_anneal_iters 843 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 844 200
penalty weights 10000.0
args.step pgd_anneal_iters 844 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 845 200
penalty weights 10000.0
args.step pgd_anneal_iters 845 600
dim_v 512
rho, theta 258 tensor(-3.1722e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 846 200
penalty weights 10000.0
args.step pgd_anneal_iters 846 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 847 200
penalty weights 10000.0
args.step pgd_anneal_iters 847 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 848 200
penalty weights 10000.0
args.step pgd_anneal_iters 848 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 849 200
penalty weights 10000.0
args.step pgd_anneal_iters 849 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 850 200
penalty weights 10000.0
args.step pgd_anneal_iters 850 600
dim_v 512
rho, theta 253 tensor(-3.2759e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 851 200
penalty weights 10000.0
args.step pgd_anneal_iters 851 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 852 200
penalty weights 10000.0
args.step pgd_anneal_iters 852 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 853 200
penalty weights 10000.0
args.step pgd_anneal_iters 853 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 854 200
penalty weights 10000.0
args.step pgd_anneal_iters 854 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 855 200
penalty weights 10000.0
args.step pgd_anneal_iters 855 600
dim_v 512
rho, theta 260 tensor(-3.0035e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 856 200
penalty weights 10000.0
args.step pgd_anneal_iters 856 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 857 200
penalty weights 10000.0
args.step pgd_anneal_iters 857 600
final projection at end of training
dim_v 512
rho, theta 261 tensor(-2.1094e-06, device='cuda:0')
Epoch: [32][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  36.70 ( 36.69)	train_acc   0.43 (  0.49)	train_minacc   0.51 (  0.52)	train_majacc   0.42 (  0.49)	train_corr   0.00 (  0.00)	l1 5.8599 (5.8609)	zero_count 0.0000 (60.0990)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.00it/s] 23%|##3       | 6/26 [00:00<00:00, 27.88it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.88it/s] 42%|####2     | 11/26 [00:00<00:00, 35.25it/s] 62%|######1   | 16/26 [00:00<00:00, 40.12it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.12it/s] 81%|########  | 21/26 [00:00<00:00, 38.75it/s]100%|##########| 26/26 [00:00<00:00, 41.61it/s]100%|##########| 26/26 [00:00<00:00, 34.30it/s]
Test: [   0/  26]	Loss 0.666 (0.666)	test_acc   0.52 (  0.52)	test_minacc   0.60 (  0.60)	test_majacc   0.50 (  0.50)	Loss_d 0.666 (0.666)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.18 (  0.18)
Test: [  10/  26]	Loss 0.670 (0.670)	test_acc   0.55 (  0.49)	test_minacc   0.62 (  0.53)	test_majacc   0.54 (  0.49)	Loss_d 0.670 (0.670)	test_acc_d   0.55 (  0.49)	test_minacc_d   0.62 (  0.53)	test_majacc_d   0.54 (  0.49)	test_corr_d   0.16 (  0.18)
Test: [  20/  26]	Loss 0.674 (0.670)	test_acc   0.50 (  0.49)	test_minacc   0.44 (  0.52)	test_majacc   0.51 (  0.48)	Loss_d 0.674 (0.670)	test_acc_d   0.50 (  0.49)	test_minacc_d   0.44 (  0.52)	test_majacc_d   0.51 (  0.48)	test_corr_d   0.17 (  0.19)
Test: [  26/  26]	Loss 0.676 (0.671)	test_acc   0.43 (  0.49)	test_minacc   0.51 (  0.52)	test_majacc   0.42 (  0.49)	Loss_d 0.676 (0.671)	test_acc_d   0.43 (  0.49)	test_minacc_d   0.51 (  0.52)	test_majacc_d   0.42 (  0.49)	test_corr_d   0.22 (  0.19)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.84it/s]
Test: [  0/  1]	Loss 0.762 (0.762)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.762 (0.762)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.02 (  0.02)
Test: [  1/  1]	Loss 0.762 (0.762)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.762 (0.762)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.02 (  0.02)
Overall Timing[ 32/  1]	epoch_time 0.0411 (0.0431)	validation_time 0.0004 (0.0006)	train_time 0.0407 (0.0423)
record: (train_acc, test_acc) (0.6151000003814697, 0.7380000352859497)
last accs (train_acc, test_acc) (0.4927000122368336, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.55it/s] 15%|#5        | 4/26 [00:00<00:01, 11.91it/s] 31%|###       | 8/26 [00:00<00:00, 19.53it/s] 46%|####6     | 12/26 [00:00<00:00, 24.25it/s] 58%|#####7    | 15/26 [00:00<00:00, 24.90it/s] 69%|######9   | 18/26 [00:00<00:00, 25.42it/s] 85%|########4 | 22/26 [00:00<00:00, 28.12it/s] 96%|#########6| 25/26 [00:01<00:00, 28.41it/s]100%|##########| 26/26 [00:01<00:00, 22.24it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 858 200
penalty weights 10000.0
args.step pgd_anneal_iters 858 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 859 200
penalty weights 10000.0
args.step pgd_anneal_iters 859 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 860 200
penalty weights 10000.0
args.step pgd_anneal_iters 860 600
dim_v 512
rho, theta 254 tensor(-3.3771e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 861 200
penalty weights 10000.0
args.step pgd_anneal_iters 861 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 862 200
penalty weights 10000.0
args.step pgd_anneal_iters 862 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 863 200
penalty weights 10000.0
args.step pgd_anneal_iters 863 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 864 200
penalty weights 10000.0
args.step pgd_anneal_iters 864 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 865 200
penalty weights 10000.0
args.step pgd_anneal_iters 865 600
dim_v 512
rho, theta 241 tensor(-4.7408e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 866 200
penalty weights 10000.0
args.step pgd_anneal_iters 866 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 867 200
penalty weights 10000.0
args.step pgd_anneal_iters 867 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 868 200
penalty weights 10000.0
args.step pgd_anneal_iters 868 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 869 200
penalty weights 10000.0
args.step pgd_anneal_iters 869 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 870 200
penalty weights 10000.0
args.step pgd_anneal_iters 870 600
dim_v 512
rho, theta 254 tensor(-2.9957e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 871 200
penalty weights 10000.0
args.step pgd_anneal_iters 871 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 872 200
penalty weights 10000.0
args.step pgd_anneal_iters 872 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 873 200
penalty weights 10000.0
args.step pgd_anneal_iters 873 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 874 200
penalty weights 10000.0
args.step pgd_anneal_iters 874 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 875 200
penalty weights 10000.0
args.step pgd_anneal_iters 875 600
dim_v 512
rho, theta 254 tensor(-2.8666e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 876 200
penalty weights 10000.0
args.step pgd_anneal_iters 876 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 877 200
penalty weights 10000.0
args.step pgd_anneal_iters 877 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 878 200
penalty weights 10000.0
args.step pgd_anneal_iters 878 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 879 200
penalty weights 10000.0
args.step pgd_anneal_iters 879 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 880 200
penalty weights 10000.0
args.step pgd_anneal_iters 880 600
dim_v 512
rho, theta 263 tensor(-2.3463e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 881 200
penalty weights 10000.0
args.step pgd_anneal_iters 881 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 882 200
penalty weights 10000.0
args.step pgd_anneal_iters 882 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 883 200
penalty weights 10000.0
args.step pgd_anneal_iters 883 600
final projection at end of training
dim_v 512
rho, theta 262 tensor(-2.7976e-06, device='cuda:0')
Epoch: [33][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  36.70 ( 36.70)	train_acc   0.43 (  0.49)	train_minacc   0.51 (  0.53)	train_majacc   0.42 (  0.48)	train_corr   0.00 (  0.00)	l1 5.8606 (5.8606)	zero_count 0.0000 (60.0210)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.62it/s] 27%|##6       | 7/26 [00:00<00:00, 34.83it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.83it/s] 46%|####6     | 12/26 [00:00<00:00, 38.13it/s] 65%|######5   | 17/26 [00:00<00:00, 38.60it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.60it/s] 85%|########4 | 22/26 [00:00<00:00, 41.63it/s]100%|##########| 26/26 [00:00<00:00, 35.76it/s]
Test: [   0/  26]	Loss 0.667 (0.667)	test_acc   0.51 (  0.51)	test_minacc   0.60 (  0.60)	test_majacc   0.49 (  0.49)	Loss_d 0.667 (0.667)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.18 (  0.18)
Test: [  10/  26]	Loss 0.670 (0.671)	test_acc   0.54 (  0.49)	test_minacc   0.62 (  0.54)	test_majacc   0.52 (  0.48)	Loss_d 0.670 (0.671)	test_acc_d   0.54 (  0.49)	test_minacc_d   0.62 (  0.54)	test_majacc_d   0.52 (  0.48)	test_corr_d   0.16 (  0.18)
Test: [  20/  26]	Loss 0.675 (0.671)	test_acc   0.49 (  0.49)	test_minacc   0.50 (  0.53)	test_majacc   0.49 (  0.48)	Loss_d 0.675 (0.671)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.50 (  0.53)	test_majacc_d   0.49 (  0.48)	test_corr_d   0.16 (  0.18)
Test: [  26/  26]	Loss 0.676 (0.671)	test_acc   0.43 (  0.49)	test_minacc   0.51 (  0.53)	test_majacc   0.42 (  0.48)	Loss_d 0.676 (0.671)	test_acc_d   0.43 (  0.49)	test_minacc_d   0.51 (  0.53)	test_majacc_d   0.42 (  0.48)	test_corr_d   0.22 (  0.18)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.30it/s]
Test: [  0/  1]	Loss 0.761 (0.761)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.761 (0.761)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.03 (  0.03)
Test: [  1/  1]	Loss 0.761 (0.761)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.761 (0.761)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.03 (  0.03)
Overall Timing[ 33/  1]	epoch_time 0.0467 (0.0432)	validation_time 0.0005 (0.0006)	train_time 0.0462 (0.0424)
record: (train_acc, test_acc) (0.6151000003814697, 0.7380000352859497)
last accs (train_acc, test_acc) (0.4889000066518784, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.81it/s] 15%|#5        | 4/26 [00:00<00:01, 16.88it/s] 27%|##6       | 7/26 [00:00<00:00, 21.46it/s] 42%|####2     | 11/26 [00:00<00:00, 26.69it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.12it/s] 69%|######9   | 18/26 [00:00<00:00, 28.24it/s] 85%|########4 | 22/26 [00:00<00:00, 28.71it/s]100%|##########| 26/26 [00:00<00:00, 30.50it/s]100%|##########| 26/26 [00:01<00:00, 25.18it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 884 200
penalty weights 10000.0
args.step pgd_anneal_iters 884 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 885 200
penalty weights 10000.0
args.step pgd_anneal_iters 885 600
dim_v 512
rho, theta 259 tensor(-1.9935e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 886 200
penalty weights 10000.0
args.step pgd_anneal_iters 886 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 887 200
penalty weights 10000.0
args.step pgd_anneal_iters 887 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 888 200
penalty weights 10000.0
args.step pgd_anneal_iters 888 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 889 200
penalty weights 10000.0
args.step pgd_anneal_iters 889 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 890 200
penalty weights 10000.0
args.step pgd_anneal_iters 890 600
dim_v 512
rho, theta 245 tensor(-4.4873e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 891 200
penalty weights 10000.0
args.step pgd_anneal_iters 891 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 892 200
penalty weights 10000.0
args.step pgd_anneal_iters 892 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 893 200
penalty weights 10000.0
args.step pgd_anneal_iters 893 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 894 200
penalty weights 10000.0
args.step pgd_anneal_iters 894 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 895 200
penalty weights 10000.0
args.step pgd_anneal_iters 895 600
dim_v 512
rho, theta 245 tensor(-2.9831e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 896 200
penalty weights 10000.0
args.step pgd_anneal_iters 896 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 897 200
penalty weights 10000.0
args.step pgd_anneal_iters 897 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 898 200
penalty weights 10000.0
args.step pgd_anneal_iters 898 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 899 200
penalty weights 10000.0
args.step pgd_anneal_iters 899 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 900 200
penalty weights 10000.0
args.step pgd_anneal_iters 900 600
dim_v 512
rho, theta 260 tensor(-2.3933e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 901 200
penalty weights 10000.0
args.step pgd_anneal_iters 901 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 902 200
penalty weights 10000.0
args.step pgd_anneal_iters 902 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 903 200
penalty weights 10000.0
args.step pgd_anneal_iters 903 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 904 200
penalty weights 10000.0
args.step pgd_anneal_iters 904 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 905 200
penalty weights 10000.0
args.step pgd_anneal_iters 905 600
dim_v 512
rho, theta 262 tensor(-2.0288e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 906 200
penalty weights 10000.0
args.step pgd_anneal_iters 906 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 907 200
penalty weights 10000.0
args.step pgd_anneal_iters 907 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 908 200
penalty weights 10000.0
args.step pgd_anneal_iters 908 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 909 200
penalty weights 10000.0
args.step pgd_anneal_iters 909 600
final projection at end of training
dim_v 512
rho, theta 259 tensor(-3.2168e-06, device='cuda:0')
Epoch: [34][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  36.70 ( 36.70)	train_acc   0.43 (  0.49)	train_minacc   0.51 (  0.54)	train_majacc   0.42 (  0.48)	train_corr   0.00 (  0.00)	l1 5.8614 (5.8606)	zero_count 0.0000 (59.7870)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.28it/s] 23%|##3       | 6/26 [00:00<00:01, 18.01it/s]                                               23%|##3       | 6/26 [00:00<00:01, 18.01it/s] 42%|####2     | 11/26 [00:00<00:00, 27.66it/s] 65%|######5   | 17/26 [00:00<00:00, 35.33it/s]                                                65%|######5   | 17/26 [00:00<00:00, 35.33it/s] 85%|########4 | 22/26 [00:00<00:00, 37.07it/s]100%|##########| 26/26 [00:00<00:00, 29.62it/s]
Test: [   0/  26]	Loss 0.668 (0.668)	test_acc   0.50 (  0.50)	test_minacc   0.60 (  0.60)	test_majacc   0.48 (  0.48)	Loss_d 0.668 (0.668)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.17 (  0.17)
Test: [  10/  26]	Loss 0.671 (0.671)	test_acc   0.52 (  0.48)	test_minacc   0.62 (  0.56)	test_majacc   0.51 (  0.47)	Loss_d 0.671 (0.671)	test_acc_d   0.52 (  0.48)	test_minacc_d   0.62 (  0.56)	test_majacc_d   0.51 (  0.47)	test_corr_d   0.15 (  0.18)
Test: [  20/  26]	Loss 0.675 (0.671)	test_acc   0.47 (  0.48)	test_minacc   0.50 (  0.54)	test_majacc   0.47 (  0.47)	Loss_d 0.675 (0.671)	test_acc_d   0.47 (  0.48)	test_minacc_d   0.50 (  0.54)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.16 (  0.18)
Test: [  26/  26]	Loss 0.676 (0.672)	test_acc   0.43 (  0.48)	test_minacc   0.51 (  0.54)	test_majacc   0.42 (  0.48)	Loss_d 0.676 (0.672)	test_acc_d   0.43 (  0.48)	test_minacc_d   0.51 (  0.54)	test_majacc_d   0.42 (  0.48)	test_corr_d   0.22 (  0.18)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.19it/s]
Test: [  0/  1]	Loss 0.761 (0.761)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.761 (0.761)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.03 (  0.03)
Test: [  1/  1]	Loss 0.761 (0.761)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.761 (0.761)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.03 (  0.03)
Overall Timing[ 34/  1]	epoch_time 0.0396 (0.0431)	validation_time 0.0003 (0.0006)	train_time 0.0392 (0.0424)
record: (train_acc, test_acc) (0.6151000003814697, 0.7380000352859497)
last accs (train_acc, test_acc) (0.48400000810623167, 0.5020000338554382)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.49it/s] 19%|#9        | 5/26 [00:00<00:01, 14.07it/s] 31%|###       | 8/26 [00:00<00:00, 18.68it/s] 46%|####6     | 12/26 [00:00<00:00, 23.00it/s] 62%|######1   | 16/26 [00:00<00:00, 25.24it/s] 77%|#######6  | 20/26 [00:00<00:00, 27.93it/s] 88%|########8 | 23/26 [00:01<00:00, 28.31it/s]100%|##########| 26/26 [00:01<00:00, 22.54it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 910 200
penalty weights 10000.0
args.step pgd_anneal_iters 910 600
dim_v 512
rho, theta 266 tensor(-8.5366e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 911 200
penalty weights 10000.0
args.step pgd_anneal_iters 911 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 912 200
penalty weights 10000.0
args.step pgd_anneal_iters 912 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 913 200
penalty weights 10000.0
args.step pgd_anneal_iters 913 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 914 200
penalty weights 10000.0
args.step pgd_anneal_iters 914 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 915 200
penalty weights 10000.0
args.step pgd_anneal_iters 915 600
dim_v 512
rho, theta 247 tensor(-4.2185e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 916 200
penalty weights 10000.0
args.step pgd_anneal_iters 916 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 917 200
penalty weights 10000.0
args.step pgd_anneal_iters 917 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 918 200
penalty weights 10000.0
args.step pgd_anneal_iters 918 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 919 200
penalty weights 10000.0
args.step pgd_anneal_iters 919 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 920 200
penalty weights 10000.0
args.step pgd_anneal_iters 920 600
dim_v 512
rho, theta 244 tensor(-2.9914e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 921 200
penalty weights 10000.0
args.step pgd_anneal_iters 921 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 922 200
penalty weights 10000.0
args.step pgd_anneal_iters 922 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 923 200
penalty weights 10000.0
args.step pgd_anneal_iters 923 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 924 200
penalty weights 10000.0
args.step pgd_anneal_iters 924 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 925 200
penalty weights 10000.0
args.step pgd_anneal_iters 925 600
dim_v 512
rho, theta 264 tensor(-2.0495e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 926 200
penalty weights 10000.0
args.step pgd_anneal_iters 926 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 927 200
penalty weights 10000.0
args.step pgd_anneal_iters 927 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 928 200
penalty weights 10000.0
args.step pgd_anneal_iters 928 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 929 200
penalty weights 10000.0
args.step pgd_anneal_iters 929 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 930 200
penalty weights 10000.0
args.step pgd_anneal_iters 930 600
dim_v 512
rho, theta 258 tensor(-2.0804e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 931 200
penalty weights 10000.0
args.step pgd_anneal_iters 931 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 932 200
penalty weights 10000.0
args.step pgd_anneal_iters 932 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 933 200
penalty weights 10000.0
args.step pgd_anneal_iters 933 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 934 200
penalty weights 10000.0
args.step pgd_anneal_iters 934 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 935 200
penalty weights 10000.0
args.step pgd_anneal_iters 935 600
dim_v 512
rho, theta 251 tensor(-3.4135e-06, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [35][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  36.71 ( 36.71)	train_acc   0.43 (  0.48)	train_minacc   0.51 (  0.55)	train_majacc   0.42 (  0.47)	train_corr   0.00 (  0.00)	l1 5.8620 (5.8606)	zero_count 0.0000 (59.5530)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.44it/s] 27%|##6       | 7/26 [00:00<00:00, 34.42it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.42it/s] 46%|####6     | 12/26 [00:00<00:00, 39.63it/s] 65%|######5   | 17/26 [00:00<00:00, 38.14it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.14it/s] 85%|########4 | 22/26 [00:00<00:00, 40.51it/s]100%|##########| 26/26 [00:00<00:00, 35.57it/s]
Test: [   0/  26]	Loss 0.669 (0.669)	test_acc   0.51 (  0.51)	test_minacc   0.62 (  0.62)	test_majacc   0.48 (  0.48)	Loss_d 0.669 (0.669)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.17 (  0.17)
Test: [  10/  26]	Loss 0.672 (0.672)	test_acc   0.51 (  0.48)	test_minacc   0.68 (  0.57)	test_majacc   0.48 (  0.46)	Loss_d 0.672 (0.672)	test_acc_d   0.51 (  0.48)	test_minacc_d   0.68 (  0.57)	test_majacc_d   0.48 (  0.46)	test_corr_d   0.15 (  0.17)
Test: [  20/  26]	Loss 0.676 (0.672)	test_acc   0.47 (  0.48)	test_minacc   0.54 (  0.56)	test_majacc   0.46 (  0.46)	Loss_d 0.676 (0.672)	test_acc_d   0.47 (  0.48)	test_minacc_d   0.54 (  0.56)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.16 (  0.18)
Test: [  26/  26]	Loss 0.676 (0.672)	test_acc   0.43 (  0.48)	test_minacc   0.51 (  0.54)	test_majacc   0.42 (  0.47)	Loss_d 0.676 (0.672)	test_acc_d   0.43 (  0.48)	test_minacc_d   0.51 (  0.54)	test_majacc_d   0.42 (  0.47)	test_corr_d   0.22 (  0.18)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.26it/s]
Test: [  0/  1]	Loss 0.760 (0.760)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.760 (0.760)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.03 (  0.03)
Test: [  1/  1]	Loss 0.760 (0.760)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.760 (0.760)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.03 (  0.03)
Overall Timing[ 35/  1]	epoch_time 0.0422 (0.0431)	validation_time 0.0006 (0.0006)	train_time 0.0415 (0.0423)
record: (train_acc, test_acc) (0.6151000003814697, 0.7380000352859497)
last accs (train_acc, test_acc) (0.4799000060260296, 0.5100000500679016)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.46it/s] 19%|#9        | 5/26 [00:00<00:00, 21.09it/s] 35%|###4      | 9/26 [00:00<00:00, 26.22it/s] 46%|####6     | 12/26 [00:00<00:00, 27.28it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.85it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.69it/s] 85%|########4 | 22/26 [00:00<00:00, 29.10it/s] 96%|#########6| 25/26 [00:00<00:00, 28.79it/s]100%|##########| 26/26 [00:01<00:00, 25.83it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 936 200
penalty weights 10000.0
args.step pgd_anneal_iters 936 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 937 200
penalty weights 10000.0
args.step pgd_anneal_iters 937 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 938 200
penalty weights 10000.0
args.step pgd_anneal_iters 938 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 939 200
penalty weights 10000.0
args.step pgd_anneal_iters 939 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 940 200
penalty weights 10000.0
args.step pgd_anneal_iters 940 600
dim_v 512
rho, theta 249 tensor(-3.9558e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 941 200
penalty weights 10000.0
args.step pgd_anneal_iters 941 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 942 200
penalty weights 10000.0
args.step pgd_anneal_iters 942 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 943 200
penalty weights 10000.0
args.step pgd_anneal_iters 943 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 944 200
penalty weights 10000.0
args.step pgd_anneal_iters 944 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 945 200
penalty weights 10000.0
args.step pgd_anneal_iters 945 600
dim_v 512
rho, theta 244 tensor(-2.9506e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 946 200
penalty weights 10000.0
args.step pgd_anneal_iters 946 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 947 200
penalty weights 10000.0
args.step pgd_anneal_iters 947 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 948 200
penalty weights 10000.0
args.step pgd_anneal_iters 948 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 949 200
penalty weights 10000.0
args.step pgd_anneal_iters 949 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 950 200
penalty weights 10000.0
args.step pgd_anneal_iters 950 600
dim_v 512
rho, theta 267 tensor(-1.7472e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 951 200
penalty weights 10000.0
args.step pgd_anneal_iters 951 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 952 200
penalty weights 10000.0
args.step pgd_anneal_iters 952 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 953 200
penalty weights 10000.0
args.step pgd_anneal_iters 953 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 954 200
penalty weights 10000.0
args.step pgd_anneal_iters 954 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 955 200
penalty weights 10000.0
args.step pgd_anneal_iters 955 600
dim_v 512
rho, theta 254 tensor(-2.0906e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 956 200
penalty weights 10000.0
args.step pgd_anneal_iters 956 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 957 200
penalty weights 10000.0
args.step pgd_anneal_iters 957 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 958 200
penalty weights 10000.0
args.step pgd_anneal_iters 958 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 959 200
penalty weights 10000.0
args.step pgd_anneal_iters 959 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 960 200
penalty weights 10000.0
args.step pgd_anneal_iters 960 600
dim_v 512
rho, theta 255 tensor(-2.5481e-06, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 961 200
penalty weights 10000.0
args.step pgd_anneal_iters 961 600
final projection at end of training
dim_v 512
rho, theta 272 tensor(-8.8206e-07, device='cuda:0')
Epoch: [36][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  36.71 ( 36.71)	train_acc   0.43 (  0.47)	train_minacc   0.51 (  0.55)	train_majacc   0.42 (  0.46)	train_corr   0.00 (  0.00)	l1 5.8590 (5.8605)	zero_count 256.0000 (56.7100)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.05it/s] 31%|###       | 8/26 [00:00<00:00, 37.09it/s]                                               31%|###       | 8/26 [00:00<00:00, 37.09it/s] 50%|#####     | 13/26 [00:00<00:00, 40.95it/s] 69%|######9   | 18/26 [00:00<00:00, 43.12it/s]                                                69%|######9   | 18/26 [00:00<00:00, 43.12it/s] 88%|########8 | 23/26 [00:00<00:00, 40.67it/s]100%|##########| 26/26 [00:00<00:00, 38.16it/s]
Test: [   0/  26]	Loss 0.669 (0.669)	test_acc   0.49 (  0.49)	test_minacc   0.62 (  0.62)	test_majacc   0.47 (  0.47)	Loss_d 0.669 (0.669)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.17 (  0.17)
Test: [  10/  26]	Loss 0.672 (0.672)	test_acc   0.49 (  0.47)	test_minacc   0.68 (  0.57)	test_majacc   0.46 (  0.45)	Loss_d 0.672 (0.672)	test_acc_d   0.49 (  0.47)	test_minacc_d   0.68 (  0.57)	test_majacc_d   0.46 (  0.45)	test_corr_d   0.15 (  0.17)
Test: [  20/  26]	Loss 0.676 (0.672)	test_acc   0.46 (  0.47)	test_minacc   0.54 (  0.56)	test_majacc   0.45 (  0.45)	Loss_d 0.676 (0.672)	test_acc_d   0.46 (  0.47)	test_minacc_d   0.54 (  0.56)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.15 (  0.18)
Test: [  26/  26]	Loss 0.676 (0.673)	test_acc   0.43 (  0.47)	test_minacc   0.51 (  0.55)	test_majacc   0.42 (  0.46)	Loss_d 0.676 (0.673)	test_acc_d   0.43 (  0.47)	test_minacc_d   0.51 (  0.55)	test_majacc_d   0.42 (  0.46)	test_corr_d   0.22 (  0.17)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.06it/s]
Test: [  0/  1]	Loss 0.760 (0.760)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.760 (0.760)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.03 (  0.03)
Test: [  1/  1]	Loss 0.760 (0.760)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.760 (0.760)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.03 (  0.03)
Overall Timing[ 36/  1]	epoch_time 0.0438 (0.0431)	validation_time 0.0005 (0.0006)	train_time 0.0433 (0.0424)
record: (train_acc, test_acc) (0.6151000003814697, 0.7380000352859497)
last accs (train_acc, test_acc) (0.4732000075876713, 0.5110000371932983)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.12it/s] 12%|#1        | 3/26 [00:00<00:01, 12.82it/s] 23%|##3       | 6/26 [00:00<00:01, 18.81it/s] 35%|###4      | 9/26 [00:00<00:00, 21.82it/s] 50%|#####     | 13/26 [00:00<00:00, 26.06it/s] 62%|######1   | 16/26 [00:00<00:00, 26.75it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.93it/s] 88%|########8 | 23/26 [00:00<00:00, 29.33it/s]100%|##########| 26/26 [00:01<00:00, 29.26it/s]100%|##########| 26/26 [00:01<00:00, 24.01it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 962 200
penalty weights 10000.0
args.step pgd_anneal_iters 962 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 963 200
penalty weights 10000.0
args.step pgd_anneal_iters 963 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 964 200
penalty weights 10000.0
args.step pgd_anneal_iters 964 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 965 200
penalty weights 10000.0
args.step pgd_anneal_iters 965 600
dim_v 512
rho, theta 252 tensor(-2.9421e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 966 200
penalty weights 10000.0
args.step pgd_anneal_iters 966 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 967 200
penalty weights 10000.0
args.step pgd_anneal_iters 967 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 968 200
penalty weights 10000.0
args.step pgd_anneal_iters 968 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 969 200
penalty weights 10000.0
args.step pgd_anneal_iters 969 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 970 200
penalty weights 10000.0
args.step pgd_anneal_iters 970 600
dim_v 512
rho, theta 249 tensor(-3.0041e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 971 200
penalty weights 10000.0
args.step pgd_anneal_iters 971 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 972 200
penalty weights 10000.0
args.step pgd_anneal_iters 972 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 973 200
penalty weights 10000.0
args.step pgd_anneal_iters 973 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 974 200
penalty weights 10000.0
args.step pgd_anneal_iters 974 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 975 200
penalty weights 10000.0
args.step pgd_anneal_iters 975 600
dim_v 512
rho, theta 264 tensor(-1.8210e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 976 200
penalty weights 10000.0
args.step pgd_anneal_iters 976 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 977 200
penalty weights 10000.0
args.step pgd_anneal_iters 977 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 978 200
penalty weights 10000.0
args.step pgd_anneal_iters 978 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 979 200
penalty weights 10000.0
args.step pgd_anneal_iters 979 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 980 200
penalty weights 10000.0
args.step pgd_anneal_iters 980 600
dim_v 512
rho, theta 256 tensor(-1.8758e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 981 200
penalty weights 10000.0
args.step pgd_anneal_iters 981 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 982 200
penalty weights 10000.0
args.step pgd_anneal_iters 982 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 983 200
penalty weights 10000.0
args.step pgd_anneal_iters 983 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 984 200
penalty weights 10000.0
args.step pgd_anneal_iters 984 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 985 200
penalty weights 10000.0
args.step pgd_anneal_iters 985 600
dim_v 512
rho, theta 263 tensor(-1.9182e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 986 200
penalty weights 10000.0
args.step pgd_anneal_iters 986 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 987 200
penalty weights 10000.0
args.step pgd_anneal_iters 987 600
final projection at end of training
dim_v 512
rho, theta 266 tensor(-1.4002e-06, device='cuda:0')
Epoch: [37][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  36.71 ( 36.71)	train_acc   0.43 (  0.47)	train_minacc   0.51 (  0.56)	train_majacc   0.42 (  0.45)	train_corr   0.00 (  0.00)	l1 5.8596 (5.8603)	zero_count 0.0000 (58.8900)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 24.79it/s] 35%|###4      | 9/26 [00:00<00:00, 36.82it/s]                                               35%|###4      | 9/26 [00:00<00:00, 36.82it/s] 58%|#####7    | 15/26 [00:00<00:00, 43.79it/s] 77%|#######6  | 20/26 [00:00<00:00, 41.98it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 41.98it/s] 96%|#########6| 25/26 [00:00<00:00, 43.41it/s]100%|##########| 26/26 [00:00<00:00, 38.61it/s]
Test: [   0/  26]	Loss 0.670 (0.670)	test_acc   0.48 (  0.48)	test_minacc   0.62 (  0.62)	test_majacc   0.46 (  0.46)	Loss_d 0.670 (0.670)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.17 (  0.17)
Test: [  10/  26]	Loss 0.673 (0.672)	test_acc   0.48 (  0.46)	test_minacc   0.70 (  0.58)	test_majacc   0.45 (  0.44)	Loss_d 0.673 (0.672)	test_acc_d   0.48 (  0.46)	test_minacc_d   0.70 (  0.58)	test_majacc_d   0.45 (  0.44)	test_corr_d   0.15 (  0.17)
Test: [  20/  26]	Loss 0.676 (0.672)	test_acc   0.44 (  0.46)	test_minacc   0.54 (  0.57)	test_majacc   0.43 (  0.44)	Loss_d 0.676 (0.672)	test_acc_d   0.44 (  0.46)	test_minacc_d   0.54 (  0.57)	test_majacc_d   0.43 (  0.44)	test_corr_d   0.15 (  0.17)
Test: [  26/  26]	Loss 0.676 (0.673)	test_acc   0.43 (  0.47)	test_minacc   0.51 (  0.56)	test_majacc   0.42 (  0.45)	Loss_d 0.676 (0.673)	test_acc_d   0.43 (  0.47)	test_minacc_d   0.51 (  0.56)	test_majacc_d   0.42 (  0.45)	test_corr_d   0.22 (  0.17)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.88it/s]
Test: [  0/  1]	Loss 0.760 (0.760)	test_acc   0.51 (  0.51)	test_minacc   0.52 (  0.52)	test_majacc   0.49 (  0.49)	Loss_d 0.760 (0.760)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.03 (  0.03)
Test: [  1/  1]	Loss 0.760 (0.760)	test_acc   0.51 (  0.51)	test_minacc   0.52 (  0.52)	test_majacc   0.49 (  0.49)	Loss_d 0.760 (0.760)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.03 (  0.03)
Overall Timing[ 37/  1]	epoch_time 0.0436 (0.0431)	validation_time 0.0004 (0.0006)	train_time 0.0432 (0.0424)
record: (train_acc, test_acc) (0.6151000003814697, 0.7380000352859497)
last accs (train_acc, test_acc) (0.4674000079333782, 0.5130000114440918)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.29it/s] 15%|#5        | 4/26 [00:00<00:01, 18.75it/s] 31%|###       | 8/26 [00:00<00:00, 24.33it/s] 46%|####6     | 12/26 [00:00<00:00, 28.47it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.34it/s] 69%|######9   | 18/26 [00:00<00:00, 28.85it/s] 85%|########4 | 22/26 [00:00<00:00, 30.94it/s]100%|##########| 26/26 [00:00<00:00, 30.80it/s]100%|##########| 26/26 [00:00<00:00, 26.15it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 988 200
penalty weights 10000.0
args.step pgd_anneal_iters 988 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 989 200
penalty weights 10000.0
args.step pgd_anneal_iters 989 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 990 200
penalty weights 10000.0
args.step pgd_anneal_iters 990 600
dim_v 512
rho, theta 259 tensor(-2.1568e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 991 200
penalty weights 10000.0
args.step pgd_anneal_iters 991 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 992 200
penalty weights 10000.0
args.step pgd_anneal_iters 992 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 993 200
penalty weights 10000.0
args.step pgd_anneal_iters 993 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 994 200
penalty weights 10000.0
args.step pgd_anneal_iters 994 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 995 200
penalty weights 10000.0
args.step pgd_anneal_iters 995 600
dim_v 512
rho, theta 250 tensor(-2.9104e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 996 200
penalty weights 10000.0
args.step pgd_anneal_iters 996 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 997 200
penalty weights 10000.0
args.step pgd_anneal_iters 997 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 998 200
penalty weights 10000.0
args.step pgd_anneal_iters 998 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 999 200
penalty weights 10000.0
args.step pgd_anneal_iters 999 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1000 200
penalty weights 10000.0
args.step pgd_anneal_iters 1000 600
dim_v 512
rho, theta 256 tensor(-1.8480e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1001 200
penalty weights 10000.0
args.step pgd_anneal_iters 1001 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1002 200
penalty weights 10000.0
args.step pgd_anneal_iters 1002 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1003 200
penalty weights 10000.0
args.step pgd_anneal_iters 1003 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1004 200
penalty weights 10000.0
args.step pgd_anneal_iters 1004 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1005 200
penalty weights 10000.0
args.step pgd_anneal_iters 1005 600
dim_v 512
rho, theta 261 tensor(-1.7017e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1006 200
penalty weights 10000.0
args.step pgd_anneal_iters 1006 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1007 200
penalty weights 10000.0
args.step pgd_anneal_iters 1007 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1008 200
penalty weights 10000.0
args.step pgd_anneal_iters 1008 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1009 200
penalty weights 10000.0
args.step pgd_anneal_iters 1009 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1010 200
penalty weights 10000.0
args.step pgd_anneal_iters 1010 600
dim_v 512
rho, theta 264 tensor(-1.4971e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1011 200
penalty weights 10000.0
args.step pgd_anneal_iters 1011 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1012 200
penalty weights 10000.0
args.step pgd_anneal_iters 1012 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1013 200
penalty weights 10000.0
args.step pgd_anneal_iters 1013 600
final projection at end of training
dim_v 512
rho, theta 264 tensor(-1.8822e-06, device='cuda:0')
Epoch: [38][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  36.72 ( 36.72)	train_acc   0.43 (  0.46)	train_minacc   0.51 (  0.57)	train_majacc   0.42 (  0.44)	train_corr   0.00 (  0.00)	l1 5.8602 (5.8602)	zero_count 0.0000 (58.8900)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 21.34it/s] 27%|##6       | 7/26 [00:00<00:00, 30.01it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.01it/s] 50%|#####     | 13/26 [00:00<00:00, 40.38it/s] 69%|######9   | 18/26 [00:00<00:00, 42.71it/s]                                                69%|######9   | 18/26 [00:00<00:00, 42.71it/s] 88%|########8 | 23/26 [00:00<00:00, 40.51it/s]100%|##########| 26/26 [00:00<00:00, 36.79it/s]
Test: [   0/  26]	Loss 0.670 (0.670)	test_acc   0.48 (  0.48)	test_minacc   0.62 (  0.62)	test_majacc   0.45 (  0.45)	Loss_d 0.670 (0.670)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.17 (  0.17)
Test: [  10/  26]	Loss 0.673 (0.673)	test_acc   0.47 (  0.45)	test_minacc   0.71 (  0.58)	test_majacc   0.43 (  0.43)	Loss_d 0.673 (0.673)	test_acc_d   0.47 (  0.45)	test_minacc_d   0.71 (  0.58)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.14 (  0.16)
Test: [  20/  26]	Loss 0.677 (0.673)	test_acc   0.44 (  0.46)	test_minacc   0.57 (  0.58)	test_majacc   0.42 (  0.44)	Loss_d 0.677 (0.673)	test_acc_d   0.44 (  0.46)	test_minacc_d   0.57 (  0.58)	test_majacc_d   0.42 (  0.44)	test_corr_d   0.15 (  0.17)
Test: [  26/  26]	Loss 0.677 (0.673)	test_acc   0.43 (  0.46)	test_minacc   0.51 (  0.57)	test_majacc   0.42 (  0.44)	Loss_d 0.677 (0.673)	test_acc_d   0.43 (  0.46)	test_minacc_d   0.51 (  0.57)	test_majacc_d   0.42 (  0.44)	test_corr_d   0.22 (  0.17)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.12it/s]
Test: [  0/  1]	Loss 0.760 (0.760)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.49 (  0.49)	Loss_d 0.760 (0.760)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.04 (  0.04)
Test: [  1/  1]	Loss 0.760 (0.760)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.49 (  0.49)	Loss_d 0.760 (0.760)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.04 (  0.04)
Overall Timing[ 38/  1]	epoch_time 0.0413 (0.0431)	validation_time 0.0003 (0.0006)	train_time 0.0410 (0.0423)
record: (train_acc, test_acc) (0.6151000003814697, 0.7380000352859497)
last accs (train_acc, test_acc) (0.46170000478625295, 0.5170000195503235)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:08,  2.82it/s] 15%|#5        | 4/26 [00:00<00:02, 10.27it/s] 27%|##6       | 7/26 [00:00<00:01, 15.51it/s] 42%|####2     | 11/26 [00:00<00:00, 21.36it/s] 54%|#####3    | 14/26 [00:00<00:00, 23.29it/s] 65%|######5   | 17/26 [00:00<00:00, 24.64it/s] 81%|########  | 21/26 [00:01<00:00, 27.45it/s] 92%|#########2| 24/26 [00:01<00:00, 27.69it/s]100%|##########| 26/26 [00:01<00:00, 20.95it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1014 200
penalty weights 10000.0
args.step pgd_anneal_iters 1014 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1015 200
penalty weights 10000.0
args.step pgd_anneal_iters 1015 600
dim_v 512
rho, theta 264 tensor(-1.3207e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1016 200
penalty weights 10000.0
args.step pgd_anneal_iters 1016 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1017 200
penalty weights 10000.0
args.step pgd_anneal_iters 1017 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1018 200
penalty weights 10000.0
args.step pgd_anneal_iters 1018 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1019 200
penalty weights 10000.0
args.step pgd_anneal_iters 1019 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1020 200
penalty weights 10000.0
args.step pgd_anneal_iters 1020 600
dim_v 512
rho, theta 251 tensor(-2.8818e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1021 200
penalty weights 10000.0
args.step pgd_anneal_iters 1021 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1022 200
penalty weights 10000.0
args.step pgd_anneal_iters 1022 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1023 200
penalty weights 10000.0
args.step pgd_anneal_iters 1023 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1024 200
penalty weights 10000.0
args.step pgd_anneal_iters 1024 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1025 200
penalty weights 10000.0
args.step pgd_anneal_iters 1025 600
dim_v 512
rho, theta 249 tensor(-1.9264e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1026 200
penalty weights 10000.0
args.step pgd_anneal_iters 1026 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1027 200
penalty weights 10000.0
args.step pgd_anneal_iters 1027 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1028 200
penalty weights 10000.0
args.step pgd_anneal_iters 1028 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1029 200
penalty weights 10000.0
args.step pgd_anneal_iters 1029 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1030 200
penalty weights 10000.0
args.step pgd_anneal_iters 1030 600
dim_v 512
rho, theta 266 tensor(-1.4377e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1031 200
penalty weights 10000.0
args.step pgd_anneal_iters 1031 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1032 200
penalty weights 10000.0
args.step pgd_anneal_iters 1032 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1033 200
penalty weights 10000.0
args.step pgd_anneal_iters 1033 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1034 200
penalty weights 10000.0
args.step pgd_anneal_iters 1034 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1035 200
penalty weights 10000.0
args.step pgd_anneal_iters 1035 600
dim_v 512
rho, theta 266 tensor(-1.2251e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1036 200
penalty weights 10000.0
args.step pgd_anneal_iters 1036 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1037 200
penalty weights 10000.0
args.step pgd_anneal_iters 1037 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1038 200
penalty weights 10000.0
args.step pgd_anneal_iters 1038 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1039 200
penalty weights 10000.0
args.step pgd_anneal_iters 1039 600
final projection at end of training
dim_v 512
rho, theta 262 tensor(-2.2446e-06, device='cuda:0')
Epoch: [39][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  36.72 ( 36.72)	train_acc   0.42 (  0.46)	train_minacc   0.51 (  0.58)	train_majacc   0.41 (  0.44)	train_corr   0.00 (  0.00)	l1 5.8608 (5.8602)	zero_count 0.0000 (58.7340)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.72it/s] 19%|#9        | 5/26 [00:00<00:00, 23.58it/s] 35%|###4      | 9/26 [00:00<00:00, 30.21it/s]                                               35%|###4      | 9/26 [00:00<00:00, 30.21it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.43it/s] 73%|#######3  | 19/26 [00:00<00:00, 36.70it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 36.70it/s] 92%|#########2| 24/26 [00:00<00:00, 39.29it/s]100%|##########| 26/26 [00:00<00:00, 32.63it/s]
Test: [   0/  26]	Loss 0.671 (0.671)	test_acc   0.47 (  0.47)	test_minacc   0.62 (  0.62)	test_majacc   0.44 (  0.44)	Loss_d 0.671 (0.671)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.16 (  0.16)
Test: [  10/  26]	Loss 0.674 (0.673)	test_acc   0.47 (  0.45)	test_minacc   0.75 (  0.60)	test_majacc   0.43 (  0.42)	Loss_d 0.674 (0.673)	test_acc_d   0.47 (  0.45)	test_minacc_d   0.75 (  0.60)	test_majacc_d   0.43 (  0.42)	test_corr_d   0.14 (  0.16)
Test: [  20/  26]	Loss 0.677 (0.673)	test_acc   0.44 (  0.45)	test_minacc   0.57 (  0.59)	test_majacc   0.41 (  0.43)	Loss_d 0.677 (0.673)	test_acc_d   0.44 (  0.45)	test_minacc_d   0.57 (  0.59)	test_majacc_d   0.41 (  0.43)	test_corr_d   0.15 (  0.17)
Test: [  26/  26]	Loss 0.677 (0.674)	test_acc   0.42 (  0.46)	test_minacc   0.51 (  0.58)	test_majacc   0.41 (  0.44)	Loss_d 0.677 (0.674)	test_acc_d   0.42 (  0.46)	test_minacc_d   0.51 (  0.58)	test_majacc_d   0.41 (  0.44)	test_corr_d   0.21 (  0.17)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.86it/s]
Test: [  0/  1]	Loss 0.759 (0.759)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.49 (  0.49)	Loss_d 0.759 (0.759)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.04 (  0.04)
Test: [  1/  1]	Loss 0.759 (0.759)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.49 (  0.49)	Loss_d 0.759 (0.759)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.04 (  0.04)
Overall Timing[ 39/  1]	epoch_time 0.0452 (0.0431)	validation_time 0.0006 (0.0006)	train_time 0.0446 (0.0424)
record: (train_acc, test_acc) (0.6151000003814697, 0.7380000352859497)
last accs (train_acc, test_acc) (0.45750000536441804, 0.5190000534057617)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.70it/s] 19%|#9        | 5/26 [00:00<00:01, 17.59it/s] 31%|###       | 8/26 [00:00<00:00, 21.74it/s] 42%|####2     | 11/26 [00:00<00:00, 24.19it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.41it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.16it/s] 88%|########8 | 23/26 [00:00<00:00, 29.47it/s]100%|##########| 26/26 [00:01<00:00, 24.40it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1040 200
penalty weights 10000.0
args.step pgd_anneal_iters 1040 600
dim_v 512
rho, theta 269 tensor(-5.8987e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1041 200
penalty weights 10000.0
args.step pgd_anneal_iters 1041 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1042 200
penalty weights 10000.0
args.step pgd_anneal_iters 1042 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1043 200
penalty weights 10000.0
args.step pgd_anneal_iters 1043 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1044 200
penalty weights 10000.0
args.step pgd_anneal_iters 1044 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1045 200
penalty weights 10000.0
args.step pgd_anneal_iters 1045 600
dim_v 512
rho, theta 252 tensor(-2.8196e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1046 200
penalty weights 10000.0
args.step pgd_anneal_iters 1046 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1047 200
penalty weights 10000.0
args.step pgd_anneal_iters 1047 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1048 200
penalty weights 10000.0
args.step pgd_anneal_iters 1048 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1049 200
penalty weights 10000.0
args.step pgd_anneal_iters 1049 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1050 200
penalty weights 10000.0
args.step pgd_anneal_iters 1050 600
dim_v 512
rho, theta 248 tensor(-2.0242e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1051 200
penalty weights 10000.0
args.step pgd_anneal_iters 1051 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1052 200
penalty weights 10000.0
args.step pgd_anneal_iters 1052 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1053 200
penalty weights 10000.0
args.step pgd_anneal_iters 1053 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1054 200
penalty weights 10000.0
args.step pgd_anneal_iters 1054 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1055 200
penalty weights 10000.0
args.step pgd_anneal_iters 1055 600
dim_v 512
rho, theta 266 tensor(-1.2680e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1056 200
penalty weights 10000.0
args.step pgd_anneal_iters 1056 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1057 200
penalty weights 10000.0
args.step pgd_anneal_iters 1057 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1058 200
penalty weights 10000.0
args.step pgd_anneal_iters 1058 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1059 200
penalty weights 10000.0
args.step pgd_anneal_iters 1059 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1060 200
penalty weights 10000.0
args.step pgd_anneal_iters 1060 600
dim_v 512
rho, theta 267 tensor(-1.2526e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1061 200
penalty weights 10000.0
args.step pgd_anneal_iters 1061 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1062 200
penalty weights 10000.0
args.step pgd_anneal_iters 1062 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1063 200
penalty weights 10000.0
args.step pgd_anneal_iters 1063 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1064 200
penalty weights 10000.0
args.step pgd_anneal_iters 1064 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1065 200
penalty weights 10000.0
args.step pgd_anneal_iters 1065 600
dim_v 512
rho, theta 257 tensor(-2.4433e-06, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [40][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  36.72 ( 36.72)	train_acc   0.42 (  0.45)	train_minacc   0.51 (  0.59)	train_majacc   0.41 (  0.43)	train_corr   0.00 (  0.00)	l1 5.8614 (5.8602)	zero_count 0.0000 (58.5780)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:08,  3.09it/s] 19%|#9        | 5/26 [00:00<00:01, 14.36it/s] 38%|###8      | 10/26 [00:00<00:00, 24.65it/s]                                                38%|###8      | 10/26 [00:00<00:00, 24.65it/s] 58%|#####7    | 15/26 [00:00<00:00, 31.01it/s]                                                58%|#####7    | 15/26 [00:00<00:00, 31.01it/s] 81%|########  | 21/26 [00:00<00:00, 36.24it/s]100%|##########| 26/26 [00:00<00:00, 28.43it/s]
Test: [   0/  26]	Loss 0.671 (0.671)	test_acc   0.46 (  0.46)	test_minacc   0.66 (  0.66)	test_majacc   0.43 (  0.43)	Loss_d 0.671 (0.671)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.16 (  0.16)
Test: [  10/  26]	Loss 0.674 (0.673)	test_acc   0.46 (  0.44)	test_minacc   0.77 (  0.61)	test_majacc   0.41 (  0.41)	Loss_d 0.674 (0.673)	test_acc_d   0.46 (  0.44)	test_minacc_d   0.77 (  0.61)	test_majacc_d   0.41 (  0.41)	test_corr_d   0.14 (  0.16)
Test: [  20/  26]	Loss 0.677 (0.673)	test_acc   0.43 (  0.45)	test_minacc   0.57 (  0.60)	test_majacc   0.41 (  0.42)	Loss_d 0.677 (0.673)	test_acc_d   0.43 (  0.45)	test_minacc_d   0.57 (  0.60)	test_majacc_d   0.41 (  0.42)	test_corr_d   0.15 (  0.17)
Test: [  26/  26]	Loss 0.677 (0.674)	test_acc   0.42 (  0.45)	test_minacc   0.51 (  0.59)	test_majacc   0.41 (  0.43)	Loss_d 0.677 (0.674)	test_acc_d   0.42 (  0.45)	test_minacc_d   0.51 (  0.59)	test_majacc_d   0.41 (  0.43)	test_corr_d   0.21 (  0.17)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.58it/s]
Test: [  0/  1]	Loss 0.759 (0.759)	test_acc   0.52 (  0.52)	test_minacc   0.53 (  0.53)	test_majacc   0.48 (  0.48)	Loss_d 0.759 (0.759)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.04 (  0.04)
Test: [  1/  1]	Loss 0.759 (0.759)	test_acc   0.52 (  0.52)	test_minacc   0.53 (  0.53)	test_majacc   0.48 (  0.48)	Loss_d 0.759 (0.759)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.04 (  0.04)
Overall Timing[ 40/  1]	epoch_time 0.0427 (0.0431)	validation_time 0.0004 (0.0006)	train_time 0.0423 (0.0424)
record: (train_acc, test_acc) (0.6151000003814697, 0.7380000352859497)
last accs (train_acc, test_acc) (0.453200005620718, 0.5220000147819519)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.03it/s] 12%|#1        | 3/26 [00:00<00:01, 12.71it/s] 23%|##3       | 6/26 [00:00<00:01, 19.16it/s] 38%|###8      | 10/26 [00:00<00:00, 23.67it/s] 54%|#####3    | 14/26 [00:00<00:00, 27.08it/s] 65%|######5   | 17/26 [00:00<00:00, 27.32it/s] 77%|#######6  | 20/26 [00:00<00:00, 27.95it/s] 92%|#########2| 24/26 [00:00<00:00, 30.12it/s]100%|##########| 26/26 [00:01<00:00, 24.43it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1066 200
penalty weights 10000.0
args.step pgd_anneal_iters 1066 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1067 200
penalty weights 10000.0
args.step pgd_anneal_iters 1067 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1068 200
penalty weights 10000.0
args.step pgd_anneal_iters 1068 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1069 200
penalty weights 10000.0
args.step pgd_anneal_iters 1069 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1070 200
penalty weights 10000.0
args.step pgd_anneal_iters 1070 600
dim_v 512
rho, theta 252 tensor(-2.7272e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1071 200
penalty weights 10000.0
args.step pgd_anneal_iters 1071 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1072 200
penalty weights 10000.0
args.step pgd_anneal_iters 1072 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1073 200
penalty weights 10000.0
args.step pgd_anneal_iters 1073 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1074 200
penalty weights 10000.0
args.step pgd_anneal_iters 1074 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1075 200
penalty weights 10000.0
args.step pgd_anneal_iters 1075 600
dim_v 512
rho, theta 249 tensor(-2.0275e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1076 200
penalty weights 10000.0
args.step pgd_anneal_iters 1076 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1077 200
penalty weights 10000.0
args.step pgd_anneal_iters 1077 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1078 200
penalty weights 10000.0
args.step pgd_anneal_iters 1078 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1079 200
penalty weights 10000.0
args.step pgd_anneal_iters 1079 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1080 200
penalty weights 10000.0
args.step pgd_anneal_iters 1080 600
dim_v 512
rho, theta 268 tensor(-1.1735e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1081 200
penalty weights 10000.0
args.step pgd_anneal_iters 1081 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1082 200
penalty weights 10000.0
args.step pgd_anneal_iters 1082 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1083 200
penalty weights 10000.0
args.step pgd_anneal_iters 1083 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1084 200
penalty weights 10000.0
args.step pgd_anneal_iters 1084 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1085 200
penalty weights 10000.0
args.step pgd_anneal_iters 1085 600
dim_v 512
rho, theta 263 tensor(-1.3113e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1086 200
penalty weights 10000.0
args.step pgd_anneal_iters 1086 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1087 200
penalty weights 10000.0
args.step pgd_anneal_iters 1087 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1088 200
penalty weights 10000.0
args.step pgd_anneal_iters 1088 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1089 200
penalty weights 10000.0
args.step pgd_anneal_iters 1089 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1090 200
penalty weights 10000.0
args.step pgd_anneal_iters 1090 600
dim_v 512
rho, theta 258 tensor(-1.8337e-06, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1091 200
penalty weights 10000.0
args.step pgd_anneal_iters 1091 600
final projection at end of training
dim_v 512
rho, theta 274 tensor(-6.3809e-07, device='cuda:0')
Epoch: [41][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  36.72 ( 36.72)	train_acc   0.42 (  0.45)	train_minacc   0.51 (  0.59)	train_majacc   0.41 (  0.42)	train_corr   0.00 (  0.00)	l1 5.8590 (5.8602)	zero_count 253.0000 (55.6990)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.22it/s] 23%|##3       | 6/26 [00:00<00:00, 26.50it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.50it/s] 42%|####2     | 11/26 [00:00<00:00, 34.57it/s] 62%|######1   | 16/26 [00:00<00:00, 39.43it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.43it/s] 81%|########  | 21/26 [00:00<00:00, 39.72it/s]100%|##########| 26/26 [00:00<00:00, 34.49it/s]
Test: [   0/  26]	Loss 0.671 (0.671)	test_acc   0.47 (  0.47)	test_minacc   0.69 (  0.69)	test_majacc   0.43 (  0.43)	Loss_d 0.671 (0.671)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.16 (  0.16)
Test: [  10/  26]	Loss 0.674 (0.674)	test_acc   0.46 (  0.44)	test_minacc   0.79 (  0.62)	test_majacc   0.40 (  0.41)	Loss_d 0.674 (0.674)	test_acc_d   0.46 (  0.44)	test_minacc_d   0.79 (  0.62)	test_majacc_d   0.40 (  0.41)	test_corr_d   0.14 (  0.16)
Test: [  20/  26]	Loss 0.677 (0.674)	test_acc   0.43 (  0.44)	test_minacc   0.57 (  0.60)	test_majacc   0.41 (  0.42)	Loss_d 0.677 (0.674)	test_acc_d   0.43 (  0.44)	test_minacc_d   0.57 (  0.60)	test_majacc_d   0.41 (  0.42)	test_corr_d   0.14 (  0.17)
Test: [  26/  26]	Loss 0.677 (0.674)	test_acc   0.42 (  0.45)	test_minacc   0.51 (  0.59)	test_majacc   0.41 (  0.42)	Loss_d 0.677 (0.674)	test_acc_d   0.42 (  0.45)	test_minacc_d   0.51 (  0.59)	test_majacc_d   0.41 (  0.42)	test_corr_d   0.21 (  0.17)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.50it/s]
Test: [  0/  1]	Loss 0.759 (0.759)	test_acc   0.53 (  0.53)	test_minacc   0.53 (  0.53)	test_majacc   0.48 (  0.48)	Loss_d 0.759 (0.759)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.04 (  0.04)
Test: [  1/  1]	Loss 0.759 (0.759)	test_acc   0.53 (  0.53)	test_minacc   0.53 (  0.53)	test_majacc   0.48 (  0.48)	Loss_d 0.759 (0.759)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.04 (  0.04)
Overall Timing[ 41/  1]	epoch_time 0.0421 (0.0431)	validation_time 0.0004 (0.0006)	train_time 0.0416 (0.0424)
record: (train_acc, test_acc) (0.6151000003814697, 0.7380000352859497)
last accs (train_acc, test_acc) (0.44930000585317614, 0.5270000100135803)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.14it/s] 15%|#5        | 4/26 [00:00<00:01, 15.15it/s] 31%|###       | 8/26 [00:00<00:00, 22.87it/s] 46%|####6     | 12/26 [00:00<00:00, 25.66it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.88it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.73it/s] 88%|########8 | 23/26 [00:00<00:00, 29.93it/s]100%|##########| 26/26 [00:01<00:00, 25.20it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1092 200
penalty weights 10000.0
args.step pgd_anneal_iters 1092 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1093 200
penalty weights 10000.0
args.step pgd_anneal_iters 1093 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1094 200
penalty weights 10000.0
args.step pgd_anneal_iters 1094 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1095 200
penalty weights 10000.0
args.step pgd_anneal_iters 1095 600
dim_v 512
rho, theta 256 tensor(-2.0521e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1096 200
penalty weights 10000.0
args.step pgd_anneal_iters 1096 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1097 200
penalty weights 10000.0
args.step pgd_anneal_iters 1097 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1098 200
penalty weights 10000.0
args.step pgd_anneal_iters 1098 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1099 200
penalty weights 10000.0
args.step pgd_anneal_iters 1099 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1100 200
penalty weights 10000.0
args.step pgd_anneal_iters 1100 600
dim_v 512
rho, theta 252 tensor(-2.1109e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1101 200
penalty weights 10000.0
args.step pgd_anneal_iters 1101 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1102 200
penalty weights 10000.0
args.step pgd_anneal_iters 1102 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1103 200
penalty weights 10000.0
args.step pgd_anneal_iters 1103 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1104 200
penalty weights 10000.0
args.step pgd_anneal_iters 1104 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1105 200
penalty weights 10000.0
args.step pgd_anneal_iters 1105 600
dim_v 512
rho, theta 270 tensor(-1.3161e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1106 200
penalty weights 10000.0
args.step pgd_anneal_iters 1106 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1107 200
penalty weights 10000.0
args.step pgd_anneal_iters 1107 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1108 200
penalty weights 10000.0
args.step pgd_anneal_iters 1108 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1109 200
penalty weights 10000.0
args.step pgd_anneal_iters 1109 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1110 200
penalty weights 10000.0
args.step pgd_anneal_iters 1110 600
dim_v 512
rho, theta 264 tensor(-1.2056e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1111 200
penalty weights 10000.0
args.step pgd_anneal_iters 1111 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1112 200
penalty weights 10000.0
args.step pgd_anneal_iters 1112 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1113 200
penalty weights 10000.0
args.step pgd_anneal_iters 1113 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1114 200
penalty weights 10000.0
args.step pgd_anneal_iters 1114 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1115 200
penalty weights 10000.0
args.step pgd_anneal_iters 1115 600
dim_v 512
rho, theta 269 tensor(-1.3457e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1116 200
penalty weights 10000.0
args.step pgd_anneal_iters 1116 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1117 200
penalty weights 10000.0
args.step pgd_anneal_iters 1117 600
final projection at end of training
dim_v 512
rho, theta 268 tensor(-1.0246e-06, device='cuda:0')
Epoch: [42][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  36.73 ( 36.73)	train_acc   0.42 (  0.45)	train_minacc   0.51 (  0.60)	train_majacc   0.40 (  0.42)	train_corr   0.00 (  0.00)	l1 5.8595 (5.8600)	zero_count 0.0000 (57.7590)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.58it/s] 27%|##6       | 7/26 [00:00<00:00, 33.82it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.82it/s] 46%|####6     | 12/26 [00:00<00:00, 36.46it/s] 65%|######5   | 17/26 [00:00<00:00, 39.91it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.91it/s] 85%|########4 | 22/26 [00:00<00:00, 40.11it/s]100%|##########| 26/26 [00:00<00:00, 36.43it/s]
Test: [   0/  26]	Loss 0.672 (0.672)	test_acc   0.46 (  0.46)	test_minacc   0.69 (  0.69)	test_majacc   0.42 (  0.42)	Loss_d 0.672 (0.672)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.42 (  0.42)	test_corr_d   0.16 (  0.16)
Test: [  10/  26]	Loss 0.675 (0.674)	test_acc   0.45 (  0.44)	test_minacc   0.80 (  0.63)	test_majacc   0.40 (  0.40)	Loss_d 0.675 (0.674)	test_acc_d   0.45 (  0.44)	test_minacc_d   0.80 (  0.63)	test_majacc_d   0.40 (  0.40)	test_corr_d   0.14 (  0.16)
Test: [  20/  26]	Loss 0.677 (0.674)	test_acc   0.43 (  0.44)	test_minacc   0.57 (  0.61)	test_majacc   0.40 (  0.41)	Loss_d 0.677 (0.674)	test_acc_d   0.43 (  0.44)	test_minacc_d   0.57 (  0.61)	test_majacc_d   0.40 (  0.41)	test_corr_d   0.14 (  0.16)
Test: [  26/  26]	Loss 0.677 (0.674)	test_acc   0.42 (  0.45)	test_minacc   0.51 (  0.60)	test_majacc   0.40 (  0.42)	Loss_d 0.677 (0.674)	test_acc_d   0.42 (  0.45)	test_minacc_d   0.51 (  0.60)	test_majacc_d   0.40 (  0.42)	test_corr_d   0.21 (  0.16)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.29it/s]
Test: [  0/  1]	Loss 0.759 (0.759)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.48 (  0.48)	Loss_d 0.759 (0.759)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.04 (  0.04)
Test: [  1/  1]	Loss 0.759 (0.759)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.48 (  0.48)	Loss_d 0.759 (0.759)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.04 (  0.04)
Overall Timing[ 42/  1]	epoch_time 0.0399 (0.0430)	validation_time 0.0004 (0.0006)	train_time 0.0394 (0.0423)
record: (train_acc, test_acc) (0.6151000003814697, 0.7380000352859497)
last accs (train_acc, test_acc) (0.4450000059008598, 0.5320000052452087)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.89it/s] 15%|#5        | 4/26 [00:00<00:01, 17.69it/s] 31%|###       | 8/26 [00:00<00:00, 23.43it/s] 46%|####6     | 12/26 [00:00<00:00, 27.45it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.22it/s] 69%|######9   | 18/26 [00:00<00:00, 27.72it/s] 85%|########4 | 22/26 [00:00<00:00, 30.09it/s]100%|##########| 26/26 [00:00<00:00, 29.39it/s]100%|##########| 26/26 [00:01<00:00, 25.16it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1118 200
penalty weights 10000.0
args.step pgd_anneal_iters 1118 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1119 200
penalty weights 10000.0
args.step pgd_anneal_iters 1119 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1120 200
penalty weights 10000.0
args.step pgd_anneal_iters 1120 600
dim_v 512
rho, theta 262 tensor(-1.5212e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1121 200
penalty weights 10000.0
args.step pgd_anneal_iters 1121 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1122 200
penalty weights 10000.0
args.step pgd_anneal_iters 1122 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1123 200
penalty weights 10000.0
args.step pgd_anneal_iters 1123 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1124 200
penalty weights 10000.0
args.step pgd_anneal_iters 1124 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1125 200
penalty weights 10000.0
args.step pgd_anneal_iters 1125 600
dim_v 512
rho, theta 254 tensor(-2.0831e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1126 200
penalty weights 10000.0
args.step pgd_anneal_iters 1126 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1127 200
penalty weights 10000.0
args.step pgd_anneal_iters 1127 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1128 200
penalty weights 10000.0
args.step pgd_anneal_iters 1128 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1129 200
penalty weights 10000.0
args.step pgd_anneal_iters 1129 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1130 200
penalty weights 10000.0
args.step pgd_anneal_iters 1130 600
dim_v 512
rho, theta 259 tensor(-1.3498e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1131 200
penalty weights 10000.0
args.step pgd_anneal_iters 1131 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1132 200
penalty weights 10000.0
args.step pgd_anneal_iters 1132 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1133 200
penalty weights 10000.0
args.step pgd_anneal_iters 1133 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1134 200
penalty weights 10000.0
args.step pgd_anneal_iters 1134 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1135 200
penalty weights 10000.0
args.step pgd_anneal_iters 1135 600
dim_v 512
rho, theta 262 tensor(-1.1386e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1136 200
penalty weights 10000.0
args.step pgd_anneal_iters 1136 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1137 200
penalty weights 10000.0
args.step pgd_anneal_iters 1137 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1138 200
penalty weights 10000.0
args.step pgd_anneal_iters 1138 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1139 200
penalty weights 10000.0
args.step pgd_anneal_iters 1139 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1140 200
penalty weights 10000.0
args.step pgd_anneal_iters 1140 600
dim_v 512
rho, theta 269 tensor(-1.0473e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1141 200
penalty weights 10000.0
args.step pgd_anneal_iters 1141 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1142 200
penalty weights 10000.0
args.step pgd_anneal_iters 1142 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1143 200
penalty weights 10000.0
args.step pgd_anneal_iters 1143 600
final projection at end of training
dim_v 512
rho, theta 265 tensor(-1.3481e-06, device='cuda:0')
Epoch: [43][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  36.73 ( 36.73)	train_acc   0.42 (  0.44)	train_minacc   0.51 (  0.61)	train_majacc   0.40 (  0.41)	train_corr   0.00 (  0.00)	l1 5.8599 (5.8600)	zero_count 0.0000 (58.1880)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.54it/s] 27%|##6       | 7/26 [00:00<00:00, 34.17it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.17it/s] 46%|####6     | 12/26 [00:00<00:00, 40.05it/s] 65%|######5   | 17/26 [00:00<00:00, 38.58it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.58it/s] 85%|########4 | 22/26 [00:00<00:00, 41.27it/s]100%|##########| 26/26 [00:00<00:00, 36.42it/s]
Test: [   0/  26]	Loss 0.672 (0.672)	test_acc   0.46 (  0.46)	test_minacc   0.71 (  0.71)	test_majacc   0.42 (  0.42)	Loss_d 0.672 (0.672)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.42 (  0.42)	test_corr_d   0.16 (  0.16)
Test: [  10/  26]	Loss 0.675 (0.674)	test_acc   0.45 (  0.43)	test_minacc   0.80 (  0.63)	test_majacc   0.39 (  0.40)	Loss_d 0.675 (0.674)	test_acc_d   0.45 (  0.43)	test_minacc_d   0.80 (  0.63)	test_majacc_d   0.39 (  0.40)	test_corr_d   0.14 (  0.16)
Test: [  20/  26]	Loss 0.678 (0.674)	test_acc   0.42 (  0.43)	test_minacc   0.57 (  0.61)	test_majacc   0.39 (  0.40)	Loss_d 0.678 (0.674)	test_acc_d   0.42 (  0.43)	test_minacc_d   0.57 (  0.61)	test_majacc_d   0.39 (  0.40)	test_corr_d   0.14 (  0.16)
Test: [  26/  26]	Loss 0.677 (0.675)	test_acc   0.42 (  0.44)	test_minacc   0.51 (  0.60)	test_majacc   0.40 (  0.41)	Loss_d 0.677 (0.675)	test_acc_d   0.42 (  0.44)	test_minacc_d   0.51 (  0.60)	test_majacc_d   0.40 (  0.41)	test_corr_d   0.21 (  0.16)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.50it/s]
Test: [  0/  1]	Loss 0.759 (0.759)	test_acc   0.54 (  0.54)	test_minacc   0.54 (  0.54)	test_majacc   0.48 (  0.48)	Loss_d 0.759 (0.759)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.05 (  0.05)
Test: [  1/  1]	Loss 0.759 (0.759)	test_acc   0.54 (  0.54)	test_minacc   0.54 (  0.54)	test_majacc   0.48 (  0.48)	Loss_d 0.759 (0.759)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.05 (  0.05)
Overall Timing[ 43/  1]	epoch_time 0.0404 (0.0430)	validation_time 0.0007 (0.0006)	train_time 0.0397 (0.0422)
record: (train_acc, test_acc) (0.6151000003814697, 0.7380000352859497)
last accs (train_acc, test_acc) (0.4404000061750412, 0.5360000133514404)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.09it/s] 15%|#5        | 4/26 [00:00<00:01, 18.86it/s] 27%|##6       | 7/26 [00:00<00:00, 22.54it/s] 42%|####2     | 11/26 [00:00<00:00, 27.28it/s] 54%|#####3    | 14/26 [00:00<00:00, 27.52it/s] 65%|######5   | 17/26 [00:00<00:00, 27.16it/s] 81%|########  | 21/26 [00:00<00:00, 29.80it/s] 92%|#########2| 24/26 [00:00<00:00, 29.17it/s]100%|##########| 26/26 [00:01<00:00, 25.68it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1144 200
penalty weights 10000.0
args.step pgd_anneal_iters 1144 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1145 200
penalty weights 10000.0
args.step pgd_anneal_iters 1145 600
dim_v 512
rho, theta 267 tensor(-9.5545e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1146 200
penalty weights 10000.0
args.step pgd_anneal_iters 1146 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1147 200
penalty weights 10000.0
args.step pgd_anneal_iters 1147 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1148 200
penalty weights 10000.0
args.step pgd_anneal_iters 1148 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1149 200
penalty weights 10000.0
args.step pgd_anneal_iters 1149 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1150 200
penalty weights 10000.0
args.step pgd_anneal_iters 1150 600
dim_v 512
rho, theta 254 tensor(-2.0925e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1151 200
penalty weights 10000.0
args.step pgd_anneal_iters 1151 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1152 200
penalty weights 10000.0
args.step pgd_anneal_iters 1152 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1153 200
penalty weights 10000.0
args.step pgd_anneal_iters 1153 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1154 200
penalty weights 10000.0
args.step pgd_anneal_iters 1154 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1155 200
penalty weights 10000.0
args.step pgd_anneal_iters 1155 600
dim_v 512
rho, theta 252 tensor(-1.4211e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1156 200
penalty weights 10000.0
args.step pgd_anneal_iters 1156 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1157 200
penalty weights 10000.0
args.step pgd_anneal_iters 1157 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1158 200
penalty weights 10000.0
args.step pgd_anneal_iters 1158 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1159 200
penalty weights 10000.0
args.step pgd_anneal_iters 1159 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1160 200
penalty weights 10000.0
args.step pgd_anneal_iters 1160 600
dim_v 512
rho, theta 266 tensor(-9.7153e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1161 200
penalty weights 10000.0
args.step pgd_anneal_iters 1161 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1162 200
penalty weights 10000.0
args.step pgd_anneal_iters 1162 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1163 200
penalty weights 10000.0
args.step pgd_anneal_iters 1163 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1164 200
penalty weights 10000.0
args.step pgd_anneal_iters 1164 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1165 200
penalty weights 10000.0
args.step pgd_anneal_iters 1165 600
dim_v 512
rho, theta 272 tensor(-7.9997e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1166 200
penalty weights 10000.0
args.step pgd_anneal_iters 1166 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1167 200
penalty weights 10000.0
args.step pgd_anneal_iters 1167 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1168 200
penalty weights 10000.0
args.step pgd_anneal_iters 1168 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1169 200
penalty weights 10000.0
args.step pgd_anneal_iters 1169 600
final projection at end of training
dim_v 512
rho, theta 262 tensor(-1.6535e-06, device='cuda:0')
Epoch: [44][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  36.73 ( 36.73)	train_acc   0.42 (  0.44)	train_minacc   0.51 (  0.61)	train_majacc   0.40 (  0.41)	train_corr   0.00 (  0.00)	l1 5.8604 (5.8599)	zero_count 0.0000 (58.1100)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.81it/s] 23%|##3       | 6/26 [00:00<00:00, 22.86it/s]                                               23%|##3       | 6/26 [00:00<00:00, 22.86it/s] 42%|####2     | 11/26 [00:00<00:00, 31.62it/s] 62%|######1   | 16/26 [00:00<00:00, 37.28it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.28it/s] 81%|########  | 21/26 [00:00<00:00, 38.29it/s]100%|##########| 26/26 [00:00<00:00, 41.21it/s]100%|##########| 26/26 [00:00<00:00, 32.06it/s]
Test: [   0/  26]	Loss 0.672 (0.672)	test_acc   0.46 (  0.46)	test_minacc   0.72 (  0.72)	test_majacc   0.42 (  0.42)	Loss_d 0.672 (0.672)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.42 (  0.42)	test_corr_d   0.16 (  0.16)
Test: [  10/  26]	Loss 0.675 (0.674)	test_acc   0.44 (  0.43)	test_minacc   0.80 (  0.64)	test_majacc   0.38 (  0.39)	Loss_d 0.675 (0.674)	test_acc_d   0.44 (  0.43)	test_minacc_d   0.80 (  0.64)	test_majacc_d   0.38 (  0.39)	test_corr_d   0.13 (  0.15)
Test: [  20/  26]	Loss 0.678 (0.675)	test_acc   0.42 (  0.43)	test_minacc   0.63 (  0.63)	test_majacc   0.38 (  0.40)	Loss_d 0.678 (0.675)	test_acc_d   0.42 (  0.43)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.38 (  0.40)	test_corr_d   0.14 (  0.16)
Test: [  26/  26]	Loss 0.677 (0.675)	test_acc   0.42 (  0.44)	test_minacc   0.51 (  0.61)	test_majacc   0.40 (  0.41)	Loss_d 0.677 (0.675)	test_acc_d   0.42 (  0.44)	test_minacc_d   0.51 (  0.61)	test_majacc_d   0.40 (  0.41)	test_corr_d   0.21 (  0.16)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.66it/s]
Test: [  0/  1]	Loss 0.759 (0.759)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.48 (  0.48)	Loss_d 0.759 (0.759)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.05 (  0.05)
Test: [  1/  1]	Loss 0.759 (0.759)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.48 (  0.48)	Loss_d 0.759 (0.759)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.05 (  0.05)
Overall Timing[ 44/  1]	epoch_time 0.0411 (0.0429)	validation_time 0.0003 (0.0006)	train_time 0.0408 (0.0422)
record: (train_acc, test_acc) (0.6151000003814697, 0.7380000352859497)
last accs (train_acc, test_acc) (0.4380000051558018, 0.5390000343322754)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.20it/s] 19%|#9        | 5/26 [00:00<00:01, 20.14it/s] 31%|###       | 8/26 [00:00<00:00, 23.36it/s] 42%|####2     | 11/26 [00:00<00:00, 25.06it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.44it/s] 69%|######9   | 18/26 [00:00<00:00, 28.73it/s] 81%|########  | 21/26 [00:00<00:00, 28.42it/s] 96%|#########6| 25/26 [00:00<00:00, 30.79it/s]100%|##########| 26/26 [00:01<00:00, 25.29it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1170 200
penalty weights 10000.0
args.step pgd_anneal_iters 1170 600
dim_v 512
rho, theta 269 tensor(-4.2209e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1171 200
penalty weights 10000.0
args.step pgd_anneal_iters 1171 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1172 200
penalty weights 10000.0
args.step pgd_anneal_iters 1172 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1173 200
penalty weights 10000.0
args.step pgd_anneal_iters 1173 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1174 200
penalty weights 10000.0
args.step pgd_anneal_iters 1174 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1175 200
penalty weights 10000.0
args.step pgd_anneal_iters 1175 600
dim_v 512
rho, theta 255 tensor(-2.0899e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1176 200
penalty weights 10000.0
args.step pgd_anneal_iters 1176 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1177 200
penalty weights 10000.0
args.step pgd_anneal_iters 1177 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1178 200
penalty weights 10000.0
args.step pgd_anneal_iters 1178 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1179 200
penalty weights 10000.0
args.step pgd_anneal_iters 1179 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1180 200
penalty weights 10000.0
args.step pgd_anneal_iters 1180 600
dim_v 512
rho, theta 250 tensor(-1.5141e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1181 200
penalty weights 10000.0
args.step pgd_anneal_iters 1181 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1182 200
penalty weights 10000.0
args.step pgd_anneal_iters 1182 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1183 200
penalty weights 10000.0
args.step pgd_anneal_iters 1183 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1184 200
penalty weights 10000.0
args.step pgd_anneal_iters 1184 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1185 200
penalty weights 10000.0
args.step pgd_anneal_iters 1185 600
dim_v 512
rho, theta 266 tensor(-8.8760e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1186 200
penalty weights 10000.0
args.step pgd_anneal_iters 1186 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1187 200
penalty weights 10000.0
args.step pgd_anneal_iters 1187 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1188 200
penalty weights 10000.0
args.step pgd_anneal_iters 1188 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1189 200
penalty weights 10000.0
args.step pgd_anneal_iters 1189 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1190 200
penalty weights 10000.0
args.step pgd_anneal_iters 1190 600
dim_v 512
rho, theta 268 tensor(-7.7641e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1191 200
penalty weights 10000.0
args.step pgd_anneal_iters 1191 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1192 200
penalty weights 10000.0
args.step pgd_anneal_iters 1192 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1193 200
penalty weights 10000.0
args.step pgd_anneal_iters 1193 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1194 200
penalty weights 10000.0
args.step pgd_anneal_iters 1194 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1195 200
penalty weights 10000.0
args.step pgd_anneal_iters 1195 600
dim_v 512
rho, theta 259 tensor(-1.8230e-06, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [45][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  36.73 ( 36.73)	train_acc   0.42 (  0.43)	train_minacc   0.51 (  0.62)	train_majacc   0.40 (  0.40)	train_corr   0.00 (  0.00)	l1 5.8609 (5.8600)	zero_count 0.0000 (58.3440)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.28it/s] 23%|##3       | 6/26 [00:00<00:00, 28.44it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.44it/s] 42%|####2     | 11/26 [00:00<00:00, 35.86it/s] 62%|######1   | 16/26 [00:00<00:00, 36.42it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.42it/s] 81%|########  | 21/26 [00:00<00:00, 39.27it/s]100%|##########| 26/26 [00:00<00:00, 42.23it/s]100%|##########| 26/26 [00:00<00:00, 35.16it/s]
Test: [   0/  26]	Loss 0.673 (0.673)	test_acc   0.46 (  0.46)	test_minacc   0.72 (  0.72)	test_majacc   0.41 (  0.41)	Loss_d 0.673 (0.673)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.41 (  0.41)	test_corr_d   0.16 (  0.16)
Test: [  10/  26]	Loss 0.675 (0.675)	test_acc   0.44 (  0.42)	test_minacc   0.80 (  0.64)	test_majacc   0.38 (  0.38)	Loss_d 0.675 (0.675)	test_acc_d   0.44 (  0.42)	test_minacc_d   0.80 (  0.64)	test_majacc_d   0.38 (  0.38)	test_corr_d   0.13 (  0.15)
Test: [  20/  26]	Loss 0.678 (0.675)	test_acc   0.42 (  0.43)	test_minacc   0.63 (  0.63)	test_majacc   0.38 (  0.39)	Loss_d 0.678 (0.675)	test_acc_d   0.42 (  0.43)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.38 (  0.39)	test_corr_d   0.14 (  0.16)
Test: [  26/  26]	Loss 0.677 (0.675)	test_acc   0.42 (  0.43)	test_minacc   0.51 (  0.62)	test_majacc   0.40 (  0.40)	Loss_d 0.677 (0.675)	test_acc_d   0.42 (  0.43)	test_minacc_d   0.51 (  0.62)	test_majacc_d   0.40 (  0.40)	test_corr_d   0.21 (  0.16)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 55.48it/s]
Test: [  0/  1]	Loss 0.759 (0.759)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.45 (  0.45)	Loss_d 0.759 (0.759)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.05 (  0.05)
Test: [  1/  1]	Loss 0.759 (0.759)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.45 (  0.45)	Loss_d 0.759 (0.759)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.05 (  0.05)
Overall Timing[ 45/  1]	epoch_time 0.0442 (0.0429)	validation_time 0.0005 (0.0006)	train_time 0.0438 (0.0422)
record: (train_acc, test_acc) (0.6151000003814697, 0.7380000352859497)
last accs (train_acc, test_acc) (0.43440000516176225, 0.5400000214576721)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.32it/s] 19%|#9        | 5/26 [00:00<00:01, 18.23it/s] 35%|###4      | 9/26 [00:00<00:00, 24.77it/s] 46%|####6     | 12/26 [00:00<00:00, 26.36it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.08it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.84it/s] 88%|########8 | 23/26 [00:00<00:00, 30.22it/s]100%|##########| 26/26 [00:01<00:00, 25.50it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1196 200
penalty weights 10000.0
args.step pgd_anneal_iters 1196 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1197 200
penalty weights 10000.0
args.step pgd_anneal_iters 1197 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1198 200
penalty weights 10000.0
args.step pgd_anneal_iters 1198 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1199 200
penalty weights 10000.0
args.step pgd_anneal_iters 1199 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1200 200
penalty weights 10000.0
args.step pgd_anneal_iters 1200 600
dim_v 512
rho, theta 255 tensor(-2.0191e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1201 200
penalty weights 10000.0
args.step pgd_anneal_iters 1201 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1202 200
penalty weights 10000.0
args.step pgd_anneal_iters 1202 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1203 200
penalty weights 10000.0
args.step pgd_anneal_iters 1203 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1204 200
penalty weights 10000.0
args.step pgd_anneal_iters 1204 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1205 200
penalty weights 10000.0
args.step pgd_anneal_iters 1205 600
dim_v 512
rho, theta 254 tensor(-1.5521e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1206 200
penalty weights 10000.0
args.step pgd_anneal_iters 1206 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1207 200
penalty weights 10000.0
args.step pgd_anneal_iters 1207 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1208 200
penalty weights 10000.0
args.step pgd_anneal_iters 1208 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1209 200
penalty weights 10000.0
args.step pgd_anneal_iters 1209 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1210 200
penalty weights 10000.0
args.step pgd_anneal_iters 1210 600
dim_v 512
rho, theta 266 tensor(-9.0545e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1211 200
penalty weights 10000.0
args.step pgd_anneal_iters 1211 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1212 200
penalty weights 10000.0
args.step pgd_anneal_iters 1212 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1213 200
penalty weights 10000.0
args.step pgd_anneal_iters 1213 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1214 200
penalty weights 10000.0
args.step pgd_anneal_iters 1214 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1215 200
penalty weights 10000.0
args.step pgd_anneal_iters 1215 600
dim_v 512
rho, theta 265 tensor(-8.2819e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1216 200
penalty weights 10000.0
args.step pgd_anneal_iters 1216 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1217 200
penalty weights 10000.0
args.step pgd_anneal_iters 1217 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1218 200
penalty weights 10000.0
args.step pgd_anneal_iters 1218 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1219 200
penalty weights 10000.0
args.step pgd_anneal_iters 1219 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1220 200
penalty weights 10000.0
args.step pgd_anneal_iters 1220 600
dim_v 512
rho, theta 263 tensor(-1.3492e-06, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1221 200
penalty weights 10000.0
args.step pgd_anneal_iters 1221 600
final projection at end of training
dim_v 512
rho, theta 273 tensor(-4.6291e-07, device='cuda:0')
Epoch: [46][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  36.73 ( 36.73)	train_acc   0.42 (  0.43)	train_minacc   0.51 (  0.62)	train_majacc   0.40 (  0.40)	train_corr   0.00 (  0.00)	l1 5.8590 (5.8599)	zero_count 248.0000 (55.1840)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.83it/s] 23%|##3       | 6/26 [00:00<00:00, 31.83it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.83it/s] 42%|####2     | 11/26 [00:00<00:00, 38.23it/s] 62%|######1   | 16/26 [00:00<00:00, 41.79it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.79it/s] 81%|########  | 21/26 [00:00<00:00, 39.34it/s]100%|##########| 26/26 [00:00<00:00, 42.46it/s]100%|##########| 26/26 [00:00<00:00, 36.09it/s]
Test: [   0/  26]	Loss 0.673 (0.673)	test_acc   0.45 (  0.45)	test_minacc   0.74 (  0.74)	test_majacc   0.40 (  0.40)	Loss_d 0.673 (0.673)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.40 (  0.40)	test_corr_d   0.16 (  0.16)
Test: [  10/  26]	Loss 0.676 (0.675)	test_acc   0.43 (  0.42)	test_minacc   0.80 (  0.65)	test_majacc   0.37 (  0.38)	Loss_d 0.676 (0.675)	test_acc_d   0.43 (  0.42)	test_minacc_d   0.80 (  0.65)	test_majacc_d   0.37 (  0.38)	test_corr_d   0.13 (  0.15)
Test: [  20/  26]	Loss 0.678 (0.675)	test_acc   0.41 (  0.42)	test_minacc   0.63 (  0.63)	test_majacc   0.38 (  0.39)	Loss_d 0.678 (0.675)	test_acc_d   0.41 (  0.42)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.38 (  0.39)	test_corr_d   0.14 (  0.16)
Test: [  26/  26]	Loss 0.678 (0.675)	test_acc   0.42 (  0.43)	test_minacc   0.51 (  0.62)	test_majacc   0.40 (  0.40)	Loss_d 0.678 (0.675)	test_acc_d   0.42 (  0.43)	test_minacc_d   0.51 (  0.62)	test_majacc_d   0.40 (  0.40)	test_corr_d   0.21 (  0.16)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.69it/s]
Test: [  0/  1]	Loss 0.759 (0.759)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.45 (  0.45)	Loss_d 0.759 (0.759)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.05 (  0.05)
Test: [  1/  1]	Loss 0.759 (0.759)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.45 (  0.45)	Loss_d 0.759 (0.759)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.05 (  0.05)
Overall Timing[ 46/  1]	epoch_time 0.0429 (0.0429)	validation_time 0.0004 (0.0006)	train_time 0.0424 (0.0423)
record: (train_acc, test_acc) (0.6151000003814697, 0.7380000352859497)
last accs (train_acc, test_acc) (0.43080000653862954, 0.5430000424385071)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.06it/s] 15%|#5        | 4/26 [00:00<00:01, 18.10it/s] 31%|###       | 8/26 [00:00<00:00, 25.19it/s] 42%|####2     | 11/26 [00:00<00:00, 26.19it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.07it/s] 69%|######9   | 18/26 [00:00<00:00, 28.97it/s] 81%|########  | 21/26 [00:00<00:00, 28.80it/s] 92%|#########2| 24/26 [00:00<00:00, 29.08it/s]100%|##########| 26/26 [00:01<00:00, 25.63it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1222 200
penalty weights 10000.0
args.step pgd_anneal_iters 1222 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1223 200
penalty weights 10000.0
args.step pgd_anneal_iters 1223 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1224 200
penalty weights 10000.0
args.step pgd_anneal_iters 1224 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1225 200
penalty weights 10000.0
args.step pgd_anneal_iters 1225 600
dim_v 512
rho, theta 255 tensor(-1.4920e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1226 200
penalty weights 10000.0
args.step pgd_anneal_iters 1226 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1227 200
penalty weights 10000.0
args.step pgd_anneal_iters 1227 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1228 200
penalty weights 10000.0
args.step pgd_anneal_iters 1228 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1229 200
penalty weights 10000.0
args.step pgd_anneal_iters 1229 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1230 200
penalty weights 10000.0
args.step pgd_anneal_iters 1230 600
dim_v 512
rho, theta 258 tensor(-1.6220e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1231 200
penalty weights 10000.0
args.step pgd_anneal_iters 1231 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1232 200
penalty weights 10000.0
args.step pgd_anneal_iters 1232 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1233 200
penalty weights 10000.0
args.step pgd_anneal_iters 1233 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1234 200
penalty weights 10000.0
args.step pgd_anneal_iters 1234 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1235 200
penalty weights 10000.0
args.step pgd_anneal_iters 1235 600
dim_v 512
rho, theta 266 tensor(-1.0430e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1236 200
penalty weights 10000.0
args.step pgd_anneal_iters 1236 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1237 200
penalty weights 10000.0
args.step pgd_anneal_iters 1237 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1238 200
penalty weights 10000.0
args.step pgd_anneal_iters 1238 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1239 200
penalty weights 10000.0
args.step pgd_anneal_iters 1239 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1240 200
penalty weights 10000.0
args.step pgd_anneal_iters 1240 600
dim_v 512
rho, theta 265 tensor(-7.6903e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1241 200
penalty weights 10000.0
args.step pgd_anneal_iters 1241 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1242 200
penalty weights 10000.0
args.step pgd_anneal_iters 1242 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1243 200
penalty weights 10000.0
args.step pgd_anneal_iters 1243 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1244 200
penalty weights 10000.0
args.step pgd_anneal_iters 1244 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1245 200
penalty weights 10000.0
args.step pgd_anneal_iters 1245 600
dim_v 512
rho, theta 268 tensor(-9.3418e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1246 200
penalty weights 10000.0
args.step pgd_anneal_iters 1246 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1247 200
penalty weights 10000.0
args.step pgd_anneal_iters 1247 600
final projection at end of training
dim_v 512
rho, theta 272 tensor(-7.6504e-07, device='cuda:0')
Epoch: [47][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm  36.74 ( 36.74)	train_acc   0.41 (  0.43)	train_minacc   0.51 (  0.63)	train_majacc   0.39 (  0.39)	train_corr   0.00 (  0.00)	l1 5.8594 (5.8599)	zero_count 0.0000 (57.7590)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.37it/s] 23%|##3       | 6/26 [00:00<00:00, 28.76it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.76it/s] 42%|####2     | 11/26 [00:00<00:00, 34.34it/s] 62%|######1   | 16/26 [00:00<00:00, 39.43it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.43it/s] 81%|########  | 21/26 [00:00<00:00, 38.55it/s]100%|##########| 26/26 [00:00<00:00, 41.81it/s]100%|##########| 26/26 [00:00<00:00, 34.13it/s]
Test: [   0/  26]	Loss 0.673 (0.673)	test_acc   0.44 (  0.44)	test_minacc   0.74 (  0.74)	test_majacc   0.39 (  0.39)	Loss_d 0.673 (0.673)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.39 (  0.39)	test_corr_d   0.16 (  0.16)
Test: [  10/  26]	Loss 0.676 (0.675)	test_acc   0.42 (  0.41)	test_minacc   0.80 (  0.65)	test_majacc   0.36 (  0.37)	Loss_d 0.676 (0.675)	test_acc_d   0.42 (  0.41)	test_minacc_d   0.80 (  0.65)	test_majacc_d   0.36 (  0.37)	test_corr_d   0.13 (  0.15)
Test: [  20/  26]	Loss 0.678 (0.675)	test_acc   0.41 (  0.42)	test_minacc   0.63 (  0.64)	test_majacc   0.37 (  0.38)	Loss_d 0.678 (0.675)	test_acc_d   0.41 (  0.42)	test_minacc_d   0.63 (  0.64)	test_majacc_d   0.37 (  0.38)	test_corr_d   0.14 (  0.16)
Test: [  26/  26]	Loss 0.678 (0.675)	test_acc   0.41 (  0.43)	test_minacc   0.51 (  0.62)	test_majacc   0.39 (  0.39)	Loss_d 0.678 (0.675)	test_acc_d   0.41 (  0.43)	test_minacc_d   0.51 (  0.62)	test_majacc_d   0.39 (  0.39)	test_corr_d   0.21 (  0.16)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.21it/s]
Test: [  0/  1]	Loss 0.759 (0.759)	test_acc   0.55 (  0.55)	test_minacc   0.56 (  0.56)	test_majacc   0.45 (  0.45)	Loss_d 0.759 (0.759)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.05 (  0.05)
Test: [  1/  1]	Loss 0.759 (0.759)	test_acc   0.55 (  0.55)	test_minacc   0.56 (  0.56)	test_majacc   0.45 (  0.45)	Loss_d 0.759 (0.759)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.05 (  0.05)
Overall Timing[ 47/  1]	epoch_time 0.0409 (0.0429)	validation_time 0.0004 (0.0006)	train_time 0.0406 (0.0422)
record: (train_acc, test_acc) (0.6151000003814697, 0.7380000352859497)
last accs (train_acc, test_acc) (0.4275000072717667, 0.5460000038146973)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.01it/s] 15%|#5        | 4/26 [00:00<00:01, 16.00it/s] 31%|###       | 8/26 [00:00<00:00, 21.62it/s] 46%|####6     | 12/26 [00:00<00:00, 25.87it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.11it/s] 69%|######9   | 18/26 [00:00<00:00, 26.48it/s] 85%|########4 | 22/26 [00:00<00:00, 28.87it/s] 96%|#########6| 25/26 [00:00<00:00, 28.60it/s]100%|##########| 26/26 [00:01<00:00, 24.25it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1248 200
penalty weights 10000.0
args.step pgd_anneal_iters 1248 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1249 200
penalty weights 10000.0
args.step pgd_anneal_iters 1249 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1250 200
penalty weights 10000.0
args.step pgd_anneal_iters 1250 600
dim_v 512
rho, theta 264 tensor(-1.1336e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1251 200
penalty weights 10000.0
args.step pgd_anneal_iters 1251 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1252 200
penalty weights 10000.0
args.step pgd_anneal_iters 1252 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1253 200
penalty weights 10000.0
args.step pgd_anneal_iters 1253 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1254 200
penalty weights 10000.0
args.step pgd_anneal_iters 1254 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1255 200
penalty weights 10000.0
args.step pgd_anneal_iters 1255 600
dim_v 512
rho, theta 255 tensor(-1.6075e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1256 200
penalty weights 10000.0
args.step pgd_anneal_iters 1256 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1257 200
penalty weights 10000.0
args.step pgd_anneal_iters 1257 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1258 200
penalty weights 10000.0
args.step pgd_anneal_iters 1258 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1259 200
penalty weights 10000.0
args.step pgd_anneal_iters 1259 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1260 200
penalty weights 10000.0
args.step pgd_anneal_iters 1260 600
dim_v 512
rho, theta 258 tensor(-1.0494e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1261 200
penalty weights 10000.0
args.step pgd_anneal_iters 1261 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1262 200
penalty weights 10000.0
args.step pgd_anneal_iters 1262 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1263 200
penalty weights 10000.0
args.step pgd_anneal_iters 1263 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1264 200
penalty weights 10000.0
args.step pgd_anneal_iters 1264 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1265 200
penalty weights 10000.0
args.step pgd_anneal_iters 1265 600
dim_v 512
rho, theta 261 tensor(-7.6804e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1266 200
penalty weights 10000.0
args.step pgd_anneal_iters 1266 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1267 200
penalty weights 10000.0
args.step pgd_anneal_iters 1267 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1268 200
penalty weights 10000.0
args.step pgd_anneal_iters 1268 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1269 200
penalty weights 10000.0
args.step pgd_anneal_iters 1269 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1270 200
penalty weights 10000.0
args.step pgd_anneal_iters 1270 600
dim_v 512
rho, theta 270 tensor(-6.8270e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1271 200
penalty weights 10000.0
args.step pgd_anneal_iters 1271 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1272 200
penalty weights 10000.0
args.step pgd_anneal_iters 1272 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1273 200
penalty weights 10000.0
args.step pgd_anneal_iters 1273 600
final projection at end of training
dim_v 512
rho, theta 265 tensor(-9.8594e-07, device='cuda:0')
Epoch: [48][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm  36.74 ( 36.74)	train_acc   0.42 (  0.42)	train_minacc   0.53 (  0.63)	train_majacc   0.39 (  0.39)	train_corr   0.00 (  0.00)	l1 5.8598 (5.8598)	zero_count 0.0000 (57.9540)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.69it/s] 23%|##3       | 6/26 [00:00<00:00, 22.47it/s]                                               23%|##3       | 6/26 [00:00<00:00, 22.47it/s] 42%|####2     | 11/26 [00:00<00:00, 31.39it/s] 62%|######1   | 16/26 [00:00<00:00, 36.85it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.85it/s] 81%|########  | 21/26 [00:00<00:00, 36.60it/s]100%|##########| 26/26 [00:00<00:00, 40.19it/s]100%|##########| 26/26 [00:00<00:00, 31.68it/s]
Test: [   0/  26]	Loss 0.673 (0.673)	test_acc   0.44 (  0.44)	test_minacc   0.76 (  0.76)	test_majacc   0.38 (  0.38)	Loss_d 0.673 (0.673)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.76 (  0.76)	test_majacc_d   0.38 (  0.38)	test_corr_d   0.16 (  0.16)
Test: [  10/  26]	Loss 0.676 (0.675)	test_acc   0.42 (  0.41)	test_minacc   0.82 (  0.66)	test_majacc   0.35 (  0.37)	Loss_d 0.676 (0.675)	test_acc_d   0.42 (  0.41)	test_minacc_d   0.82 (  0.66)	test_majacc_d   0.35 (  0.37)	test_corr_d   0.13 (  0.15)
Test: [  20/  26]	Loss 0.678 (0.675)	test_acc   0.40 (  0.42)	test_minacc   0.63 (  0.64)	test_majacc   0.37 (  0.38)	Loss_d 0.678 (0.675)	test_acc_d   0.40 (  0.42)	test_minacc_d   0.63 (  0.64)	test_majacc_d   0.37 (  0.38)	test_corr_d   0.14 (  0.16)
Test: [  26/  26]	Loss 0.678 (0.676)	test_acc   0.42 (  0.43)	test_minacc   0.53 (  0.63)	test_majacc   0.39 (  0.39)	Loss_d 0.678 (0.676)	test_acc_d   0.42 (  0.43)	test_minacc_d   0.53 (  0.63)	test_majacc_d   0.39 (  0.39)	test_corr_d   0.21 (  0.16)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.89it/s]
Test: [  0/  1]	Loss 0.759 (0.759)	test_acc   0.55 (  0.55)	test_minacc   0.56 (  0.56)	test_majacc   0.45 (  0.45)	Loss_d 0.759 (0.759)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.06 (  0.06)
Test: [  1/  1]	Loss 0.759 (0.759)	test_acc   0.55 (  0.55)	test_minacc   0.56 (  0.56)	test_majacc   0.45 (  0.45)	Loss_d 0.759 (0.759)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.06 (  0.06)
Overall Timing[ 48/  1]	epoch_time 0.0425 (0.0429)	validation_time 0.0004 (0.0006)	train_time 0.0421 (0.0422)
record: (train_acc, test_acc) (0.6151000003814697, 0.7380000352859497)
last accs (train_acc, test_acc) (0.42520000687241555, 0.5490000247955322)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.40it/s] 23%|##3       | 6/26 [00:00<00:00, 27.20it/s] 35%|###4      | 9/26 [00:00<00:00, 27.87it/s] 46%|####6     | 12/26 [00:00<00:00, 27.93it/s] 62%|######1   | 16/26 [00:00<00:00, 30.31it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.51it/s] 92%|#########2| 24/26 [00:00<00:00, 30.34it/s]100%|##########| 26/26 [00:00<00:00, 27.92it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1274 200
penalty weights 10000.0
args.step pgd_anneal_iters 1274 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1275 200
penalty weights 10000.0
args.step pgd_anneal_iters 1275 600
dim_v 512
rho, theta 266 tensor(-7.1079e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1276 200
penalty weights 10000.0
args.step pgd_anneal_iters 1276 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1277 200
penalty weights 10000.0
args.step pgd_anneal_iters 1277 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1278 200
penalty weights 10000.0
args.step pgd_anneal_iters 1278 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1279 200
penalty weights 10000.0
args.step pgd_anneal_iters 1279 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1280 200
penalty weights 10000.0
args.step pgd_anneal_iters 1280 600
dim_v 512
rho, theta 255 tensor(-1.6503e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1281 200
penalty weights 10000.0
args.step pgd_anneal_iters 1281 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1282 200
penalty weights 10000.0
args.step pgd_anneal_iters 1282 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1283 200
penalty weights 10000.0
args.step pgd_anneal_iters 1283 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1284 200
penalty weights 10000.0
args.step pgd_anneal_iters 1284 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1285 200
penalty weights 10000.0
args.step pgd_anneal_iters 1285 600
dim_v 512
rho, theta 255 tensor(-1.0841e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1286 200
penalty weights 10000.0
args.step pgd_anneal_iters 1286 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1287 200
penalty weights 10000.0
args.step pgd_anneal_iters 1287 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1288 200
penalty weights 10000.0
args.step pgd_anneal_iters 1288 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1289 200
penalty weights 10000.0
args.step pgd_anneal_iters 1289 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1290 200
penalty weights 10000.0
args.step pgd_anneal_iters 1290 600
dim_v 512
rho, theta 267 tensor(-6.7433e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1291 200
penalty weights 10000.0
args.step pgd_anneal_iters 1291 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1292 200
penalty weights 10000.0
args.step pgd_anneal_iters 1292 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1293 200
penalty weights 10000.0
args.step pgd_anneal_iters 1293 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1294 200
penalty weights 10000.0
args.step pgd_anneal_iters 1294 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1295 200
penalty weights 10000.0
args.step pgd_anneal_iters 1295 600
dim_v 512
rho, theta 271 tensor(-4.5755e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1296 200
penalty weights 10000.0
args.step pgd_anneal_iters 1296 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1297 200
penalty weights 10000.0
args.step pgd_anneal_iters 1297 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1298 200
penalty weights 10000.0
args.step pgd_anneal_iters 1298 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1299 200
penalty weights 10000.0
args.step pgd_anneal_iters 1299 600
final projection at end of training
dim_v 512
rho, theta 265 tensor(-1.2226e-06, device='cuda:0')
Epoch: [49][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm  36.74 ( 36.74)	train_acc   0.42 (  0.42)	train_minacc   0.53 (  0.64)	train_majacc   0.39 (  0.39)	train_corr   0.00 (  0.00)	l1 5.8602 (5.8598)	zero_count 0.0000 (57.9930)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.67it/s] 23%|##3       | 6/26 [00:00<00:00, 26.87it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.87it/s] 42%|####2     | 11/26 [00:00<00:00, 34.30it/s] 62%|######1   | 16/26 [00:00<00:00, 38.92it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.92it/s] 81%|########  | 21/26 [00:00<00:00, 41.73it/s]100%|##########| 26/26 [00:00<00:00, 43.50it/s]100%|##########| 26/26 [00:00<00:00, 35.11it/s]
Test: [   0/  26]	Loss 0.674 (0.674)	test_acc   0.44 (  0.44)	test_minacc   0.78 (  0.78)	test_majacc   0.38 (  0.38)	Loss_d 0.674 (0.674)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.78 (  0.78)	test_majacc_d   0.38 (  0.38)	test_corr_d   0.16 (  0.16)
Test: [  10/  26]	Loss 0.676 (0.675)	test_acc   0.41 (  0.41)	test_minacc   0.82 (  0.66)	test_majacc   0.34 (  0.36)	Loss_d 0.676 (0.675)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.82 (  0.66)	test_majacc_d   0.34 (  0.36)	test_corr_d   0.13 (  0.15)
Test: [  20/  26]	Loss 0.678 (0.675)	test_acc   0.40 (  0.41)	test_minacc   0.63 (  0.65)	test_majacc   0.37 (  0.37)	Loss_d 0.678 (0.675)	test_acc_d   0.40 (  0.41)	test_minacc_d   0.63 (  0.65)	test_majacc_d   0.37 (  0.37)	test_corr_d   0.14 (  0.16)
Test: [  26/  26]	Loss 0.678 (0.676)	test_acc   0.42 (  0.42)	test_minacc   0.53 (  0.63)	test_majacc   0.39 (  0.39)	Loss_d 0.678 (0.676)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.53 (  0.63)	test_majacc_d   0.39 (  0.39)	test_corr_d   0.21 (  0.16)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.75it/s]
Test: [  0/  1]	Loss 0.759 (0.759)	test_acc   0.55 (  0.55)	test_minacc   0.56 (  0.56)	test_majacc   0.45 (  0.45)	Loss_d 0.759 (0.759)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.06 (  0.06)
Test: [  1/  1]	Loss 0.759 (0.759)	test_acc   0.55 (  0.55)	test_minacc   0.56 (  0.56)	test_majacc   0.45 (  0.45)	Loss_d 0.759 (0.759)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.06 (  0.06)
Overall Timing[ 49/  1]	epoch_time 0.0388 (0.0428)	validation_time 0.0004 (0.0006)	train_time 0.0383 (0.0421)
record: (train_acc, test_acc) (0.6151000003814697, 0.7380000352859497)
last accs (train_acc, test_acc) (0.4220000070631504, 0.5520000457763672)
done saving aggregate.csv to ./aggregate.csv
wandb: - 0.167 MB of 0.167 MB uploadedwandb: \ 0.167 MB of 0.167 MB uploadedwandb: | 0.167 MB of 0.167 MB uploadedThread SenderThread:
Traceback (most recent call last):
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/internal_util.py", line 48, in run
    self._run()
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/internal_util.py", line 99, in _run
    self._process(record)
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/internal.py", line 327, in _process
    self._sm.send(record)
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/sender.py", line 398, in send
    send_handler(record)
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/sender.py", line 420, in send_request
    send_handler(record)
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/sender.py", line 654, in send_request_defer
    self._flush_job()
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/sender.py", line 1706, in _flush_job
    artifact = self._job_builder.build(api=self._api)
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/job_builder.py", line 552, in build
    artifact.add_file(
  File "/home/zd16/scratch/mypython3/wandb/sdk/artifacts/artifact.py", line 1196, in add_file
    return self._add_local_file(
  File "/home/zd16/scratch/mypython3/wandb/sdk/artifacts/artifact.py", line 1459, in _add_local_file
    with tempfile.NamedTemporaryFile(dir=get_staging_dir(), delete=False) as f:
  File "/usr/local/python/3.9.16/lib/python3.9/tempfile.py", line 545, in NamedTemporaryFile
    (fd, name) = _mkstemp_inner(dir, prefix, suffix, flags, output_type)
  File "/usr/local/python/3.9.16/lib/python3.9/tempfile.py", line 255, in _mkstemp_inner
    fd = _os.open(file, flags, 0o600)
OSError: [Errno 122] Disk quota exceeded: '/home/zd16/.local/share/wandb/artifacts/staging/tmpc1g375xo'
wandb: ERROR Internal wandb error: file data was not synced
wandb: Currently logged in as: janezdu (janezdu-uiuc). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.17.9 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.7
wandb: Run data is saved locally in /scratch/users/zd16/sparseIRM-resnet-ver/wandb/run-20240907_204833-3x8m0b1d
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run name_random
wandb: ⭐️ View project at https://wandb.ai/janezdu-uiuc/irm
wandb: 🚀 View run at https://wandb.ai/janezdu-uiuc/irm/runs/3x8m0b1d
=> Reading YAML config from configs/smallscale/resnet18/resnet18-usc-unsigned.yaml
Namespace(data='dataset/', optimizer='adam', weight_opt='adam', set='mnistcifar', arch='ResNet18', config='configs/smallscale/resnet18/resnet18-usc-unsigned.yaml', log_dir=None, workers=4, epochs=50, start_epoch=None, batch_size=390, lr=0.006, warmup_length=0, momentum=0.9, weight_decay=0.0, print_freq=10, num_classes=1, resume='', resume_train_weights='', evaluate=False, pretrained=None, pretrained_distill=None, alpha_distill=0.95, T_distill=2, seed=0, multigpu=[0], lr_policy='cosine_lr', lr_adjust=30, lr_gamma=0.1, name='baseline', save_every=-1, prune_rate=1.0, param_prune_rate=0.0, pr_start=1.0, low_data=1, width_mult=1.0, nesterov=False, threetimes=False, random_subnet=False, one_batch=False, conv_type='DenseConv', freeze_weights=False, st=False, mode='fan_in', nonlinearity='relu', bn_type='LearnedBatchNorm', init='kaiming_normal', no_bn_decay=False, scale_fan=False, first_layer_dense=False, last_layer_dense=True, approx=False, zero=False, flip=False, bs=False, gumbel_sample=False, multiply_prob=False, no_multiply=False, multiply_cont=False, multiply_prob_bs=False, indiv=False, label_smoothing=None, first_layer_type=None, trainer='default', score_init_constant=1.0, K=1, update_freq=20, D=0.01, T=1, TA=True, TA2=False, TA_grow=False, center=False, straight_through=False, PLA_factor=0.1, PLA_patience=10, gradient_loss_para=0, abs_loss_para=0, thres=0.9, runs_name='name_random', resume_compare_loss1='', resume_compare_loss2='', init_weights='', trained_mask='', weight_rescaling=False, constrain_by_layer=False, weight_rescaling_data=False, use_running_stats=False, not_clipping=False, rescaling_para=False, lasso_para=0, dont_freeze_weights=False, iterative=True, prob_by_weight=False, rescale_at_fix_subnet=False, train_weights_at_the_same_time=False, sample_from_training_set=False, load_true_para=False, distill=False, finetune=False, stablize=False, prev_best=0, weight_opt_lr=0.0006, n=500, ts=0.28, te=0.6, d=20000, s=80, c=0.75, init_prob=False, thres_before=0.001, wide_ratio=0.001, noise=1, cal_p_q=False, just_finetune=False, snip=False, envs_num=2, l2_regularizer_weight=0.001, data_num=50000, env_type='linear', irm_type='irmv1', hidden_dim=390, penalty_anneal_iters=200, penalty_weight=10000.0, grayscale_model=0, weight_lr_schedule=False, fix_subnet=False, freeze_weight=False, step='ours', prior_sd_coef=0, dim_inv=2, variance_gamma=1.0, dim_spu=10, image_scale=32, cons_ratio='0.999_0.7_0.1', noise_ratio=0.2, step_gamma=0.1, step_round=3, inner_steps=1, use_pgd=True, z=15.0, pgd_anneal_iters=600, pgd_skip_steps=5, fraction_z=0.99)
=> Creating model 'ResNet18'
Here!!!!!!!!
==> Conv Type: DenseConv
==> BN Type: LearnedBatchNorm
<class 'torch.nn.modules.conv.Conv2d'>
<class 'torch.nn.modules.batchnorm.BatchNorm2d'>
==> Building first layer with <class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): Linear(in_features=512, out_features=1, bias=True)
)
=> Parallelizing on [0] gpus
<DEBUG> gradient to module.conv1.weight
<DEBUG> gradient to module.bn1.weight
<DEBUG> gradient to module.bn1.bias
<DEBUG> gradient to module.layer1.0.conv1.weight
<DEBUG> gradient to module.layer1.0.bn1.weight
<DEBUG> gradient to module.layer1.0.bn1.bias
<DEBUG> gradient to module.layer1.0.conv2.weight
<DEBUG> gradient to module.layer1.0.bn2.weight
<DEBUG> gradient to module.layer1.0.bn2.bias
<DEBUG> gradient to module.layer1.1.conv1.weight
<DEBUG> gradient to module.layer1.1.bn1.weight
<DEBUG> gradient to module.layer1.1.bn1.bias
<DEBUG> gradient to module.layer1.1.conv2.weight
<DEBUG> gradient to module.layer1.1.bn2.weight
<DEBUG> gradient to module.layer1.1.bn2.bias
<DEBUG> gradient to module.layer2.0.conv1.weight
<DEBUG> gradient to module.layer2.0.bn1.weight
<DEBUG> gradient to module.layer2.0.bn1.bias
<DEBUG> gradient to module.layer2.0.conv2.weight
<DEBUG> gradient to module.layer2.0.bn2.weight
<DEBUG> gradient to module.layer2.0.bn2.bias
<DEBUG> gradient to module.layer2.0.downsample.0.weight
<DEBUG> gradient to module.layer2.0.downsample.1.weight
<DEBUG> gradient to module.layer2.0.downsample.1.bias
<DEBUG> gradient to module.layer2.1.conv1.weight
<DEBUG> gradient to module.layer2.1.bn1.weight
<DEBUG> gradient to module.layer2.1.bn1.bias
<DEBUG> gradient to module.layer2.1.conv2.weight
<DEBUG> gradient to module.layer2.1.bn2.weight
<DEBUG> gradient to module.layer2.1.bn2.bias
<DEBUG> gradient to module.layer3.0.conv1.weight
<DEBUG> gradient to module.layer3.0.bn1.weight
<DEBUG> gradient to module.layer3.0.bn1.bias
<DEBUG> gradient to module.layer3.0.conv2.weight
<DEBUG> gradient to module.layer3.0.bn2.weight
<DEBUG> gradient to module.layer3.0.bn2.bias
<DEBUG> gradient to module.layer3.0.downsample.0.weight
<DEBUG> gradient to module.layer3.0.downsample.1.weight
<DEBUG> gradient to module.layer3.0.downsample.1.bias
<DEBUG> gradient to module.layer3.1.conv1.weight
<DEBUG> gradient to module.layer3.1.bn1.weight
<DEBUG> gradient to module.layer3.1.bn1.bias
<DEBUG> gradient to module.layer3.1.conv2.weight
<DEBUG> gradient to module.layer3.1.bn2.weight
<DEBUG> gradient to module.layer3.1.bn2.bias
<DEBUG> gradient to module.layer4.0.conv1.weight
<DEBUG> gradient to module.layer4.0.bn1.weight
<DEBUG> gradient to module.layer4.0.bn1.bias
<DEBUG> gradient to module.layer4.0.conv2.weight
<DEBUG> gradient to module.layer4.0.bn2.weight
<DEBUG> gradient to module.layer4.0.bn2.bias
<DEBUG> gradient to module.layer4.0.downsample.0.weight
<DEBUG> gradient to module.layer4.0.downsample.1.weight
<DEBUG> gradient to module.layer4.0.downsample.1.bias
<DEBUG> gradient to module.layer4.1.conv1.weight
<DEBUG> gradient to module.layer4.1.bn1.weight
<DEBUG> gradient to module.layer4.1.bn1.bias
<DEBUG> gradient to module.layer4.1.conv2.weight
<DEBUG> gradient to module.layer4.1.bn2.weight
<DEBUG> gradient to module.layer4.1.bn2.bias
<DEBUG> gradient to module.fc.weight
<DEBUG> gradient to module.fc.bias
Files already downloaded and verified
Files already downloaded and verified
Adding Noise to Label, len(Y)=12000, Label_noise=1210
Xmp (7877, 3, 32, 32) (6903, 3, 32, 32)
Xcp (6012, 3, 32, 32) (5988, 3, 32, 32)
env=0 2497 2497 3 3
xn 2500 xp 2500
env=1 1750 1750 750 750
xn 2500 xp 2500
env=2 50 50 450 450
xn 500 xp 500
=> Creating model 'EBD'
EBD(
  (embedings): Embedding(2, 1)
)
=> Parallelizing on [0] gpus
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:01<00:41,  1.67s/it] 19%|#9        | 5/26 [00:01<00:05,  3.68it/s] 35%|###4      | 9/26 [00:01<00:02,  7.28it/s] 50%|#####     | 13/26 [00:02<00:01, 11.02it/s] 62%|######1   | 16/26 [00:02<00:00, 13.72it/s] 77%|#######6  | 20/26 [00:02<00:00, 17.92it/s] 92%|#########2| 24/26 [00:02<00:00, 21.76it/s]100%|##########| 26/26 [00:02<00:00,  9.44it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 0 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 2 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 3 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 4 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 5 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 6 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 7 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 8 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 9 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 10 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 11 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 12 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 13 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 14 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 15 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 16 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 17 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 18 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 19 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 20 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 21 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 22 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 23 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 24 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 25 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [0][  26/  26]	Loss 0.391 (0.492)	train_nll   0.39 (  0.49)	train_penalty   0.05 (  0.19)	weight_norm  20.85 ( 18.11)	train_acc   0.86 (  0.82)	train_minacc   0.00 (  0.05)	train_majacc   1.00 (  0.95)	train_corr   0.00 (  0.00)	l1 7.0223 (7.7133)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.71it/s] 23%|##3       | 6/26 [00:00<00:00, 27.11it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.11it/s] 42%|####2     | 11/26 [00:00<00:00, 34.97it/s] 62%|######1   | 16/26 [00:00<00:00, 40.31it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.31it/s] 81%|########  | 21/26 [00:00<00:00, 42.16it/s]100%|##########| 26/26 [00:00<00:00, 44.34it/s]100%|##########| 26/26 [00:00<00:00, 35.91it/s]
Test: [   0/  26]	Loss 0.476 (0.476)	test_acc   0.80 (  0.80)	test_minacc   0.01 (  0.01)	test_majacc   0.98 (  0.98)	Loss_d 0.476 (0.476)	test_acc_d   0.80 (  0.80)	test_minacc_d   0.01 (  0.01)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.97 (  0.97)
Test: [  10/  26]	Loss 0.404 (0.431)	test_acc   0.86 (  0.84)	test_minacc   0.02 (  0.01)	test_majacc   1.00 (  0.99)	Loss_d 0.404 (0.431)	test_acc_d   0.86 (  0.84)	test_minacc_d   0.02 (  0.01)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.98 (  0.98)
Test: [  20/  26]	Loss 0.446 (0.419)	test_acc   0.83 (  0.84)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  0.99)	Loss_d 0.446 (0.419)	test_acc_d   0.83 (  0.84)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.98 (  0.98)
Test: [  26/  26]	Loss 0.385 (0.416)	test_acc   0.86 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  0.99)	Loss_d 0.385 (0.416)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.99 (  0.98)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00,  2.52it/s]100%|##########| 1/1 [00:00<00:00,  2.52it/s]
Test: [  0/  1]	Loss 1.735 (1.735)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 1.735 (1.735)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.98 (  0.98)
Test: [  1/  1]	Loss 1.735 (1.735)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 1.735 (1.735)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.98 (  0.98)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/161/checkpoints/model_best.pth
Overall Timing[  0/  1]	epoch_time 0.0780 (0.0780)	validation_time 0.0070 (0.0070)	train_time 0.0668 (0.0668)
record: (train_acc, test_acc) (0.8468000304102897, 0.10600000619888306)
last accs (train_acc, test_acc) (0.8468000304102897, 0.10600000619888306)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.99it/s] 19%|#9        | 5/26 [00:00<00:00, 23.55it/s] 35%|###4      | 9/26 [00:00<00:00, 29.12it/s] 50%|#####     | 13/26 [00:00<00:00, 31.84it/s] 65%|######5   | 17/26 [00:00<00:00, 33.64it/s] 81%|########  | 21/26 [00:00<00:00, 34.87it/s] 96%|#########6| 25/26 [00:00<00:00, 35.46it/s]100%|##########| 26/26 [00:00<00:00, 30.19it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 26 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 27 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 28 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 29 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 30 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 31 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 32 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 33 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 34 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 35 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 36 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 37 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 38 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 39 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 40 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 41 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 42 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 43 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 44 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 45 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 46 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 47 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 48 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 49 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 50 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 51 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [1][  26/  26]	Loss 0.354 (0.404)	train_nll   0.35 (  0.40)	train_penalty   0.03 (  0.05)	weight_norm  21.95 ( 21.61)	train_acc   0.86 (  0.85)	train_minacc   0.12 (  0.03)	train_majacc   0.98 (  0.99)	train_corr   0.00 (  0.00)	l1 7.1094 (7.0585)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.45it/s] 23%|##3       | 6/26 [00:00<00:00, 26.77it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.77it/s] 42%|####2     | 11/26 [00:00<00:00, 35.19it/s] 62%|######1   | 16/26 [00:00<00:00, 39.86it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.86it/s] 81%|########  | 21/26 [00:00<00:00, 38.72it/s]100%|##########| 26/26 [00:00<00:00, 41.58it/s]100%|##########| 26/26 [00:00<00:00, 34.28it/s]
Test: [   0/  26]	Loss 0.445 (0.445)	test_acc   0.81 (  0.81)	test_minacc   0.05 (  0.05)	test_majacc   0.99 (  0.99)	Loss_d 0.445 (0.445)	test_acc_d   0.81 (  0.81)	test_minacc_d   0.05 (  0.05)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.95 (  0.95)
Test: [  10/  26]	Loss 0.394 (0.398)	test_acc   0.85 (  0.84)	test_minacc   0.04 (  0.04)	test_majacc   0.99 (  0.99)	Loss_d 0.394 (0.398)	test_acc_d   0.85 (  0.84)	test_minacc_d   0.04 (  0.04)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.95 (  0.95)
Test: [  20/  26]	Loss 0.398 (0.383)	test_acc   0.83 (  0.84)	test_minacc   0.06 (  0.05)	test_majacc   0.99 (  0.99)	Loss_d 0.398 (0.383)	test_acc_d   0.83 (  0.84)	test_minacc_d   0.06 (  0.05)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.95 (  0.95)
Test: [  26/  26]	Loss 0.335 (0.377)	test_acc   0.86 (  0.85)	test_minacc   0.03 (  0.05)	test_majacc   0.99 (  0.99)	Loss_d 0.335 (0.377)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.03 (  0.05)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.95)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.12it/s]
Test: [  0/  1]	Loss 1.789 (1.789)	test_acc   0.14 (  0.14)	test_minacc   0.04 (  0.04)	test_majacc   0.98 (  0.98)	Loss_d 1.789 (1.789)	test_acc_d   0.14 (  0.14)	test_minacc_d   0.04 (  0.04)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.90 (  0.90)
Test: [  1/  1]	Loss 1.789 (1.789)	test_acc   0.14 (  0.14)	test_minacc   0.04 (  0.04)	test_majacc   0.98 (  0.98)	Loss_d 1.789 (1.789)	test_acc_d   0.14 (  0.14)	test_minacc_d   0.04 (  0.04)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.90 (  0.90)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/161/checkpoints/model_best.pth
Overall Timing[  1/  1]	epoch_time 0.0371 (0.0575)	validation_time 0.0003 (0.0037)	train_time 0.0367 (0.0517)
record: (train_acc, test_acc) (0.8472000220417977, 0.13500000536441803)
last accs (train_acc, test_acc) (0.8472000220417977, 0.13500000536441803)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.54it/s] 23%|##3       | 6/26 [00:00<00:00, 27.78it/s] 38%|###8      | 10/26 [00:00<00:00, 30.84it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.06it/s] 69%|######9   | 18/26 [00:00<00:00, 32.12it/s] 85%|########4 | 22/26 [00:00<00:00, 33.32it/s]100%|##########| 26/26 [00:00<00:00, 34.30it/s]100%|##########| 26/26 [00:00<00:00, 29.99it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 52 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 53 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 54 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 55 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 56 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 57 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 58 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 59 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 60 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 61 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 62 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 63 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 64 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 65 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 66 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 67 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 68 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 69 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 70 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 71 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 72 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 73 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 74 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 75 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 76 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 77 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [2][  26/  26]	Loss 0.341 (0.366)	train_nll   0.34 (  0.37)	train_penalty   0.03 (  0.03)	weight_norm  22.10 ( 22.04)	train_acc   0.87 (  0.85)	train_minacc   0.21 (  0.13)	train_majacc   0.98 (  0.98)	train_corr   0.00 (  0.00)	l1 7.2045 (7.1412)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:09,  2.65it/s] 27%|##6       | 7/26 [00:00<00:01, 17.65it/s]                                               27%|##6       | 7/26 [00:00<00:01, 17.65it/s] 46%|####6     | 12/26 [00:00<00:00, 25.89it/s] 65%|######5   | 17/26 [00:00<00:00, 29.80it/s]                                                65%|######5   | 17/26 [00:00<00:00, 29.80it/s] 85%|########4 | 22/26 [00:00<00:00, 34.83it/s]100%|##########| 26/26 [00:00<00:00, 26.46it/s]
Test: [   0/  26]	Loss 0.422 (0.422)	test_acc   0.82 (  0.82)	test_minacc   0.09 (  0.09)	test_majacc   0.99 (  0.99)	Loss_d 0.422 (0.422)	test_acc_d   0.82 (  0.82)	test_minacc_d   0.09 (  0.09)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.93 (  0.93)
Test: [  10/  26]	Loss 0.373 (0.379)	test_acc   0.85 (  0.85)	test_minacc   0.07 (  0.09)	test_majacc   0.99 (  0.99)	Loss_d 0.373 (0.379)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.07 (  0.09)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.94 (  0.94)
Test: [  20/  26]	Loss 0.395 (0.367)	test_acc   0.84 (  0.85)	test_minacc   0.09 (  0.09)	test_majacc   0.99 (  0.99)	Loss_d 0.395 (0.367)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.09 (  0.09)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.93 (  0.94)
Test: [  26/  26]	Loss 0.302 (0.360)	test_acc   0.87 (  0.85)	test_minacc   0.15 (  0.10)	test_majacc   0.98 (  0.99)	Loss_d 0.302 (0.360)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.15 (  0.10)	test_majacc_d   0.98 (  0.99)	test_corr_d   0.93 (  0.94)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.52it/s]
Test: [  0/  1]	Loss 1.908 (1.908)	test_acc   0.18 (  0.18)	test_minacc   0.09 (  0.09)	test_majacc   0.96 (  0.96)	Loss_d 1.908 (1.908)	test_acc_d   0.18 (  0.18)	test_minacc_d   0.09 (  0.09)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.84 (  0.84)
Test: [  1/  1]	Loss 1.908 (1.908)	test_acc   0.18 (  0.18)	test_minacc   0.09 (  0.09)	test_majacc   0.96 (  0.96)	Loss_d 1.908 (1.908)	test_acc_d   0.18 (  0.18)	test_minacc_d   0.09 (  0.09)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.84 (  0.84)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/161/checkpoints/model_best.pth
Overall Timing[  2/  1]	epoch_time 0.0428 (0.0526)	validation_time 0.0004 (0.0026)	train_time 0.0424 (0.0486)
record: (train_acc, test_acc) (0.8532000221014023, 0.1810000091791153)
last accs (train_acc, test_acc) (0.8532000221014023, 0.1810000091791153)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.29it/s] 19%|#9        | 5/26 [00:00<00:01, 20.01it/s] 35%|###4      | 9/26 [00:00<00:00, 26.01it/s] 50%|#####     | 13/26 [00:00<00:00, 29.05it/s] 65%|######5   | 17/26 [00:00<00:00, 30.55it/s] 81%|########  | 21/26 [00:00<00:00, 32.21it/s] 96%|#########6| 25/26 [00:00<00:00, 33.74it/s]100%|##########| 26/26 [00:00<00:00, 27.72it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 78 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 79 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 80 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 81 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 82 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 83 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 84 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 85 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 86 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 87 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 88 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 89 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 90 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 91 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 92 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 93 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 94 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 95 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 96 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 97 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 98 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 99 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 100 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 101 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 102 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 103 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [3][  26/  26]	Loss 0.300 (0.339)	train_nll   0.30 (  0.34)	train_penalty   0.01 (  0.03)	weight_norm  22.17 ( 22.14)	train_acc   0.86 (  0.85)	train_minacc   0.29 (  0.25)	train_majacc   0.95 (  0.96)	train_corr   0.00 (  0.00)	l1 6.9788 (7.0837)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.72it/s] 23%|##3       | 6/26 [00:00<00:00, 31.60it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.60it/s] 42%|####2     | 11/26 [00:00<00:00, 38.43it/s] 62%|######1   | 16/26 [00:00<00:00, 42.27it/s]                                                62%|######1   | 16/26 [00:00<00:00, 42.27it/s] 81%|########  | 21/26 [00:00<00:00, 39.83it/s]100%|##########| 26/26 [00:00<00:00, 42.90it/s]100%|##########| 26/26 [00:00<00:00, 36.00it/s]
Test: [   0/  26]	Loss 0.364 (0.364)	test_acc   0.82 (  0.82)	test_minacc   0.23 (  0.23)	test_majacc   0.96 (  0.96)	Loss_d 0.364 (0.364)	test_acc_d   0.82 (  0.82)	test_minacc_d   0.23 (  0.23)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.89 (  0.89)
Test: [  10/  26]	Loss 0.326 (0.341)	test_acc   0.87 (  0.85)	test_minacc   0.20 (  0.18)	test_majacc   0.98 (  0.97)	Loss_d 0.326 (0.341)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.20 (  0.18)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.92 (  0.91)
Test: [  20/  26]	Loss 0.354 (0.327)	test_acc   0.85 (  0.86)	test_minacc   0.16 (  0.19)	test_majacc   0.99 (  0.98)	Loss_d 0.354 (0.327)	test_acc_d   0.85 (  0.86)	test_minacc_d   0.16 (  0.19)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.92 (  0.91)
Test: [  26/  26]	Loss 0.268 (0.321)	test_acc   0.87 (  0.86)	test_minacc   0.26 (  0.21)	test_majacc   0.97 (  0.98)	Loss_d 0.268 (0.321)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.26 (  0.21)	test_majacc_d   0.97 (  0.98)	test_corr_d   0.90 (  0.91)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.70it/s]
Test: [  0/  1]	Loss 1.763 (1.763)	test_acc   0.25 (  0.25)	test_minacc   0.17 (  0.17)	test_majacc   0.95 (  0.95)	Loss_d 1.763 (1.763)	test_acc_d   0.25 (  0.25)	test_minacc_d   0.17 (  0.17)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.73 (  0.73)
Test: [  1/  1]	Loss 1.763 (1.763)	test_acc   0.25 (  0.25)	test_minacc   0.17 (  0.17)	test_majacc   0.95 (  0.95)	Loss_d 1.763 (1.763)	test_acc_d   0.25 (  0.25)	test_minacc_d   0.17 (  0.17)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.73 (  0.73)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/161/checkpoints/model_best.pth
Overall Timing[  3/  1]	epoch_time 0.0410 (0.0497)	validation_time 0.0003 (0.0020)	train_time 0.0406 (0.0466)
record: (train_acc, test_acc) (0.8602000207304955, 0.24800001084804535)
last accs (train_acc, test_acc) (0.8602000207304955, 0.24800001084804535)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.84it/s]  8%|7         | 2/26 [00:00<00:02,  8.24it/s] 23%|##3       | 6/26 [00:00<00:01, 19.89it/s] 38%|###8      | 10/26 [00:00<00:00, 25.46it/s] 54%|#####3    | 14/26 [00:00<00:00, 29.05it/s] 69%|######9   | 18/26 [00:00<00:00, 31.35it/s] 85%|########4 | 22/26 [00:00<00:00, 32.87it/s]100%|##########| 26/26 [00:00<00:00, 34.48it/s]100%|##########| 26/26 [00:00<00:00, 26.82it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 104 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 105 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 106 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 107 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 108 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 109 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 110 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 111 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 112 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 113 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 114 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 115 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 116 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 117 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 118 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 119 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 120 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 121 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 122 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 123 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 124 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 125 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 126 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 127 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 128 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 129 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [4][  26/  26]	Loss 0.343 (0.330)	train_nll   0.34 (  0.33)	train_penalty   0.02 (  0.02)	weight_norm  22.26 ( 22.22)	train_acc   0.85 (  0.85)	train_minacc   0.32 (  0.29)	train_majacc   0.94 (  0.95)	train_corr   0.00 (  0.00)	l1 7.1065 (6.9684)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.62it/s] 27%|##6       | 7/26 [00:00<00:00, 35.99it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.99it/s] 46%|####6     | 12/26 [00:00<00:00, 40.03it/s] 65%|######5   | 17/26 [00:00<00:00, 39.55it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.55it/s] 85%|########4 | 22/26 [00:00<00:00, 41.82it/s]100%|##########| 26/26 [00:00<00:00, 37.04it/s]
Test: [   0/  26]	Loss 0.362 (0.362)	test_acc   0.81 (  0.81)	test_minacc   0.08 (  0.08)	test_majacc   0.98 (  0.98)	Loss_d 0.362 (0.362)	test_acc_d   0.81 (  0.81)	test_minacc_d   0.08 (  0.08)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.94 (  0.94)
Test: [  10/  26]	Loss 0.335 (0.337)	test_acc   0.86 (  0.85)	test_minacc   0.09 (  0.13)	test_majacc   0.99 (  0.99)	Loss_d 0.335 (0.337)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.09 (  0.13)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.94 (  0.94)
Test: [  20/  26]	Loss 0.352 (0.322)	test_acc   0.84 (  0.86)	test_minacc   0.10 (  0.13)	test_majacc   0.99 (  0.99)	Loss_d 0.352 (0.322)	test_acc_d   0.84 (  0.86)	test_minacc_d   0.10 (  0.13)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.95 (  0.94)
Test: [  26/  26]	Loss 0.293 (0.315)	test_acc   0.88 (  0.86)	test_minacc   0.21 (  0.14)	test_majacc   0.99 (  0.99)	Loss_d 0.293 (0.315)	test_acc_d   0.88 (  0.86)	test_minacc_d   0.21 (  0.14)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.94 (  0.94)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.65it/s]
Test: [  0/  1]	Loss 2.108 (2.108)	test_acc   0.19 (  0.19)	test_minacc   0.10 (  0.10)	test_majacc   0.97 (  0.97)	Loss_d 2.108 (2.108)	test_acc_d   0.19 (  0.19)	test_minacc_d   0.10 (  0.10)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.86 (  0.86)
Test: [  1/  1]	Loss 2.108 (2.108)	test_acc   0.19 (  0.19)	test_minacc   0.10 (  0.10)	test_majacc   0.97 (  0.97)	Loss_d 2.108 (2.108)	test_acc_d   0.19 (  0.19)	test_minacc_d   0.10 (  0.10)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.86 (  0.86)
Overall Timing[  4/  1]	epoch_time 0.0420 (0.0482)	validation_time 0.0004 (0.0017)	train_time 0.0416 (0.0456)
record: (train_acc, test_acc) (0.8602000207304955, 0.24800001084804535)
last accs (train_acc, test_acc) (0.8602000234723091, 0.19100001454353333)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.90it/s] 12%|#1        | 3/26 [00:00<00:01, 14.15it/s] 27%|##6       | 7/26 [00:00<00:00, 23.08it/s] 42%|####2     | 11/26 [00:00<00:00, 27.84it/s] 58%|#####7    | 15/26 [00:00<00:00, 30.63it/s] 73%|#######3  | 19/26 [00:00<00:00, 32.73it/s] 88%|########8 | 23/26 [00:00<00:00, 33.91it/s]100%|##########| 26/26 [00:00<00:00, 27.67it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 130 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 131 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 132 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 133 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 134 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 135 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 136 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 137 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 138 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 139 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 140 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 141 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 142 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 143 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 144 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 145 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 146 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 147 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 148 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 149 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 150 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 151 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 152 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 153 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 154 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 155 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [5][  26/  26]	Loss 0.277 (0.312)	train_nll   0.28 (  0.31)	train_penalty   0.00 (  0.02)	weight_norm  22.37 ( 22.32)	train_acc   0.87 (  0.86)	train_minacc   0.44 (  0.33)	train_majacc   0.94 (  0.96)	train_corr   0.00 (  0.00)	l1 6.6000 (6.7321)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.54it/s] 23%|##3       | 6/26 [00:00<00:00, 25.06it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.06it/s] 42%|####2     | 11/26 [00:00<00:00, 33.71it/s] 62%|######1   | 16/26 [00:00<00:00, 38.71it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.71it/s] 81%|########  | 21/26 [00:00<00:00, 37.26it/s]100%|##########| 26/26 [00:00<00:00, 40.48it/s]100%|##########| 26/26 [00:00<00:00, 32.45it/s]
Test: [   0/  26]	Loss 0.324 (0.324)	test_acc   0.84 (  0.84)	test_minacc   0.32 (  0.32)	test_majacc   0.96 (  0.96)	Loss_d 0.324 (0.324)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.87 (  0.87)
Test: [  10/  26]	Loss 0.317 (0.310)	test_acc   0.87 (  0.86)	test_minacc   0.30 (  0.31)	test_majacc   0.96 (  0.97)	Loss_d 0.317 (0.310)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.30 (  0.31)	test_majacc_d   0.96 (  0.97)	test_corr_d   0.89 (  0.89)
Test: [  20/  26]	Loss 0.302 (0.293)	test_acc   0.88 (  0.87)	test_minacc   0.37 (  0.34)	test_majacc   0.98 (  0.97)	Loss_d 0.302 (0.293)	test_acc_d   0.88 (  0.87)	test_minacc_d   0.37 (  0.34)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.90 (  0.89)
Test: [  26/  26]	Loss 0.254 (0.287)	test_acc   0.87 (  0.87)	test_minacc   0.35 (  0.35)	test_majacc   0.95 (  0.96)	Loss_d 0.254 (0.287)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.95 (  0.96)	test_corr_d   0.88 (  0.89)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.42it/s]
Test: [  0/  1]	Loss 1.830 (1.830)	test_acc   0.32 (  0.32)	test_minacc   0.25 (  0.25)	test_majacc   0.96 (  0.96)	Loss_d 1.830 (1.830)	test_acc_d   0.32 (  0.32)	test_minacc_d   0.25 (  0.25)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.69 (  0.69)
Test: [  1/  1]	Loss 1.830 (1.830)	test_acc   0.32 (  0.32)	test_minacc   0.25 (  0.25)	test_majacc   0.96 (  0.96)	Loss_d 1.830 (1.830)	test_acc_d   0.32 (  0.32)	test_minacc_d   0.25 (  0.25)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.69 (  0.69)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/161/checkpoints/model_best.pth
Overall Timing[  5/  1]	epoch_time 0.0421 (0.0472)	validation_time 0.0003 (0.0015)	train_time 0.0418 (0.0450)
record: (train_acc, test_acc) (0.8725000221133232, 0.32200002670288086)
last accs (train_acc, test_acc) (0.8725000221133232, 0.32200002670288086)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.35it/s] 19%|#9        | 5/26 [00:00<00:00, 21.51it/s] 35%|###4      | 9/26 [00:00<00:00, 28.05it/s] 50%|#####     | 13/26 [00:00<00:00, 31.66it/s] 65%|######5   | 17/26 [00:00<00:00, 34.27it/s] 81%|########  | 21/26 [00:00<00:00, 34.94it/s] 96%|#########6| 25/26 [00:00<00:00, 35.21it/s]100%|##########| 26/26 [00:00<00:00, 29.35it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 156 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 157 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 158 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 159 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 160 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 161 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 162 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 163 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 164 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 165 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 166 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 167 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 168 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 169 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 170 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 171 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 172 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 173 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 174 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 175 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 176 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 177 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 178 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 179 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 180 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 181 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [6][  26/  26]	Loss 0.250 (0.287)	train_nll   0.25 (  0.29)	train_penalty   0.00 (  0.01)	weight_norm  22.47 ( 22.42)	train_acc   0.88 (  0.88)	train_minacc   0.59 (  0.42)	train_majacc   0.93 (  0.96)	train_corr   0.00 (  0.00)	l1 6.6773 (6.6345)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 15.67it/s] 35%|###4      | 9/26 [00:00<00:00, 32.81it/s]                                               35%|###4      | 9/26 [00:00<00:00, 32.81it/s] 58%|#####7    | 15/26 [00:00<00:00, 38.24it/s]                                                58%|#####7    | 15/26 [00:00<00:00, 38.24it/s] 81%|########  | 21/26 [00:00<00:00, 43.10it/s]100%|##########| 26/26 [00:00<00:00, 44.66it/s]100%|##########| 26/26 [00:00<00:00, 36.43it/s]
Test: [   0/  26]	Loss 0.287 (0.287)	test_acc   0.84 (  0.84)	test_minacc   0.43 (  0.43)	test_majacc   0.94 (  0.94)	Loss_d 0.287 (0.287)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.84 (  0.84)
Test: [  10/  26]	Loss 0.278 (0.289)	test_acc   0.86 (  0.87)	test_minacc   0.34 (  0.38)	test_majacc   0.95 (  0.96)	Loss_d 0.278 (0.289)	test_acc_d   0.86 (  0.87)	test_minacc_d   0.34 (  0.38)	test_majacc_d   0.95 (  0.96)	test_corr_d   0.87 (  0.87)
Test: [  20/  26]	Loss 0.280 (0.274)	test_acc   0.90 (  0.88)	test_minacc   0.49 (  0.42)	test_majacc   0.99 (  0.96)	Loss_d 0.280 (0.274)	test_acc_d   0.90 (  0.88)	test_minacc_d   0.49 (  0.42)	test_majacc_d   0.99 (  0.96)	test_corr_d   0.89 (  0.88)
Test: [  26/  26]	Loss 0.227 (0.269)	test_acc   0.90 (  0.88)	test_minacc   0.59 (  0.42)	test_majacc   0.95 (  0.96)	Loss_d 0.227 (0.269)	test_acc_d   0.90 (  0.88)	test_minacc_d   0.59 (  0.42)	test_majacc_d   0.95 (  0.96)	test_corr_d   0.85 (  0.88)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.97it/s]
Test: [  0/  1]	Loss 1.879 (1.879)	test_acc   0.34 (  0.34)	test_minacc   0.27 (  0.27)	test_majacc   0.95 (  0.95)	Loss_d 1.879 (1.879)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.64 (  0.64)
Test: [  1/  1]	Loss 1.879 (1.879)	test_acc   0.34 (  0.34)	test_minacc   0.27 (  0.27)	test_majacc   0.95 (  0.95)	Loss_d 1.879 (1.879)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.64 (  0.64)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/161/checkpoints/model_best.pth
Overall Timing[  6/  1]	epoch_time 0.0410 (0.0463)	validation_time 0.0003 (0.0013)	train_time 0.0407 (0.0444)
record: (train_acc, test_acc) (0.8821000240445137, 0.3410000205039978)
last accs (train_acc, test_acc) (0.8821000240445137, 0.3410000205039978)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:09,  2.73it/s] 15%|#5        | 4/26 [00:00<00:02, 10.15it/s] 31%|###       | 8/26 [00:00<00:00, 18.02it/s] 46%|####6     | 12/26 [00:00<00:00, 23.34it/s] 62%|######1   | 16/26 [00:00<00:00, 27.00it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.00it/s] 92%|#########2| 24/26 [00:01<00:00, 31.94it/s]100%|##########| 26/26 [00:01<00:00, 22.96it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 182 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 183 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 184 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 185 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 186 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 187 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 188 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 189 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 190 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 191 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 192 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 193 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 194 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 195 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 196 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 197 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 198 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 199 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 200 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 201 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 202 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 203 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 204 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 205 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 206 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 207 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [7][  26/  26]	Loss 0.000 (0.202)	train_nll   0.47 (  0.32)	train_penalty   0.00 (  0.01)	weight_norm  22.60 ( 22.53)	train_acc   0.78 (  0.85)	train_minacc   0.88 (  0.47)	train_majacc   0.76 (  0.92)	train_corr   0.00 (  0.00)	l1 5.6481 (6.6470)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.03it/s] 23%|##3       | 6/26 [00:00<00:00, 21.95it/s]                                               23%|##3       | 6/26 [00:00<00:00, 21.95it/s] 42%|####2     | 11/26 [00:00<00:00, 31.16it/s] 62%|######1   | 16/26 [00:00<00:00, 36.53it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.53it/s] 81%|########  | 21/26 [00:00<00:00, 39.11it/s]100%|##########| 26/26 [00:00<00:00, 41.40it/s]100%|##########| 26/26 [00:00<00:00, 31.80it/s]
Test: [   0/  26]	Loss 0.524 (0.524)	test_acc   0.72 (  0.72)	test_minacc   0.89 (  0.89)	test_majacc   0.67 (  0.67)	Loss_d 0.524 (0.524)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.89 (  0.89)	test_majacc_d   0.67 (  0.67)	test_corr_d   0.25 (  0.25)
Test: [  10/  26]	Loss 0.539 (0.531)	test_acc   0.73 (  0.72)	test_minacc   0.91 (  0.85)	test_majacc   0.69 (  0.70)	Loss_d 0.539 (0.531)	test_acc_d   0.73 (  0.72)	test_minacc_d   0.91 (  0.85)	test_majacc_d   0.69 (  0.70)	test_corr_d   0.32 (  0.34)
Test: [  20/  26]	Loss 0.527 (0.526)	test_acc   0.73 (  0.73)	test_minacc   0.82 (  0.85)	test_majacc   0.71 (  0.71)	Loss_d 0.527 (0.526)	test_acc_d   0.73 (  0.73)	test_minacc_d   0.82 (  0.85)	test_majacc_d   0.71 (  0.71)	test_corr_d   0.36 (  0.36)
Test: [  26/  26]	Loss 0.498 (0.526)	test_acc   0.76 (  0.73)	test_minacc   0.88 (  0.85)	test_majacc   0.74 (  0.71)	Loss_d 0.498 (0.526)	test_acc_d   0.76 (  0.73)	test_minacc_d   0.88 (  0.85)	test_majacc_d   0.74 (  0.71)	test_corr_d   0.35 (  0.36)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.09it/s]
Test: [  0/  1]	Loss 0.660 (0.660)	test_acc   0.71 (  0.71)	test_minacc   0.71 (  0.71)	test_majacc   0.69 (  0.69)	Loss_d 0.660 (0.660)	test_acc_d   0.71 (  0.71)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.69 (  0.69)	test_corr_d  -0.29 ( -0.29)
Test: [  1/  1]	Loss 0.660 (0.660)	test_acc   0.71 (  0.71)	test_minacc   0.71 (  0.71)	test_majacc   0.69 (  0.69)	Loss_d 0.660 (0.660)	test_acc_d   0.71 (  0.71)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.69 (  0.69)	test_corr_d  -0.29 ( -0.29)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/161/checkpoints/model_best.pth
Overall Timing[  7/  1]	epoch_time 0.0415 (0.0457)	validation_time 0.0005 (0.0012)	train_time 0.0410 (0.0439)
record: (train_acc, test_acc) (0.7288000310063362, 0.7110000252723694)
last accs (train_acc, test_acc) (0.7288000310063362, 0.7110000252723694)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.82it/s] 15%|#5        | 4/26 [00:00<00:01, 17.90it/s] 31%|###       | 8/26 [00:00<00:00, 25.11it/s] 46%|####6     | 12/26 [00:00<00:00, 29.33it/s] 62%|######1   | 16/26 [00:00<00:00, 31.48it/s] 77%|#######6  | 20/26 [00:00<00:00, 33.19it/s] 92%|#########2| 24/26 [00:00<00:00, 33.77it/s]100%|##########| 26/26 [00:00<00:00, 27.98it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 208 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 209 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 210 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 211 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 212 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 213 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 214 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 215 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 216 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 217 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 218 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 219 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 220 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 221 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 222 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 223 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 224 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 225 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 226 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 227 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 228 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 229 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 230 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 231 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 232 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 233 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [8][  26/  26]	Loss 0.001 (0.001)	train_nll   0.67 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm  22.66 ( 22.64)	train_acc   0.50 (  0.59)	train_minacc   0.71 (  0.61)	train_majacc   0.47 (  0.58)	train_corr   0.00 (  0.00)	l1 4.6487 (4.8549)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.60it/s] 23%|##3       | 6/26 [00:00<00:00, 27.25it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.25it/s] 42%|####2     | 11/26 [00:00<00:00, 35.39it/s] 62%|######1   | 16/26 [00:00<00:00, 38.93it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.93it/s] 81%|########  | 21/26 [00:00<00:00, 38.13it/s]100%|##########| 26/26 [00:00<00:00, 41.38it/s]100%|##########| 26/26 [00:00<00:00, 33.71it/s]
Test: [   0/  26]	Loss 0.690 (0.690)	test_acc   0.51 (  0.51)	test_minacc   0.62 (  0.62)	test_majacc   0.49 (  0.49)	Loss_d 0.690 (0.690)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.49 (  0.49)	test_corr_d  -0.03 ( -0.03)
Test: [  10/  26]	Loss 0.691 (0.692)	test_acc   0.51 (  0.48)	test_minacc   0.62 (  0.58)	test_majacc   0.49 (  0.46)	Loss_d 0.691 (0.692)	test_acc_d   0.51 (  0.48)	test_minacc_d   0.62 (  0.58)	test_majacc_d   0.49 (  0.46)	test_corr_d  -0.08 (  0.03)
Test: [  20/  26]	Loss 0.690 (0.691)	test_acc   0.47 (  0.48)	test_minacc   0.57 (  0.56)	test_majacc   0.46 (  0.46)	Loss_d 0.690 (0.691)	test_acc_d   0.47 (  0.48)	test_minacc_d   0.57 (  0.56)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.05 (  0.04)
Test: [  26/  26]	Loss 0.687 (0.691)	test_acc   0.53 (  0.48)	test_minacc   0.56 (  0.55)	test_majacc   0.52 (  0.47)	Loss_d 0.687 (0.691)	test_acc_d   0.53 (  0.48)	test_minacc_d   0.56 (  0.55)	test_majacc_d   0.52 (  0.47)	test_corr_d  -0.01 (  0.04)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.73it/s]
Test: [  0/  1]	Loss 0.689 (0.689)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.49 (  0.49)	Loss_d 0.689 (0.689)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.49 (  0.49)	test_corr_d  -0.17 ( -0.17)
Test: [  1/  1]	Loss 0.689 (0.689)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.49 (  0.49)	Loss_d 0.689 (0.689)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.49 (  0.49)	test_corr_d  -0.17 ( -0.17)
Overall Timing[  8/  1]	epoch_time 0.0409 (0.0452)	validation_time 0.0004 (0.0011)	train_time 0.0405 (0.0436)
record: (train_acc, test_acc) (0.7288000310063362, 0.7110000252723694)
last accs (train_acc, test_acc) (0.47890000355243684, 0.51500004529953)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.93it/s] 19%|#9        | 5/26 [00:00<00:00, 23.64it/s] 35%|###4      | 9/26 [00:00<00:00, 28.61it/s] 50%|#####     | 13/26 [00:00<00:00, 30.93it/s] 65%|######5   | 17/26 [00:00<00:00, 32.31it/s] 81%|########  | 21/26 [00:00<00:00, 33.41it/s] 96%|#########6| 25/26 [00:00<00:00, 33.65it/s]100%|##########| 26/26 [00:00<00:00, 29.69it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 234 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 235 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 236 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 237 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 238 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 239 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 240 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 241 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 242 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 243 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 244 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 245 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 246 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 247 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 248 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 249 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 250 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 251 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 252 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 253 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 254 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 255 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 256 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 257 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 258 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 259 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [9][  26/  26]	Loss 0.000 (0.000)	train_nll   0.70 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  22.67 ( 22.67)	train_acc   0.48 (  0.54)	train_minacc   0.47 (  0.54)	train_majacc   0.48 (  0.54)	train_corr   0.00 (  0.00)	l1 4.6514 (4.6590)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.19it/s] 23%|##3       | 6/26 [00:00<00:00, 31.81it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.81it/s] 42%|####2     | 11/26 [00:00<00:00, 39.07it/s] 62%|######1   | 16/26 [00:00<00:00, 42.32it/s]                                                62%|######1   | 16/26 [00:00<00:00, 42.32it/s] 81%|########  | 21/26 [00:00<00:00, 42.07it/s]100%|##########| 26/26 [00:00<00:00, 36.95it/s]
Test: [   0/  26]	Loss 0.697 (0.697)	test_acc   0.51 (  0.51)	test_minacc   0.39 (  0.39)	test_majacc   0.54 (  0.54)	Loss_d 0.697 (0.697)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.54 (  0.54)	test_corr_d   0.20 (  0.20)
Test: [  10/  26]	Loss 0.696 (0.688)	test_acc   0.52 (  0.55)	test_minacc   0.45 (  0.46)	test_majacc   0.53 (  0.56)	Loss_d 0.696 (0.688)	test_acc_d   0.52 (  0.55)	test_minacc_d   0.45 (  0.46)	test_majacc_d   0.53 (  0.56)	test_corr_d   0.15 (  0.26)
Test: [  20/  26]	Loss 0.684 (0.687)	test_acc   0.56 (  0.55)	test_minacc   0.46 (  0.48)	test_majacc   0.58 (  0.56)	Loss_d 0.684 (0.687)	test_acc_d   0.56 (  0.55)	test_minacc_d   0.46 (  0.48)	test_majacc_d   0.58 (  0.56)	test_corr_d   0.29 (  0.27)
Test: [  26/  26]	Loss 0.698 (0.687)	test_acc   0.49 (  0.55)	test_minacc   0.47 (  0.49)	test_majacc   0.49 (  0.56)	Loss_d 0.698 (0.687)	test_acc_d   0.49 (  0.55)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.49 (  0.56)	test_corr_d   0.20 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.85it/s]
Test: [  0/  1]	Loss 0.706 (0.706)	test_acc   0.49 (  0.49)	test_minacc   0.49 (  0.49)	test_majacc   0.49 (  0.49)	Loss_d 0.706 (0.706)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.23 (  0.23)
Test: [  1/  1]	Loss 0.706 (0.706)	test_acc   0.49 (  0.49)	test_minacc   0.49 (  0.49)	test_majacc   0.49 (  0.49)	Loss_d 0.706 (0.706)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.23 (  0.23)
Overall Timing[  9/  1]	epoch_time 0.0413 (0.0448)	validation_time 0.0005 (0.0011)	train_time 0.0408 (0.0433)
record: (train_acc, test_acc) (0.7288000310063362, 0.7110000252723694)
last accs (train_acc, test_acc) (0.5500000129938125, 0.4870000183582306)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.09it/s] 15%|#5        | 4/26 [00:00<00:01, 15.29it/s] 31%|###       | 8/26 [00:00<00:00, 22.53it/s] 46%|####6     | 12/26 [00:00<00:00, 26.42it/s] 62%|######1   | 16/26 [00:00<00:00, 28.51it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.56it/s] 92%|#########2| 24/26 [00:00<00:00, 31.79it/s]100%|##########| 26/26 [00:01<00:00, 25.71it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 260 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 261 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 262 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 263 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 264 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 265 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 266 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 267 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 268 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 269 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 270 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 271 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 272 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 273 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 274 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 275 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 276 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 277 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 278 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 279 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 280 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 281 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 282 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 283 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 284 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 285 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [10][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  22.67 ( 22.67)	train_acc   0.48 (  0.52)	train_minacc   0.47 (  0.54)	train_majacc   0.48 (  0.52)	train_corr   0.00 (  0.00)	l1 4.5685 (4.5932)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.39it/s] 23%|##3       | 6/26 [00:00<00:00, 29.39it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.39it/s] 42%|####2     | 11/26 [00:00<00:00, 33.66it/s] 62%|######1   | 16/26 [00:00<00:00, 38.66it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.66it/s] 81%|########  | 21/26 [00:00<00:00, 40.97it/s]100%|##########| 26/26 [00:00<00:00, 43.32it/s]100%|##########| 26/26 [00:00<00:00, 35.02it/s]
Test: [   0/  26]	Loss 0.691 (0.691)	test_acc   0.50 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.49 (  0.49)	Loss_d 0.691 (0.691)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.07 (  0.07)
Test: [  10/  26]	Loss 0.691 (0.689)	test_acc   0.47 (  0.50)	test_minacc   0.55 (  0.50)	test_majacc   0.45 (  0.50)	Loss_d 0.691 (0.689)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.55 (  0.50)	test_majacc_d   0.45 (  0.50)	test_corr_d   0.00 (  0.11)
Test: [  20/  26]	Loss 0.687 (0.688)	test_acc   0.50 (  0.50)	test_minacc   0.46 (  0.50)	test_majacc   0.51 (  0.50)	Loss_d 0.687 (0.688)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.46 (  0.50)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.14 (  0.12)
Test: [  26/  26]	Loss 0.691 (0.689)	test_acc   0.48 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.48 (  0.51)	Loss_d 0.691 (0.689)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.48 (  0.51)	test_corr_d   0.07 (  0.12)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 57.94it/s]
Test: [  0/  1]	Loss 0.701 (0.701)	test_acc   0.43 (  0.43)	test_minacc   0.42 (  0.42)	test_majacc   0.53 (  0.53)	Loss_d 0.701 (0.701)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.53 (  0.53)	test_corr_d   0.14 (  0.14)
Test: [  1/  1]	Loss 0.701 (0.701)	test_acc   0.43 (  0.43)	test_minacc   0.42 (  0.42)	test_majacc   0.53 (  0.53)	Loss_d 0.701 (0.701)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.53 (  0.53)	test_corr_d   0.14 (  0.14)
Overall Timing[ 10/  1]	epoch_time 0.0438 (0.0447)	validation_time 0.0004 (0.0010)	train_time 0.0435 (0.0433)
record: (train_acc, test_acc) (0.7288000310063362, 0.7110000252723694)
last accs (train_acc, test_acc) (0.5040000129938126, 0.4320000112056732)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.52it/s] 19%|#9        | 5/26 [00:00<00:00, 22.56it/s] 35%|###4      | 9/26 [00:00<00:00, 27.06it/s] 50%|#####     | 13/26 [00:00<00:00, 30.31it/s] 65%|######5   | 17/26 [00:00<00:00, 31.94it/s] 81%|########  | 21/26 [00:00<00:00, 32.66it/s] 96%|#########6| 25/26 [00:00<00:00, 33.39it/s]100%|##########| 26/26 [00:00<00:00, 28.40it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 286 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 287 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 288 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 289 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 290 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 291 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 292 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 293 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 294 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 295 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 296 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 297 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 298 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 299 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 300 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 301 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 302 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 303 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 304 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 305 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 306 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 307 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 308 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 309 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 310 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 311 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [11][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  22.67 ( 22.67)	train_acc   0.49 (  0.50)	train_minacc   0.38 (  0.46)	train_majacc   0.50 (  0.51)	train_corr   0.00 (  0.00)	l1 4.5703 (4.5742)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 13.74it/s] 27%|##6       | 7/26 [00:00<00:00, 30.52it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.52it/s] 46%|####6     | 12/26 [00:00<00:00, 37.04it/s] 65%|######5   | 17/26 [00:00<00:00, 41.14it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.14it/s] 85%|########4 | 22/26 [00:00<00:00, 39.82it/s]100%|##########| 26/26 [00:00<00:00, 35.63it/s]
Test: [   0/  26]	Loss 0.690 (0.690)	test_acc   0.51 (  0.51)	test_minacc   0.41 (  0.41)	test_majacc   0.54 (  0.54)	Loss_d 0.690 (0.690)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.54 (  0.54)	test_corr_d   0.12 (  0.12)
Test: [  10/  26]	Loss 0.691 (0.688)	test_acc   0.54 (  0.56)	test_minacc   0.55 (  0.44)	test_majacc   0.54 (  0.58)	Loss_d 0.691 (0.688)	test_acc_d   0.54 (  0.56)	test_minacc_d   0.55 (  0.44)	test_majacc_d   0.54 (  0.58)	test_corr_d   0.06 (  0.16)
Test: [  20/  26]	Loss 0.685 (0.687)	test_acc   0.60 (  0.57)	test_minacc   0.46 (  0.45)	test_majacc   0.63 (  0.59)	Loss_d 0.685 (0.687)	test_acc_d   0.60 (  0.57)	test_minacc_d   0.46 (  0.45)	test_majacc_d   0.63 (  0.59)	test_corr_d   0.20 (  0.18)
Test: [  26/  26]	Loss 0.691 (0.687)	test_acc   0.51 (  0.57)	test_minacc   0.38 (  0.45)	test_majacc   0.53 (  0.59)	Loss_d 0.691 (0.687)	test_acc_d   0.51 (  0.57)	test_minacc_d   0.38 (  0.45)	test_majacc_d   0.53 (  0.59)	test_corr_d   0.12 (  0.18)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.91it/s]
Test: [  0/  1]	Loss 0.701 (0.701)	test_acc   0.40 (  0.40)	test_minacc   0.39 (  0.39)	test_majacc   0.56 (  0.56)	Loss_d 0.701 (0.701)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.56 (  0.56)	test_corr_d   0.20 (  0.20)
Test: [  1/  1]	Loss 0.701 (0.701)	test_acc   0.40 (  0.40)	test_minacc   0.39 (  0.39)	test_majacc   0.56 (  0.56)	Loss_d 0.701 (0.701)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.56 (  0.56)	test_corr_d   0.20 (  0.20)
Overall Timing[ 11/  1]	epoch_time 0.0477 (0.0449)	validation_time 0.0005 (0.0009)	train_time 0.0472 (0.0436)
record: (train_acc, test_acc) (0.7288000310063362, 0.7110000252723694)
last accs (train_acc, test_acc) (0.5708000138401985, 0.40300002694129944)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 23.18it/s] 27%|##6       | 7/26 [00:00<00:00, 28.55it/s] 42%|####2     | 11/26 [00:00<00:00, 30.61it/s] 58%|#####7    | 15/26 [00:00<00:00, 32.06it/s] 73%|#######3  | 19/26 [00:00<00:00, 32.58it/s] 88%|########8 | 23/26 [00:00<00:00, 33.29it/s]100%|##########| 26/26 [00:00<00:00, 30.05it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 312 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 313 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 314 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 315 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 316 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 317 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 318 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 319 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 320 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 321 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 322 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 323 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 324 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 325 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 326 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 327 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 328 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 329 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 330 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 331 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 332 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 333 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 334 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 335 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 336 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 337 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [12][  26/  26]	Loss 0.000 (0.000)	train_nll   0.70 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  22.67 ( 22.67)	train_acc   0.47 (  0.51)	train_minacc   0.35 (  0.44)	train_majacc   0.49 (  0.53)	train_corr   0.00 (  0.00)	l1 4.5695 (4.5727)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.39it/s] 23%|##3       | 6/26 [00:00<00:00, 30.45it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.45it/s] 42%|####2     | 11/26 [00:00<00:00, 37.00it/s] 62%|######1   | 16/26 [00:00<00:00, 41.33it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.33it/s] 81%|########  | 21/26 [00:00<00:00, 38.91it/s]100%|##########| 26/26 [00:00<00:00, 41.57it/s]100%|##########| 26/26 [00:00<00:00, 34.98it/s]
Test: [   0/  26]	Loss 0.692 (0.692)	test_acc   0.50 (  0.50)	test_minacc   0.38 (  0.38)	test_majacc   0.53 (  0.53)	Loss_d 0.692 (0.692)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.53 (  0.53)	test_corr_d   0.08 (  0.08)
Test: [  10/  26]	Loss 0.693 (0.690)	test_acc   0.52 (  0.54)	test_minacc   0.50 (  0.41)	test_majacc   0.53 (  0.56)	Loss_d 0.693 (0.690)	test_acc_d   0.52 (  0.54)	test_minacc_d   0.50 (  0.41)	test_majacc_d   0.53 (  0.56)	test_corr_d   0.01 (  0.11)
Test: [  20/  26]	Loss 0.688 (0.690)	test_acc   0.58 (  0.55)	test_minacc   0.45 (  0.43)	test_majacc   0.61 (  0.57)	Loss_d 0.688 (0.690)	test_acc_d   0.58 (  0.55)	test_minacc_d   0.45 (  0.43)	test_majacc_d   0.61 (  0.57)	test_corr_d   0.15 (  0.13)
Test: [  26/  26]	Loss 0.694 (0.690)	test_acc   0.48 (  0.55)	test_minacc   0.35 (  0.43)	test_majacc   0.50 (  0.57)	Loss_d 0.694 (0.690)	test_acc_d   0.48 (  0.55)	test_minacc_d   0.35 (  0.43)	test_majacc_d   0.50 (  0.57)	test_corr_d   0.06 (  0.13)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.96it/s]
Test: [  0/  1]	Loss 0.701 (0.701)	test_acc   0.40 (  0.40)	test_minacc   0.39 (  0.39)	test_majacc   0.54 (  0.54)	Loss_d 0.701 (0.701)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.54 (  0.54)	test_corr_d   0.21 (  0.21)
Test: [  1/  1]	Loss 0.701 (0.701)	test_acc   0.40 (  0.40)	test_minacc   0.39 (  0.39)	test_majacc   0.54 (  0.54)	Loss_d 0.701 (0.701)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.54 (  0.54)	test_corr_d   0.21 (  0.21)
Overall Timing[ 12/  1]	epoch_time 0.0427 (0.0448)	validation_time 0.0005 (0.0009)	train_time 0.0422 (0.0435)
record: (train_acc, test_acc) (0.7288000310063362, 0.7110000252723694)
last accs (train_acc, test_acc) (0.5464000151157379, 0.40400001406669617)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 20.76it/s] 27%|##6       | 7/26 [00:00<00:00, 27.29it/s] 42%|####2     | 11/26 [00:00<00:00, 30.10it/s] 58%|#####7    | 15/26 [00:00<00:00, 32.43it/s] 73%|#######3  | 19/26 [00:00<00:00, 31.59it/s] 88%|########8 | 23/26 [00:00<00:00, 32.10it/s]100%|##########| 26/26 [00:00<00:00, 29.22it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 338 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 339 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 340 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 341 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 342 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 343 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 344 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 345 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 346 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 347 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 348 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 349 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 350 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 351 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 352 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 353 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 354 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 355 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 356 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 357 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 358 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 359 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 360 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 361 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 362 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 363 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [13][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  22.67 ( 22.67)	train_acc   0.47 (  0.50)	train_minacc   0.41 (  0.45)	train_majacc   0.48 (  0.51)	train_corr   0.00 (  0.00)	l1 4.5600 (4.5651)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 15%|#5        | 4/26 [00:00<00:00, 34.55it/s] 35%|###4      | 9/26 [00:00<00:00, 40.92it/s]                                               35%|###4      | 9/26 [00:00<00:00, 40.92it/s] 54%|#####3    | 14/26 [00:00<00:00, 43.17it/s] 73%|#######3  | 19/26 [00:00<00:00, 43.96it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 43.96it/s] 92%|#########2| 24/26 [00:00<00:00, 41.89it/s]100%|##########| 26/26 [00:00<00:00, 38.32it/s]
Test: [   0/  26]	Loss 0.691 (0.691)	test_acc   0.51 (  0.51)	test_minacc   0.39 (  0.39)	test_majacc   0.54 (  0.54)	Loss_d 0.691 (0.691)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.54 (  0.54)	test_corr_d   0.09 (  0.09)
Test: [  10/  26]	Loss 0.692 (0.689)	test_acc   0.52 (  0.54)	test_minacc   0.57 (  0.43)	test_majacc   0.51 (  0.56)	Loss_d 0.692 (0.689)	test_acc_d   0.52 (  0.54)	test_minacc_d   0.57 (  0.43)	test_majacc_d   0.51 (  0.56)	test_corr_d   0.02 (  0.13)
Test: [  20/  26]	Loss 0.688 (0.689)	test_acc   0.58 (  0.55)	test_minacc   0.46 (  0.45)	test_majacc   0.60 (  0.57)	Loss_d 0.688 (0.689)	test_acc_d   0.58 (  0.55)	test_minacc_d   0.46 (  0.45)	test_majacc_d   0.60 (  0.57)	test_corr_d   0.17 (  0.14)
Test: [  26/  26]	Loss 0.693 (0.689)	test_acc   0.48 (  0.55)	test_minacc   0.35 (  0.44)	test_majacc   0.50 (  0.57)	Loss_d 0.693 (0.689)	test_acc_d   0.48 (  0.55)	test_minacc_d   0.35 (  0.44)	test_majacc_d   0.50 (  0.57)	test_corr_d   0.08 (  0.14)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.85it/s]
Test: [  0/  1]	Loss 0.700 (0.700)	test_acc   0.40 (  0.40)	test_minacc   0.38 (  0.38)	test_majacc   0.57 (  0.57)	Loss_d 0.700 (0.700)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.57 (  0.57)	test_corr_d   0.20 (  0.20)
Test: [  1/  1]	Loss 0.700 (0.700)	test_acc   0.40 (  0.40)	test_minacc   0.38 (  0.38)	test_majacc   0.57 (  0.57)	Loss_d 0.700 (0.700)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.57 (  0.57)	test_corr_d   0.20 (  0.20)
Overall Timing[ 13/  1]	epoch_time 0.0457 (0.0448)	validation_time 0.0006 (0.0009)	train_time 0.0450 (0.0436)
record: (train_acc, test_acc) (0.7288000310063362, 0.7110000252723694)
last accs (train_acc, test_acc) (0.5495000077486039, 0.39500001072883606)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.58it/s] 19%|#9        | 5/26 [00:00<00:01, 17.70it/s] 35%|###4      | 9/26 [00:00<00:00, 24.72it/s] 50%|#####     | 13/26 [00:00<00:00, 28.82it/s] 65%|######5   | 17/26 [00:00<00:00, 31.25it/s] 81%|########  | 21/26 [00:00<00:00, 32.42it/s] 96%|#########6| 25/26 [00:00<00:00, 32.77it/s]100%|##########| 26/26 [00:00<00:00, 26.62it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 364 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 365 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 366 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 367 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 368 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 369 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 370 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 371 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 372 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 373 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 374 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 375 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 376 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 377 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 378 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 379 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 380 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 381 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 382 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 383 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 384 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 385 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 386 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 387 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 388 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 389 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [14][  26/  26]	Loss 0.000 (0.000)	train_nll   0.70 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  22.67 ( 22.67)	train_acc   0.46 (  0.50)	train_minacc   0.35 (  0.45)	train_majacc   0.48 (  0.51)	train_corr   0.00 (  0.00)	l1 4.5592 (4.5615)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.26it/s] 27%|##6       | 7/26 [00:00<00:00, 34.09it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.09it/s] 46%|####6     | 12/26 [00:00<00:00, 39.42it/s] 65%|######5   | 17/26 [00:00<00:00, 41.51it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.51it/s] 85%|########4 | 22/26 [00:00<00:00, 39.86it/s]100%|##########| 26/26 [00:00<00:00, 37.04it/s]
Test: [   0/  26]	Loss 0.691 (0.691)	test_acc   0.54 (  0.54)	test_minacc   0.36 (  0.36)	test_majacc   0.58 (  0.58)	Loss_d 0.691 (0.691)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.58 (  0.58)	test_corr_d   0.10 (  0.10)
Test: [  10/  26]	Loss 0.692 (0.690)	test_acc   0.54 (  0.56)	test_minacc   0.57 (  0.42)	test_majacc   0.54 (  0.59)	Loss_d 0.692 (0.690)	test_acc_d   0.54 (  0.56)	test_minacc_d   0.57 (  0.42)	test_majacc_d   0.54 (  0.59)	test_corr_d   0.03 (  0.13)
Test: [  20/  26]	Loss 0.688 (0.689)	test_acc   0.60 (  0.58)	test_minacc   0.45 (  0.44)	test_majacc   0.63 (  0.60)	Loss_d 0.688 (0.689)	test_acc_d   0.60 (  0.58)	test_minacc_d   0.45 (  0.44)	test_majacc_d   0.63 (  0.60)	test_corr_d   0.18 (  0.15)
Test: [  26/  26]	Loss 0.693 (0.689)	test_acc   0.48 (  0.57)	test_minacc   0.35 (  0.43)	test_majacc   0.50 (  0.60)	Loss_d 0.693 (0.689)	test_acc_d   0.48 (  0.57)	test_minacc_d   0.35 (  0.43)	test_majacc_d   0.50 (  0.60)	test_corr_d   0.08 (  0.15)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 56.95it/s]
Test: [  0/  1]	Loss 0.700 (0.700)	test_acc   0.39 (  0.39)	test_minacc   0.37 (  0.37)	test_majacc   0.57 (  0.57)	Loss_d 0.700 (0.700)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.57 (  0.57)	test_corr_d   0.22 (  0.22)
Test: [  1/  1]	Loss 0.700 (0.700)	test_acc   0.39 (  0.39)	test_minacc   0.37 (  0.37)	test_majacc   0.57 (  0.57)	Loss_d 0.700 (0.700)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.57 (  0.57)	test_corr_d   0.22 (  0.22)
Overall Timing[ 14/  1]	epoch_time 0.0407 (0.0446)	validation_time 0.0004 (0.0009)	train_time 0.0403 (0.0434)
record: (train_acc, test_acc) (0.7288000310063362, 0.7110000252723694)
last accs (train_acc, test_acc) (0.5739000090360642, 0.3930000066757202)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.66it/s] 15%|#5        | 4/26 [00:00<00:01, 14.02it/s] 31%|###       | 8/26 [00:00<00:00, 21.52it/s] 46%|####6     | 12/26 [00:00<00:00, 26.08it/s] 62%|######1   | 16/26 [00:00<00:00, 28.78it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.49it/s] 92%|#########2| 24/26 [00:00<00:00, 31.71it/s]100%|##########| 26/26 [00:01<00:00, 25.04it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 390 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 391 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 392 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 393 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 394 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 395 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 396 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 397 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 398 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 399 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 400 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 401 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 402 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 403 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 404 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 405 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 406 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 407 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 408 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 409 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 410 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 411 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 412 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 413 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 414 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 415 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [15][  26/  26]	Loss 0.000 (0.000)	train_nll   0.70 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  22.67 ( 22.67)	train_acc   0.45 (  0.50)	train_minacc   0.35 (  0.45)	train_majacc   0.47 (  0.51)	train_corr   0.00 (  0.00)	l1 4.5563 (4.5587)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.13it/s] 27%|##6       | 7/26 [00:00<00:00, 31.39it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.39it/s] 46%|####6     | 12/26 [00:00<00:00, 37.84it/s] 65%|######5   | 17/26 [00:00<00:00, 37.05it/s]                                                65%|######5   | 17/26 [00:00<00:00, 37.05it/s] 85%|########4 | 22/26 [00:00<00:00, 40.20it/s]100%|##########| 26/26 [00:00<00:00, 34.50it/s]
Test: [   0/  26]	Loss 0.691 (0.691)	test_acc   0.53 (  0.53)	test_minacc   0.38 (  0.38)	test_majacc   0.57 (  0.57)	Loss_d 0.691 (0.691)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.57 (  0.57)	test_corr_d   0.10 (  0.10)
Test: [  10/  26]	Loss 0.692 (0.690)	test_acc   0.54 (  0.57)	test_minacc   0.55 (  0.42)	test_majacc   0.54 (  0.60)	Loss_d 0.692 (0.690)	test_acc_d   0.54 (  0.57)	test_minacc_d   0.55 (  0.42)	test_majacc_d   0.54 (  0.60)	test_corr_d   0.03 (  0.13)
Test: [  20/  26]	Loss 0.688 (0.689)	test_acc   0.61 (  0.58)	test_minacc   0.43 (  0.43)	test_majacc   0.64 (  0.61)	Loss_d 0.688 (0.689)	test_acc_d   0.61 (  0.58)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.64 (  0.61)	test_corr_d   0.17 (  0.15)
Test: [  26/  26]	Loss 0.693 (0.689)	test_acc   0.48 (  0.58)	test_minacc   0.35 (  0.43)	test_majacc   0.50 (  0.61)	Loss_d 0.693 (0.689)	test_acc_d   0.48 (  0.58)	test_minacc_d   0.35 (  0.43)	test_majacc_d   0.50 (  0.61)	test_corr_d   0.08 (  0.15)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.20it/s]
Test: [  0/  1]	Loss 0.700 (0.700)	test_acc   0.39 (  0.39)	test_minacc   0.37 (  0.37)	test_majacc   0.57 (  0.57)	Loss_d 0.700 (0.700)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.57 (  0.57)	test_corr_d   0.23 (  0.23)
Test: [  1/  1]	Loss 0.700 (0.700)	test_acc   0.39 (  0.39)	test_minacc   0.37 (  0.37)	test_majacc   0.57 (  0.57)	Loss_d 0.700 (0.700)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.57 (  0.57)	test_corr_d   0.23 (  0.23)
Overall Timing[ 15/  1]	epoch_time 0.0444 (0.0446)	validation_time 0.0005 (0.0008)	train_time 0.0439 (0.0434)
record: (train_acc, test_acc) (0.7288000310063362, 0.7110000252723694)
last accs (train_acc, test_acc) (0.5796000140905381, 0.38700002431869507)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 22.97it/s] 27%|##6       | 7/26 [00:00<00:00, 30.52it/s] 42%|####2     | 11/26 [00:00<00:00, 33.16it/s] 58%|#####7    | 15/26 [00:00<00:00, 34.49it/s] 73%|#######3  | 19/26 [00:00<00:00, 35.07it/s] 88%|########8 | 23/26 [00:00<00:00, 35.82it/s]100%|##########| 26/26 [00:00<00:00, 30.71it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 416 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 417 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 418 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 419 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 420 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 421 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 422 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 423 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 424 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 425 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 426 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 427 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 428 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 429 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 430 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 431 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 432 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 433 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 434 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 435 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 436 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 437 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 438 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 439 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 440 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 441 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [16][  26/  26]	Loss 0.000 (0.000)	train_nll   0.70 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  22.67 ( 22.67)	train_acc   0.46 (  0.50)	train_minacc   0.35 (  0.45)	train_majacc   0.47 (  0.51)	train_corr   0.00 (  0.00)	l1 4.5531 (4.5553)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.43it/s] 23%|##3       | 6/26 [00:00<00:00, 32.06it/s]                                               23%|##3       | 6/26 [00:00<00:00, 32.06it/s] 42%|####2     | 11/26 [00:00<00:00, 37.84it/s] 62%|######1   | 16/26 [00:00<00:00, 41.90it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.90it/s] 81%|########  | 21/26 [00:00<00:00, 40.18it/s]100%|##########| 26/26 [00:00<00:00, 42.65it/s]100%|##########| 26/26 [00:00<00:00, 36.26it/s]
Test: [   0/  26]	Loss 0.691 (0.691)	test_acc   0.56 (  0.56)	test_minacc   0.38 (  0.38)	test_majacc   0.60 (  0.60)	Loss_d 0.691 (0.691)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.11 (  0.11)
Test: [  10/  26]	Loss 0.692 (0.690)	test_acc   0.56 (  0.58)	test_minacc   0.52 (  0.41)	test_majacc   0.56 (  0.62)	Loss_d 0.692 (0.690)	test_acc_d   0.56 (  0.58)	test_minacc_d   0.52 (  0.41)	test_majacc_d   0.56 (  0.62)	test_corr_d   0.04 (  0.13)
Test: [  20/  26]	Loss 0.688 (0.689)	test_acc   0.62 (  0.60)	test_minacc   0.40 (  0.43)	test_majacc   0.67 (  0.63)	Loss_d 0.688 (0.689)	test_acc_d   0.62 (  0.60)	test_minacc_d   0.40 (  0.43)	test_majacc_d   0.67 (  0.63)	test_corr_d   0.18 (  0.15)
Test: [  26/  26]	Loss 0.693 (0.689)	test_acc   0.47 (  0.59)	test_minacc   0.35 (  0.42)	test_majacc   0.49 (  0.62)	Loss_d 0.693 (0.689)	test_acc_d   0.47 (  0.59)	test_minacc_d   0.35 (  0.42)	test_majacc_d   0.49 (  0.62)	test_corr_d   0.08 (  0.15)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 53.28it/s]
Test: [  0/  1]	Loss 0.699 (0.699)	test_acc   0.38 (  0.38)	test_minacc   0.36 (  0.36)	test_majacc   0.57 (  0.57)	Loss_d 0.699 (0.699)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.57 (  0.57)	test_corr_d   0.23 (  0.23)
Test: [  1/  1]	Loss 0.699 (0.699)	test_acc   0.38 (  0.38)	test_minacc   0.36 (  0.36)	test_majacc   0.57 (  0.57)	Loss_d 0.699 (0.699)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.57 (  0.57)	test_corr_d   0.23 (  0.23)
Overall Timing[ 16/  1]	epoch_time 0.0415 (0.0444)	validation_time 0.0004 (0.0008)	train_time 0.0411 (0.0433)
record: (train_acc, test_acc) (0.7288000310063362, 0.7110000252723694)
last accs (train_acc, test_acc) (0.5899000093638896, 0.38200002908706665)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.39it/s] 19%|#9        | 5/26 [00:00<00:00, 22.96it/s] 35%|###4      | 9/26 [00:00<00:00, 28.52it/s] 50%|#####     | 13/26 [00:00<00:00, 31.30it/s] 65%|######5   | 17/26 [00:00<00:00, 33.13it/s] 81%|########  | 21/26 [00:00<00:00, 34.03it/s] 96%|#########6| 25/26 [00:00<00:00, 34.23it/s]100%|##########| 26/26 [00:00<00:00, 29.44it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 442 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 443 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 444 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 445 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 446 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 447 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 448 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 449 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 450 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 451 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 452 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 453 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 454 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 455 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 456 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 457 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 458 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 459 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 460 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 461 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 462 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 463 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 464 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 465 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 466 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 467 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [17][  26/  26]	Loss 0.000 (0.000)	train_nll   0.70 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  22.67 ( 22.67)	train_acc   0.45 (  0.50)	train_minacc   0.35 (  0.45)	train_majacc   0.47 (  0.51)	train_corr   0.00 (  0.00)	l1 4.5508 (4.5525)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.14it/s] 19%|#9        | 5/26 [00:00<00:00, 26.42it/s] 38%|###8      | 10/26 [00:00<00:00, 35.12it/s]                                                38%|###8      | 10/26 [00:00<00:00, 35.12it/s] 58%|#####7    | 15/26 [00:00<00:00, 39.43it/s] 77%|#######6  | 20/26 [00:00<00:00, 41.92it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 41.92it/s] 96%|#########6| 25/26 [00:00<00:00, 42.74it/s]100%|##########| 26/26 [00:00<00:00, 35.81it/s]
Test: [   0/  26]	Loss 0.691 (0.691)	test_acc   0.58 (  0.58)	test_minacc   0.38 (  0.38)	test_majacc   0.62 (  0.62)	Loss_d 0.691 (0.691)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.11 (  0.11)
Test: [  10/  26]	Loss 0.692 (0.690)	test_acc   0.58 (  0.60)	test_minacc   0.52 (  0.41)	test_majacc   0.59 (  0.63)	Loss_d 0.692 (0.690)	test_acc_d   0.58 (  0.60)	test_minacc_d   0.52 (  0.41)	test_majacc_d   0.59 (  0.63)	test_corr_d   0.05 (  0.14)
Test: [  20/  26]	Loss 0.688 (0.689)	test_acc   0.63 (  0.61)	test_minacc   0.42 (  0.43)	test_majacc   0.67 (  0.64)	Loss_d 0.688 (0.689)	test_acc_d   0.63 (  0.61)	test_minacc_d   0.42 (  0.43)	test_majacc_d   0.67 (  0.64)	test_corr_d   0.18 (  0.16)
Test: [  26/  26]	Loss 0.693 (0.689)	test_acc   0.50 (  0.60)	test_minacc   0.35 (  0.42)	test_majacc   0.52 (  0.64)	Loss_d 0.693 (0.689)	test_acc_d   0.50 (  0.60)	test_minacc_d   0.35 (  0.42)	test_majacc_d   0.52 (  0.64)	test_corr_d   0.09 (  0.15)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.65it/s]
Test: [  0/  1]	Loss 0.699 (0.699)	test_acc   0.38 (  0.38)	test_minacc   0.36 (  0.36)	test_majacc   0.57 (  0.57)	Loss_d 0.699 (0.699)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.57 (  0.57)	test_corr_d   0.25 (  0.25)
Test: [  1/  1]	Loss 0.699 (0.699)	test_acc   0.38 (  0.38)	test_minacc   0.36 (  0.36)	test_majacc   0.57 (  0.57)	Loss_d 0.699 (0.699)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.57 (  0.57)	test_corr_d   0.25 (  0.25)
Overall Timing[ 17/  1]	epoch_time 0.0423 (0.0443)	validation_time 0.0006 (0.0008)	train_time 0.0416 (0.0432)
record: (train_acc, test_acc) (0.7288000310063362, 0.7110000252723694)
last accs (train_acc, test_acc) (0.6031000089645385, 0.37800002098083496)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.78it/s] 12%|#1        | 3/26 [00:00<00:01, 12.45it/s] 27%|##6       | 7/26 [00:00<00:00, 22.35it/s] 42%|####2     | 11/26 [00:00<00:00, 27.94it/s] 58%|#####7    | 15/26 [00:00<00:00, 30.69it/s] 73%|#######3  | 19/26 [00:00<00:00, 31.37it/s] 88%|########8 | 23/26 [00:00<00:00, 32.41it/s]100%|##########| 26/26 [00:00<00:00, 27.11it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 468 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 469 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 470 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 471 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 472 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 473 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 474 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 475 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 476 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 477 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 478 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 479 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 480 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 481 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 482 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 483 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 484 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 485 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 486 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 487 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 488 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 489 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 490 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 491 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 492 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 493 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [18][  26/  26]	Loss 0.000 (0.000)	train_nll   0.70 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  22.67 ( 22.67)	train_acc   0.46 (  0.51)	train_minacc   0.35 (  0.45)	train_majacc   0.48 (  0.52)	train_corr   0.00 (  0.00)	l1 4.5481 (4.5498)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.59it/s] 23%|##3       | 6/26 [00:00<00:00, 31.16it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.16it/s] 42%|####2     | 11/26 [00:00<00:00, 39.00it/s] 65%|######5   | 17/26 [00:00<00:00, 42.64it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.64it/s] 85%|########4 | 22/26 [00:00<00:00, 43.00it/s]100%|##########| 26/26 [00:00<00:00, 37.60it/s]
Test: [   0/  26]	Loss 0.691 (0.691)	test_acc   0.59 (  0.59)	test_minacc   0.39 (  0.39)	test_majacc   0.63 (  0.63)	Loss_d 0.691 (0.691)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.12 (  0.12)
Test: [  10/  26]	Loss 0.692 (0.690)	test_acc   0.57 (  0.60)	test_minacc   0.52 (  0.41)	test_majacc   0.58 (  0.63)	Loss_d 0.692 (0.690)	test_acc_d   0.57 (  0.60)	test_minacc_d   0.52 (  0.41)	test_majacc_d   0.58 (  0.63)	test_corr_d   0.06 (  0.14)
Test: [  20/  26]	Loss 0.688 (0.689)	test_acc   0.62 (  0.61)	test_minacc   0.42 (  0.43)	test_majacc   0.67 (  0.64)	Loss_d 0.688 (0.689)	test_acc_d   0.62 (  0.61)	test_minacc_d   0.42 (  0.43)	test_majacc_d   0.67 (  0.64)	test_corr_d   0.19 (  0.16)
Test: [  26/  26]	Loss 0.693 (0.689)	test_acc   0.52 (  0.61)	test_minacc   0.35 (  0.43)	test_majacc   0.54 (  0.64)	Loss_d 0.693 (0.689)	test_acc_d   0.52 (  0.61)	test_minacc_d   0.35 (  0.43)	test_majacc_d   0.54 (  0.64)	test_corr_d   0.09 (  0.16)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.87it/s]
Test: [  0/  1]	Loss 0.699 (0.699)	test_acc   0.37 (  0.37)	test_minacc   0.35 (  0.35)	test_majacc   0.59 (  0.59)	Loss_d 0.699 (0.699)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.25 (  0.25)
Test: [  1/  1]	Loss 0.699 (0.699)	test_acc   0.37 (  0.37)	test_minacc   0.35 (  0.35)	test_majacc   0.59 (  0.59)	Loss_d 0.699 (0.699)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.25 (  0.25)
Overall Timing[ 18/  1]	epoch_time 0.0446 (0.0443)	validation_time 0.0004 (0.0008)	train_time 0.0442 (0.0433)
record: (train_acc, test_acc) (0.7288000310063362, 0.7110000252723694)
last accs (train_acc, test_acc) (0.6057000119686127, 0.37400001287460327)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.03it/s] 19%|#9        | 5/26 [00:00<00:01, 17.97it/s] 35%|###4      | 9/26 [00:00<00:00, 24.60it/s] 50%|#####     | 13/26 [00:00<00:00, 28.78it/s] 65%|######5   | 17/26 [00:00<00:00, 31.45it/s] 81%|########  | 21/26 [00:00<00:00, 33.38it/s] 96%|#########6| 25/26 [00:00<00:00, 33.98it/s]100%|##########| 26/26 [00:00<00:00, 27.16it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 494 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 495 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 496 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 497 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 498 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 499 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 500 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 501 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 502 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 503 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 504 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 505 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 506 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 507 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 508 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 509 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 510 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 511 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 512 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 513 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 514 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 515 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 516 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 517 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 518 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 519 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [19][  26/  26]	Loss 0.000 (0.000)	train_nll   0.70 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  22.67 ( 22.67)	train_acc   0.47 (  0.51)	train_minacc   0.35 (  0.46)	train_majacc   0.49 (  0.52)	train_corr   0.00 (  0.00)	l1 4.5455 (4.5470)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.26it/s] 27%|##6       | 7/26 [00:00<00:00, 31.02it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.02it/s] 46%|####6     | 12/26 [00:00<00:00, 37.46it/s] 65%|######5   | 17/26 [00:00<00:00, 39.83it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.83it/s] 85%|########4 | 22/26 [00:00<00:00, 42.30it/s]100%|##########| 26/26 [00:00<00:00, 34.71it/s]
Test: [   0/  26]	Loss 0.691 (0.691)	test_acc   0.59 (  0.59)	test_minacc   0.39 (  0.39)	test_majacc   0.63 (  0.63)	Loss_d 0.691 (0.691)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.12 (  0.12)
Test: [  10/  26]	Loss 0.691 (0.690)	test_acc   0.57 (  0.60)	test_minacc   0.50 (  0.42)	test_majacc   0.58 (  0.63)	Loss_d 0.691 (0.690)	test_acc_d   0.57 (  0.60)	test_minacc_d   0.50 (  0.42)	test_majacc_d   0.58 (  0.63)	test_corr_d   0.07 (  0.14)
Test: [  20/  26]	Loss 0.688 (0.689)	test_acc   0.62 (  0.61)	test_minacc   0.42 (  0.43)	test_majacc   0.66 (  0.64)	Loss_d 0.688 (0.689)	test_acc_d   0.62 (  0.61)	test_minacc_d   0.42 (  0.43)	test_majacc_d   0.66 (  0.64)	test_corr_d   0.19 (  0.17)
Test: [  26/  26]	Loss 0.693 (0.689)	test_acc   0.51 (  0.60)	test_minacc   0.35 (  0.43)	test_majacc   0.54 (  0.64)	Loss_d 0.693 (0.689)	test_acc_d   0.51 (  0.60)	test_minacc_d   0.35 (  0.43)	test_majacc_d   0.54 (  0.64)	test_corr_d   0.10 (  0.16)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.27it/s]
Test: [  0/  1]	Loss 0.699 (0.699)	test_acc   0.38 (  0.38)	test_minacc   0.35 (  0.35)	test_majacc   0.62 (  0.62)	Loss_d 0.699 (0.699)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.26 (  0.26)
Test: [  1/  1]	Loss 0.699 (0.699)	test_acc   0.38 (  0.38)	test_minacc   0.35 (  0.35)	test_majacc   0.62 (  0.62)	Loss_d 0.699 (0.699)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.26 (  0.26)
Overall Timing[ 19/  1]	epoch_time 0.0429 (0.0442)	validation_time 0.0004 (0.0008)	train_time 0.0425 (0.0432)
record: (train_acc, test_acc) (0.7288000310063362, 0.7110000252723694)
last accs (train_acc, test_acc) (0.6044000071883202, 0.3760000169277191)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.19it/s] 19%|#9        | 5/26 [00:00<00:00, 21.40it/s] 35%|###4      | 9/26 [00:00<00:00, 26.67it/s] 50%|#####     | 13/26 [00:00<00:00, 29.61it/s] 65%|######5   | 17/26 [00:00<00:00, 31.26it/s] 81%|########  | 21/26 [00:00<00:00, 32.52it/s] 96%|#########6| 25/26 [00:00<00:00, 33.50it/s]100%|##########| 26/26 [00:00<00:00, 28.31it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 520 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 521 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 522 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 523 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 524 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 525 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 526 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 527 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 528 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 529 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 530 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 531 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 532 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 533 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 534 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 535 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 536 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 537 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 538 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 539 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 540 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 541 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 542 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 543 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 544 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 545 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [20][  26/  26]	Loss 0.000 (0.000)	train_nll   0.70 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  22.67 ( 22.67)	train_acc   0.49 (  0.52)	train_minacc   0.35 (  0.45)	train_majacc   0.51 (  0.53)	train_corr   0.00 (  0.00)	l1 4.5428 (4.5442)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.78it/s] 23%|##3       | 6/26 [00:00<00:00, 27.10it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.10it/s] 42%|####2     | 11/26 [00:00<00:00, 35.13it/s] 62%|######1   | 16/26 [00:00<00:00, 39.18it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.18it/s] 81%|########  | 21/26 [00:00<00:00, 38.16it/s]100%|##########| 26/26 [00:00<00:00, 41.20it/s]100%|##########| 26/26 [00:00<00:00, 33.77it/s]
Test: [   0/  26]	Loss 0.691 (0.691)	test_acc   0.59 (  0.59)	test_minacc   0.41 (  0.41)	test_majacc   0.64 (  0.64)	Loss_d 0.691 (0.691)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.13 (  0.13)
Test: [  10/  26]	Loss 0.691 (0.690)	test_acc   0.57 (  0.60)	test_minacc   0.50 (  0.43)	test_majacc   0.58 (  0.63)	Loss_d 0.691 (0.690)	test_acc_d   0.57 (  0.60)	test_minacc_d   0.50 (  0.43)	test_majacc_d   0.58 (  0.63)	test_corr_d   0.08 (  0.15)
Test: [  20/  26]	Loss 0.688 (0.689)	test_acc   0.62 (  0.61)	test_minacc   0.45 (  0.44)	test_majacc   0.66 (  0.64)	Loss_d 0.688 (0.689)	test_acc_d   0.62 (  0.61)	test_minacc_d   0.45 (  0.44)	test_majacc_d   0.66 (  0.64)	test_corr_d   0.20 (  0.17)
Test: [  26/  26]	Loss 0.693 (0.689)	test_acc   0.51 (  0.60)	test_minacc   0.35 (  0.44)	test_majacc   0.53 (  0.63)	Loss_d 0.693 (0.689)	test_acc_d   0.51 (  0.60)	test_minacc_d   0.35 (  0.44)	test_majacc_d   0.53 (  0.63)	test_corr_d   0.11 (  0.17)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 53.28it/s]
Test: [  0/  1]	Loss 0.699 (0.699)	test_acc   0.37 (  0.37)	test_minacc   0.34 (  0.34)	test_majacc   0.64 (  0.64)	Loss_d 0.699 (0.699)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.27 (  0.27)
Test: [  1/  1]	Loss 0.699 (0.699)	test_acc   0.37 (  0.37)	test_minacc   0.34 (  0.34)	test_majacc   0.64 (  0.64)	Loss_d 0.699 (0.699)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.27 (  0.27)
Overall Timing[ 20/  1]	epoch_time 0.0423 (0.0441)	validation_time 0.0005 (0.0007)	train_time 0.0418 (0.0432)
record: (train_acc, test_acc) (0.7288000310063362, 0.7110000252723694)
last accs (train_acc, test_acc) (0.6034000058770179, 0.37400001287460327)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.83it/s] 19%|#9        | 5/26 [00:00<00:01, 15.41it/s] 35%|###4      | 9/26 [00:00<00:00, 22.05it/s] 50%|#####     | 13/26 [00:00<00:00, 26.26it/s] 65%|######5   | 17/26 [00:00<00:00, 29.38it/s] 81%|########  | 21/26 [00:00<00:00, 31.37it/s] 96%|#########6| 25/26 [00:00<00:00, 32.75it/s]100%|##########| 26/26 [00:01<00:00, 25.17it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 546 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 547 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 548 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 549 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 550 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 551 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 552 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 553 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 554 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 555 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 556 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 557 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 558 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 559 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 560 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 561 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 562 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 563 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 564 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 565 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 566 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 567 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 568 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 569 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 570 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 571 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [21][  26/  26]	Loss 0.000 (0.000)	train_nll   0.70 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  22.67 ( 22.67)	train_acc   0.49 (  0.52)	train_minacc   0.35 (  0.46)	train_majacc   0.51 (  0.53)	train_corr   0.00 (  0.00)	l1 4.5401 (4.5414)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 18.35it/s] 31%|###       | 8/26 [00:00<00:00, 32.22it/s]                                               31%|###       | 8/26 [00:00<00:00, 32.22it/s] 50%|#####     | 13/26 [00:00<00:00, 37.88it/s] 69%|######9   | 18/26 [00:00<00:00, 41.12it/s]                                                69%|######9   | 18/26 [00:00<00:00, 41.12it/s] 88%|########8 | 23/26 [00:00<00:00, 38.82it/s]100%|##########| 26/26 [00:00<00:00, 35.89it/s]
Test: [   0/  26]	Loss 0.691 (0.691)	test_acc   0.59 (  0.59)	test_minacc   0.41 (  0.41)	test_majacc   0.64 (  0.64)	Loss_d 0.691 (0.691)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.14 (  0.14)
Test: [  10/  26]	Loss 0.691 (0.690)	test_acc   0.57 (  0.59)	test_minacc   0.52 (  0.44)	test_majacc   0.58 (  0.63)	Loss_d 0.691 (0.690)	test_acc_d   0.57 (  0.59)	test_minacc_d   0.52 (  0.44)	test_majacc_d   0.58 (  0.63)	test_corr_d   0.09 (  0.15)
Test: [  20/  26]	Loss 0.688 (0.689)	test_acc   0.62 (  0.60)	test_minacc   0.45 (  0.45)	test_majacc   0.66 (  0.63)	Loss_d 0.688 (0.689)	test_acc_d   0.62 (  0.60)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.66 (  0.63)	test_corr_d   0.20 (  0.18)
Test: [  26/  26]	Loss 0.693 (0.689)	test_acc   0.52 (  0.60)	test_minacc   0.35 (  0.45)	test_majacc   0.54 (  0.63)	Loss_d 0.693 (0.689)	test_acc_d   0.52 (  0.60)	test_minacc_d   0.35 (  0.45)	test_majacc_d   0.54 (  0.63)	test_corr_d   0.12 (  0.17)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.40it/s]
Test: [  0/  1]	Loss 0.699 (0.699)	test_acc   0.38 (  0.38)	test_minacc   0.34 (  0.34)	test_majacc   0.65 (  0.65)	Loss_d 0.699 (0.699)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.28 (  0.28)
Test: [  1/  1]	Loss 0.699 (0.699)	test_acc   0.38 (  0.38)	test_minacc   0.34 (  0.34)	test_majacc   0.65 (  0.65)	Loss_d 0.699 (0.699)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.28 (  0.28)
Overall Timing[ 21/  1]	epoch_time 0.0400 (0.0439)	validation_time 0.0004 (0.0007)	train_time 0.0395 (0.0430)
record: (train_acc, test_acc) (0.7288000310063362, 0.7110000252723694)
last accs (train_acc, test_acc) (0.6027000121474266, 0.3750000298023224)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.54it/s] 15%|#5        | 4/26 [00:00<00:01, 18.37it/s] 31%|###       | 8/26 [00:00<00:00, 25.81it/s] 46%|####6     | 12/26 [00:00<00:00, 29.53it/s] 62%|######1   | 16/26 [00:00<00:00, 30.01it/s] 77%|#######6  | 20/26 [00:00<00:00, 31.48it/s] 92%|#########2| 24/26 [00:00<00:00, 32.95it/s]100%|##########| 26/26 [00:00<00:00, 27.73it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 572 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 573 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 574 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 575 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 576 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 577 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 578 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 579 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 580 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 581 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 582 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 583 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 584 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 585 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 586 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 587 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 588 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 589 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 590 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 591 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 592 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 593 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 594 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 595 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 596 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 597 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [22][  26/  26]	Loss 0.000 (0.000)	train_nll   0.70 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  22.67 ( 22.67)	train_acc   0.49 (  0.52)	train_minacc   0.35 (  0.46)	train_majacc   0.51 (  0.53)	train_corr   0.00 (  0.00)	l1 4.5373 (4.5386)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.40it/s] 31%|###       | 8/26 [00:00<00:00, 28.42it/s]                                               31%|###       | 8/26 [00:00<00:00, 28.42it/s] 50%|#####     | 13/26 [00:00<00:00, 31.56it/s] 69%|######9   | 18/26 [00:00<00:00, 36.16it/s]                                                69%|######9   | 18/26 [00:00<00:00, 36.16it/s] 88%|########8 | 23/26 [00:00<00:00, 38.91it/s]100%|##########| 26/26 [00:00<00:00, 31.35it/s]
Test: [   0/  26]	Loss 0.691 (0.691)	test_acc   0.59 (  0.59)	test_minacc   0.41 (  0.41)	test_majacc   0.64 (  0.64)	Loss_d 0.691 (0.691)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.14 (  0.14)
Test: [  10/  26]	Loss 0.691 (0.689)	test_acc   0.56 (  0.59)	test_minacc   0.54 (  0.44)	test_majacc   0.57 (  0.62)	Loss_d 0.691 (0.689)	test_acc_d   0.56 (  0.59)	test_minacc_d   0.54 (  0.44)	test_majacc_d   0.57 (  0.62)	test_corr_d   0.09 (  0.16)
Test: [  20/  26]	Loss 0.688 (0.689)	test_acc   0.63 (  0.60)	test_minacc   0.49 (  0.46)	test_majacc   0.65 (  0.63)	Loss_d 0.688 (0.689)	test_acc_d   0.63 (  0.60)	test_minacc_d   0.49 (  0.46)	test_majacc_d   0.65 (  0.63)	test_corr_d   0.21 (  0.18)
Test: [  26/  26]	Loss 0.693 (0.689)	test_acc   0.52 (  0.60)	test_minacc   0.35 (  0.45)	test_majacc   0.54 (  0.63)	Loss_d 0.693 (0.689)	test_acc_d   0.52 (  0.60)	test_minacc_d   0.35 (  0.45)	test_majacc_d   0.54 (  0.63)	test_corr_d   0.13 (  0.18)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.29it/s]
Test: [  0/  1]	Loss 0.699 (0.699)	test_acc   0.38 (  0.38)	test_minacc   0.35 (  0.35)	test_majacc   0.66 (  0.66)	Loss_d 0.699 (0.699)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.66 (  0.66)	test_corr_d   0.29 (  0.29)
Test: [  1/  1]	Loss 0.699 (0.699)	test_acc   0.38 (  0.38)	test_minacc   0.35 (  0.35)	test_majacc   0.66 (  0.66)	Loss_d 0.699 (0.699)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.66 (  0.66)	test_corr_d   0.29 (  0.29)
Overall Timing[ 22/  1]	epoch_time 0.0481 (0.0441)	validation_time 0.0005 (0.0007)	train_time 0.0476 (0.0432)
record: (train_acc, test_acc) (0.7288000310063362, 0.7110000252723694)
last accs (train_acc, test_acc) (0.6013000122308731, 0.3800000250339508)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.96it/s] 19%|#9        | 5/26 [00:00<00:01, 18.45it/s] 31%|###       | 8/26 [00:00<00:00, 21.16it/s] 46%|####6     | 12/26 [00:00<00:00, 25.57it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.10it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.06it/s] 88%|########8 | 23/26 [00:00<00:00, 29.62it/s]100%|##########| 26/26 [00:01<00:00, 24.75it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 598 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 599 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 600 200
penalty weights 10000.0
l1 at pgd_anneal_iters 4.533727645874023
set z to 4.488390369415283
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 601 200
penalty weights 10000.0
args.step pgd_anneal_iters 601 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 602 200
penalty weights 10000.0
args.step pgd_anneal_iters 602 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 603 200
penalty weights 10000.0
args.step pgd_anneal_iters 603 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 604 200
penalty weights 10000.0
args.step pgd_anneal_iters 604 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 605 200
penalty weights 10000.0
args.step pgd_anneal_iters 605 600
dim_v 512
rho, theta 381 tensor(-0.0069, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 606 200
penalty weights 10000.0
args.step pgd_anneal_iters 606 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 607 200
penalty weights 10000.0
args.step pgd_anneal_iters 607 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 608 200
penalty weights 10000.0
args.step pgd_anneal_iters 608 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 609 200
penalty weights 10000.0
args.step pgd_anneal_iters 609 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 610 200
penalty weights 10000.0
args.step pgd_anneal_iters 610 600
dim_v 512
rho, theta 338 tensor(0.0024, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 611 200
penalty weights 10000.0
args.step pgd_anneal_iters 611 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 612 200
penalty weights 10000.0
args.step pgd_anneal_iters 612 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 613 200
penalty weights 10000.0
args.step pgd_anneal_iters 613 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 614 200
penalty weights 10000.0
args.step pgd_anneal_iters 614 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 615 200
penalty weights 10000.0
args.step pgd_anneal_iters 615 600
dim_v 512
rho, theta 254 tensor(0.0139, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 616 200
penalty weights 10000.0
args.step pgd_anneal_iters 616 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 617 200
penalty weights 10000.0
args.step pgd_anneal_iters 617 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 618 200
penalty weights 10000.0
args.step pgd_anneal_iters 618 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 619 200
penalty weights 10000.0
args.step pgd_anneal_iters 619 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 620 200
penalty weights 10000.0
args.step pgd_anneal_iters 620 600
dim_v 512
rho, theta 207 tensor(0.0066, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 621 200
penalty weights 10000.0
args.step pgd_anneal_iters 621 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 622 200
penalty weights 10000.0
args.step pgd_anneal_iters 622 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 623 200
penalty weights 10000.0
args.step pgd_anneal_iters 623 600
final projection at end of training
dim_v 512
rho, theta 195 tensor(0.0026, device='cuda:0')
Epoch: [23][  26/  26]	Loss 0.039 (0.189)	train_nll   0.75 (  0.79)	train_penalty   0.04 (  0.19)	weight_norm  29.52 ( 24.52)	train_acc   0.46 (  0.58)	train_minacc   0.47 (  0.42)	train_majacc   0.46 (  0.60)	train_corr   0.00 (  0.00)	l1 5.4467 (5.4347)	zero_count 0.0000 (33.6960)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.43it/s] 23%|##3       | 6/26 [00:00<00:00, 26.86it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.86it/s] 42%|####2     | 11/26 [00:00<00:00, 34.17it/s] 62%|######1   | 16/26 [00:00<00:00, 39.11it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.11it/s] 81%|########  | 21/26 [00:00<00:00, 38.03it/s]100%|##########| 26/26 [00:00<00:00, 41.27it/s]100%|##########| 26/26 [00:00<00:00, 33.18it/s]
Test: [   0/  26]	Loss 0.787 (0.787)	test_acc   0.47 (  0.47)	test_minacc   0.39 (  0.39)	test_majacc   0.48 (  0.48)	Loss_d 0.787 (0.787)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.46 (  0.46)
Test: [  10/  26]	Loss 0.724 (0.689)	test_acc   0.47 (  0.50)	test_minacc   0.45 (  0.47)	test_majacc   0.47 (  0.50)	Loss_d 0.724 (0.689)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.45 (  0.47)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.47 (  0.45)
Test: [  20/  26]	Loss 0.646 (0.678)	test_acc   0.51 (  0.50)	test_minacc   0.49 (  0.49)	test_majacc   0.51 (  0.50)	Loss_d 0.646 (0.678)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.46 (  0.46)
Test: [  26/  26]	Loss 0.735 (0.676)	test_acc   0.46 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.46 (  0.50)	Loss_d 0.735 (0.676)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.43 (  0.45)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.34it/s]
Test: [  0/  1]	Loss 0.955 (0.955)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.955 (0.955)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.38 (  0.38)
Test: [  1/  1]	Loss 0.955 (0.955)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.955 (0.955)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.38 (  0.38)
Overall Timing[ 23/  1]	epoch_time 0.0436 (0.0441)	validation_time 0.0004 (0.0007)	train_time 0.0431 (0.0432)
record: (train_acc, test_acc) (0.7288000310063362, 0.7110000252723694)
last accs (train_acc, test_acc) (0.5000000084936619, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.76it/s] 12%|#1        | 3/26 [00:00<00:02, 11.44it/s] 27%|##6       | 7/26 [00:00<00:00, 19.87it/s] 42%|####2     | 11/26 [00:00<00:00, 25.20it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.43it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.97it/s] 88%|########8 | 23/26 [00:00<00:00, 29.86it/s]100%|##########| 26/26 [00:01<00:00, 24.88it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 624 200
penalty weights 10000.0
args.step pgd_anneal_iters 624 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 625 200
penalty weights 10000.0
args.step pgd_anneal_iters 625 600
dim_v 512
rho, theta 195 tensor(0.0006, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 626 200
penalty weights 10000.0
args.step pgd_anneal_iters 626 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 627 200
penalty weights 10000.0
args.step pgd_anneal_iters 627 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 628 200
penalty weights 10000.0
args.step pgd_anneal_iters 628 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 629 200
penalty weights 10000.0
args.step pgd_anneal_iters 629 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 630 200
penalty weights 10000.0
args.step pgd_anneal_iters 630 600
dim_v 512
rho, theta 189 tensor(0.0010, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 631 200
penalty weights 10000.0
args.step pgd_anneal_iters 631 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 632 200
penalty weights 10000.0
args.step pgd_anneal_iters 632 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 633 200
penalty weights 10000.0
args.step pgd_anneal_iters 633 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 634 200
penalty weights 10000.0
args.step pgd_anneal_iters 634 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 635 200
penalty weights 10000.0
args.step pgd_anneal_iters 635 600
dim_v 512
rho, theta 185 tensor(0.0005, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 636 200
penalty weights 10000.0
args.step pgd_anneal_iters 636 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 637 200
penalty weights 10000.0
args.step pgd_anneal_iters 637 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 638 200
penalty weights 10000.0
args.step pgd_anneal_iters 638 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 639 200
penalty weights 10000.0
args.step pgd_anneal_iters 639 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 640 200
penalty weights 10000.0
args.step pgd_anneal_iters 640 600
dim_v 512
rho, theta 181 tensor(0.0003, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 641 200
penalty weights 10000.0
args.step pgd_anneal_iters 641 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 642 200
penalty weights 10000.0
args.step pgd_anneal_iters 642 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 643 200
penalty weights 10000.0
args.step pgd_anneal_iters 643 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 644 200
penalty weights 10000.0
args.step pgd_anneal_iters 644 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 645 200
penalty weights 10000.0
args.step pgd_anneal_iters 645 600
dim_v 512
rho, theta 181 tensor(0.0001, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 646 200
penalty weights 10000.0
args.step pgd_anneal_iters 646 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 647 200
penalty weights 10000.0
args.step pgd_anneal_iters 647 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 648 200
penalty weights 10000.0
args.step pgd_anneal_iters 648 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 649 200
penalty weights 10000.0
args.step pgd_anneal_iters 649 600
final projection at end of training
dim_v 512
rho, theta 178 tensor(2.3866e-05, device='cuda:0')
Epoch: [24][  26/  26]	Loss 0.001 (0.003)	train_nll   0.69 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  34.07 ( 32.68)	train_acc   0.46 (  0.52)	train_minacc   0.47 (  0.49)	train_majacc   0.46 (  0.53)	train_corr   0.00 (  0.00)	l1 4.6388 (4.7768)	zero_count 0.0000 (75.6600)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.73it/s] 23%|##3       | 6/26 [00:00<00:00, 31.14it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.14it/s] 42%|####2     | 11/26 [00:00<00:00, 37.85it/s] 62%|######1   | 16/26 [00:00<00:00, 41.61it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.61it/s] 81%|########  | 21/26 [00:00<00:00, 39.68it/s]100%|##########| 26/26 [00:00<00:00, 42.07it/s]100%|##########| 26/26 [00:00<00:00, 35.40it/s]
Test: [   0/  26]	Loss 0.695 (0.695)	test_acc   0.47 (  0.47)	test_minacc   0.39 (  0.39)	test_majacc   0.48 (  0.48)	Loss_d 0.695 (0.695)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.25 (  0.25)
Test: [  10/  26]	Loss 0.682 (0.676)	test_acc   0.47 (  0.50)	test_minacc   0.45 (  0.47)	test_majacc   0.47 (  0.50)	Loss_d 0.682 (0.676)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.45 (  0.47)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.29 (  0.27)
Test: [  20/  26]	Loss 0.671 (0.675)	test_acc   0.51 (  0.50)	test_minacc   0.49 (  0.49)	test_majacc   0.51 (  0.50)	Loss_d 0.671 (0.675)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.29 (  0.28)
Test: [  26/  26]	Loss 0.687 (0.674)	test_acc   0.46 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.46 (  0.50)	Loss_d 0.687 (0.674)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.30 (  0.28)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.64it/s]
Test: [  0/  1]	Loss 0.743 (0.743)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.743 (0.743)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.20)
Test: [  1/  1]	Loss 0.743 (0.743)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.743 (0.743)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.20)
Overall Timing[ 24/  1]	epoch_time 0.0408 (0.0440)	validation_time 0.0008 (0.0007)	train_time 0.0400 (0.0431)
record: (train_acc, test_acc) (0.7288000310063362, 0.7110000252723694)
last accs (train_acc, test_acc) (0.5000000084936619, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.71it/s] 15%|#5        | 4/26 [00:00<00:01, 19.98it/s] 27%|##6       | 7/26 [00:00<00:00, 23.89it/s] 42%|####2     | 11/26 [00:00<00:00, 26.44it/s] 58%|#####7    | 15/26 [00:00<00:00, 29.80it/s] 73%|#######3  | 19/26 [00:00<00:00, 30.56it/s] 88%|########8 | 23/26 [00:00<00:00, 30.53it/s]100%|##########| 26/26 [00:00<00:00, 26.42it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 650 200
penalty weights 10000.0
args.step pgd_anneal_iters 650 600
dim_v 512
rho, theta 181 tensor(-1.3579e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 651 200
penalty weights 10000.0
args.step pgd_anneal_iters 651 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 652 200
penalty weights 10000.0
args.step pgd_anneal_iters 652 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 653 200
penalty weights 10000.0
args.step pgd_anneal_iters 653 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 654 200
penalty weights 10000.0
args.step pgd_anneal_iters 654 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 655 200
penalty weights 10000.0
args.step pgd_anneal_iters 655 600
dim_v 512
rho, theta 178 tensor(-4.2740e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 656 200
penalty weights 10000.0
args.step pgd_anneal_iters 656 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 657 200
penalty weights 10000.0
args.step pgd_anneal_iters 657 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 658 200
penalty weights 10000.0
args.step pgd_anneal_iters 658 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 659 200
penalty weights 10000.0
args.step pgd_anneal_iters 659 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 660 200
penalty weights 10000.0
args.step pgd_anneal_iters 660 600
dim_v 512
rho, theta 179 tensor(-2.4735e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 661 200
penalty weights 10000.0
args.step pgd_anneal_iters 661 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 662 200
penalty weights 10000.0
args.step pgd_anneal_iters 662 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 663 200
penalty weights 10000.0
args.step pgd_anneal_iters 663 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 664 200
penalty weights 10000.0
args.step pgd_anneal_iters 664 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 665 200
penalty weights 10000.0
args.step pgd_anneal_iters 665 600
dim_v 512
rho, theta 190 tensor(-1.8851e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 666 200
penalty weights 10000.0
args.step pgd_anneal_iters 666 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 667 200
penalty weights 10000.0
args.step pgd_anneal_iters 667 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 668 200
penalty weights 10000.0
args.step pgd_anneal_iters 668 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 669 200
penalty weights 10000.0
args.step pgd_anneal_iters 669 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 670 200
penalty weights 10000.0
args.step pgd_anneal_iters 670 600
dim_v 512
rho, theta 227 tensor(-8.0958e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 671 200
penalty weights 10000.0
args.step pgd_anneal_iters 671 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 672 200
penalty weights 10000.0
args.step pgd_anneal_iters 672 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 673 200
penalty weights 10000.0
args.step pgd_anneal_iters 673 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 674 200
penalty weights 10000.0
args.step pgd_anneal_iters 674 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 675 200
penalty weights 10000.0
args.step pgd_anneal_iters 675 600
dim_v 512
rho, theta 231 tensor(-3.1017e-05, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [25][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  34.43 ( 34.33)	train_acc   0.46 (  0.50)	train_minacc   0.47 (  0.50)	train_majacc   0.46 (  0.50)	train_corr   0.00 (  0.00)	l1 4.5191 (4.5252)	zero_count 0.0000 (75.3870)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.47it/s] 27%|##6       | 7/26 [00:00<00:00, 33.52it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.52it/s] 46%|####6     | 12/26 [00:00<00:00, 39.77it/s] 65%|######5   | 17/26 [00:00<00:00, 42.06it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.06it/s] 85%|########4 | 22/26 [00:00<00:00, 40.06it/s]100%|##########| 26/26 [00:00<00:00, 36.92it/s]
Test: [   0/  26]	Loss 0.694 (0.694)	test_acc   0.47 (  0.47)	test_minacc   0.39 (  0.39)	test_majacc   0.48 (  0.48)	Loss_d 0.694 (0.694)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.19 (  0.19)
Test: [  10/  26]	Loss 0.686 (0.681)	test_acc   0.47 (  0.50)	test_minacc   0.45 (  0.47)	test_majacc   0.47 (  0.50)	Loss_d 0.686 (0.681)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.45 (  0.47)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.22 (  0.20)
Test: [  20/  26]	Loss 0.677 (0.680)	test_acc   0.51 (  0.50)	test_minacc   0.49 (  0.49)	test_majacc   0.51 (  0.50)	Loss_d 0.677 (0.680)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.21 (  0.21)
Test: [  26/  26]	Loss 0.689 (0.680)	test_acc   0.46 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.46 (  0.50)	Loss_d 0.689 (0.680)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.23 (  0.20)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.79it/s]
Test: [  0/  1]	Loss 0.719 (0.719)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.719 (0.719)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 0.719 (0.719)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.719 (0.719)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.11 (  0.11)
Overall Timing[ 25/  1]	epoch_time 0.0399 (0.0438)	validation_time 0.0004 (0.0007)	train_time 0.0395 (0.0429)
record: (train_acc, test_acc) (0.7288000310063362, 0.7110000252723694)
last accs (train_acc, test_acc) (0.5000000084936619, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.34it/s] 19%|#9        | 5/26 [00:00<00:01, 13.24it/s] 35%|###4      | 9/26 [00:00<00:00, 18.88it/s] 50%|#####     | 13/26 [00:00<00:00, 22.79it/s] 65%|######5   | 17/26 [00:00<00:00, 25.76it/s] 77%|#######6  | 20/26 [00:00<00:00, 25.77it/s] 92%|#########2| 24/26 [00:01<00:00, 27.83it/s]100%|##########| 26/26 [00:01<00:00, 21.32it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 676 200
penalty weights 10000.0
args.step pgd_anneal_iters 676 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 677 200
penalty weights 10000.0
args.step pgd_anneal_iters 677 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 678 200
penalty weights 10000.0
args.step pgd_anneal_iters 678 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 679 200
penalty weights 10000.0
args.step pgd_anneal_iters 679 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 680 200
penalty weights 10000.0
args.step pgd_anneal_iters 680 600
dim_v 512
rho, theta 234 tensor(-6.7885e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 681 200
penalty weights 10000.0
args.step pgd_anneal_iters 681 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 682 200
penalty weights 10000.0
args.step pgd_anneal_iters 682 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 683 200
penalty weights 10000.0
args.step pgd_anneal_iters 683 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 684 200
penalty weights 10000.0
args.step pgd_anneal_iters 684 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 685 200
penalty weights 10000.0
args.step pgd_anneal_iters 685 600
dim_v 512
rho, theta 224 tensor(-4.8487e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 686 200
penalty weights 10000.0
args.step pgd_anneal_iters 686 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 687 200
penalty weights 10000.0
args.step pgd_anneal_iters 687 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 688 200
penalty weights 10000.0
args.step pgd_anneal_iters 688 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 689 200
penalty weights 10000.0
args.step pgd_anneal_iters 689 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 690 200
penalty weights 10000.0
args.step pgd_anneal_iters 690 600
dim_v 512
rho, theta 225 tensor(-3.7987e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 691 200
penalty weights 10000.0
args.step pgd_anneal_iters 691 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 692 200
penalty weights 10000.0
args.step pgd_anneal_iters 692 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 693 200
penalty weights 10000.0
args.step pgd_anneal_iters 693 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 694 200
penalty weights 10000.0
args.step pgd_anneal_iters 694 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 695 200
penalty weights 10000.0
args.step pgd_anneal_iters 695 600
dim_v 512
rho, theta 322 tensor(-1.6726e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 696 200
penalty weights 10000.0
args.step pgd_anneal_iters 696 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 697 200
penalty weights 10000.0
args.step pgd_anneal_iters 697 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 698 200
penalty weights 10000.0
args.step pgd_anneal_iters 698 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 699 200
penalty weights 10000.0
args.step pgd_anneal_iters 699 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 700 200
penalty weights 10000.0
args.step pgd_anneal_iters 700 600
dim_v 512
rho, theta 329 tensor(8.2074e-07, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 701 200
penalty weights 10000.0
args.step pgd_anneal_iters 701 600
final projection at end of training
dim_v 512
rho, theta 332 tensor(-3.5956e-06, device='cuda:0')
Epoch: [26][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm  34.46 ( 34.45)	train_acc   0.46 (  0.50)	train_minacc   0.47 (  0.50)	train_majacc   0.46 (  0.50)	train_corr   0.00 (  0.00)	l1 4.4884 (4.5017)	zero_count 182.0000 (55.9910)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.15it/s] 23%|##3       | 6/26 [00:00<00:00, 22.72it/s]                                               23%|##3       | 6/26 [00:00<00:00, 22.72it/s] 42%|####2     | 11/26 [00:00<00:00, 31.64it/s] 62%|######1   | 16/26 [00:00<00:00, 36.16it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.16it/s] 81%|########  | 21/26 [00:00<00:00, 36.26it/s]100%|##########| 26/26 [00:00<00:00, 39.87it/s]100%|##########| 26/26 [00:00<00:00, 31.71it/s]
Test: [   0/  26]	Loss 0.693 (0.693)	test_acc   0.47 (  0.47)	test_minacc   0.39 (  0.39)	test_majacc   0.48 (  0.48)	Loss_d 0.693 (0.693)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.17 (  0.17)
Test: [  10/  26]	Loss 0.686 (0.681)	test_acc   0.47 (  0.50)	test_minacc   0.45 (  0.47)	test_majacc   0.47 (  0.50)	Loss_d 0.686 (0.681)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.45 (  0.47)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.20 (  0.17)
Test: [  20/  26]	Loss 0.678 (0.681)	test_acc   0.51 (  0.50)	test_minacc   0.49 (  0.49)	test_majacc   0.51 (  0.50)	Loss_d 0.678 (0.681)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.19 (  0.18)
Test: [  26/  26]	Loss 0.688 (0.680)	test_acc   0.46 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.46 (  0.50)	Loss_d 0.688 (0.680)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.21 (  0.18)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.63it/s]
Test: [  0/  1]	Loss 0.713 (0.713)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.713 (0.713)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 0.713 (0.713)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.713 (0.713)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.09 (  0.09)
Overall Timing[ 26/  1]	epoch_time 0.0426 (0.0438)	validation_time 0.0004 (0.0007)	train_time 0.0421 (0.0429)
record: (train_acc, test_acc) (0.7288000310063362, 0.7110000252723694)
last accs (train_acc, test_acc) (0.5000000084936619, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.31it/s] 12%|#1        | 3/26 [00:00<00:01, 14.42it/s] 23%|##3       | 6/26 [00:00<00:00, 20.41it/s] 35%|###4      | 9/26 [00:00<00:00, 23.04it/s] 50%|#####     | 13/26 [00:00<00:00, 27.54it/s] 62%|######1   | 16/26 [00:00<00:00, 27.49it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.48it/s] 88%|########8 | 23/26 [00:00<00:00, 29.69it/s]100%|##########| 26/26 [00:00<00:00, 29.22it/s]100%|##########| 26/26 [00:01<00:00, 24.75it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 702 200
penalty weights 10000.0
args.step pgd_anneal_iters 702 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 703 200
penalty weights 10000.0
args.step pgd_anneal_iters 703 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 704 200
penalty weights 10000.0
args.step pgd_anneal_iters 704 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 705 200
penalty weights 10000.0
args.step pgd_anneal_iters 705 600
dim_v 512
rho, theta 319 tensor(-4.0098e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 706 200
penalty weights 10000.0
args.step pgd_anneal_iters 706 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 707 200
penalty weights 10000.0
args.step pgd_anneal_iters 707 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 708 200
penalty weights 10000.0
args.step pgd_anneal_iters 708 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 709 200
penalty weights 10000.0
args.step pgd_anneal_iters 709 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 710 200
penalty weights 10000.0
args.step pgd_anneal_iters 710 600
dim_v 512
rho, theta 295 tensor(-4.7861e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 711 200
penalty weights 10000.0
args.step pgd_anneal_iters 711 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 712 200
penalty weights 10000.0
args.step pgd_anneal_iters 712 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 713 200
penalty weights 10000.0
args.step pgd_anneal_iters 713 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 714 200
penalty weights 10000.0
args.step pgd_anneal_iters 714 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 715 200
penalty weights 10000.0
args.step pgd_anneal_iters 715 600
dim_v 512
rho, theta 274 tensor(-4.7013e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 716 200
penalty weights 10000.0
args.step pgd_anneal_iters 716 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 717 200
penalty weights 10000.0
args.step pgd_anneal_iters 717 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 718 200
penalty weights 10000.0
args.step pgd_anneal_iters 718 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 719 200
penalty weights 10000.0
args.step pgd_anneal_iters 719 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 720 200
penalty weights 10000.0
args.step pgd_anneal_iters 720 600
dim_v 512
rho, theta 318 tensor(-1.1583e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 721 200
penalty weights 10000.0
args.step pgd_anneal_iters 721 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 722 200
penalty weights 10000.0
args.step pgd_anneal_iters 722 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 723 200
penalty weights 10000.0
args.step pgd_anneal_iters 723 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 724 200
penalty weights 10000.0
args.step pgd_anneal_iters 724 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 725 200
penalty weights 10000.0
args.step pgd_anneal_iters 725 600
dim_v 512
rho, theta 337 tensor(2.4646e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 726 200
penalty weights 10000.0
args.step pgd_anneal_iters 726 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 727 200
penalty weights 10000.0
args.step pgd_anneal_iters 727 600
final projection at end of training
dim_v 512
rho, theta 341 tensor(1.9004e-06, device='cuda:0')
Epoch: [27][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm  34.46 ( 34.46)	train_acc   0.46 (  0.50)	train_minacc   0.47 (  0.50)	train_majacc   0.46 (  0.50)	train_corr   0.00 (  0.00)	l1 4.4922 (4.4952)	zero_count 0.0000 (46.4490)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.00it/s] 23%|##3       | 6/26 [00:00<00:00, 26.12it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.12it/s] 42%|####2     | 11/26 [00:00<00:00, 34.25it/s] 62%|######1   | 16/26 [00:00<00:00, 39.27it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.27it/s] 81%|########  | 21/26 [00:00<00:00, 37.92it/s]100%|##########| 26/26 [00:00<00:00, 41.01it/s]100%|##########| 26/26 [00:00<00:00, 33.49it/s]
Test: [   0/  26]	Loss 0.691 (0.691)	test_acc   0.47 (  0.47)	test_minacc   0.39 (  0.39)	test_majacc   0.48 (  0.48)	Loss_d 0.691 (0.691)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.16 (  0.16)
Test: [  10/  26]	Loss 0.685 (0.681)	test_acc   0.47 (  0.50)	test_minacc   0.45 (  0.47)	test_majacc   0.47 (  0.50)	Loss_d 0.685 (0.681)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.45 (  0.47)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.19 (  0.17)
Test: [  20/  26]	Loss 0.678 (0.680)	test_acc   0.51 (  0.50)	test_minacc   0.49 (  0.49)	test_majacc   0.51 (  0.50)	Loss_d 0.678 (0.680)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.18 (  0.18)
Test: [  26/  26]	Loss 0.686 (0.680)	test_acc   0.46 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.46 (  0.50)	Loss_d 0.686 (0.680)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.21 (  0.17)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.19it/s]
Test: [  0/  1]	Loss 0.711 (0.711)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.711 (0.711)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.08 (  0.08)
Test: [  1/  1]	Loss 0.711 (0.711)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.711 (0.711)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.08 (  0.08)
Overall Timing[ 27/  1]	epoch_time 0.0420 (0.0437)	validation_time 0.0004 (0.0007)	train_time 0.0416 (0.0429)
record: (train_acc, test_acc) (0.7288000310063362, 0.7110000252723694)
last accs (train_acc, test_acc) (0.5000000084936619, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.28it/s] 12%|#1        | 3/26 [00:00<00:02, 10.96it/s] 27%|##6       | 7/26 [00:00<00:00, 19.47it/s] 38%|###8      | 10/26 [00:00<00:00, 21.95it/s] 50%|#####     | 13/26 [00:00<00:00, 22.96it/s] 65%|######5   | 17/26 [00:00<00:00, 26.74it/s] 77%|#######6  | 20/26 [00:00<00:00, 27.40it/s] 88%|########8 | 23/26 [00:00<00:00, 27.58it/s]100%|##########| 26/26 [00:01<00:00, 23.20it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 728 200
penalty weights 10000.0
args.step pgd_anneal_iters 728 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 729 200
penalty weights 10000.0
args.step pgd_anneal_iters 729 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 730 200
penalty weights 10000.0
args.step pgd_anneal_iters 730 600
dim_v 512
rho, theta 326 tensor(-1.7894e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 731 200
penalty weights 10000.0
args.step pgd_anneal_iters 731 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 732 200
penalty weights 10000.0
args.step pgd_anneal_iters 732 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 733 200
penalty weights 10000.0
args.step pgd_anneal_iters 733 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 734 200
penalty weights 10000.0
args.step pgd_anneal_iters 734 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 735 200
penalty weights 10000.0
args.step pgd_anneal_iters 735 600
dim_v 512
rho, theta 315 tensor(-3.0048e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 736 200
penalty weights 10000.0
args.step pgd_anneal_iters 736 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 737 200
penalty weights 10000.0
args.step pgd_anneal_iters 737 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 738 200
penalty weights 10000.0
args.step pgd_anneal_iters 738 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 739 200
penalty weights 10000.0
args.step pgd_anneal_iters 739 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 740 200
penalty weights 10000.0
args.step pgd_anneal_iters 740 600
dim_v 512
rho, theta 301 tensor(-4.5355e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 741 200
penalty weights 10000.0
args.step pgd_anneal_iters 741 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 742 200
penalty weights 10000.0
args.step pgd_anneal_iters 742 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 743 200
penalty weights 10000.0
args.step pgd_anneal_iters 743 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 744 200
penalty weights 10000.0
args.step pgd_anneal_iters 744 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 745 200
penalty weights 10000.0
args.step pgd_anneal_iters 745 600
dim_v 512
rho, theta 287 tensor(-1.9299e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 746 200
penalty weights 10000.0
args.step pgd_anneal_iters 746 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 747 200
penalty weights 10000.0
args.step pgd_anneal_iters 747 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 748 200
penalty weights 10000.0
args.step pgd_anneal_iters 748 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 749 200
penalty weights 10000.0
args.step pgd_anneal_iters 749 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 750 200
penalty weights 10000.0
args.step pgd_anneal_iters 750 600
dim_v 512
rho, theta 332 tensor(-2.3240e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 751 200
penalty weights 10000.0
args.step pgd_anneal_iters 751 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 752 200
penalty weights 10000.0
args.step pgd_anneal_iters 752 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 753 200
penalty weights 10000.0
args.step pgd_anneal_iters 753 600
final projection at end of training
dim_v 512
rho, theta 338 tensor(2.6754e-06, device='cuda:0')
Epoch: [28][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm  34.46 ( 34.46)	train_acc   0.46 (  0.50)	train_minacc   0.47 (  0.50)	train_majacc   0.46 (  0.50)	train_corr   0.00 (  0.00)	l1 4.4950 (4.4935)	zero_count 0.0000 (45.3960)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.66it/s] 15%|#5        | 4/26 [00:00<00:01, 13.91it/s] 38%|###8      | 10/26 [00:00<00:00, 30.16it/s]                                                38%|###8      | 10/26 [00:00<00:00, 30.16it/s] 58%|#####7    | 15/26 [00:00<00:00, 36.40it/s] 77%|#######6  | 20/26 [00:00<00:00, 38.00it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 38.00it/s] 96%|#########6| 25/26 [00:00<00:00, 40.78it/s]100%|##########| 26/26 [00:00<00:00, 32.78it/s]
Test: [   0/  26]	Loss 0.690 (0.690)	test_acc   0.47 (  0.47)	test_minacc   0.39 (  0.39)	test_majacc   0.48 (  0.48)	Loss_d 0.690 (0.690)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.15 (  0.15)
Test: [  10/  26]	Loss 0.685 (0.681)	test_acc   0.47 (  0.50)	test_minacc   0.45 (  0.47)	test_majacc   0.47 (  0.50)	Loss_d 0.685 (0.681)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.45 (  0.47)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.18 (  0.16)
Test: [  20/  26]	Loss 0.679 (0.681)	test_acc   0.51 (  0.50)	test_minacc   0.49 (  0.49)	test_majacc   0.51 (  0.50)	Loss_d 0.679 (0.681)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.17 (  0.17)
Test: [  26/  26]	Loss 0.686 (0.681)	test_acc   0.46 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.46 (  0.50)	Loss_d 0.686 (0.681)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.20 (  0.16)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.35it/s]
Test: [  0/  1]	Loss 0.708 (0.708)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.708 (0.708)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.07 (  0.07)
Test: [  1/  1]	Loss 0.708 (0.708)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.708 (0.708)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.07 (  0.07)
Overall Timing[ 28/  1]	epoch_time 0.0450 (0.0437)	validation_time 0.0004 (0.0007)	train_time 0.0445 (0.0429)
record: (train_acc, test_acc) (0.7288000310063362, 0.7110000252723694)
last accs (train_acc, test_acc) (0.5000000084936619, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.99it/s] 27%|##6       | 7/26 [00:00<00:00, 27.65it/s] 42%|####2     | 11/26 [00:00<00:00, 29.73it/s] 54%|#####3    | 14/26 [00:00<00:00, 28.95it/s] 65%|######5   | 17/26 [00:00<00:00, 28.03it/s] 81%|########  | 21/26 [00:00<00:00, 29.61it/s] 92%|#########2| 24/26 [00:00<00:00, 28.80it/s]100%|##########| 26/26 [00:00<00:00, 27.52it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 754 200
penalty weights 10000.0
args.step pgd_anneal_iters 754 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 755 200
penalty weights 10000.0
args.step pgd_anneal_iters 755 600
dim_v 512
rho, theta 325 tensor(-1.0972e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 756 200
penalty weights 10000.0
args.step pgd_anneal_iters 756 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 757 200
penalty weights 10000.0
args.step pgd_anneal_iters 757 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 758 200
penalty weights 10000.0
args.step pgd_anneal_iters 758 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 759 200
penalty weights 10000.0
args.step pgd_anneal_iters 759 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 760 200
penalty weights 10000.0
args.step pgd_anneal_iters 760 600
dim_v 512
rho, theta 310 tensor(-1.8787e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 761 200
penalty weights 10000.0
args.step pgd_anneal_iters 761 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 762 200
penalty weights 10000.0
args.step pgd_anneal_iters 762 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 763 200
penalty weights 10000.0
args.step pgd_anneal_iters 763 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 764 200
penalty weights 10000.0
args.step pgd_anneal_iters 764 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 765 200
penalty weights 10000.0
args.step pgd_anneal_iters 765 600
dim_v 512
rho, theta 303 tensor(-3.9055e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 766 200
penalty weights 10000.0
args.step pgd_anneal_iters 766 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 767 200
penalty weights 10000.0
args.step pgd_anneal_iters 767 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 768 200
penalty weights 10000.0
args.step pgd_anneal_iters 768 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 769 200
penalty weights 10000.0
args.step pgd_anneal_iters 769 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 770 200
penalty weights 10000.0
args.step pgd_anneal_iters 770 600
dim_v 512
rho, theta 286 tensor(-2.3192e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 771 200
penalty weights 10000.0
args.step pgd_anneal_iters 771 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 772 200
penalty weights 10000.0
args.step pgd_anneal_iters 772 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 773 200
penalty weights 10000.0
args.step pgd_anneal_iters 773 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 774 200
penalty weights 10000.0
args.step pgd_anneal_iters 774 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 775 200
penalty weights 10000.0
args.step pgd_anneal_iters 775 600
dim_v 512
rho, theta 327 tensor(-3.5995e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 776 200
penalty weights 10000.0
args.step pgd_anneal_iters 776 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 777 200
penalty weights 10000.0
args.step pgd_anneal_iters 777 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 778 200
penalty weights 10000.0
args.step pgd_anneal_iters 778 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 779 200
penalty weights 10000.0
args.step pgd_anneal_iters 779 600
final projection at end of training
dim_v 512
rho, theta 334 tensor(4.6118e-07, device='cuda:0')
Epoch: [29][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm  34.46 ( 34.46)	train_acc   0.46 (  0.50)	train_minacc   0.47 (  0.50)	train_majacc   0.46 (  0.50)	train_corr   0.00 (  0.00)	l1 4.4965 (4.4930)	zero_count 0.0000 (45.9030)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.20it/s] 23%|##3       | 6/26 [00:00<00:00, 28.52it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.52it/s] 42%|####2     | 11/26 [00:00<00:00, 36.00it/s] 62%|######1   | 16/26 [00:00<00:00, 40.54it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.54it/s] 81%|########  | 21/26 [00:00<00:00, 38.69it/s]100%|##########| 26/26 [00:00<00:00, 41.96it/s]100%|##########| 26/26 [00:00<00:00, 34.00it/s]
Test: [   0/  26]	Loss 0.689 (0.689)	test_acc   0.47 (  0.47)	test_minacc   0.39 (  0.39)	test_majacc   0.48 (  0.48)	Loss_d 0.689 (0.689)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.15 (  0.15)
Test: [  10/  26]	Loss 0.686 (0.681)	test_acc   0.47 (  0.50)	test_minacc   0.45 (  0.47)	test_majacc   0.47 (  0.50)	Loss_d 0.686 (0.681)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.45 (  0.47)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.17 (  0.15)
Test: [  20/  26]	Loss 0.680 (0.681)	test_acc   0.51 (  0.50)	test_minacc   0.49 (  0.49)	test_majacc   0.51 (  0.50)	Loss_d 0.680 (0.681)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.16 (  0.16)
Test: [  26/  26]	Loss 0.686 (0.681)	test_acc   0.46 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.46 (  0.50)	Loss_d 0.686 (0.681)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.19 (  0.16)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.21it/s]
Test: [  0/  1]	Loss 0.706 (0.706)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.706 (0.706)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.06 (  0.06)
Test: [  1/  1]	Loss 0.706 (0.706)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.706 (0.706)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.06 (  0.06)
Overall Timing[ 29/  1]	epoch_time 0.0483 (0.0439)	validation_time 0.0003 (0.0007)	train_time 0.0479 (0.0431)
record: (train_acc, test_acc) (0.7288000310063362, 0.7110000252723694)
last accs (train_acc, test_acc) (0.5000000084936619, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:10,  2.32it/s] 19%|#9        | 5/26 [00:00<00:01, 11.20it/s] 31%|###       | 8/26 [00:00<00:01, 15.45it/s] 42%|####2     | 11/26 [00:00<00:00, 18.72it/s] 58%|#####7    | 15/26 [00:00<00:00, 22.86it/s] 69%|######9   | 18/26 [00:01<00:00, 23.40it/s] 81%|########  | 21/26 [00:01<00:00, 24.44it/s] 96%|#########6| 25/26 [00:01<00:00, 27.38it/s]100%|##########| 26/26 [00:01<00:00, 19.19it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 780 200
penalty weights 10000.0
args.step pgd_anneal_iters 780 600
dim_v 512
rho, theta 327 tensor(-4.6753e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 781 200
penalty weights 10000.0
args.step pgd_anneal_iters 781 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 782 200
penalty weights 10000.0
args.step pgd_anneal_iters 782 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 783 200
penalty weights 10000.0
args.step pgd_anneal_iters 783 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 784 200
penalty weights 10000.0
args.step pgd_anneal_iters 784 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 785 200
penalty weights 10000.0
args.step pgd_anneal_iters 785 600
dim_v 512
rho, theta 305 tensor(-1.5399e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 786 200
penalty weights 10000.0
args.step pgd_anneal_iters 786 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 787 200
penalty weights 10000.0
args.step pgd_anneal_iters 787 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 788 200
penalty weights 10000.0
args.step pgd_anneal_iters 788 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 789 200
penalty weights 10000.0
args.step pgd_anneal_iters 789 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 790 200
penalty weights 10000.0
args.step pgd_anneal_iters 790 600
dim_v 512
rho, theta 295 tensor(-2.9897e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 791 200
penalty weights 10000.0
args.step pgd_anneal_iters 791 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 792 200
penalty weights 10000.0
args.step pgd_anneal_iters 792 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 793 200
penalty weights 10000.0
args.step pgd_anneal_iters 793 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 794 200
penalty weights 10000.0
args.step pgd_anneal_iters 794 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 795 200
penalty weights 10000.0
args.step pgd_anneal_iters 795 600
dim_v 512
rho, theta 286 tensor(-2.6165e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 796 200
penalty weights 10000.0
args.step pgd_anneal_iters 796 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 797 200
penalty weights 10000.0
args.step pgd_anneal_iters 797 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 798 200
penalty weights 10000.0
args.step pgd_anneal_iters 798 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 799 200
penalty weights 10000.0
args.step pgd_anneal_iters 799 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 800 200
penalty weights 10000.0
args.step pgd_anneal_iters 800 600
dim_v 512
rho, theta 328 tensor(-4.0278e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 801 200
penalty weights 10000.0
args.step pgd_anneal_iters 801 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 802 200
penalty weights 10000.0
args.step pgd_anneal_iters 802 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 803 200
penalty weights 10000.0
args.step pgd_anneal_iters 803 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 804 200
penalty weights 10000.0
args.step pgd_anneal_iters 804 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 805 200
penalty weights 10000.0
args.step pgd_anneal_iters 805 600
dim_v 512
rho, theta 333 tensor(3.5549e-07, device='cuda:0')
final projection at end of training
dim_v 512
rho, theta 333 tensor(1.4277e-09, device='cuda:0')
Epoch: [30][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm  34.47 ( 34.47)	train_acc   0.46 (  0.50)	train_minacc   0.47 (  0.50)	train_majacc   0.46 (  0.50)	train_corr   0.00 (  0.00)	l1 4.4982 (4.4929)	zero_count 0.0000 (46.4490)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.59it/s] 23%|##3       | 6/26 [00:00<00:01, 18.88it/s]                                               23%|##3       | 6/26 [00:00<00:01, 18.88it/s] 42%|####2     | 11/26 [00:00<00:00, 28.01it/s] 62%|######1   | 16/26 [00:00<00:00, 33.95it/s]                                                62%|######1   | 16/26 [00:00<00:00, 33.95it/s] 81%|########  | 21/26 [00:00<00:00, 34.17it/s]100%|##########| 26/26 [00:00<00:00, 38.25it/s]100%|##########| 26/26 [00:00<00:00, 28.70it/s]
Test: [   0/  26]	Loss 0.689 (0.689)	test_acc   0.47 (  0.47)	test_minacc   0.39 (  0.39)	test_majacc   0.48 (  0.48)	Loss_d 0.689 (0.689)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.14 (  0.14)
Test: [  10/  26]	Loss 0.686 (0.682)	test_acc   0.47 (  0.50)	test_minacc   0.45 (  0.47)	test_majacc   0.47 (  0.50)	Loss_d 0.686 (0.682)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.45 (  0.47)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.16 (  0.14)
Test: [  20/  26]	Loss 0.681 (0.682)	test_acc   0.51 (  0.50)	test_minacc   0.49 (  0.49)	test_majacc   0.51 (  0.50)	Loss_d 0.681 (0.682)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.15 (  0.15)
Test: [  26/  26]	Loss 0.686 (0.682)	test_acc   0.46 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.46 (  0.50)	Loss_d 0.686 (0.682)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.18 (  0.15)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.05it/s]
Test: [  0/  1]	Loss 0.704 (0.704)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.704 (0.704)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.06 (  0.06)
Test: [  1/  1]	Loss 0.704 (0.704)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.704 (0.704)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.06 (  0.06)
Overall Timing[ 30/  1]	epoch_time 0.0453 (0.0439)	validation_time 0.0005 (0.0007)	train_time 0.0448 (0.0431)
record: (train_acc, test_acc) (0.7288000310063362, 0.7110000252723694)
last accs (train_acc, test_acc) (0.5000000084936619, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.41it/s] 12%|#1        | 3/26 [00:00<00:01, 13.09it/s] 23%|##3       | 6/26 [00:00<00:01, 19.40it/s] 38%|###8      | 10/26 [00:00<00:00, 23.98it/s] 54%|#####3    | 14/26 [00:00<00:00, 28.06it/s] 65%|######5   | 17/26 [00:00<00:00, 28.15it/s] 77%|#######6  | 20/26 [00:00<00:00, 28.51it/s] 92%|#########2| 24/26 [00:00<00:00, 30.91it/s]100%|##########| 26/26 [00:01<00:00, 24.73it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 806 200
penalty weights 10000.0
args.step pgd_anneal_iters 806 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 807 200
penalty weights 10000.0
args.step pgd_anneal_iters 807 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 808 200
penalty weights 10000.0
args.step pgd_anneal_iters 808 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 809 200
penalty weights 10000.0
args.step pgd_anneal_iters 809 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 810 200
penalty weights 10000.0
args.step pgd_anneal_iters 810 600
dim_v 512
rho, theta 305 tensor(-1.5031e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 811 200
penalty weights 10000.0
args.step pgd_anneal_iters 811 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 812 200
penalty weights 10000.0
args.step pgd_anneal_iters 812 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 813 200
penalty weights 10000.0
args.step pgd_anneal_iters 813 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 814 200
penalty weights 10000.0
args.step pgd_anneal_iters 814 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 815 200
penalty weights 10000.0
args.step pgd_anneal_iters 815 600
dim_v 512
rho, theta 295 tensor(-2.1669e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 816 200
penalty weights 10000.0
args.step pgd_anneal_iters 816 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 817 200
penalty weights 10000.0
args.step pgd_anneal_iters 817 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 818 200
penalty weights 10000.0
args.step pgd_anneal_iters 818 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 819 200
penalty weights 10000.0
args.step pgd_anneal_iters 819 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 820 200
penalty weights 10000.0
args.step pgd_anneal_iters 820 600
dim_v 512
rho, theta 294 tensor(-2.7076e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 821 200
penalty weights 10000.0
args.step pgd_anneal_iters 821 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 822 200
penalty weights 10000.0
args.step pgd_anneal_iters 822 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 823 200
penalty weights 10000.0
args.step pgd_anneal_iters 823 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 824 200
penalty weights 10000.0
args.step pgd_anneal_iters 824 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 825 200
penalty weights 10000.0
args.step pgd_anneal_iters 825 600
dim_v 512
rho, theta 316 tensor(-6.4817e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 826 200
penalty weights 10000.0
args.step pgd_anneal_iters 826 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 827 200
penalty weights 10000.0
args.step pgd_anneal_iters 827 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 828 200
penalty weights 10000.0
args.step pgd_anneal_iters 828 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 829 200
penalty weights 10000.0
args.step pgd_anneal_iters 829 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 830 200
penalty weights 10000.0
args.step pgd_anneal_iters 830 600
dim_v 512
rho, theta 330 tensor(9.2486e-07, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 831 200
penalty weights 10000.0
args.step pgd_anneal_iters 831 600
final projection at end of training
dim_v 512
rho, theta 333 tensor(-2.9695e-07, device='cuda:0')
Epoch: [31][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm  34.47 ( 34.47)	train_acc   0.46 (  0.50)	train_minacc   0.47 (  0.50)	train_majacc   0.46 (  0.50)	train_corr   0.00 (  0.00)	l1 4.4884 (4.4928)	zero_count 181.0000 (43.9930)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.00it/s] 27%|##6       | 7/26 [00:00<00:00, 32.38it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.38it/s] 46%|####6     | 12/26 [00:00<00:00, 34.90it/s] 65%|######5   | 17/26 [00:00<00:00, 39.05it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.05it/s] 85%|########4 | 22/26 [00:00<00:00, 41.69it/s]100%|##########| 26/26 [00:00<00:00, 35.73it/s]
Test: [   0/  26]	Loss 0.689 (0.689)	test_acc   0.47 (  0.47)	test_minacc   0.39 (  0.39)	test_majacc   0.48 (  0.48)	Loss_d 0.689 (0.689)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.13 (  0.13)
Test: [  10/  26]	Loss 0.686 (0.682)	test_acc   0.47 (  0.50)	test_minacc   0.45 (  0.47)	test_majacc   0.47 (  0.50)	Loss_d 0.686 (0.682)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.45 (  0.47)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.15 (  0.13)
Test: [  20/  26]	Loss 0.681 (0.682)	test_acc   0.51 (  0.50)	test_minacc   0.49 (  0.49)	test_majacc   0.51 (  0.50)	Loss_d 0.681 (0.682)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.14 (  0.14)
Test: [  26/  26]	Loss 0.687 (0.682)	test_acc   0.46 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.46 (  0.50)	Loss_d 0.687 (0.682)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.18 (  0.14)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.11it/s]
Test: [  0/  1]	Loss 0.703 (0.703)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.703 (0.703)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.05 (  0.05)
Test: [  1/  1]	Loss 0.703 (0.703)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.703 (0.703)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.05 (  0.05)
Overall Timing[ 31/  1]	epoch_time 0.0456 (0.0440)	validation_time 0.0005 (0.0006)	train_time 0.0451 (0.0432)
record: (train_acc, test_acc) (0.7288000310063362, 0.7110000252723694)
last accs (train_acc, test_acc) (0.5000000084936619, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.18it/s] 15%|#5        | 4/26 [00:00<00:01, 15.04it/s] 31%|###       | 8/26 [00:00<00:00, 22.54it/s] 42%|####2     | 11/26 [00:00<00:00, 24.06it/s] 54%|#####3    | 14/26 [00:00<00:00, 25.57it/s] 69%|######9   | 18/26 [00:00<00:00, 29.11it/s] 85%|########4 | 22/26 [00:00<00:00, 29.29it/s] 96%|#########6| 25/26 [00:00<00:00, 28.85it/s]100%|##########| 26/26 [00:01<00:00, 23.99it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 832 200
penalty weights 10000.0
args.step pgd_anneal_iters 832 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 833 200
penalty weights 10000.0
args.step pgd_anneal_iters 833 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 834 200
penalty weights 10000.0
args.step pgd_anneal_iters 834 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 835 200
penalty weights 10000.0
args.step pgd_anneal_iters 835 600
dim_v 512
rho, theta 304 tensor(-1.0886e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 836 200
penalty weights 10000.0
args.step pgd_anneal_iters 836 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 837 200
penalty weights 10000.0
args.step pgd_anneal_iters 837 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 838 200
penalty weights 10000.0
args.step pgd_anneal_iters 838 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 839 200
penalty weights 10000.0
args.step pgd_anneal_iters 839 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 840 200
penalty weights 10000.0
args.step pgd_anneal_iters 840 600
dim_v 512
rho, theta 292 tensor(-1.5845e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 841 200
penalty weights 10000.0
args.step pgd_anneal_iters 841 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 842 200
penalty weights 10000.0
args.step pgd_anneal_iters 842 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 843 200
penalty weights 10000.0
args.step pgd_anneal_iters 843 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 844 200
penalty weights 10000.0
args.step pgd_anneal_iters 844 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 845 200
penalty weights 10000.0
args.step pgd_anneal_iters 845 600
dim_v 512
rho, theta 303 tensor(-2.6301e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 846 200
penalty weights 10000.0
args.step pgd_anneal_iters 846 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 847 200
penalty weights 10000.0
args.step pgd_anneal_iters 847 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 848 200
penalty weights 10000.0
args.step pgd_anneal_iters 848 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 849 200
penalty weights 10000.0
args.step pgd_anneal_iters 849 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 850 200
penalty weights 10000.0
args.step pgd_anneal_iters 850 600
dim_v 512
rho, theta 294 tensor(-9.4123e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 851 200
penalty weights 10000.0
args.step pgd_anneal_iters 851 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 852 200
penalty weights 10000.0
args.step pgd_anneal_iters 852 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 853 200
penalty weights 10000.0
args.step pgd_anneal_iters 853 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 854 200
penalty weights 10000.0
args.step pgd_anneal_iters 854 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 855 200
penalty weights 10000.0
args.step pgd_anneal_iters 855 600
dim_v 512
rho, theta 328 tensor(-1.2334e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 856 200
penalty weights 10000.0
args.step pgd_anneal_iters 856 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 857 200
penalty weights 10000.0
args.step pgd_anneal_iters 857 600
final projection at end of training
dim_v 512
rho, theta 334 tensor(1.0348e-06, device='cuda:0')
Epoch: [32][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm  34.47 ( 34.47)	train_acc   0.46 (  0.50)	train_minacc   0.47 (  0.50)	train_majacc   0.46 (  0.50)	train_corr   0.00 (  0.00)	l1 4.4908 (4.4922)	zero_count 0.0000 (47.2680)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.70it/s] 23%|##3       | 6/26 [00:00<00:00, 31.32it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.32it/s] 42%|####2     | 11/26 [00:00<00:00, 38.21it/s] 62%|######1   | 16/26 [00:00<00:00, 42.06it/s]                                                62%|######1   | 16/26 [00:00<00:00, 42.06it/s] 81%|########  | 21/26 [00:00<00:00, 39.76it/s]100%|##########| 26/26 [00:00<00:00, 42.28it/s]100%|##########| 26/26 [00:00<00:00, 35.69it/s]
Test: [   0/  26]	Loss 0.688 (0.688)	test_acc   0.47 (  0.47)	test_minacc   0.39 (  0.39)	test_majacc   0.48 (  0.48)	Loss_d 0.688 (0.688)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.13 (  0.13)
Test: [  10/  26]	Loss 0.687 (0.683)	test_acc   0.47 (  0.50)	test_minacc   0.45 (  0.47)	test_majacc   0.47 (  0.50)	Loss_d 0.687 (0.683)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.45 (  0.47)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.15 (  0.13)
Test: [  20/  26]	Loss 0.682 (0.683)	test_acc   0.51 (  0.50)	test_minacc   0.49 (  0.49)	test_majacc   0.51 (  0.50)	Loss_d 0.682 (0.683)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.13 (  0.14)
Test: [  26/  26]	Loss 0.687 (0.683)	test_acc   0.46 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.46 (  0.50)	Loss_d 0.687 (0.683)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.17 (  0.13)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.09it/s]
Test: [  0/  1]	Loss 0.702 (0.702)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.702 (0.702)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.05 (  0.05)
Test: [  1/  1]	Loss 0.702 (0.702)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.702 (0.702)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.05 (  0.05)
Overall Timing[ 32/  1]	epoch_time 0.0435 (0.0440)	validation_time 0.0004 (0.0006)	train_time 0.0431 (0.0432)
record: (train_acc, test_acc) (0.7288000310063362, 0.7110000252723694)
last accs (train_acc, test_acc) (0.5000000084936619, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.08it/s] 12%|#1        | 3/26 [00:00<00:01, 11.81it/s] 27%|##6       | 7/26 [00:00<00:00, 20.86it/s] 42%|####2     | 11/26 [00:00<00:00, 25.18it/s] 54%|#####3    | 14/26 [00:00<00:00, 25.95it/s] 69%|######9   | 18/26 [00:00<00:00, 27.11it/s] 85%|########4 | 22/26 [00:00<00:00, 29.13it/s] 96%|#########6| 25/26 [00:00<00:00, 28.72it/s]100%|##########| 26/26 [00:01<00:00, 24.07it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 858 200
penalty weights 10000.0
args.step pgd_anneal_iters 858 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 859 200
penalty weights 10000.0
args.step pgd_anneal_iters 859 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 860 200
penalty weights 10000.0
args.step pgd_anneal_iters 860 600
dim_v 512
rho, theta 307 tensor(-7.0984e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 861 200
penalty weights 10000.0
args.step pgd_anneal_iters 861 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 862 200
penalty weights 10000.0
args.step pgd_anneal_iters 862 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 863 200
penalty weights 10000.0
args.step pgd_anneal_iters 863 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 864 200
penalty weights 10000.0
args.step pgd_anneal_iters 864 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 865 200
penalty weights 10000.0
args.step pgd_anneal_iters 865 600
dim_v 512
rho, theta 293 tensor(-1.1397e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 866 200
penalty weights 10000.0
args.step pgd_anneal_iters 866 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 867 200
penalty weights 10000.0
args.step pgd_anneal_iters 867 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 868 200
penalty weights 10000.0
args.step pgd_anneal_iters 868 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 869 200
penalty weights 10000.0
args.step pgd_anneal_iters 869 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 870 200
penalty weights 10000.0
args.step pgd_anneal_iters 870 600
dim_v 512
rho, theta 308 tensor(-2.4825e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 871 200
penalty weights 10000.0
args.step pgd_anneal_iters 871 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 872 200
penalty weights 10000.0
args.step pgd_anneal_iters 872 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 873 200
penalty weights 10000.0
args.step pgd_anneal_iters 873 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 874 200
penalty weights 10000.0
args.step pgd_anneal_iters 874 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 875 200
penalty weights 10000.0
args.step pgd_anneal_iters 875 600
dim_v 512
rho, theta 292 tensor(-1.2442e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 876 200
penalty weights 10000.0
args.step pgd_anneal_iters 876 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 877 200
penalty weights 10000.0
args.step pgd_anneal_iters 877 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 878 200
penalty weights 10000.0
args.step pgd_anneal_iters 878 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 879 200
penalty weights 10000.0
args.step pgd_anneal_iters 879 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 880 200
penalty weights 10000.0
args.step pgd_anneal_iters 880 600
dim_v 512
rho, theta 324 tensor(-1.7929e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 881 200
penalty weights 10000.0
args.step pgd_anneal_iters 881 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 882 200
penalty weights 10000.0
args.step pgd_anneal_iters 882 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 883 200
penalty weights 10000.0
args.step pgd_anneal_iters 883 600
final projection at end of training
dim_v 512
rho, theta 334 tensor(1.7679e-06, device='cuda:0')
Epoch: [33][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm  34.47 ( 34.47)	train_acc   0.46 (  0.50)	train_minacc   0.47 (  0.50)	train_majacc   0.46 (  0.50)	train_corr   0.00 (  0.00)	l1 4.4929 (4.4917)	zero_count 0.0000 (47.1120)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  4.03it/s] 23%|##3       | 6/26 [00:00<00:00, 20.63it/s]                                               23%|##3       | 6/26 [00:00<00:00, 20.63it/s] 42%|####2     | 11/26 [00:00<00:00, 29.85it/s] 65%|######5   | 17/26 [00:00<00:00, 35.79it/s]                                                65%|######5   | 17/26 [00:00<00:00, 35.79it/s] 85%|########4 | 22/26 [00:00<00:00, 39.69it/s]100%|##########| 26/26 [00:00<00:00, 31.34it/s]
Test: [   0/  26]	Loss 0.688 (0.688)	test_acc   0.47 (  0.47)	test_minacc   0.39 (  0.39)	test_majacc   0.48 (  0.48)	Loss_d 0.688 (0.688)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.12 (  0.12)
Test: [  10/  26]	Loss 0.687 (0.683)	test_acc   0.47 (  0.50)	test_minacc   0.45 (  0.47)	test_majacc   0.47 (  0.50)	Loss_d 0.687 (0.683)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.45 (  0.47)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.14 (  0.12)
Test: [  20/  26]	Loss 0.683 (0.683)	test_acc   0.51 (  0.50)	test_minacc   0.49 (  0.49)	test_majacc   0.51 (  0.50)	Loss_d 0.683 (0.683)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.13 (  0.13)
Test: [  26/  26]	Loss 0.687 (0.683)	test_acc   0.46 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.46 (  0.50)	Loss_d 0.687 (0.683)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.17 (  0.13)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.03it/s]
Test: [  0/  1]	Loss 0.700 (0.700)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.700 (0.700)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.04 (  0.04)
Test: [  1/  1]	Loss 0.700 (0.700)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.700 (0.700)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.04 (  0.04)
Overall Timing[ 33/  1]	epoch_time 0.0411 (0.0439)	validation_time 0.0004 (0.0006)	train_time 0.0406 (0.0431)
record: (train_acc, test_acc) (0.7288000310063362, 0.7110000252723694)
last accs (train_acc, test_acc) (0.5000000084936619, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 13.09it/s] 23%|##3       | 6/26 [00:00<00:00, 24.04it/s] 35%|###4      | 9/26 [00:00<00:00, 25.65it/s] 46%|####6     | 12/26 [00:00<00:00, 26.33it/s] 62%|######1   | 16/26 [00:00<00:00, 28.75it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.38it/s] 85%|########4 | 22/26 [00:00<00:00, 27.99it/s]100%|##########| 26/26 [00:00<00:00, 30.22it/s]100%|##########| 26/26 [00:00<00:00, 26.00it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 884 200
penalty weights 10000.0
args.step pgd_anneal_iters 884 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 885 200
penalty weights 10000.0
args.step pgd_anneal_iters 885 600
dim_v 512
rho, theta 311 tensor(-5.1336e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 886 200
penalty weights 10000.0
args.step pgd_anneal_iters 886 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 887 200
penalty weights 10000.0
args.step pgd_anneal_iters 887 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 888 200
penalty weights 10000.0
args.step pgd_anneal_iters 888 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 889 200
penalty weights 10000.0
args.step pgd_anneal_iters 889 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 890 200
penalty weights 10000.0
args.step pgd_anneal_iters 890 600
dim_v 512
rho, theta 296 tensor(-6.6677e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 891 200
penalty weights 10000.0
args.step pgd_anneal_iters 891 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 892 200
penalty weights 10000.0
args.step pgd_anneal_iters 892 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 893 200
penalty weights 10000.0
args.step pgd_anneal_iters 893 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 894 200
penalty weights 10000.0
args.step pgd_anneal_iters 894 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 895 200
penalty weights 10000.0
args.step pgd_anneal_iters 895 600
dim_v 512
rho, theta 316 tensor(-2.3367e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 896 200
penalty weights 10000.0
args.step pgd_anneal_iters 896 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 897 200
penalty weights 10000.0
args.step pgd_anneal_iters 897 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 898 200
penalty weights 10000.0
args.step pgd_anneal_iters 898 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 899 200
penalty weights 10000.0
args.step pgd_anneal_iters 899 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 900 200
penalty weights 10000.0
args.step pgd_anneal_iters 900 600
dim_v 512
rho, theta 300 tensor(-1.5297e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 901 200
penalty weights 10000.0
args.step pgd_anneal_iters 901 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 902 200
penalty weights 10000.0
args.step pgd_anneal_iters 902 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 903 200
penalty weights 10000.0
args.step pgd_anneal_iters 903 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 904 200
penalty weights 10000.0
args.step pgd_anneal_iters 904 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 905 200
penalty weights 10000.0
args.step pgd_anneal_iters 905 600
dim_v 512
rho, theta 326 tensor(-2.1873e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 906 200
penalty weights 10000.0
args.step pgd_anneal_iters 906 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 907 200
penalty weights 10000.0
args.step pgd_anneal_iters 907 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 908 200
penalty weights 10000.0
args.step pgd_anneal_iters 908 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 909 200
penalty weights 10000.0
args.step pgd_anneal_iters 909 600
final projection at end of training
dim_v 512
rho, theta 331 tensor(7.3680e-07, device='cuda:0')
Epoch: [34][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm  34.47 ( 34.47)	train_acc   0.46 (  0.50)	train_minacc   0.47 (  0.50)	train_majacc   0.46 (  0.50)	train_corr   0.00 (  0.00)	l1 4.4942 (4.4915)	zero_count 0.0000 (46.1370)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.68it/s] 19%|#9        | 5/26 [00:00<00:01, 15.78it/s] 38%|###8      | 10/26 [00:00<00:00, 24.31it/s]                                                38%|###8      | 10/26 [00:00<00:00, 24.31it/s] 58%|#####7    | 15/26 [00:00<00:00, 31.16it/s] 77%|#######6  | 20/26 [00:00<00:00, 35.83it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 35.83it/s] 96%|#########6| 25/26 [00:00<00:00, 38.93it/s]100%|##########| 26/26 [00:00<00:00, 28.40it/s]
Test: [   0/  26]	Loss 0.688 (0.688)	test_acc   0.47 (  0.47)	test_minacc   0.39 (  0.39)	test_majacc   0.48 (  0.48)	Loss_d 0.688 (0.688)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.12 (  0.12)
Test: [  10/  26]	Loss 0.687 (0.683)	test_acc   0.47 (  0.50)	test_minacc   0.45 (  0.47)	test_majacc   0.47 (  0.50)	Loss_d 0.687 (0.683)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.45 (  0.47)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.14 (  0.12)
Test: [  20/  26]	Loss 0.683 (0.683)	test_acc   0.51 (  0.50)	test_minacc   0.49 (  0.49)	test_majacc   0.51 (  0.50)	Loss_d 0.683 (0.683)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.12 (  0.13)
Test: [  26/  26]	Loss 0.687 (0.684)	test_acc   0.46 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.46 (  0.50)	Loss_d 0.687 (0.684)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.16 (  0.12)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.85it/s]
Test: [  0/  1]	Loss 0.700 (0.700)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.700 (0.700)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.04 (  0.04)
Test: [  1/  1]	Loss 0.700 (0.700)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.700 (0.700)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.04 (  0.04)
Overall Timing[ 34/  1]	epoch_time 0.0427 (0.0439)	validation_time 0.0003 (0.0006)	train_time 0.0423 (0.0431)
record: (train_acc, test_acc) (0.7288000310063362, 0.7110000252723694)
last accs (train_acc, test_acc) (0.5000000084936619, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.78it/s] 19%|#9        | 5/26 [00:00<00:01, 20.21it/s] 31%|###       | 8/26 [00:00<00:00, 23.46it/s] 42%|####2     | 11/26 [00:00<00:00, 24.75it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.49it/s] 69%|######9   | 18/26 [00:00<00:00, 28.65it/s] 81%|########  | 21/26 [00:00<00:00, 28.10it/s] 96%|#########6| 25/26 [00:00<00:00, 30.33it/s]100%|##########| 26/26 [00:01<00:00, 24.87it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 910 200
penalty weights 10000.0
args.step pgd_anneal_iters 910 600
dim_v 512
rho, theta 316 tensor(-2.2894e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 911 200
penalty weights 10000.0
args.step pgd_anneal_iters 911 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 912 200
penalty weights 10000.0
args.step pgd_anneal_iters 912 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 913 200
penalty weights 10000.0
args.step pgd_anneal_iters 913 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 914 200
penalty weights 10000.0
args.step pgd_anneal_iters 914 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 915 200
penalty weights 10000.0
args.step pgd_anneal_iters 915 600
dim_v 512
rho, theta 304 tensor(-5.5110e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 916 200
penalty weights 10000.0
args.step pgd_anneal_iters 916 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 917 200
penalty weights 10000.0
args.step pgd_anneal_iters 917 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 918 200
penalty weights 10000.0
args.step pgd_anneal_iters 918 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 919 200
penalty weights 10000.0
args.step pgd_anneal_iters 919 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 920 200
penalty weights 10000.0
args.step pgd_anneal_iters 920 600
dim_v 512
rho, theta 304 tensor(-1.8534e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 921 200
penalty weights 10000.0
args.step pgd_anneal_iters 921 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 922 200
penalty weights 10000.0
args.step pgd_anneal_iters 922 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 923 200
penalty weights 10000.0
args.step pgd_anneal_iters 923 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 924 200
penalty weights 10000.0
args.step pgd_anneal_iters 924 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 925 200
penalty weights 10000.0
args.step pgd_anneal_iters 925 600
dim_v 512
rho, theta 310 tensor(-1.8439e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 926 200
penalty weights 10000.0
args.step pgd_anneal_iters 926 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 927 200
penalty weights 10000.0
args.step pgd_anneal_iters 927 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 928 200
penalty weights 10000.0
args.step pgd_anneal_iters 928 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 929 200
penalty weights 10000.0
args.step pgd_anneal_iters 929 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 930 200
penalty weights 10000.0
args.step pgd_anneal_iters 930 600
dim_v 512
rho, theta 329 tensor(-3.4144e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 931 200
penalty weights 10000.0
args.step pgd_anneal_iters 931 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 932 200
penalty weights 10000.0
args.step pgd_anneal_iters 932 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 933 200
penalty weights 10000.0
args.step pgd_anneal_iters 933 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 934 200
penalty weights 10000.0
args.step pgd_anneal_iters 934 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 935 200
penalty weights 10000.0
args.step pgd_anneal_iters 935 600
dim_v 512
rho, theta 331 tensor(6.6211e-07, device='cuda:0')
final projection at end of training
dim_v 512
rho, theta 331 tensor(1.4363e-09, device='cuda:0')
Epoch: [35][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm  34.47 ( 34.47)	train_acc   0.46 (  0.50)	train_minacc   0.47 (  0.50)	train_majacc   0.46 (  0.50)	train_corr   0.00 (  0.00)	l1 4.4957 (4.4916)	zero_count 0.0000 (45.7080)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:08,  3.12it/s] 23%|##3       | 6/26 [00:00<00:01, 17.38it/s]                                               23%|##3       | 6/26 [00:00<00:01, 17.38it/s] 42%|####2     | 11/26 [00:00<00:00, 26.64it/s] 62%|######1   | 16/26 [00:00<00:00, 33.58it/s]                                                62%|######1   | 16/26 [00:00<00:00, 33.58it/s] 81%|########  | 21/26 [00:00<00:00, 34.68it/s]100%|##########| 26/26 [00:00<00:00, 38.62it/s]100%|##########| 26/26 [00:00<00:00, 27.94it/s]
Test: [   0/  26]	Loss 0.688 (0.688)	test_acc   0.47 (  0.47)	test_minacc   0.39 (  0.39)	test_majacc   0.48 (  0.48)	Loss_d 0.688 (0.688)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.12 (  0.12)
Test: [  10/  26]	Loss 0.687 (0.684)	test_acc   0.47 (  0.50)	test_minacc   0.45 (  0.47)	test_majacc   0.47 (  0.50)	Loss_d 0.687 (0.684)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.45 (  0.47)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.13 (  0.11)
Test: [  20/  26]	Loss 0.683 (0.684)	test_acc   0.51 (  0.50)	test_minacc   0.49 (  0.49)	test_majacc   0.51 (  0.50)	Loss_d 0.683 (0.684)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.12 (  0.12)
Test: [  26/  26]	Loss 0.687 (0.684)	test_acc   0.46 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.46 (  0.50)	Loss_d 0.687 (0.684)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.16 (  0.12)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.63it/s]
Test: [  0/  1]	Loss 0.699 (0.699)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.699 (0.699)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.03 (  0.03)
Test: [  1/  1]	Loss 0.699 (0.699)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.699 (0.699)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.03 (  0.03)
Overall Timing[ 35/  1]	epoch_time 0.0425 (0.0438)	validation_time 0.0005 (0.0006)	train_time 0.0420 (0.0431)
record: (train_acc, test_acc) (0.7288000310063362, 0.7110000252723694)
last accs (train_acc, test_acc) (0.5000000084936619, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.49it/s] 19%|#9        | 5/26 [00:00<00:01, 15.18it/s] 35%|###4      | 9/26 [00:00<00:00, 21.68it/s] 46%|####6     | 12/26 [00:00<00:00, 23.48it/s] 58%|#####7    | 15/26 [00:00<00:00, 24.54it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.85it/s] 85%|########4 | 22/26 [00:00<00:00, 28.03it/s] 96%|#########6| 25/26 [00:01<00:00, 28.00it/s]100%|##########| 26/26 [00:01<00:00, 23.19it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 936 200
penalty weights 10000.0
args.step pgd_anneal_iters 936 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 937 200
penalty weights 10000.0
args.step pgd_anneal_iters 937 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 938 200
penalty weights 10000.0
args.step pgd_anneal_iters 938 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 939 200
penalty weights 10000.0
args.step pgd_anneal_iters 939 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 940 200
penalty weights 10000.0
args.step pgd_anneal_iters 940 600
dim_v 512
rho, theta 305 tensor(-6.3656e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 941 200
penalty weights 10000.0
args.step pgd_anneal_iters 941 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 942 200
penalty weights 10000.0
args.step pgd_anneal_iters 942 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 943 200
penalty weights 10000.0
args.step pgd_anneal_iters 943 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 944 200
penalty weights 10000.0
args.step pgd_anneal_iters 944 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 945 200
penalty weights 10000.0
args.step pgd_anneal_iters 945 600
dim_v 512
rho, theta 295 tensor(-1.3213e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 946 200
penalty weights 10000.0
args.step pgd_anneal_iters 946 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 947 200
penalty weights 10000.0
args.step pgd_anneal_iters 947 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 948 200
penalty weights 10000.0
args.step pgd_anneal_iters 948 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 949 200
penalty weights 10000.0
args.step pgd_anneal_iters 949 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 950 200
penalty weights 10000.0
args.step pgd_anneal_iters 950 600
dim_v 512
rho, theta 321 tensor(-1.9602e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 951 200
penalty weights 10000.0
args.step pgd_anneal_iters 951 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 952 200
penalty weights 10000.0
args.step pgd_anneal_iters 952 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 953 200
penalty weights 10000.0
args.step pgd_anneal_iters 953 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 954 200
penalty weights 10000.0
args.step pgd_anneal_iters 954 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 955 200
penalty weights 10000.0
args.step pgd_anneal_iters 955 600
dim_v 512
rho, theta 318 tensor(-6.0838e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 956 200
penalty weights 10000.0
args.step pgd_anneal_iters 956 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 957 200
penalty weights 10000.0
args.step pgd_anneal_iters 957 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 958 200
penalty weights 10000.0
args.step pgd_anneal_iters 958 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 959 200
penalty weights 10000.0
args.step pgd_anneal_iters 959 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 960 200
penalty weights 10000.0
args.step pgd_anneal_iters 960 600
dim_v 512
rho, theta 330 tensor(6.6556e-07, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 961 200
penalty weights 10000.0
args.step pgd_anneal_iters 961 600
final projection at end of training
dim_v 512
rho, theta 333 tensor(3.5691e-08, device='cuda:0')
Epoch: [36][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm  34.47 ( 34.47)	train_acc   0.46 (  0.50)	train_minacc   0.47 (  0.50)	train_majacc   0.46 (  0.50)	train_corr   0.00 (  0.00)	l1 4.4884 (4.4916)	zero_count 181.0000 (42.9400)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.25it/s] 31%|###       | 8/26 [00:00<00:00, 38.26it/s]                                               31%|###       | 8/26 [00:00<00:00, 38.26it/s] 50%|#####     | 13/26 [00:00<00:00, 41.86it/s] 69%|######9   | 18/26 [00:00<00:00, 43.78it/s]                                                69%|######9   | 18/26 [00:00<00:00, 43.78it/s] 88%|########8 | 23/26 [00:00<00:00, 39.85it/s]100%|##########| 26/26 [00:00<00:00, 38.05it/s]
Test: [   0/  26]	Loss 0.688 (0.688)	test_acc   0.47 (  0.47)	test_minacc   0.39 (  0.39)	test_majacc   0.48 (  0.48)	Loss_d 0.688 (0.688)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.11 (  0.11)
Test: [  10/  26]	Loss 0.687 (0.684)	test_acc   0.47 (  0.50)	test_minacc   0.45 (  0.47)	test_majacc   0.47 (  0.50)	Loss_d 0.687 (0.684)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.45 (  0.47)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.13 (  0.11)
Test: [  20/  26]	Loss 0.684 (0.684)	test_acc   0.51 (  0.50)	test_minacc   0.49 (  0.49)	test_majacc   0.51 (  0.50)	Loss_d 0.684 (0.684)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.11 (  0.12)
Test: [  26/  26]	Loss 0.687 (0.684)	test_acc   0.46 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.46 (  0.50)	Loss_d 0.687 (0.684)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.15 (  0.12)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.05it/s]
Test: [  0/  1]	Loss 0.698 (0.698)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.698 (0.698)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.03 (  0.03)
Test: [  1/  1]	Loss 0.698 (0.698)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.698 (0.698)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.03 (  0.03)
Overall Timing[ 36/  1]	epoch_time 0.0462 (0.0439)	validation_time 0.0004 (0.0006)	train_time 0.0458 (0.0431)
record: (train_acc, test_acc) (0.7288000310063362, 0.7110000252723694)
last accs (train_acc, test_acc) (0.5000000084936619, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.01it/s] 15%|#5        | 4/26 [00:00<00:01, 13.98it/s] 31%|###       | 8/26 [00:00<00:00, 21.71it/s] 42%|####2     | 11/26 [00:00<00:00, 23.49it/s] 54%|#####3    | 14/26 [00:00<00:00, 24.63it/s] 69%|######9   | 18/26 [00:00<00:00, 27.94it/s] 85%|########4 | 22/26 [00:00<00:00, 29.18it/s]100%|##########| 26/26 [00:01<00:00, 30.51it/s]100%|##########| 26/26 [00:01<00:00, 23.55it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 962 200
penalty weights 10000.0
args.step pgd_anneal_iters 962 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 963 200
penalty weights 10000.0
args.step pgd_anneal_iters 963 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 964 200
penalty weights 10000.0
args.step pgd_anneal_iters 964 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 965 200
penalty weights 10000.0
args.step pgd_anneal_iters 965 600
dim_v 512
rho, theta 303 tensor(-4.8562e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 966 200
penalty weights 10000.0
args.step pgd_anneal_iters 966 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 967 200
penalty weights 10000.0
args.step pgd_anneal_iters 967 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 968 200
penalty weights 10000.0
args.step pgd_anneal_iters 968 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 969 200
penalty weights 10000.0
args.step pgd_anneal_iters 969 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 970 200
penalty weights 10000.0
args.step pgd_anneal_iters 970 600
dim_v 512
rho, theta 288 tensor(-8.7349e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 971 200
penalty weights 10000.0
args.step pgd_anneal_iters 971 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 972 200
penalty weights 10000.0
args.step pgd_anneal_iters 972 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 973 200
penalty weights 10000.0
args.step pgd_anneal_iters 973 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 974 200
penalty weights 10000.0
args.step pgd_anneal_iters 974 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 975 200
penalty weights 10000.0
args.step pgd_anneal_iters 975 600
dim_v 512
rho, theta 325 tensor(-1.9005e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 976 200
penalty weights 10000.0
args.step pgd_anneal_iters 976 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 977 200
penalty weights 10000.0
args.step pgd_anneal_iters 977 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 978 200
penalty weights 10000.0
args.step pgd_anneal_iters 978 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 979 200
penalty weights 10000.0
args.step pgd_anneal_iters 979 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 980 200
penalty weights 10000.0
args.step pgd_anneal_iters 980 600
dim_v 512
rho, theta 306 tensor(-7.8468e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 981 200
penalty weights 10000.0
args.step pgd_anneal_iters 981 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 982 200
penalty weights 10000.0
args.step pgd_anneal_iters 982 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 983 200
penalty weights 10000.0
args.step pgd_anneal_iters 983 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 984 200
penalty weights 10000.0
args.step pgd_anneal_iters 984 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 985 200
penalty weights 10000.0
args.step pgd_anneal_iters 985 600
dim_v 512
rho, theta 325 tensor(-1.6587e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 986 200
penalty weights 10000.0
args.step pgd_anneal_iters 986 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 987 200
penalty weights 10000.0
args.step pgd_anneal_iters 987 600
final projection at end of training
dim_v 512
rho, theta 333 tensor(1.1207e-06, device='cuda:0')
Epoch: [37][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm  34.47 ( 34.47)	train_acc   0.46 (  0.50)	train_minacc   0.47 (  0.50)	train_majacc   0.46 (  0.50)	train_corr   0.00 (  0.00)	l1 4.4903 (4.4912)	zero_count 0.0000 (46.2540)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.85it/s] 27%|##6       | 7/26 [00:00<00:00, 33.86it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.86it/s] 46%|####6     | 12/26 [00:00<00:00, 38.99it/s] 65%|######5   | 17/26 [00:00<00:00, 40.81it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.81it/s] 85%|########4 | 22/26 [00:00<00:00, 42.89it/s]100%|##########| 26/26 [00:00<00:00, 37.59it/s]
Test: [   0/  26]	Loss 0.688 (0.688)	test_acc   0.47 (  0.47)	test_minacc   0.39 (  0.39)	test_majacc   0.48 (  0.48)	Loss_d 0.688 (0.688)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.11 (  0.11)
Test: [  10/  26]	Loss 0.687 (0.684)	test_acc   0.47 (  0.50)	test_minacc   0.45 (  0.47)	test_majacc   0.47 (  0.50)	Loss_d 0.687 (0.684)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.45 (  0.47)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.13 (  0.11)
Test: [  20/  26]	Loss 0.684 (0.684)	test_acc   0.51 (  0.50)	test_minacc   0.49 (  0.49)	test_majacc   0.51 (  0.50)	Loss_d 0.684 (0.684)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.11 (  0.11)
Test: [  26/  26]	Loss 0.687 (0.684)	test_acc   0.46 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.46 (  0.50)	Loss_d 0.687 (0.684)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.15 (  0.11)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.52it/s]
Test: [  0/  1]	Loss 0.698 (0.698)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.698 (0.698)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.03 (  0.03)
Test: [  1/  1]	Loss 0.698 (0.698)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.698 (0.698)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.03 (  0.03)
Overall Timing[ 37/  1]	epoch_time 0.0438 (0.0439)	validation_time 0.0004 (0.0006)	train_time 0.0434 (0.0431)
record: (train_acc, test_acc) (0.7288000310063362, 0.7110000252723694)
last accs (train_acc, test_acc) (0.49990000849962235, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.41it/s] 15%|#5        | 4/26 [00:00<00:01, 19.25it/s] 31%|###       | 8/26 [00:00<00:00, 23.81it/s] 46%|####6     | 12/26 [00:00<00:00, 27.58it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.22it/s] 69%|######9   | 18/26 [00:00<00:00, 27.33it/s] 85%|########4 | 22/26 [00:00<00:00, 29.62it/s] 96%|#########6| 25/26 [00:00<00:00, 28.68it/s]100%|##########| 26/26 [00:01<00:00, 25.55it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 988 200
penalty weights 10000.0
args.step pgd_anneal_iters 988 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 989 200
penalty weights 10000.0
args.step pgd_anneal_iters 989 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 990 200
penalty weights 10000.0
args.step pgd_anneal_iters 990 600
dim_v 512
rho, theta 306 tensor(-3.4714e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 991 200
penalty weights 10000.0
args.step pgd_anneal_iters 991 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 992 200
penalty weights 10000.0
args.step pgd_anneal_iters 992 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 993 200
penalty weights 10000.0
args.step pgd_anneal_iters 993 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 994 200
penalty weights 10000.0
args.step pgd_anneal_iters 994 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 995 200
penalty weights 10000.0
args.step pgd_anneal_iters 995 600
dim_v 512
rho, theta 294 tensor(-5.4133e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 996 200
penalty weights 10000.0
args.step pgd_anneal_iters 996 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 997 200
penalty weights 10000.0
args.step pgd_anneal_iters 997 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 998 200
penalty weights 10000.0
args.step pgd_anneal_iters 998 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 999 200
penalty weights 10000.0
args.step pgd_anneal_iters 999 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1000 200
penalty weights 10000.0
args.step pgd_anneal_iters 1000 600
dim_v 512
rho, theta 325 tensor(-1.8244e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1001 200
penalty weights 10000.0
args.step pgd_anneal_iters 1001 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1002 200
penalty weights 10000.0
args.step pgd_anneal_iters 1002 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1003 200
penalty weights 10000.0
args.step pgd_anneal_iters 1003 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1004 200
penalty weights 10000.0
args.step pgd_anneal_iters 1004 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1005 200
penalty weights 10000.0
args.step pgd_anneal_iters 1005 600
dim_v 512
rho, theta 305 tensor(-9.6521e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1006 200
penalty weights 10000.0
args.step pgd_anneal_iters 1006 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1007 200
penalty weights 10000.0
args.step pgd_anneal_iters 1007 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1008 200
penalty weights 10000.0
args.step pgd_anneal_iters 1008 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1009 200
penalty weights 10000.0
args.step pgd_anneal_iters 1009 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1010 200
penalty weights 10000.0
args.step pgd_anneal_iters 1010 600
dim_v 512
rho, theta 329 tensor(-2.3235e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1011 200
penalty weights 10000.0
args.step pgd_anneal_iters 1011 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1012 200
penalty weights 10000.0
args.step pgd_anneal_iters 1012 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1013 200
penalty weights 10000.0
args.step pgd_anneal_iters 1013 600
final projection at end of training
dim_v 512
rho, theta 333 tensor(1.3848e-06, device='cuda:0')
Epoch: [38][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm  34.47 ( 34.47)	train_acc   0.46 (  0.50)	train_minacc   0.47 (  0.50)	train_majacc   0.46 (  0.50)	train_corr   0.00 (  0.00)	l1 4.4920 (4.4909)	zero_count 0.0000 (45.7860)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.79it/s] 23%|##3       | 6/26 [00:00<00:00, 22.00it/s]                                               23%|##3       | 6/26 [00:00<00:00, 22.00it/s] 42%|####2     | 11/26 [00:00<00:00, 30.98it/s] 62%|######1   | 16/26 [00:00<00:00, 36.88it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.88it/s] 81%|########  | 21/26 [00:00<00:00, 36.83it/s]100%|##########| 26/26 [00:00<00:00, 39.52it/s]100%|##########| 26/26 [00:00<00:00, 31.06it/s]
Test: [   0/  26]	Loss 0.688 (0.688)	test_acc   0.47 (  0.47)	test_minacc   0.39 (  0.39)	test_majacc   0.48 (  0.48)	Loss_d 0.688 (0.688)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.11 (  0.11)
Test: [  10/  26]	Loss 0.688 (0.685)	test_acc   0.47 (  0.50)	test_minacc   0.45 (  0.47)	test_majacc   0.47 (  0.50)	Loss_d 0.688 (0.685)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.45 (  0.47)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.12 (  0.10)
Test: [  20/  26]	Loss 0.684 (0.685)	test_acc   0.51 (  0.50)	test_minacc   0.49 (  0.49)	test_majacc   0.51 (  0.50)	Loss_d 0.684 (0.685)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.11 (  0.11)
Test: [  26/  26]	Loss 0.687 (0.685)	test_acc   0.46 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.46 (  0.50)	Loss_d 0.687 (0.685)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.15 (  0.11)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.85it/s]
Test: [  0/  1]	Loss 0.697 (0.697)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.697 (0.697)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.03 (  0.03)
Test: [  1/  1]	Loss 0.697 (0.697)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.697 (0.697)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.03 (  0.03)
Overall Timing[ 38/  1]	epoch_time 0.0456 (0.0439)	validation_time 0.0003 (0.0006)	train_time 0.0452 (0.0432)
record: (train_acc, test_acc) (0.7288000310063362, 0.7110000252723694)
last accs (train_acc, test_acc) (0.49990000849962235, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.30it/s] 15%|#5        | 4/26 [00:00<00:01, 11.54it/s] 27%|##6       | 7/26 [00:00<00:01, 16.69it/s] 42%|####2     | 11/26 [00:00<00:00, 21.77it/s] 54%|#####3    | 14/26 [00:00<00:00, 23.39it/s] 65%|######5   | 17/26 [00:00<00:00, 24.93it/s] 81%|########  | 21/26 [00:00<00:00, 27.94it/s] 92%|#########2| 24/26 [00:01<00:00, 27.99it/s]100%|##########| 26/26 [00:01<00:00, 21.63it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1014 200
penalty weights 10000.0
args.step pgd_anneal_iters 1014 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1015 200
penalty weights 10000.0
args.step pgd_anneal_iters 1015 600
dim_v 512
rho, theta 315 tensor(-2.9561e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1016 200
penalty weights 10000.0
args.step pgd_anneal_iters 1016 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1017 200
penalty weights 10000.0
args.step pgd_anneal_iters 1017 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1018 200
penalty weights 10000.0
args.step pgd_anneal_iters 1018 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1019 200
penalty weights 10000.0
args.step pgd_anneal_iters 1019 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1020 200
penalty weights 10000.0
args.step pgd_anneal_iters 1020 600
dim_v 512
rho, theta 305 tensor(-1.7733e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1021 200
penalty weights 10000.0
args.step pgd_anneal_iters 1021 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1022 200
penalty weights 10000.0
args.step pgd_anneal_iters 1022 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1023 200
penalty weights 10000.0
args.step pgd_anneal_iters 1023 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1024 200
penalty weights 10000.0
args.step pgd_anneal_iters 1024 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1025 200
penalty weights 10000.0
args.step pgd_anneal_iters 1025 600
dim_v 512
rho, theta 332 tensor(-1.7130e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1026 200
penalty weights 10000.0
args.step pgd_anneal_iters 1026 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1027 200
penalty weights 10000.0
args.step pgd_anneal_iters 1027 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1028 200
penalty weights 10000.0
args.step pgd_anneal_iters 1028 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1029 200
penalty weights 10000.0
args.step pgd_anneal_iters 1029 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1030 200
penalty weights 10000.0
args.step pgd_anneal_iters 1030 600
dim_v 512
rho, theta 309 tensor(-1.1827e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1031 200
penalty weights 10000.0
args.step pgd_anneal_iters 1031 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1032 200
penalty weights 10000.0
args.step pgd_anneal_iters 1032 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1033 200
penalty weights 10000.0
args.step pgd_anneal_iters 1033 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1034 200
penalty weights 10000.0
args.step pgd_anneal_iters 1034 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1035 200
penalty weights 10000.0
args.step pgd_anneal_iters 1035 600
dim_v 512
rho, theta 332 tensor(-2.4816e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1036 200
penalty weights 10000.0
args.step pgd_anneal_iters 1036 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1037 200
penalty weights 10000.0
args.step pgd_anneal_iters 1037 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1038 200
penalty weights 10000.0
args.step pgd_anneal_iters 1038 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1039 200
penalty weights 10000.0
args.step pgd_anneal_iters 1039 600
final projection at end of training
dim_v 512
rho, theta 330 tensor(4.9989e-07, device='cuda:0')
Epoch: [39][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm  34.47 ( 34.47)	train_acc   0.45 (  0.50)	train_minacc   0.47 (  0.50)	train_majacc   0.45 (  0.50)	train_corr   0.00 (  0.00)	l1 4.4930 (4.4909)	zero_count 0.0000 (44.4600)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.20it/s] 31%|###       | 8/26 [00:00<00:00, 34.02it/s]                                               31%|###       | 8/26 [00:00<00:00, 34.02it/s] 50%|#####     | 13/26 [00:00<00:00, 38.76it/s] 69%|######9   | 18/26 [00:00<00:00, 41.89it/s]                                                69%|######9   | 18/26 [00:00<00:00, 41.89it/s] 88%|########8 | 23/26 [00:00<00:00, 41.67it/s]100%|##########| 26/26 [00:00<00:00, 36.89it/s]
Test: [   0/  26]	Loss 0.688 (0.688)	test_acc   0.47 (  0.47)	test_minacc   0.39 (  0.39)	test_majacc   0.48 (  0.48)	Loss_d 0.688 (0.688)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.11 (  0.11)
Test: [  10/  26]	Loss 0.688 (0.685)	test_acc   0.47 (  0.50)	test_minacc   0.45 (  0.47)	test_majacc   0.47 (  0.50)	Loss_d 0.688 (0.685)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.45 (  0.47)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.12 (  0.10)
Test: [  20/  26]	Loss 0.685 (0.685)	test_acc   0.51 (  0.50)	test_minacc   0.49 (  0.49)	test_majacc   0.51 (  0.50)	Loss_d 0.685 (0.685)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.10 (  0.11)
Test: [  26/  26]	Loss 0.687 (0.685)	test_acc   0.46 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.46 (  0.50)	Loss_d 0.687 (0.685)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.14 (  0.11)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.57it/s]
Test: [  0/  1]	Loss 0.697 (0.697)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.697 (0.697)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.02 (  0.02)
Test: [  1/  1]	Loss 0.697 (0.697)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.697 (0.697)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.02 (  0.02)
Overall Timing[ 39/  1]	epoch_time 0.0421 (0.0439)	validation_time 0.0004 (0.0006)	train_time 0.0416 (0.0432)
record: (train_acc, test_acc) (0.7288000310063362, 0.7110000252723694)
last accs (train_acc, test_acc) (0.49980000966787336, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  4.07it/s] 19%|#9        | 5/26 [00:00<00:01, 15.93it/s] 31%|###       | 8/26 [00:00<00:00, 19.97it/s] 42%|####2     | 11/26 [00:00<00:00, 22.57it/s] 58%|#####7    | 15/26 [00:00<00:00, 24.77it/s] 69%|######9   | 18/26 [00:00<00:00, 25.40it/s] 81%|########  | 21/26 [00:00<00:00, 26.11it/s] 96%|#########6| 25/26 [00:01<00:00, 28.97it/s]100%|##########| 26/26 [00:01<00:00, 22.22it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1040 200
penalty weights 10000.0
args.step pgd_anneal_iters 1040 600
dim_v 512
rho, theta 326 tensor(-1.3314e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1041 200
penalty weights 10000.0
args.step pgd_anneal_iters 1041 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1042 200
penalty weights 10000.0
args.step pgd_anneal_iters 1042 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1043 200
penalty weights 10000.0
args.step pgd_anneal_iters 1043 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1044 200
penalty weights 10000.0
args.step pgd_anneal_iters 1044 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1045 200
penalty weights 10000.0
args.step pgd_anneal_iters 1045 600
dim_v 512
rho, theta 308 tensor(-1.3904e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1046 200
penalty weights 10000.0
args.step pgd_anneal_iters 1046 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1047 200
penalty weights 10000.0
args.step pgd_anneal_iters 1047 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1048 200
penalty weights 10000.0
args.step pgd_anneal_iters 1048 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1049 200
penalty weights 10000.0
args.step pgd_anneal_iters 1049 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1050 200
penalty weights 10000.0
args.step pgd_anneal_iters 1050 600
dim_v 512
rho, theta 311 tensor(-1.3546e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1051 200
penalty weights 10000.0
args.step pgd_anneal_iters 1051 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1052 200
penalty weights 10000.0
args.step pgd_anneal_iters 1052 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1053 200
penalty weights 10000.0
args.step pgd_anneal_iters 1053 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1054 200
penalty weights 10000.0
args.step pgd_anneal_iters 1054 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1055 200
penalty weights 10000.0
args.step pgd_anneal_iters 1055 600
dim_v 512
rho, theta 329 tensor(-1.4296e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1056 200
penalty weights 10000.0
args.step pgd_anneal_iters 1056 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1057 200
penalty weights 10000.0
args.step pgd_anneal_iters 1057 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1058 200
penalty weights 10000.0
args.step pgd_anneal_iters 1058 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1059 200
penalty weights 10000.0
args.step pgd_anneal_iters 1059 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1060 200
penalty weights 10000.0
args.step pgd_anneal_iters 1060 600
dim_v 512
rho, theta 332 tensor(-3.6271e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1061 200
penalty weights 10000.0
args.step pgd_anneal_iters 1061 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1062 200
penalty weights 10000.0
args.step pgd_anneal_iters 1062 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1063 200
penalty weights 10000.0
args.step pgd_anneal_iters 1063 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1064 200
penalty weights 10000.0
args.step pgd_anneal_iters 1064 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1065 200
penalty weights 10000.0
args.step pgd_anneal_iters 1065 600
dim_v 512
rho, theta 332 tensor(4.2242e-07, device='cuda:0')
final projection at end of training
dim_v 512
rho, theta 332 tensor(1.4319e-09, device='cuda:0')
Epoch: [40][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm  34.48 ( 34.48)	train_acc   0.44 (  0.50)	train_minacc   0.47 (  0.50)	train_majacc   0.44 (  0.50)	train_corr   0.00 (  0.00)	l1 4.4941 (4.4909)	zero_count 0.0000 (44.0700)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.70it/s] 23%|##3       | 6/26 [00:00<00:00, 26.89it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.89it/s] 42%|####2     | 11/26 [00:00<00:00, 34.81it/s] 62%|######1   | 16/26 [00:00<00:00, 39.68it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.68it/s] 81%|########  | 21/26 [00:00<00:00, 37.54it/s]100%|##########| 26/26 [00:00<00:00, 40.10it/s]100%|##########| 26/26 [00:00<00:00, 32.97it/s]
Test: [   0/  26]	Loss 0.688 (0.688)	test_acc   0.47 (  0.47)	test_minacc   0.39 (  0.39)	test_majacc   0.48 (  0.48)	Loss_d 0.688 (0.688)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.11 (  0.11)
Test: [  10/  26]	Loss 0.688 (0.685)	test_acc   0.47 (  0.50)	test_minacc   0.45 (  0.47)	test_majacc   0.47 (  0.50)	Loss_d 0.688 (0.685)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.45 (  0.47)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.12 (  0.10)
Test: [  20/  26]	Loss 0.685 (0.685)	test_acc   0.51 (  0.50)	test_minacc   0.49 (  0.49)	test_majacc   0.51 (  0.50)	Loss_d 0.685 (0.685)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.10 (  0.11)
Test: [  26/  26]	Loss 0.688 (0.685)	test_acc   0.45 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.45 (  0.50)	Loss_d 0.688 (0.685)	test_acc_d   0.45 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.45 (  0.50)	test_corr_d   0.14 (  0.10)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.51it/s]
Test: [  0/  1]	Loss 0.696 (0.696)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.696 (0.696)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.02 (  0.02)
Test: [  1/  1]	Loss 0.696 (0.696)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.696 (0.696)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.02 (  0.02)
Overall Timing[ 40/  1]	epoch_time 0.0489 (0.0440)	validation_time 0.0003 (0.0006)	train_time 0.0486 (0.0433)
record: (train_acc, test_acc) (0.7288000310063362, 0.7110000252723694)
last accs (train_acc, test_acc) (0.49920000982284546, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 13.13it/s] 19%|#9        | 5/26 [00:00<00:01, 19.29it/s] 35%|###4      | 9/26 [00:00<00:00, 25.11it/s] 46%|####6     | 12/26 [00:00<00:00, 26.64it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.88it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.41it/s] 88%|########8 | 23/26 [00:00<00:00, 29.54it/s]100%|##########| 26/26 [00:00<00:00, 28.91it/s]100%|##########| 26/26 [00:01<00:00, 25.49it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1066 200
penalty weights 10000.0
args.step pgd_anneal_iters 1066 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1067 200
penalty weights 10000.0
args.step pgd_anneal_iters 1067 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1068 200
penalty weights 10000.0
args.step pgd_anneal_iters 1068 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1069 200
penalty weights 10000.0
args.step pgd_anneal_iters 1069 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1070 200
penalty weights 10000.0
args.step pgd_anneal_iters 1070 600
dim_v 512
rho, theta 309 tensor(-2.2688e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1071 200
penalty weights 10000.0
args.step pgd_anneal_iters 1071 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1072 200
penalty weights 10000.0
args.step pgd_anneal_iters 1072 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1073 200
penalty weights 10000.0
args.step pgd_anneal_iters 1073 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1074 200
penalty weights 10000.0
args.step pgd_anneal_iters 1074 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1075 200
penalty weights 10000.0
args.step pgd_anneal_iters 1075 600
dim_v 512
rho, theta 298 tensor(-8.8717e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1076 200
penalty weights 10000.0
args.step pgd_anneal_iters 1076 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1077 200
penalty weights 10000.0
args.step pgd_anneal_iters 1077 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1078 200
penalty weights 10000.0
args.step pgd_anneal_iters 1078 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1079 200
penalty weights 10000.0
args.step pgd_anneal_iters 1079 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1080 200
penalty weights 10000.0
args.step pgd_anneal_iters 1080 600
dim_v 512
rho, theta 332 tensor(-1.5406e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1081 200
penalty weights 10000.0
args.step pgd_anneal_iters 1081 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1082 200
penalty weights 10000.0
args.step pgd_anneal_iters 1082 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1083 200
penalty weights 10000.0
args.step pgd_anneal_iters 1083 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1084 200
penalty weights 10000.0
args.step pgd_anneal_iters 1084 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1085 200
penalty weights 10000.0
args.step pgd_anneal_iters 1085 600
dim_v 512
rho, theta 326 tensor(-5.6185e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1086 200
penalty weights 10000.0
args.step pgd_anneal_iters 1086 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1087 200
penalty weights 10000.0
args.step pgd_anneal_iters 1087 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1088 200
penalty weights 10000.0
args.step pgd_anneal_iters 1088 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1089 200
penalty weights 10000.0
args.step pgd_anneal_iters 1089 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1090 200
penalty weights 10000.0
args.step pgd_anneal_iters 1090 600
dim_v 512
rho, theta 332 tensor(-3.7231e-08, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1091 200
penalty weights 10000.0
args.step pgd_anneal_iters 1091 600
final projection at end of training
dim_v 512
rho, theta 338 tensor(2.2084e-07, device='cuda:0')
Epoch: [41][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  34.48 ( 34.48)	train_acc   0.44 (  0.50)	train_minacc   0.47 (  0.50)	train_majacc   0.44 (  0.50)	train_corr   0.00 (  0.00)	l1 4.4884 (4.4910)	zero_count 179.0000 (41.8370)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.24it/s] 19%|#9        | 5/26 [00:00<00:00, 25.59it/s] 38%|###8      | 10/26 [00:00<00:00, 35.54it/s]                                                38%|###8      | 10/26 [00:00<00:00, 35.54it/s] 58%|#####7    | 15/26 [00:00<00:00, 39.12it/s] 77%|#######6  | 20/26 [00:00<00:00, 38.57it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 38.57it/s] 96%|#########6| 25/26 [00:00<00:00, 41.14it/s]100%|##########| 26/26 [00:00<00:00, 34.97it/s]
Test: [   0/  26]	Loss 0.688 (0.688)	test_acc   0.47 (  0.47)	test_minacc   0.39 (  0.39)	test_majacc   0.48 (  0.48)	Loss_d 0.688 (0.688)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.11 (  0.11)
Test: [  10/  26]	Loss 0.688 (0.685)	test_acc   0.46 (  0.50)	test_minacc   0.45 (  0.47)	test_majacc   0.47 (  0.50)	Loss_d 0.688 (0.685)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.45 (  0.47)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.12 (  0.10)
Test: [  20/  26]	Loss 0.685 (0.685)	test_acc   0.51 (  0.50)	test_minacc   0.49 (  0.49)	test_majacc   0.51 (  0.50)	Loss_d 0.685 (0.685)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.10 (  0.10)
Test: [  26/  26]	Loss 0.688 (0.685)	test_acc   0.44 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.44 (  0.50)	Loss_d 0.688 (0.685)	test_acc_d   0.44 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.44 (  0.50)	test_corr_d   0.14 (  0.10)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.69it/s]
Test: [  0/  1]	Loss 0.696 (0.696)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.696 (0.696)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.02 (  0.02)
Test: [  1/  1]	Loss 0.696 (0.696)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.696 (0.696)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.02 (  0.02)
Overall Timing[ 41/  1]	epoch_time 0.0429 (0.0440)	validation_time 0.0004 (0.0006)	train_time 0.0425 (0.0433)
record: (train_acc, test_acc) (0.7288000310063362, 0.7110000252723694)
last accs (train_acc, test_acc) (0.4986000090241432, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.73it/s] 15%|#5        | 4/26 [00:00<00:01, 18.36it/s] 31%|###       | 8/26 [00:00<00:00, 26.24it/s] 42%|####2     | 11/26 [00:00<00:00, 27.10it/s] 54%|#####3    | 14/26 [00:00<00:00, 27.94it/s] 69%|######9   | 18/26 [00:00<00:00, 30.42it/s] 85%|########4 | 22/26 [00:00<00:00, 29.87it/s] 96%|#########6| 25/26 [00:00<00:00, 28.68it/s]100%|##########| 26/26 [00:00<00:00, 26.26it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1092 200
penalty weights 10000.0
args.step pgd_anneal_iters 1092 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1093 200
penalty weights 10000.0
args.step pgd_anneal_iters 1093 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1094 200
penalty weights 10000.0
args.step pgd_anneal_iters 1094 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1095 200
penalty weights 10000.0
args.step pgd_anneal_iters 1095 600
dim_v 512
rho, theta 313 tensor(-1.9878e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1096 200
penalty weights 10000.0
args.step pgd_anneal_iters 1096 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1097 200
penalty weights 10000.0
args.step pgd_anneal_iters 1097 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1098 200
penalty weights 10000.0
args.step pgd_anneal_iters 1098 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1099 200
penalty weights 10000.0
args.step pgd_anneal_iters 1099 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1100 200
penalty weights 10000.0
args.step pgd_anneal_iters 1100 600
dim_v 512
rho, theta 298 tensor(-4.8880e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1101 200
penalty weights 10000.0
args.step pgd_anneal_iters 1101 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1102 200
penalty weights 10000.0
args.step pgd_anneal_iters 1102 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1103 200
penalty weights 10000.0
args.step pgd_anneal_iters 1103 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1104 200
penalty weights 10000.0
args.step pgd_anneal_iters 1104 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1105 200
penalty weights 10000.0
args.step pgd_anneal_iters 1105 600
dim_v 512
rho, theta 332 tensor(-1.5239e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1106 200
penalty weights 10000.0
args.step pgd_anneal_iters 1106 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1107 200
penalty weights 10000.0
args.step pgd_anneal_iters 1107 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1108 200
penalty weights 10000.0
args.step pgd_anneal_iters 1108 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1109 200
penalty weights 10000.0
args.step pgd_anneal_iters 1109 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1110 200
penalty weights 10000.0
args.step pgd_anneal_iters 1110 600
dim_v 512
rho, theta 316 tensor(-6.4711e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1111 200
penalty weights 10000.0
args.step pgd_anneal_iters 1111 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1112 200
penalty weights 10000.0
args.step pgd_anneal_iters 1112 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1113 200
penalty weights 10000.0
args.step pgd_anneal_iters 1113 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1114 200
penalty weights 10000.0
args.step pgd_anneal_iters 1114 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1115 200
penalty weights 10000.0
args.step pgd_anneal_iters 1115 600
dim_v 512
rho, theta 328 tensor(-2.4711e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1116 200
penalty weights 10000.0
args.step pgd_anneal_iters 1116 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1117 200
penalty weights 10000.0
args.step pgd_anneal_iters 1117 600
final projection at end of training
dim_v 512
rho, theta 338 tensor(1.1070e-06, device='cuda:0')
Epoch: [42][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  34.48 ( 34.48)	train_acc   0.43 (  0.50)	train_minacc   0.47 (  0.50)	train_majacc   0.43 (  0.50)	train_corr   0.00 (  0.00)	l1 4.4901 (4.4907)	zero_count 0.0000 (44.4990)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.22it/s] 27%|##6       | 7/26 [00:00<00:00, 34.56it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.56it/s] 46%|####6     | 12/26 [00:00<00:00, 40.04it/s] 65%|######5   | 17/26 [00:00<00:00, 42.33it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.33it/s] 85%|########4 | 22/26 [00:00<00:00, 43.55it/s]100%|##########| 26/26 [00:00<00:00, 38.13it/s]
Test: [   0/  26]	Loss 0.688 (0.688)	test_acc   0.47 (  0.47)	test_minacc   0.39 (  0.39)	test_majacc   0.48 (  0.48)	Loss_d 0.688 (0.688)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.10 (  0.10)
Test: [  10/  26]	Loss 0.688 (0.685)	test_acc   0.46 (  0.50)	test_minacc   0.45 (  0.47)	test_majacc   0.47 (  0.50)	Loss_d 0.688 (0.685)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.45 (  0.47)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.11 (  0.10)
Test: [  20/  26]	Loss 0.685 (0.685)	test_acc   0.51 (  0.50)	test_minacc   0.49 (  0.49)	test_majacc   0.51 (  0.50)	Loss_d 0.685 (0.685)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.09 (  0.10)
Test: [  26/  26]	Loss 0.688 (0.686)	test_acc   0.44 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.43 (  0.50)	Loss_d 0.688 (0.686)	test_acc_d   0.44 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.43 (  0.50)	test_corr_d   0.14 (  0.10)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 54.67it/s]
Test: [  0/  1]	Loss 0.695 (0.695)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.695 (0.695)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.02 (  0.02)
Test: [  1/  1]	Loss 0.695 (0.695)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.695 (0.695)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.02 (  0.02)
Overall Timing[ 42/  1]	epoch_time 0.0416 (0.0439)	validation_time 0.0005 (0.0006)	train_time 0.0411 (0.0432)
record: (train_acc, test_acc) (0.7288000310063362, 0.7110000252723694)
last accs (train_acc, test_acc) (0.4983000086247921, 0.5010000467300415)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.72it/s] 19%|#9        | 5/26 [00:00<00:00, 22.80it/s] 31%|###       | 8/26 [00:00<00:00, 24.56it/s] 46%|####6     | 12/26 [00:00<00:00, 28.49it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.86it/s] 69%|######9   | 18/26 [00:00<00:00, 28.18it/s] 85%|########4 | 22/26 [00:00<00:00, 30.68it/s]100%|##########| 26/26 [00:00<00:00, 29.80it/s]100%|##########| 26/26 [00:00<00:00, 26.59it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1118 200
penalty weights 10000.0
args.step pgd_anneal_iters 1118 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1119 200
penalty weights 10000.0
args.step pgd_anneal_iters 1119 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1120 200
penalty weights 10000.0
args.step pgd_anneal_iters 1120 600
dim_v 512
rho, theta 317 tensor(-1.6149e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1121 200
penalty weights 10000.0
args.step pgd_anneal_iters 1121 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1122 200
penalty weights 10000.0
args.step pgd_anneal_iters 1122 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1123 200
penalty weights 10000.0
args.step pgd_anneal_iters 1123 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1124 200
penalty weights 10000.0
args.step pgd_anneal_iters 1124 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1125 200
penalty weights 10000.0
args.step pgd_anneal_iters 1125 600
dim_v 512
rho, theta 302 tensor(-1.9986e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1126 200
penalty weights 10000.0
args.step pgd_anneal_iters 1126 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1127 200
penalty weights 10000.0
args.step pgd_anneal_iters 1127 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1128 200
penalty weights 10000.0
args.step pgd_anneal_iters 1128 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1129 200
penalty weights 10000.0
args.step pgd_anneal_iters 1129 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1130 200
penalty weights 10000.0
args.step pgd_anneal_iters 1130 600
dim_v 512
rho, theta 336 tensor(-1.4725e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1131 200
penalty weights 10000.0
args.step pgd_anneal_iters 1131 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1132 200
penalty weights 10000.0
args.step pgd_anneal_iters 1132 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1133 200
penalty weights 10000.0
args.step pgd_anneal_iters 1133 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1134 200
penalty weights 10000.0
args.step pgd_anneal_iters 1134 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1135 200
penalty weights 10000.0
args.step pgd_anneal_iters 1135 600
dim_v 512
rho, theta 313 tensor(-7.8071e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1136 200
penalty weights 10000.0
args.step pgd_anneal_iters 1136 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1137 200
penalty weights 10000.0
args.step pgd_anneal_iters 1137 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1138 200
penalty weights 10000.0
args.step pgd_anneal_iters 1138 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1139 200
penalty weights 10000.0
args.step pgd_anneal_iters 1139 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1140 200
penalty weights 10000.0
args.step pgd_anneal_iters 1140 600
dim_v 512
rho, theta 335 tensor(-2.8355e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1141 200
penalty weights 10000.0
args.step pgd_anneal_iters 1141 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1142 200
penalty weights 10000.0
args.step pgd_anneal_iters 1142 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1143 200
penalty weights 10000.0
args.step pgd_anneal_iters 1143 600
final projection at end of training
dim_v 512
rho, theta 339 tensor(9.1721e-07, device='cuda:0')
Epoch: [43][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  34.48 ( 34.48)	train_acc   0.40 (  0.50)	train_minacc   0.47 (  0.50)	train_majacc   0.39 (  0.50)	train_corr   0.00 (  0.00)	l1 4.4912 (4.4905)	zero_count 0.0000 (43.8750)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.77it/s] 31%|###       | 8/26 [00:00<00:00, 39.27it/s]                                               31%|###       | 8/26 [00:00<00:00, 39.27it/s] 50%|#####     | 13/26 [00:00<00:00, 43.00it/s] 69%|######9   | 18/26 [00:00<00:00, 41.90it/s]                                                69%|######9   | 18/26 [00:00<00:00, 41.90it/s] 88%|########8 | 23/26 [00:00<00:00, 43.48it/s]100%|##########| 26/26 [00:00<00:00, 38.76it/s]
Test: [   0/  26]	Loss 0.688 (0.688)	test_acc   0.47 (  0.47)	test_minacc   0.39 (  0.39)	test_majacc   0.48 (  0.48)	Loss_d 0.688 (0.688)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.10 (  0.10)
Test: [  10/  26]	Loss 0.688 (0.685)	test_acc   0.46 (  0.50)	test_minacc   0.46 (  0.48)	test_majacc   0.46 (  0.50)	Loss_d 0.688 (0.685)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.46 (  0.48)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.11 (  0.09)
Test: [  20/  26]	Loss 0.685 (0.686)	test_acc   0.51 (  0.50)	test_minacc   0.49 (  0.49)	test_majacc   0.51 (  0.50)	Loss_d 0.685 (0.686)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.09 (  0.10)
Test: [  26/  26]	Loss 0.688 (0.686)	test_acc   0.41 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.40 (  0.50)	Loss_d 0.688 (0.686)	test_acc_d   0.41 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.40 (  0.50)	test_corr_d   0.13 (  0.10)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.14it/s]
Test: [  0/  1]	Loss 0.695 (0.695)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.695 (0.695)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.02 (  0.02)
Test: [  1/  1]	Loss 0.695 (0.695)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.695 (0.695)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.02 (  0.02)
Overall Timing[ 43/  1]	epoch_time 0.0424 (0.0439)	validation_time 0.0007 (0.0006)	train_time 0.0417 (0.0432)
record: (train_acc, test_acc) (0.7288000310063362, 0.7110000252723694)
last accs (train_acc, test_acc) (0.4975000089108944, 0.5010000467300415)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.27it/s] 12%|#1        | 3/26 [00:00<00:02,  9.20it/s] 27%|##6       | 7/26 [00:00<00:01, 17.81it/s] 46%|####6     | 12/26 [00:00<00:00, 23.95it/s] 62%|######1   | 16/26 [00:00<00:00, 27.78it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.24it/s] 85%|########4 | 22/26 [00:00<00:00, 27.55it/s]100%|##########| 26/26 [00:01<00:00, 29.62it/s]100%|##########| 26/26 [00:01<00:00, 23.54it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1144 200
penalty weights 10000.0
args.step pgd_anneal_iters 1144 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1145 200
penalty weights 10000.0
args.step pgd_anneal_iters 1145 600
dim_v 512
rho, theta 326 tensor(-1.6930e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1146 200
penalty weights 10000.0
args.step pgd_anneal_iters 1146 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1147 200
penalty weights 10000.0
args.step pgd_anneal_iters 1147 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1148 200
penalty weights 10000.0
args.step pgd_anneal_iters 1148 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1149 200
penalty weights 10000.0
args.step pgd_anneal_iters 1149 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1150 200
penalty weights 10000.0
args.step pgd_anneal_iters 1150 600
dim_v 512
rho, theta 308 tensor(1.0478e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1151 200
penalty weights 10000.0
args.step pgd_anneal_iters 1151 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1152 200
penalty weights 10000.0
args.step pgd_anneal_iters 1152 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1153 200
penalty weights 10000.0
args.step pgd_anneal_iters 1153 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1154 200
penalty weights 10000.0
args.step pgd_anneal_iters 1154 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1155 200
penalty weights 10000.0
args.step pgd_anneal_iters 1155 600
dim_v 512
rho, theta 335 tensor(-1.3166e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1156 200
penalty weights 10000.0
args.step pgd_anneal_iters 1156 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1157 200
penalty weights 10000.0
args.step pgd_anneal_iters 1157 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1158 200
penalty weights 10000.0
args.step pgd_anneal_iters 1158 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1159 200
penalty weights 10000.0
args.step pgd_anneal_iters 1159 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1160 200
penalty weights 10000.0
args.step pgd_anneal_iters 1160 600
dim_v 512
rho, theta 321 tensor(-9.7633e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1161 200
penalty weights 10000.0
args.step pgd_anneal_iters 1161 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1162 200
penalty weights 10000.0
args.step pgd_anneal_iters 1162 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1163 200
penalty weights 10000.0
args.step pgd_anneal_iters 1163 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1164 200
penalty weights 10000.0
args.step pgd_anneal_iters 1164 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1165 200
penalty weights 10000.0
args.step pgd_anneal_iters 1165 600
dim_v 512
rho, theta 335 tensor(-2.7972e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1166 200
penalty weights 10000.0
args.step pgd_anneal_iters 1166 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1167 200
penalty weights 10000.0
args.step pgd_anneal_iters 1167 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1168 200
penalty weights 10000.0
args.step pgd_anneal_iters 1168 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1169 200
penalty weights 10000.0
args.step pgd_anneal_iters 1169 600
final projection at end of training
dim_v 512
rho, theta 333 tensor(-5.8534e-08, device='cuda:0')
Epoch: [44][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  34.48 ( 34.48)	train_acc   0.40 (  0.50)	train_minacc   0.50 (  0.50)	train_majacc   0.38 (  0.50)	train_corr   0.00 (  0.00)	l1 4.4920 (4.4905)	zero_count 0.0000 (42.9780)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.99it/s] 12%|#1        | 3/26 [00:00<00:01, 14.91it/s] 31%|###       | 8/26 [00:00<00:00, 28.73it/s]                                               31%|###       | 8/26 [00:00<00:00, 28.73it/s] 50%|#####     | 13/26 [00:00<00:00, 36.65it/s] 69%|######9   | 18/26 [00:00<00:00, 39.42it/s]                                                69%|######9   | 18/26 [00:00<00:00, 39.42it/s] 88%|########8 | 23/26 [00:00<00:00, 42.38it/s]100%|##########| 26/26 [00:00<00:00, 34.66it/s]
Test: [   0/  26]	Loss 0.688 (0.688)	test_acc   0.47 (  0.47)	test_minacc   0.39 (  0.39)	test_majacc   0.48 (  0.48)	Loss_d 0.688 (0.688)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.10 (  0.10)
Test: [  10/  26]	Loss 0.688 (0.686)	test_acc   0.46 (  0.49)	test_minacc   0.48 (  0.48)	test_majacc   0.46 (  0.50)	Loss_d 0.688 (0.686)	test_acc_d   0.46 (  0.49)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.11 (  0.09)
Test: [  20/  26]	Loss 0.686 (0.686)	test_acc   0.51 (  0.50)	test_minacc   0.49 (  0.49)	test_majacc   0.51 (  0.50)	Loss_d 0.686 (0.686)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.09 (  0.10)
Test: [  26/  26]	Loss 0.688 (0.686)	test_acc   0.40 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.38 (  0.50)	Loss_d 0.688 (0.686)	test_acc_d   0.40 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.38 (  0.50)	test_corr_d   0.13 (  0.10)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.33it/s]
Test: [  0/  1]	Loss 0.695 (0.695)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.695 (0.695)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.02 (  0.02)
Test: [  1/  1]	Loss 0.695 (0.695)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.695 (0.695)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.02 (  0.02)
Overall Timing[ 44/  1]	epoch_time 0.0429 (0.0439)	validation_time 0.0005 (0.0006)	train_time 0.0423 (0.0432)
record: (train_acc, test_acc) (0.7288000310063362, 0.7110000252723694)
last accs (train_acc, test_acc) (0.49670000886917115, 0.5010000467300415)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.72it/s] 19%|#9        | 5/26 [00:00<00:01, 17.19it/s] 31%|###       | 8/26 [00:00<00:00, 21.16it/s] 42%|####2     | 11/26 [00:00<00:00, 23.48it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.33it/s] 69%|######9   | 18/26 [00:00<00:00, 26.63it/s] 81%|########  | 21/26 [00:00<00:00, 26.70it/s] 96%|#########6| 25/26 [00:01<00:00, 29.19it/s]100%|##########| 26/26 [00:01<00:00, 23.32it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1170 200
penalty weights 10000.0
args.step pgd_anneal_iters 1170 600
dim_v 512
rho, theta 330 tensor(-7.2606e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1171 200
penalty weights 10000.0
args.step pgd_anneal_iters 1171 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1172 200
penalty weights 10000.0
args.step pgd_anneal_iters 1172 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1173 200
penalty weights 10000.0
args.step pgd_anneal_iters 1173 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1174 200
penalty weights 10000.0
args.step pgd_anneal_iters 1174 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1175 200
penalty weights 10000.0
args.step pgd_anneal_iters 1175 600
dim_v 512
rho, theta 310 tensor(1.2481e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1176 200
penalty weights 10000.0
args.step pgd_anneal_iters 1176 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1177 200
penalty weights 10000.0
args.step pgd_anneal_iters 1177 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1178 200
penalty weights 10000.0
args.step pgd_anneal_iters 1178 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1179 200
penalty weights 10000.0
args.step pgd_anneal_iters 1179 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1180 200
penalty weights 10000.0
args.step pgd_anneal_iters 1180 600
dim_v 512
rho, theta 309 tensor(-9.8336e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1181 200
penalty weights 10000.0
args.step pgd_anneal_iters 1181 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1182 200
penalty weights 10000.0
args.step pgd_anneal_iters 1182 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1183 200
penalty weights 10000.0
args.step pgd_anneal_iters 1183 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1184 200
penalty weights 10000.0
args.step pgd_anneal_iters 1184 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1185 200
penalty weights 10000.0
args.step pgd_anneal_iters 1185 600
dim_v 512
rho, theta 335 tensor(-1.1680e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1186 200
penalty weights 10000.0
args.step pgd_anneal_iters 1186 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1187 200
penalty weights 10000.0
args.step pgd_anneal_iters 1187 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1188 200
penalty weights 10000.0
args.step pgd_anneal_iters 1188 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1189 200
penalty weights 10000.0
args.step pgd_anneal_iters 1189 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1190 200
penalty weights 10000.0
args.step pgd_anneal_iters 1190 600
dim_v 512
rho, theta 332 tensor(-3.8834e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1191 200
penalty weights 10000.0
args.step pgd_anneal_iters 1191 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1192 200
penalty weights 10000.0
args.step pgd_anneal_iters 1192 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1193 200
penalty weights 10000.0
args.step pgd_anneal_iters 1193 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1194 200
penalty weights 10000.0
args.step pgd_anneal_iters 1194 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1195 200
penalty weights 10000.0
args.step pgd_anneal_iters 1195 600
dim_v 512
rho, theta 331 tensor(-5.2711e-07, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [45][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  34.48 ( 34.48)	train_acc   0.40 (  0.50)	train_minacc   0.59 (  0.51)	train_majacc   0.37 (  0.49)	train_corr   0.00 (  0.00)	l1 4.4929 (4.4906)	zero_count 0.0000 (43.5630)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.76it/s] 23%|##3       | 6/26 [00:00<00:00, 27.23it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.23it/s] 42%|####2     | 11/26 [00:00<00:00, 35.35it/s] 62%|######1   | 16/26 [00:00<00:00, 40.19it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.19it/s] 81%|########  | 21/26 [00:00<00:00, 39.88it/s]100%|##########| 26/26 [00:00<00:00, 42.71it/s]100%|##########| 26/26 [00:00<00:00, 34.40it/s]
Test: [   0/  26]	Loss 0.688 (0.688)	test_acc   0.47 (  0.47)	test_minacc   0.39 (  0.39)	test_majacc   0.48 (  0.48)	Loss_d 0.688 (0.688)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.10 (  0.10)
Test: [  10/  26]	Loss 0.688 (0.686)	test_acc   0.46 (  0.49)	test_minacc   0.50 (  0.48)	test_majacc   0.45 (  0.50)	Loss_d 0.688 (0.686)	test_acc_d   0.46 (  0.49)	test_minacc_d   0.50 (  0.48)	test_majacc_d   0.45 (  0.50)	test_corr_d   0.11 (  0.09)
Test: [  20/  26]	Loss 0.686 (0.686)	test_acc   0.51 (  0.50)	test_minacc   0.49 (  0.49)	test_majacc   0.51 (  0.50)	Loss_d 0.686 (0.686)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.09 (  0.10)
Test: [  26/  26]	Loss 0.688 (0.686)	test_acc   0.40 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.38 (  0.49)	Loss_d 0.688 (0.686)	test_acc_d   0.40 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.38 (  0.49)	test_corr_d   0.13 (  0.10)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.15it/s]
Test: [  0/  1]	Loss 0.695 (0.695)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.695 (0.695)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.02 (  0.02)
Test: [  1/  1]	Loss 0.695 (0.695)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.695 (0.695)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.02 (  0.02)
Overall Timing[ 45/  1]	epoch_time 0.0435 (0.0439)	validation_time 0.0005 (0.0006)	train_time 0.0430 (0.0432)
record: (train_acc, test_acc) (0.7288000310063362, 0.7110000252723694)
last accs (train_acc, test_acc) (0.49620000836253164, 0.5010000467300415)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.69it/s] 12%|#1        | 3/26 [00:00<00:02, 11.07it/s] 23%|##3       | 6/26 [00:00<00:01, 17.41it/s] 38%|###8      | 10/26 [00:00<00:00, 21.76it/s] 54%|#####3    | 14/26 [00:00<00:00, 25.46it/s] 65%|######5   | 17/26 [00:00<00:00, 25.56it/s] 77%|#######6  | 20/26 [00:00<00:00, 26.10it/s] 92%|#########2| 24/26 [00:01<00:00, 28.51it/s]100%|##########| 26/26 [00:01<00:00, 22.72it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1196 200
penalty weights 10000.0
args.step pgd_anneal_iters 1196 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1197 200
penalty weights 10000.0
args.step pgd_anneal_iters 1197 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1198 200
penalty weights 10000.0
args.step pgd_anneal_iters 1198 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1199 200
penalty weights 10000.0
args.step pgd_anneal_iters 1199 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1200 200
penalty weights 10000.0
args.step pgd_anneal_iters 1200 600
dim_v 512
rho, theta 312 tensor(8.9883e-08, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1201 200
penalty weights 10000.0
args.step pgd_anneal_iters 1201 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1202 200
penalty weights 10000.0
args.step pgd_anneal_iters 1202 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1203 200
penalty weights 10000.0
args.step pgd_anneal_iters 1203 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1204 200
penalty weights 10000.0
args.step pgd_anneal_iters 1204 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1205 200
penalty weights 10000.0
args.step pgd_anneal_iters 1205 600
dim_v 512
rho, theta 303 tensor(-5.6326e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1206 200
penalty weights 10000.0
args.step pgd_anneal_iters 1206 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1207 200
penalty weights 10000.0
args.step pgd_anneal_iters 1207 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1208 200
penalty weights 10000.0
args.step pgd_anneal_iters 1208 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1209 200
penalty weights 10000.0
args.step pgd_anneal_iters 1209 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1210 200
penalty weights 10000.0
args.step pgd_anneal_iters 1210 600
dim_v 512
rho, theta 335 tensor(-1.2473e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1211 200
penalty weights 10000.0
args.step pgd_anneal_iters 1211 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1212 200
penalty weights 10000.0
args.step pgd_anneal_iters 1212 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1213 200
penalty weights 10000.0
args.step pgd_anneal_iters 1213 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1214 200
penalty weights 10000.0
args.step pgd_anneal_iters 1214 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1215 200
penalty weights 10000.0
args.step pgd_anneal_iters 1215 600
dim_v 512
rho, theta 322 tensor(-4.8717e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1216 200
penalty weights 10000.0
args.step pgd_anneal_iters 1216 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1217 200
penalty weights 10000.0
args.step pgd_anneal_iters 1217 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1218 200
penalty weights 10000.0
args.step pgd_anneal_iters 1218 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1219 200
penalty weights 10000.0
args.step pgd_anneal_iters 1219 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1220 200
penalty weights 10000.0
args.step pgd_anneal_iters 1220 600
dim_v 512
rho, theta 336 tensor(-1.1829e-06, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1221 200
penalty weights 10000.0
args.step pgd_anneal_iters 1221 600
final projection at end of training
dim_v 512
rho, theta 342 tensor(2.2104e-07, device='cuda:0')
Epoch: [46][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  34.48 ( 34.48)	train_acc   0.40 (  0.50)	train_minacc   0.59 (  0.51)	train_majacc   0.37 (  0.49)	train_corr   0.00 (  0.00)	l1 4.4884 (4.4906)	zero_count 175.0000 (41.5030)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.23it/s] 31%|###       | 8/26 [00:00<00:00, 37.52it/s]                                               31%|###       | 8/26 [00:00<00:00, 37.52it/s] 50%|#####     | 13/26 [00:00<00:00, 41.42it/s] 69%|######9   | 18/26 [00:00<00:00, 43.29it/s]                                                69%|######9   | 18/26 [00:00<00:00, 43.29it/s] 88%|########8 | 23/26 [00:00<00:00, 45.16it/s]100%|##########| 26/26 [00:00<00:00, 37.56it/s]
Test: [   0/  26]	Loss 0.688 (0.688)	test_acc   0.47 (  0.47)	test_minacc   0.39 (  0.39)	test_majacc   0.48 (  0.48)	Loss_d 0.688 (0.688)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.10 (  0.10)
Test: [  10/  26]	Loss 0.688 (0.686)	test_acc   0.46 (  0.49)	test_minacc   0.52 (  0.48)	test_majacc   0.45 (  0.49)	Loss_d 0.688 (0.686)	test_acc_d   0.46 (  0.49)	test_minacc_d   0.52 (  0.48)	test_majacc_d   0.45 (  0.49)	test_corr_d   0.11 (  0.09)
Test: [  20/  26]	Loss 0.686 (0.686)	test_acc   0.51 (  0.50)	test_minacc   0.49 (  0.49)	test_majacc   0.51 (  0.50)	Loss_d 0.686 (0.686)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.09 (  0.09)
Test: [  26/  26]	Loss 0.688 (0.686)	test_acc   0.40 (  0.50)	test_minacc   0.56 (  0.51)	test_majacc   0.37 (  0.49)	Loss_d 0.688 (0.686)	test_acc_d   0.40 (  0.50)	test_minacc_d   0.56 (  0.51)	test_majacc_d   0.37 (  0.49)	test_corr_d   0.13 (  0.09)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.73it/s]
Test: [  0/  1]	Loss 0.695 (0.695)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.695 (0.695)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.02 (  0.02)
Test: [  1/  1]	Loss 0.695 (0.695)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.695 (0.695)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.02 (  0.02)
Overall Timing[ 46/  1]	epoch_time 0.0436 (0.0438)	validation_time 0.0005 (0.0006)	train_time 0.0431 (0.0432)
record: (train_acc, test_acc) (0.7288000310063362, 0.7110000252723694)
last accs (train_acc, test_acc) (0.4959000089168549, 0.5010000467300415)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.08it/s] 15%|#5        | 4/26 [00:00<00:01, 18.26it/s] 31%|###       | 8/26 [00:00<00:00, 25.18it/s] 42%|####2     | 11/26 [00:00<00:00, 25.87it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.46it/s] 69%|######9   | 18/26 [00:00<00:00, 29.40it/s] 81%|########  | 21/26 [00:00<00:00, 28.67it/s] 92%|#########2| 24/26 [00:00<00:00, 28.35it/s]100%|##########| 26/26 [00:01<00:00, 25.19it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1222 200
penalty weights 10000.0
args.step pgd_anneal_iters 1222 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1223 200
penalty weights 10000.0
args.step pgd_anneal_iters 1223 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1224 200
penalty weights 10000.0
args.step pgd_anneal_iters 1224 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1225 200
penalty weights 10000.0
args.step pgd_anneal_iters 1225 600
dim_v 512
rho, theta 313 tensor(-2.9916e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1226 200
penalty weights 10000.0
args.step pgd_anneal_iters 1226 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1227 200
penalty weights 10000.0
args.step pgd_anneal_iters 1227 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1228 200
penalty weights 10000.0
args.step pgd_anneal_iters 1228 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1229 200
penalty weights 10000.0
args.step pgd_anneal_iters 1229 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1230 200
penalty weights 10000.0
args.step pgd_anneal_iters 1230 600
dim_v 512
rho, theta 302 tensor(-2.3684e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1231 200
penalty weights 10000.0
args.step pgd_anneal_iters 1231 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1232 200
penalty weights 10000.0
args.step pgd_anneal_iters 1232 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1233 200
penalty weights 10000.0
args.step pgd_anneal_iters 1233 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1234 200
penalty weights 10000.0
args.step pgd_anneal_iters 1234 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1235 200
penalty weights 10000.0
args.step pgd_anneal_iters 1235 600
dim_v 512
rho, theta 336 tensor(-1.2555e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1236 200
penalty weights 10000.0
args.step pgd_anneal_iters 1236 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1237 200
penalty weights 10000.0
args.step pgd_anneal_iters 1237 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1238 200
penalty weights 10000.0
args.step pgd_anneal_iters 1238 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1239 200
penalty weights 10000.0
args.step pgd_anneal_iters 1239 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1240 200
penalty weights 10000.0
args.step pgd_anneal_iters 1240 600
dim_v 512
rho, theta 317 tensor(-5.3037e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1241 200
penalty weights 10000.0
args.step pgd_anneal_iters 1241 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1242 200
penalty weights 10000.0
args.step pgd_anneal_iters 1242 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1243 200
penalty weights 10000.0
args.step pgd_anneal_iters 1243 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1244 200
penalty weights 10000.0
args.step pgd_anneal_iters 1244 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1245 200
penalty weights 10000.0
args.step pgd_anneal_iters 1245 600
dim_v 512
rho, theta 331 tensor(-2.9027e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1246 200
penalty weights 10000.0
args.step pgd_anneal_iters 1246 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1247 200
penalty weights 10000.0
args.step pgd_anneal_iters 1247 600
final projection at end of training
dim_v 512
rho, theta 347 tensor(9.0846e-07, device='cuda:0')
Epoch: [47][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  34.48 ( 34.48)	train_acc   0.38 (  0.49)	train_minacc   0.59 (  0.51)	train_majacc   0.34 (  0.49)	train_corr   0.00 (  0.00)	l1 4.4898 (4.4904)	zero_count 0.0000 (43.8750)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 13.53it/s] 31%|###       | 8/26 [00:00<00:00, 35.31it/s]                                               31%|###       | 8/26 [00:00<00:00, 35.31it/s] 54%|#####3    | 14/26 [00:00<00:00, 41.89it/s] 73%|#######3  | 19/26 [00:00<00:00, 41.07it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 41.07it/s] 92%|#########2| 24/26 [00:00<00:00, 43.20it/s]100%|##########| 26/26 [00:00<00:00, 37.81it/s]
Test: [   0/  26]	Loss 0.688 (0.688)	test_acc   0.47 (  0.47)	test_minacc   0.39 (  0.39)	test_majacc   0.48 (  0.48)	Loss_d 0.688 (0.688)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.10 (  0.10)
Test: [  10/  26]	Loss 0.689 (0.686)	test_acc   0.46 (  0.49)	test_minacc   0.52 (  0.48)	test_majacc   0.45 (  0.49)	Loss_d 0.689 (0.686)	test_acc_d   0.46 (  0.49)	test_minacc_d   0.52 (  0.48)	test_majacc_d   0.45 (  0.49)	test_corr_d   0.10 (  0.09)
Test: [  20/  26]	Loss 0.686 (0.686)	test_acc   0.51 (  0.50)	test_minacc   0.49 (  0.49)	test_majacc   0.51 (  0.50)	Loss_d 0.686 (0.686)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.08 (  0.09)
Test: [  26/  26]	Loss 0.688 (0.686)	test_acc   0.38 (  0.50)	test_minacc   0.59 (  0.51)	test_majacc   0.35 (  0.49)	Loss_d 0.688 (0.686)	test_acc_d   0.38 (  0.50)	test_minacc_d   0.59 (  0.51)	test_majacc_d   0.35 (  0.49)	test_corr_d   0.12 (  0.09)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.08it/s]
Test: [  0/  1]	Loss 0.694 (0.694)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.694 (0.694)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.02 (  0.02)
Test: [  1/  1]	Loss 0.694 (0.694)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.694 (0.694)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.02 (  0.02)
Overall Timing[ 47/  1]	epoch_time 0.0424 (0.0438)	validation_time 0.0004 (0.0006)	train_time 0.0419 (0.0431)
record: (train_acc, test_acc) (0.7288000310063362, 0.7110000252723694)
last accs (train_acc, test_acc) (0.49500000950694084, 0.5010000467300415)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.20it/s] 15%|#5        | 4/26 [00:00<00:01, 15.18it/s] 31%|###       | 8/26 [00:00<00:00, 21.50it/s] 46%|####6     | 12/26 [00:00<00:00, 25.94it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.45it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.44it/s] 88%|########8 | 23/26 [00:00<00:00, 29.59it/s]100%|##########| 26/26 [00:01<00:00, 25.61it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1248 200
penalty weights 10000.0
args.step pgd_anneal_iters 1248 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1249 200
penalty weights 10000.0
args.step pgd_anneal_iters 1249 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1250 200
penalty weights 10000.0
args.step pgd_anneal_iters 1250 600
dim_v 512
rho, theta 319 tensor(-5.4091e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1251 200
penalty weights 10000.0
args.step pgd_anneal_iters 1251 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1252 200
penalty weights 10000.0
args.step pgd_anneal_iters 1252 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1253 200
penalty weights 10000.0
args.step pgd_anneal_iters 1253 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1254 200
penalty weights 10000.0
args.step pgd_anneal_iters 1254 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1255 200
penalty weights 10000.0
args.step pgd_anneal_iters 1255 600
dim_v 512
rho, theta 307 tensor(-1.0837e-08, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1256 200
penalty weights 10000.0
args.step pgd_anneal_iters 1256 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1257 200
penalty weights 10000.0
args.step pgd_anneal_iters 1257 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1258 200
penalty weights 10000.0
args.step pgd_anneal_iters 1258 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1259 200
penalty weights 10000.0
args.step pgd_anneal_iters 1259 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1260 200
penalty weights 10000.0
args.step pgd_anneal_iters 1260 600
dim_v 512
rho, theta 340 tensor(-1.2259e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1261 200
penalty weights 10000.0
args.step pgd_anneal_iters 1261 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1262 200
penalty weights 10000.0
args.step pgd_anneal_iters 1262 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1263 200
penalty weights 10000.0
args.step pgd_anneal_iters 1263 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1264 200
penalty weights 10000.0
args.step pgd_anneal_iters 1264 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1265 200
penalty weights 10000.0
args.step pgd_anneal_iters 1265 600
dim_v 512
rho, theta 320 tensor(-6.4841e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1266 200
penalty weights 10000.0
args.step pgd_anneal_iters 1266 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1267 200
penalty weights 10000.0
args.step pgd_anneal_iters 1267 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1268 200
penalty weights 10000.0
args.step pgd_anneal_iters 1268 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1269 200
penalty weights 10000.0
args.step pgd_anneal_iters 1269 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1270 200
penalty weights 10000.0
args.step pgd_anneal_iters 1270 600
dim_v 512
rho, theta 337 tensor(-2.7721e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1271 200
penalty weights 10000.0
args.step pgd_anneal_iters 1271 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1272 200
penalty weights 10000.0
args.step pgd_anneal_iters 1272 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1273 200
penalty weights 10000.0
args.step pgd_anneal_iters 1273 600
final projection at end of training
dim_v 512
rho, theta 347 tensor(6.4263e-07, device='cuda:0')
Epoch: [48][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  34.48 ( 34.48)	train_acc   0.37 (  0.49)	train_minacc   0.65 (  0.51)	train_majacc   0.33 (  0.49)	train_corr   0.00 (  0.00)	l1 4.4907 (4.4903)	zero_count 0.0000 (42.7440)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.90it/s] 27%|##6       | 7/26 [00:00<00:00, 28.38it/s]                                               27%|##6       | 7/26 [00:00<00:00, 28.38it/s] 46%|####6     | 12/26 [00:00<00:00, 35.37it/s] 65%|######5   | 17/26 [00:00<00:00, 39.14it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.14it/s] 85%|########4 | 22/26 [00:00<00:00, 41.59it/s]100%|##########| 26/26 [00:00<00:00, 34.45it/s]
Test: [   0/  26]	Loss 0.688 (0.688)	test_acc   0.47 (  0.47)	test_minacc   0.39 (  0.39)	test_majacc   0.48 (  0.48)	Loss_d 0.688 (0.688)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.10 (  0.10)
Test: [  10/  26]	Loss 0.689 (0.686)	test_acc   0.44 (  0.49)	test_minacc   0.52 (  0.48)	test_majacc   0.43 (  0.49)	Loss_d 0.689 (0.686)	test_acc_d   0.44 (  0.49)	test_minacc_d   0.52 (  0.48)	test_majacc_d   0.43 (  0.49)	test_corr_d   0.10 (  0.09)
Test: [  20/  26]	Loss 0.686 (0.687)	test_acc   0.51 (  0.49)	test_minacc   0.49 (  0.49)	test_majacc   0.51 (  0.49)	Loss_d 0.686 (0.687)	test_acc_d   0.51 (  0.49)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.51 (  0.49)	test_corr_d   0.08 (  0.09)
Test: [  26/  26]	Loss 0.688 (0.687)	test_acc   0.38 (  0.49)	test_minacc   0.65 (  0.51)	test_majacc   0.33 (  0.49)	Loss_d 0.688 (0.687)	test_acc_d   0.38 (  0.49)	test_minacc_d   0.65 (  0.51)	test_majacc_d   0.33 (  0.49)	test_corr_d   0.12 (  0.09)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.27it/s]
Test: [  0/  1]	Loss 0.694 (0.694)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.694 (0.694)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.02 (  0.02)
Test: [  1/  1]	Loss 0.694 (0.694)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.694 (0.694)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.02 (  0.02)
Overall Timing[ 48/  1]	epoch_time 0.0421 (0.0438)	validation_time 0.0003 (0.0006)	train_time 0.0417 (0.0431)
record: (train_acc, test_acc) (0.7288000310063362, 0.7110000252723694)
last accs (train_acc, test_acc) (0.4936000099182129, 0.5020000338554382)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.67it/s] 15%|#5        | 4/26 [00:00<00:01, 14.77it/s] 27%|##6       | 7/26 [00:00<00:00, 19.70it/s] 42%|####2     | 11/26 [00:00<00:00, 24.84it/s] 54%|#####3    | 14/26 [00:00<00:00, 25.67it/s] 65%|######5   | 17/26 [00:00<00:00, 25.97it/s] 81%|########  | 21/26 [00:00<00:00, 28.77it/s] 92%|#########2| 24/26 [00:00<00:00, 28.66it/s]100%|##########| 26/26 [00:01<00:00, 23.89it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1274 200
penalty weights 10000.0
args.step pgd_anneal_iters 1274 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1275 200
penalty weights 10000.0
args.step pgd_anneal_iters 1275 600
dim_v 512
rho, theta 328 tensor(-8.9860e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1276 200
penalty weights 10000.0
args.step pgd_anneal_iters 1276 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1277 200
penalty weights 10000.0
args.step pgd_anneal_iters 1277 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1278 200
penalty weights 10000.0
args.step pgd_anneal_iters 1278 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1279 200
penalty weights 10000.0
args.step pgd_anneal_iters 1279 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1280 200
penalty weights 10000.0
args.step pgd_anneal_iters 1280 600
dim_v 512
rho, theta 313 tensor(2.4252e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1281 200
penalty weights 10000.0
args.step pgd_anneal_iters 1281 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1282 200
penalty weights 10000.0
args.step pgd_anneal_iters 1282 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1283 200
penalty weights 10000.0
args.step pgd_anneal_iters 1283 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1284 200
penalty weights 10000.0
args.step pgd_anneal_iters 1284 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1285 200
penalty weights 10000.0
args.step pgd_anneal_iters 1285 600
dim_v 512
rho, theta 335 tensor(-1.1170e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1286 200
penalty weights 10000.0
args.step pgd_anneal_iters 1286 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1287 200
penalty weights 10000.0
args.step pgd_anneal_iters 1287 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1288 200
penalty weights 10000.0
args.step pgd_anneal_iters 1288 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1289 200
penalty weights 10000.0
args.step pgd_anneal_iters 1289 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1290 200
penalty weights 10000.0
args.step pgd_anneal_iters 1290 600
dim_v 512
rho, theta 328 tensor(-8.3700e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1291 200
penalty weights 10000.0
args.step pgd_anneal_iters 1291 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1292 200
penalty weights 10000.0
args.step pgd_anneal_iters 1292 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1293 200
penalty weights 10000.0
args.step pgd_anneal_iters 1293 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1294 200
penalty weights 10000.0
args.step pgd_anneal_iters 1294 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1295 200
penalty weights 10000.0
args.step pgd_anneal_iters 1295 600
dim_v 512
rho, theta 335 tensor(-2.7745e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1296 200
penalty weights 10000.0
args.step pgd_anneal_iters 1296 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1297 200
penalty weights 10000.0
args.step pgd_anneal_iters 1297 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1298 200
penalty weights 10000.0
args.step pgd_anneal_iters 1298 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1299 200
penalty weights 10000.0
args.step pgd_anneal_iters 1299 600
final projection at end of training
dim_v 512
rho, theta 342 tensor(-2.5302e-07, device='cuda:0')
Epoch: [49][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  34.48 ( 34.48)	train_acc   0.37 (  0.49)	train_minacc   0.68 (  0.51)	train_majacc   0.32 (  0.49)	train_corr   0.00 (  0.00)	l1 4.4913 (4.4902)	zero_count 0.0000 (42.1200)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.56it/s] 19%|#9        | 5/26 [00:00<00:00, 25.39it/s] 38%|###8      | 10/26 [00:00<00:00, 36.22it/s]                                                38%|###8      | 10/26 [00:00<00:00, 36.22it/s] 58%|#####7    | 15/26 [00:00<00:00, 36.45it/s] 77%|#######6  | 20/26 [00:00<00:00, 40.15it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 40.15it/s]100%|##########| 26/26 [00:00<00:00, 44.98it/s]100%|##########| 26/26 [00:00<00:00, 36.33it/s]
Test: [   0/  26]	Loss 0.688 (0.688)	test_acc   0.47 (  0.47)	test_minacc   0.39 (  0.39)	test_majacc   0.48 (  0.48)	Loss_d 0.688 (0.688)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.10 (  0.10)
Test: [  10/  26]	Loss 0.689 (0.686)	test_acc   0.43 (  0.49)	test_minacc   0.54 (  0.49)	test_majacc   0.42 (  0.49)	Loss_d 0.689 (0.686)	test_acc_d   0.43 (  0.49)	test_minacc_d   0.54 (  0.49)	test_majacc_d   0.42 (  0.49)	test_corr_d   0.10 (  0.09)
Test: [  20/  26]	Loss 0.687 (0.687)	test_acc   0.51 (  0.49)	test_minacc   0.49 (  0.50)	test_majacc   0.51 (  0.49)	Loss_d 0.687 (0.687)	test_acc_d   0.51 (  0.49)	test_minacc_d   0.49 (  0.50)	test_majacc_d   0.51 (  0.49)	test_corr_d   0.08 (  0.09)
Test: [  26/  26]	Loss 0.688 (0.687)	test_acc   0.38 (  0.49)	test_minacc   0.65 (  0.51)	test_majacc   0.33 (  0.49)	Loss_d 0.688 (0.687)	test_acc_d   0.38 (  0.49)	test_minacc_d   0.65 (  0.51)	test_majacc_d   0.33 (  0.49)	test_corr_d   0.12 (  0.09)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.33it/s]
Test: [  0/  1]	Loss 0.694 (0.694)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.694 (0.694)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.02 (  0.02)
Test: [  1/  1]	Loss 0.694 (0.694)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.694 (0.694)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.02 (  0.02)
Overall Timing[ 49/  1]	epoch_time 0.0422 (0.0438)	validation_time 0.0007 (0.0006)	train_time 0.0415 (0.0431)
record: (train_acc, test_acc) (0.7288000310063362, 0.7110000252723694)
last accs (train_acc, test_acc) (0.49290000995993616, 0.5020000338554382)
done saving aggregate.csv to ./aggregate.csv
wandb: - 0.161 MB of 0.161 MB uploadedwandb: \ 0.161 MB of 0.161 MB uploadedwandb: | 0.161 MB of 0.161 MB uploadedwandb: / 0.161 MB of 0.161 MB uploadedwandb: - 0.161 MB of 0.161 MB uploadedwandb: \ 0.161 MB of 0.161 MB uploadedwandb: | 0.161 MB of 0.161 MB uploadedwandb: / 0.161 MB of 0.161 MB uploadedwandb: - 0.161 MB of 0.161 MB uploadedwandb: \ 0.161 MB of 0.161 MB uploadedThread SenderThread:
Traceback (most recent call last):
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/internal_util.py", line 48, in run
    self._run()
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/internal_util.py", line 99, in _run
    self._process(record)
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/internal.py", line 327, in _process
    self._sm.send(record)
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/sender.py", line 398, in send
    send_handler(record)
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/sender.py", line 420, in send_request
    send_handler(record)
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/sender.py", line 654, in send_request_defer
    self._flush_job()
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/sender.py", line 1706, in _flush_job
    artifact = self._job_builder.build(api=self._api)
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/job_builder.py", line 552, in build
    artifact.add_file(
  File "/home/zd16/scratch/mypython3/wandb/sdk/artifacts/artifact.py", line 1196, in add_file
    return self._add_local_file(
  File "/home/zd16/scratch/mypython3/wandb/sdk/artifacts/artifact.py", line 1459, in _add_local_file
    with tempfile.NamedTemporaryFile(dir=get_staging_dir(), delete=False) as f:
  File "/usr/local/python/3.9.16/lib/python3.9/tempfile.py", line 545, in NamedTemporaryFile
    (fd, name) = _mkstemp_inner(dir, prefix, suffix, flags, output_type)
  File "/usr/local/python/3.9.16/lib/python3.9/tempfile.py", line 255, in _mkstemp_inner
    fd = _os.open(file, flags, 0o600)
OSError: [Errno 122] Disk quota exceeded: '/home/zd16/.local/share/wandb/artifacts/staging/tmpbz__llpr'
wandb: ERROR Internal wandb error: file data was not synced
wandb: Currently logged in as: janezdu (janezdu-uiuc). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.17.9 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.7
wandb: Run data is saved locally in /scratch/users/zd16/sparseIRM-resnet-ver/wandb/run-20240907_205121-x5zb1bjd
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run name_random
wandb: ⭐️ View project at https://wandb.ai/janezdu-uiuc/irm
wandb: 🚀 View run at https://wandb.ai/janezdu-uiuc/irm/runs/x5zb1bjd
=> Reading YAML config from configs/smallscale/resnet18/resnet18-usc-unsigned.yaml
Namespace(data='dataset/', optimizer='adam', weight_opt='adam', set='mnistcifar', arch='ResNet18', config='configs/smallscale/resnet18/resnet18-usc-unsigned.yaml', log_dir=None, workers=4, epochs=50, start_epoch=None, batch_size=390, lr=0.006, warmup_length=0, momentum=0.9, weight_decay=0.0, print_freq=10, num_classes=1, resume='', resume_train_weights='', evaluate=False, pretrained=None, pretrained_distill=None, alpha_distill=0.95, T_distill=2, seed=0, multigpu=[0], lr_policy='cosine_lr', lr_adjust=30, lr_gamma=0.1, name='baseline', save_every=-1, prune_rate=1.0, param_prune_rate=0.0, pr_start=1.0, low_data=1, width_mult=1.0, nesterov=False, threetimes=False, random_subnet=False, one_batch=False, conv_type='DenseConv', freeze_weights=False, st=False, mode='fan_in', nonlinearity='relu', bn_type='LearnedBatchNorm', init='kaiming_normal', no_bn_decay=False, scale_fan=False, first_layer_dense=False, last_layer_dense=True, approx=False, zero=False, flip=False, bs=False, gumbel_sample=False, multiply_prob=False, no_multiply=False, multiply_cont=False, multiply_prob_bs=False, indiv=False, label_smoothing=None, first_layer_type=None, trainer='default', score_init_constant=1.0, K=1, update_freq=20, D=0.01, T=1, TA=True, TA2=False, TA_grow=False, center=False, straight_through=False, PLA_factor=0.1, PLA_patience=10, gradient_loss_para=0, abs_loss_para=0, thres=0.9, runs_name='name_random', resume_compare_loss1='', resume_compare_loss2='', init_weights='', trained_mask='', weight_rescaling=False, constrain_by_layer=False, weight_rescaling_data=False, use_running_stats=False, not_clipping=False, rescaling_para=False, lasso_para=0, dont_freeze_weights=False, iterative=True, prob_by_weight=False, rescale_at_fix_subnet=False, train_weights_at_the_same_time=False, sample_from_training_set=False, load_true_para=False, distill=False, finetune=False, stablize=False, prev_best=0, weight_opt_lr=0.0006, n=500, ts=0.28, te=0.6, d=20000, s=80, c=0.75, init_prob=False, thres_before=0.001, wide_ratio=0.001, noise=1, cal_p_q=False, just_finetune=False, snip=False, envs_num=2, l2_regularizer_weight=0.001, data_num=50000, env_type='linear', irm_type='irmv1', hidden_dim=390, penalty_anneal_iters=200, penalty_weight=10000.0, grayscale_model=0, weight_lr_schedule=False, fix_subnet=False, freeze_weight=False, step='ours', prior_sd_coef=0, dim_inv=2, variance_gamma=1.0, dim_spu=10, image_scale=32, cons_ratio='0.999_0.7_0.1', noise_ratio=0.2, step_gamma=0.1, step_round=3, inner_steps=1, use_pgd=True, z=15.0, pgd_anneal_iters=600, pgd_skip_steps=5, fraction_z=0.99)
=> Creating model 'ResNet18'
Here!!!!!!!!
==> Conv Type: DenseConv
==> BN Type: LearnedBatchNorm
<class 'torch.nn.modules.conv.Conv2d'>
<class 'torch.nn.modules.batchnorm.BatchNorm2d'>
==> Building first layer with <class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): Linear(in_features=512, out_features=1, bias=True)
)
=> Parallelizing on [0] gpus
<DEBUG> gradient to module.conv1.weight
<DEBUG> gradient to module.bn1.weight
<DEBUG> gradient to module.bn1.bias
<DEBUG> gradient to module.layer1.0.conv1.weight
<DEBUG> gradient to module.layer1.0.bn1.weight
<DEBUG> gradient to module.layer1.0.bn1.bias
<DEBUG> gradient to module.layer1.0.conv2.weight
<DEBUG> gradient to module.layer1.0.bn2.weight
<DEBUG> gradient to module.layer1.0.bn2.bias
<DEBUG> gradient to module.layer1.1.conv1.weight
<DEBUG> gradient to module.layer1.1.bn1.weight
<DEBUG> gradient to module.layer1.1.bn1.bias
<DEBUG> gradient to module.layer1.1.conv2.weight
<DEBUG> gradient to module.layer1.1.bn2.weight
<DEBUG> gradient to module.layer1.1.bn2.bias
<DEBUG> gradient to module.layer2.0.conv1.weight
<DEBUG> gradient to module.layer2.0.bn1.weight
<DEBUG> gradient to module.layer2.0.bn1.bias
<DEBUG> gradient to module.layer2.0.conv2.weight
<DEBUG> gradient to module.layer2.0.bn2.weight
<DEBUG> gradient to module.layer2.0.bn2.bias
<DEBUG> gradient to module.layer2.0.downsample.0.weight
<DEBUG> gradient to module.layer2.0.downsample.1.weight
<DEBUG> gradient to module.layer2.0.downsample.1.bias
<DEBUG> gradient to module.layer2.1.conv1.weight
<DEBUG> gradient to module.layer2.1.bn1.weight
<DEBUG> gradient to module.layer2.1.bn1.bias
<DEBUG> gradient to module.layer2.1.conv2.weight
<DEBUG> gradient to module.layer2.1.bn2.weight
<DEBUG> gradient to module.layer2.1.bn2.bias
<DEBUG> gradient to module.layer3.0.conv1.weight
<DEBUG> gradient to module.layer3.0.bn1.weight
<DEBUG> gradient to module.layer3.0.bn1.bias
<DEBUG> gradient to module.layer3.0.conv2.weight
<DEBUG> gradient to module.layer3.0.bn2.weight
<DEBUG> gradient to module.layer3.0.bn2.bias
<DEBUG> gradient to module.layer3.0.downsample.0.weight
<DEBUG> gradient to module.layer3.0.downsample.1.weight
<DEBUG> gradient to module.layer3.0.downsample.1.bias
<DEBUG> gradient to module.layer3.1.conv1.weight
<DEBUG> gradient to module.layer3.1.bn1.weight
<DEBUG> gradient to module.layer3.1.bn1.bias
<DEBUG> gradient to module.layer3.1.conv2.weight
<DEBUG> gradient to module.layer3.1.bn2.weight
<DEBUG> gradient to module.layer3.1.bn2.bias
<DEBUG> gradient to module.layer4.0.conv1.weight
<DEBUG> gradient to module.layer4.0.bn1.weight
<DEBUG> gradient to module.layer4.0.bn1.bias
<DEBUG> gradient to module.layer4.0.conv2.weight
<DEBUG> gradient to module.layer4.0.bn2.weight
<DEBUG> gradient to module.layer4.0.bn2.bias
<DEBUG> gradient to module.layer4.0.downsample.0.weight
<DEBUG> gradient to module.layer4.0.downsample.1.weight
<DEBUG> gradient to module.layer4.0.downsample.1.bias
<DEBUG> gradient to module.layer4.1.conv1.weight
<DEBUG> gradient to module.layer4.1.bn1.weight
<DEBUG> gradient to module.layer4.1.bn1.bias
<DEBUG> gradient to module.layer4.1.conv2.weight
<DEBUG> gradient to module.layer4.1.bn2.weight
<DEBUG> gradient to module.layer4.1.bn2.bias
<DEBUG> gradient to module.fc.weight
<DEBUG> gradient to module.fc.bias
Files already downloaded and verified
Files already downloaded and verified
Adding Noise to Label, len(Y)=12000, Label_noise=1172
Xmp (7877, 3, 32, 32) (6903, 3, 32, 32)
Xcp (5986, 3, 32, 32) (6014, 3, 32, 32)
env=0 2497 2497 3 3
xn 2500 xp 2500
env=1 1750 1750 750 750
xn 2500 xp 2500
env=2 50 50 450 450
xn 500 xp 500
=> Creating model 'EBD'
EBD(
  (embedings): Embedding(2, 1)
)
=> Parallelizing on [0] gpus
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:02<00:52,  2.11s/it] 19%|#9        | 5/26 [00:02<00:07,  2.97it/s] 35%|###4      | 9/26 [00:02<00:02,  6.03it/s] 50%|#####     | 13/26 [00:02<00:01,  9.54it/s] 65%|######5   | 17/26 [00:02<00:00, 13.26it/s] 81%|########  | 21/26 [00:02<00:00, 17.26it/s] 96%|#########6| 25/26 [00:02<00:00, 21.00it/s]100%|##########| 26/26 [00:03<00:00,  8.32it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 0 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 2 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 3 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 4 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 5 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 6 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 7 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 8 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 9 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 10 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 11 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 12 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 13 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 14 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 15 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 16 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 17 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 18 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 19 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 20 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 21 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 22 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 23 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 24 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 25 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [0][  26/  26]	Loss 0.415 (0.503)	train_nll   0.42 (  0.50)	train_penalty   0.05 (  0.20)	weight_norm  20.87 ( 18.16)	train_acc   0.83 (  0.81)	train_minacc   0.00 (  0.07)	train_majacc   0.98 (  0.94)	train_corr   0.00 (  0.00)	l1 7.4571 (8.3517)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.56it/s] 23%|##3       | 6/26 [00:00<00:00, 32.67it/s]                                               23%|##3       | 6/26 [00:00<00:00, 32.67it/s] 42%|####2     | 11/26 [00:00<00:00, 38.51it/s] 62%|######1   | 16/26 [00:00<00:00, 41.22it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.22it/s] 81%|########  | 21/26 [00:00<00:00, 39.15it/s]100%|##########| 26/26 [00:00<00:00, 41.66it/s]100%|##########| 26/26 [00:00<00:00, 35.82it/s]
Test: [   0/  26]	Loss 0.392 (0.392)	test_acc   0.86 (  0.86)	test_minacc   0.07 (  0.07)	test_majacc   0.99 (  0.99)	Loss_d 0.392 (0.392)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.07 (  0.07)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.96)
Test: [  10/  26]	Loss 0.405 (0.394)	test_acc   0.84 (  0.85)	test_minacc   0.09 (  0.04)	test_majacc   0.99 (  0.99)	Loss_d 0.405 (0.394)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.09 (  0.04)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.95 (  0.96)
Test: [  20/  26]	Loss 0.399 (0.397)	test_acc   0.85 (  0.85)	test_minacc   0.03 (  0.03)	test_majacc   0.99 (  0.99)	Loss_d 0.399 (0.397)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.03 (  0.03)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.96)
Test: [  26/  26]	Loss 0.408 (0.397)	test_acc   0.84 (  0.85)	test_minacc   0.00 (  0.03)	test_majacc   0.99 (  0.99)	Loss_d 0.408 (0.397)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.00 (  0.03)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.96)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00,  2.54it/s]100%|##########| 1/1 [00:00<00:00,  2.54it/s]
Test: [  0/  1]	Loss 1.726 (1.726)	test_acc   0.12 (  0.12)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 1.726 (1.726)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.95 (  0.95)
Test: [  1/  1]	Loss 1.726 (1.726)	test_acc   0.12 (  0.12)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 1.726 (1.726)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.95 (  0.95)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/163/checkpoints/model_best.pth
Overall Timing[  0/  1]	epoch_time 0.0866 (0.0866)	validation_time 0.0066 (0.0066)	train_time 0.0760 (0.0760)
record: (train_acc, test_acc) (0.8465000211596488, 0.11500000208616257)
last accs (train_acc, test_acc) (0.8465000211596488, 0.11500000208616257)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.41it/s] 19%|#9        | 5/26 [00:00<00:01, 18.24it/s] 35%|###4      | 9/26 [00:00<00:00, 23.92it/s] 50%|#####     | 13/26 [00:00<00:00, 26.99it/s] 65%|######5   | 17/26 [00:00<00:00, 29.31it/s] 81%|########  | 21/26 [00:00<00:00, 31.10it/s] 96%|#########6| 25/26 [00:00<00:00, 32.23it/s]100%|##########| 26/26 [00:00<00:00, 26.34it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 26 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 27 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 28 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 29 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 30 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 31 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 32 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 33 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 34 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 35 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 36 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 37 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 38 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 39 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 40 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 41 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 42 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 43 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 44 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 45 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 46 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 47 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 48 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 49 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 50 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 51 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [1][  26/  26]	Loss 0.398 (0.394)	train_nll   0.40 (  0.39)	train_penalty   0.05 (  0.05)	weight_norm  21.96 ( 21.62)	train_acc   0.84 (  0.85)	train_minacc   0.05 (  0.05)	train_majacc   0.99 (  0.99)	train_corr   0.00 (  0.00)	l1 7.3767 (7.4109)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02, 11.68it/s] 23%|##3       | 6/26 [00:00<00:00, 23.65it/s] 38%|###8      | 10/26 [00:00<00:00, 28.32it/s]                                                38%|###8      | 10/26 [00:00<00:00, 28.32it/s] 62%|######1   | 16/26 [00:00<00:00, 37.06it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.06it/s] 85%|########4 | 22/26 [00:00<00:00, 42.35it/s]100%|##########| 26/26 [00:00<00:00, 33.58it/s]
Test: [   0/  26]	Loss 0.378 (0.378)	test_acc   0.87 (  0.87)	test_minacc   0.11 (  0.11)	test_majacc   0.99 (  0.99)	Loss_d 0.378 (0.378)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.11 (  0.11)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.95 (  0.95)
Test: [  10/  26]	Loss 0.399 (0.378)	test_acc   0.84 (  0.85)	test_minacc   0.12 (  0.07)	test_majacc   0.99 (  0.99)	Loss_d 0.399 (0.378)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.12 (  0.07)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.94 (  0.95)
Test: [  20/  26]	Loss 0.383 (0.380)	test_acc   0.85 (  0.85)	test_minacc   0.07 (  0.06)	test_majacc   0.99 (  0.99)	Loss_d 0.383 (0.380)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.07 (  0.06)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.96)
Test: [  26/  26]	Loss 0.387 (0.379)	test_acc   0.85 (  0.85)	test_minacc   0.05 (  0.06)	test_majacc   1.00 (  0.99)	Loss_d 0.387 (0.379)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.05 (  0.06)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.96 (  0.95)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 58.34it/s]
Test: [  0/  1]	Loss 1.792 (1.792)	test_acc   0.14 (  0.14)	test_minacc   0.04 (  0.04)	test_majacc   1.00 (  1.00)	Loss_d 1.792 (1.792)	test_acc_d   0.14 (  0.14)	test_minacc_d   0.04 (  0.04)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.93 (  0.93)
Test: [  1/  1]	Loss 1.792 (1.792)	test_acc   0.14 (  0.14)	test_minacc   0.04 (  0.04)	test_majacc   1.00 (  1.00)	Loss_d 1.792 (1.792)	test_acc_d   0.14 (  0.14)	test_minacc_d   0.04 (  0.04)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.93 (  0.93)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/163/checkpoints/model_best.pth
Overall Timing[  1/  1]	epoch_time 0.0417 (0.0641)	validation_time 0.0005 (0.0035)	train_time 0.0412 (0.0586)
record: (train_acc, test_acc) (0.8499000297188759, 0.13600000739097595)
last accs (train_acc, test_acc) (0.8499000297188759, 0.13600000739097595)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.81it/s] 19%|#9        | 5/26 [00:00<00:01, 20.16it/s] 35%|###4      | 9/26 [00:00<00:00, 26.79it/s] 50%|#####     | 13/26 [00:00<00:00, 30.12it/s] 65%|######5   | 17/26 [00:00<00:00, 31.89it/s] 81%|########  | 21/26 [00:00<00:00, 32.95it/s] 96%|#########6| 25/26 [00:00<00:00, 33.93it/s]100%|##########| 26/26 [00:00<00:00, 28.24it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 52 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 53 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 54 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 55 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 56 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 57 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 58 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 59 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 60 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 61 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 62 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 63 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 64 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 65 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 66 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 67 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 68 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 69 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 70 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 71 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 72 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 73 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 74 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 75 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 76 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 77 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [2][  26/  26]	Loss 0.369 (0.370)	train_nll   0.37 (  0.37)	train_penalty   0.04 (  0.04)	weight_norm  22.10 ( 22.04)	train_acc   0.85 (  0.85)	train_minacc   0.18 (  0.11)	train_majacc   0.98 (  0.98)	train_corr   0.00 (  0.00)	l1 7.3532 (7.3779)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.90it/s] 27%|##6       | 7/26 [00:00<00:00, 26.26it/s]                                               27%|##6       | 7/26 [00:00<00:00, 26.26it/s] 46%|####6     | 12/26 [00:00<00:00, 33.58it/s] 65%|######5   | 17/26 [00:00<00:00, 38.13it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.13it/s] 85%|########4 | 22/26 [00:00<00:00, 38.10it/s]100%|##########| 26/26 [00:00<00:00, 33.09it/s]
Test: [   0/  26]	Loss 0.364 (0.364)	test_acc   0.87 (  0.87)	test_minacc   0.15 (  0.15)	test_majacc   0.99 (  0.99)	Loss_d 0.364 (0.364)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.15 (  0.15)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.94 (  0.94)
Test: [  10/  26]	Loss 0.370 (0.358)	test_acc   0.84 (  0.86)	test_minacc   0.13 (  0.12)	test_majacc   0.99 (  0.98)	Loss_d 0.370 (0.358)	test_acc_d   0.84 (  0.86)	test_minacc_d   0.13 (  0.12)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.93 (  0.94)
Test: [  20/  26]	Loss 0.358 (0.359)	test_acc   0.85 (  0.85)	test_minacc   0.07 (  0.11)	test_majacc   0.99 (  0.99)	Loss_d 0.358 (0.359)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.07 (  0.11)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.95 (  0.94)
Test: [  26/  26]	Loss 0.360 (0.357)	test_acc   0.85 (  0.85)	test_minacc   0.13 (  0.11)	test_majacc   0.99 (  0.98)	Loss_d 0.360 (0.357)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.13 (  0.11)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.95 (  0.94)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 54.91it/s]
Test: [  0/  1]	Loss 1.830 (1.830)	test_acc   0.15 (  0.15)	test_minacc   0.06 (  0.06)	test_majacc   1.00 (  1.00)	Loss_d 1.830 (1.830)	test_acc_d   0.15 (  0.15)	test_minacc_d   0.06 (  0.06)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.90 (  0.90)
Test: [  1/  1]	Loss 1.830 (1.830)	test_acc   0.15 (  0.15)	test_minacc   0.06 (  0.06)	test_majacc   1.00 (  1.00)	Loss_d 1.830 (1.830)	test_acc_d   0.15 (  0.15)	test_minacc_d   0.06 (  0.06)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.90 (  0.90)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/163/checkpoints/model_best.pth
Overall Timing[  2/  1]	epoch_time 0.0420 (0.0568)	validation_time 0.0005 (0.0025)	train_time 0.0415 (0.0529)
record: (train_acc, test_acc) (0.8529000216126442, 0.15200001001358032)
last accs (train_acc, test_acc) (0.8529000216126442, 0.15200001001358032)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.88it/s] 23%|##3       | 6/26 [00:00<00:00, 28.46it/s] 38%|###8      | 10/26 [00:00<00:00, 32.44it/s] 54%|#####3    | 14/26 [00:00<00:00, 34.01it/s] 69%|######9   | 18/26 [00:00<00:00, 35.88it/s] 85%|########4 | 22/26 [00:00<00:00, 36.90it/s]100%|##########| 26/26 [00:00<00:00, 32.69it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 78 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 79 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 80 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 81 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 82 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 83 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 84 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 85 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 86 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 87 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 88 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 89 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 90 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 91 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 92 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 93 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 94 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 95 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 96 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 97 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 98 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 99 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 100 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 101 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 102 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 103 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [3][  26/  26]	Loss 0.348 (0.351)	train_nll   0.35 (  0.35)	train_penalty   0.03 (  0.03)	weight_norm  22.18 ( 22.14)	train_acc   0.86 (  0.85)	train_minacc   0.18 (  0.16)	train_majacc   0.98 (  0.98)	train_corr   0.00 (  0.00)	l1 7.3374 (7.3860)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.69it/s] 12%|#1        | 3/26 [00:00<00:02,  8.89it/s] 31%|###       | 8/26 [00:00<00:00, 21.79it/s]                                               31%|###       | 8/26 [00:00<00:00, 21.79it/s] 50%|#####     | 13/26 [00:00<00:00, 30.18it/s] 69%|######9   | 18/26 [00:00<00:00, 36.07it/s]                                                69%|######9   | 18/26 [00:00<00:00, 36.07it/s] 88%|########8 | 23/26 [00:00<00:00, 36.45it/s]100%|##########| 26/26 [00:00<00:00, 27.81it/s]
Test: [   0/  26]	Loss 0.343 (0.343)	test_acc   0.86 (  0.86)	test_minacc   0.13 (  0.13)	test_majacc   0.98 (  0.98)	Loss_d 0.343 (0.343)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.13 (  0.13)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.93 (  0.93)
Test: [  10/  26]	Loss 0.348 (0.344)	test_acc   0.86 (  0.86)	test_minacc   0.25 (  0.17)	test_majacc   0.99 (  0.98)	Loss_d 0.348 (0.344)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.25 (  0.17)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.91 (  0.93)
Test: [  20/  26]	Loss 0.334 (0.343)	test_acc   0.86 (  0.85)	test_minacc   0.14 (  0.15)	test_majacc   0.99 (  0.98)	Loss_d 0.334 (0.343)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.14 (  0.15)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.94 (  0.93)
Test: [  26/  26]	Loss 0.342 (0.341)	test_acc   0.86 (  0.86)	test_minacc   0.15 (  0.16)	test_majacc   0.99 (  0.98)	Loss_d 0.342 (0.341)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.15 (  0.16)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.93 (  0.93)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 49.32it/s]
Test: [  0/  1]	Loss 1.857 (1.857)	test_acc   0.19 (  0.19)	test_minacc   0.10 (  0.10)	test_majacc   1.00 (  1.00)	Loss_d 1.857 (1.857)	test_acc_d   0.19 (  0.19)	test_minacc_d   0.10 (  0.10)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.86 (  0.86)
Test: [  1/  1]	Loss 1.857 (1.857)	test_acc   0.19 (  0.19)	test_minacc   0.10 (  0.10)	test_majacc   1.00 (  1.00)	Loss_d 1.857 (1.857)	test_acc_d   0.19 (  0.19)	test_minacc_d   0.10 (  0.10)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.86 (  0.86)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/163/checkpoints/model_best.pth
Overall Timing[  3/  1]	epoch_time 0.0482 (0.0546)	validation_time 0.0005 (0.0020)	train_time 0.0477 (0.0516)
record: (train_acc, test_acc) (0.8554000262022018, 0.18700000643730164)
last accs (train_acc, test_acc) (0.8554000262022018, 0.18700000643730164)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 22.40it/s] 27%|##6       | 7/26 [00:00<00:00, 28.46it/s] 42%|####2     | 11/26 [00:00<00:00, 31.08it/s] 58%|#####7    | 15/26 [00:00<00:00, 32.48it/s] 73%|#######3  | 19/26 [00:00<00:00, 33.76it/s] 88%|########8 | 23/26 [00:00<00:00, 34.49it/s]100%|##########| 26/26 [00:00<00:00, 30.43it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 104 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 105 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 106 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 107 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 108 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 109 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 110 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 111 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 112 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 113 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 114 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 115 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 116 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 117 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 118 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 119 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 120 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 121 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 122 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 123 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 124 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 125 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 126 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 127 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 128 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 129 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [4][  26/  26]	Loss 0.332 (0.331)	train_nll   0.33 (  0.33)	train_penalty   0.03 (  0.02)	weight_norm  22.27 ( 22.23)	train_acc   0.87 (  0.86)	train_minacc   0.28 (  0.28)	train_majacc   0.98 (  0.96)	train_corr   0.00 (  0.00)	l1 7.3579 (7.4778)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.82it/s] 23%|##3       | 6/26 [00:00<00:00, 23.20it/s]                                               23%|##3       | 6/26 [00:00<00:00, 23.20it/s] 42%|####2     | 11/26 [00:00<00:00, 32.34it/s] 65%|######5   | 17/26 [00:00<00:00, 37.53it/s]                                                65%|######5   | 17/26 [00:00<00:00, 37.53it/s] 85%|########4 | 22/26 [00:00<00:00, 40.81it/s]100%|##########| 26/26 [00:00<00:00, 32.67it/s]
Test: [   0/  26]	Loss 0.322 (0.322)	test_acc   0.86 (  0.86)	test_minacc   0.13 (  0.13)	test_majacc   0.98 (  0.98)	Loss_d 0.322 (0.322)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.13 (  0.13)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.94 (  0.94)
Test: [  10/  26]	Loss 0.334 (0.328)	test_acc   0.85 (  0.86)	test_minacc   0.18 (  0.13)	test_majacc   0.99 (  0.99)	Loss_d 0.334 (0.328)	test_acc_d   0.85 (  0.86)	test_minacc_d   0.18 (  0.13)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.93 (  0.94)
Test: [  20/  26]	Loss 0.314 (0.328)	test_acc   0.87 (  0.86)	test_minacc   0.14 (  0.12)	test_majacc   1.00 (  0.99)	Loss_d 0.314 (0.328)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.14 (  0.12)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.95 (  0.94)
Test: [  26/  26]	Loss 0.317 (0.324)	test_acc   0.86 (  0.86)	test_minacc   0.13 (  0.13)	test_majacc   0.99 (  0.99)	Loss_d 0.317 (0.324)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.13 (  0.13)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.94 (  0.94)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.74it/s]
Test: [  0/  1]	Loss 1.967 (1.967)	test_acc   0.17 (  0.17)	test_minacc   0.07 (  0.07)	test_majacc   1.00 (  1.00)	Loss_d 1.967 (1.967)	test_acc_d   0.17 (  0.17)	test_minacc_d   0.07 (  0.07)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.88 (  0.88)
Test: [  1/  1]	Loss 1.967 (1.967)	test_acc   0.17 (  0.17)	test_minacc   0.07 (  0.07)	test_majacc   1.00 (  1.00)	Loss_d 1.967 (1.967)	test_acc_d   0.17 (  0.17)	test_minacc_d   0.07 (  0.07)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.88 (  0.88)
Overall Timing[  4/  1]	epoch_time 0.0403 (0.0517)	validation_time 0.0004 (0.0017)	train_time 0.0398 (0.0492)
record: (train_acc, test_acc) (0.8554000262022018, 0.18700000643730164)
last accs (train_acc, test_acc) (0.8593000226020813, 0.16600000858306885)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.54it/s] 19%|#9        | 5/26 [00:00<00:00, 22.51it/s] 35%|###4      | 9/26 [00:00<00:00, 28.75it/s] 50%|#####     | 13/26 [00:00<00:00, 31.73it/s] 65%|######5   | 17/26 [00:00<00:00, 33.23it/s] 81%|########  | 21/26 [00:00<00:00, 34.50it/s] 96%|#########6| 25/26 [00:00<00:00, 35.03it/s]100%|##########| 26/26 [00:00<00:00, 29.77it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 130 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 131 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 132 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 133 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 134 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 135 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 136 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 137 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 138 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 139 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 140 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 141 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 142 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 143 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 144 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 145 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 146 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 147 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 148 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 149 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 150 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 151 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 152 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 153 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 154 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 155 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [5][  26/  26]	Loss 0.305 (0.318)	train_nll   0.30 (  0.32)	train_penalty   0.02 (  0.02)	weight_norm  22.40 ( 22.33)	train_acc   0.84 (  0.86)	train_minacc   0.28 (  0.31)	train_majacc   0.95 (  0.96)	train_corr   0.00 (  0.00)	l1 7.0913 (7.3392)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.36it/s] 23%|##3       | 6/26 [00:00<00:00, 24.60it/s]                                               23%|##3       | 6/26 [00:00<00:00, 24.60it/s] 42%|####2     | 11/26 [00:00<00:00, 33.37it/s] 62%|######1   | 16/26 [00:00<00:00, 38.69it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.69it/s] 81%|########  | 21/26 [00:00<00:00, 38.14it/s]100%|##########| 26/26 [00:00<00:00, 41.27it/s]100%|##########| 26/26 [00:00<00:00, 32.68it/s]
Test: [   0/  26]	Loss 0.301 (0.301)	test_acc   0.88 (  0.88)	test_minacc   0.31 (  0.31)	test_majacc   0.97 (  0.97)	Loss_d 0.301 (0.301)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.90 (  0.90)
Test: [  10/  26]	Loss 0.307 (0.314)	test_acc   0.86 (  0.87)	test_minacc   0.31 (  0.25)	test_majacc   0.98 (  0.97)	Loss_d 0.307 (0.314)	test_acc_d   0.86 (  0.87)	test_minacc_d   0.31 (  0.25)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.90 (  0.91)
Test: [  20/  26]	Loss 0.295 (0.310)	test_acc   0.86 (  0.87)	test_minacc   0.21 (  0.27)	test_majacc   0.97 (  0.97)	Loss_d 0.295 (0.310)	test_acc_d   0.86 (  0.87)	test_minacc_d   0.21 (  0.27)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.93 (  0.91)
Test: [  26/  26]	Loss 0.283 (0.307)	test_acc   0.85 (  0.87)	test_minacc   0.18 (  0.27)	test_majacc   0.97 (  0.97)	Loss_d 0.283 (0.307)	test_acc_d   0.85 (  0.87)	test_minacc_d   0.18 (  0.27)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.92 (  0.91)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.28it/s]
Test: [  0/  1]	Loss 1.872 (1.872)	test_acc   0.24 (  0.24)	test_minacc   0.16 (  0.16)	test_majacc   0.98 (  0.98)	Loss_d 1.872 (1.872)	test_acc_d   0.24 (  0.24)	test_minacc_d   0.16 (  0.16)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.80 (  0.80)
Test: [  1/  1]	Loss 1.872 (1.872)	test_acc   0.24 (  0.24)	test_minacc   0.16 (  0.16)	test_majacc   0.98 (  0.98)	Loss_d 1.872 (1.872)	test_acc_d   0.24 (  0.24)	test_minacc_d   0.16 (  0.16)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.80 (  0.80)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/163/checkpoints/model_best.pth
Overall Timing[  5/  1]	epoch_time 0.0411 (0.0500)	validation_time 0.0004 (0.0015)	train_time 0.0406 (0.0478)
record: (train_acc, test_acc) (0.8668000252246857, 0.242000013589859)
last accs (train_acc, test_acc) (0.8668000252246857, 0.242000013589859)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.47it/s] 23%|##3       | 6/26 [00:00<00:00, 28.23it/s] 38%|###8      | 10/26 [00:00<00:00, 32.02it/s] 54%|#####3    | 14/26 [00:00<00:00, 33.29it/s] 69%|######9   | 18/26 [00:00<00:00, 33.89it/s] 85%|########4 | 22/26 [00:00<00:00, 34.01it/s]100%|##########| 26/26 [00:00<00:00, 34.34it/s]100%|##########| 26/26 [00:00<00:00, 30.52it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 156 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 157 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 158 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 159 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 160 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 161 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 162 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 163 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 164 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 165 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 166 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 167 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 168 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 169 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 170 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 171 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 172 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 173 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 174 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 175 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 176 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 177 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 178 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 179 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 180 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 181 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [6][  26/  26]	Loss 0.280 (0.301)	train_nll   0.28 (  0.30)	train_penalty   0.01 (  0.02)	weight_norm  22.55 ( 22.48)	train_acc   0.87 (  0.87)	train_minacc   0.49 (  0.39)	train_majacc   0.94 (  0.96)	train_corr   0.00 (  0.00)	l1 7.5464 (7.4410)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.26it/s] 19%|#9        | 5/26 [00:00<00:00, 21.24it/s] 38%|###8      | 10/26 [00:00<00:00, 31.85it/s]                                                38%|###8      | 10/26 [00:00<00:00, 31.85it/s] 58%|#####7    | 15/26 [00:00<00:00, 37.38it/s] 77%|#######6  | 20/26 [00:00<00:00, 38.73it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 38.73it/s] 96%|#########6| 25/26 [00:00<00:00, 41.20it/s]100%|##########| 26/26 [00:00<00:00, 33.31it/s]
Test: [   0/  26]	Loss 0.322 (0.322)	test_acc   0.86 (  0.86)	test_minacc   0.33 (  0.33)	test_majacc   0.94 (  0.94)	Loss_d 0.322 (0.322)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.88 (  0.88)
Test: [  10/  26]	Loss 0.288 (0.309)	test_acc   0.88 (  0.86)	test_minacc   0.46 (  0.35)	test_majacc   0.97 (  0.95)	Loss_d 0.288 (0.309)	test_acc_d   0.88 (  0.86)	test_minacc_d   0.46 (  0.35)	test_majacc_d   0.97 (  0.95)	test_corr_d   0.85 (  0.87)
Test: [  20/  26]	Loss 0.290 (0.306)	test_acc   0.88 (  0.86)	test_minacc   0.38 (  0.36)	test_majacc   0.97 (  0.95)	Loss_d 0.290 (0.306)	test_acc_d   0.88 (  0.86)	test_minacc_d   0.38 (  0.36)	test_majacc_d   0.97 (  0.95)	test_corr_d   0.89 (  0.87)
Test: [  26/  26]	Loss 0.253 (0.299)	test_acc   0.88 (  0.87)	test_minacc   0.46 (  0.38)	test_majacc   0.95 (  0.95)	Loss_d 0.253 (0.299)	test_acc_d   0.88 (  0.87)	test_minacc_d   0.46 (  0.38)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.86 (  0.87)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.92it/s]
Test: [  0/  1]	Loss 1.975 (1.975)	test_acc   0.30 (  0.30)	test_minacc   0.23 (  0.23)	test_majacc   0.98 (  0.98)	Loss_d 1.975 (1.975)	test_acc_d   0.30 (  0.30)	test_minacc_d   0.23 (  0.23)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.69 (  0.69)
Test: [  1/  1]	Loss 1.975 (1.975)	test_acc   0.30 (  0.30)	test_minacc   0.23 (  0.23)	test_majacc   0.98 (  0.98)	Loss_d 1.975 (1.975)	test_acc_d   0.30 (  0.30)	test_minacc_d   0.23 (  0.23)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.69 (  0.69)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/163/checkpoints/model_best.pth
Overall Timing[  6/  1]	epoch_time 0.0440 (0.0491)	validation_time 0.0003 (0.0013)	train_time 0.0437 (0.0472)
record: (train_acc, test_acc) (0.8657000229358673, 0.30400002002716064)
last accs (train_acc, test_acc) (0.8657000229358673, 0.30400002002716064)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  4.02it/s] 19%|#9        | 5/26 [00:00<00:01, 16.30it/s] 35%|###4      | 9/26 [00:00<00:00, 23.40it/s] 50%|#####     | 13/26 [00:00<00:00, 28.03it/s] 65%|######5   | 17/26 [00:00<00:00, 30.59it/s] 81%|########  | 21/26 [00:00<00:00, 32.62it/s] 96%|#########6| 25/26 [00:00<00:00, 34.02it/s]100%|##########| 26/26 [00:00<00:00, 26.38it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 182 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 183 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 184 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 185 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 186 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 187 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 188 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 189 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 190 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 191 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 192 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 193 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 194 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 195 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 196 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 197 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 198 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 199 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 200 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 201 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 202 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 203 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 204 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 205 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 206 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 207 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [7][  26/  26]	Loss 0.002 (0.207)	train_nll   0.30 (  0.30)	train_penalty   0.00 (  0.01)	weight_norm  22.71 ( 22.64)	train_acc   0.84 (  0.87)	train_minacc   0.77 (  0.49)	train_majacc   0.86 (  0.94)	train_corr   0.00 (  0.00)	l1 7.0243 (7.3610)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.54it/s] 31%|###       | 8/26 [00:00<00:00, 37.68it/s]                                               31%|###       | 8/26 [00:00<00:00, 37.68it/s] 50%|#####     | 13/26 [00:00<00:00, 41.57it/s] 69%|######9   | 18/26 [00:00<00:00, 39.12it/s]                                                69%|######9   | 18/26 [00:00<00:00, 39.12it/s] 88%|########8 | 23/26 [00:00<00:00, 41.40it/s]100%|##########| 26/26 [00:00<00:00, 38.36it/s]
Test: [   0/  26]	Loss 0.320 (0.320)	test_acc   0.86 (  0.86)	test_minacc   0.69 (  0.69)	test_majacc   0.89 (  0.89)	Loss_d 0.320 (0.320)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.72 (  0.72)
Test: [  10/  26]	Loss 0.296 (0.316)	test_acc   0.88 (  0.86)	test_minacc   0.84 (  0.74)	test_majacc   0.89 (  0.88)	Loss_d 0.296 (0.316)	test_acc_d   0.88 (  0.86)	test_minacc_d   0.84 (  0.74)	test_majacc_d   0.89 (  0.88)	test_corr_d   0.64 (  0.70)
Test: [  20/  26]	Loss 0.309 (0.312)	test_acc   0.86 (  0.86)	test_minacc   0.67 (  0.74)	test_majacc   0.90 (  0.88)	Loss_d 0.309 (0.312)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.67 (  0.74)	test_majacc_d   0.90 (  0.88)	test_corr_d   0.73 (  0.70)
Test: [  26/  26]	Loss 0.302 (0.312)	test_acc   0.85 (  0.86)	test_minacc   0.79 (  0.74)	test_majacc   0.86 (  0.88)	Loss_d 0.302 (0.312)	test_acc_d   0.85 (  0.86)	test_minacc_d   0.79 (  0.74)	test_majacc_d   0.86 (  0.88)	test_corr_d   0.68 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.16it/s]
Test: [  0/  1]	Loss 1.356 (1.356)	test_acc   0.54 (  0.54)	test_minacc   0.49 (  0.49)	test_majacc   0.92 (  0.92)	Loss_d 1.356 (1.356)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.26 (  0.26)
Test: [  1/  1]	Loss 1.356 (1.356)	test_acc   0.54 (  0.54)	test_minacc   0.49 (  0.49)	test_majacc   0.92 (  0.92)	Loss_d 1.356 (1.356)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.26 (  0.26)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/163/checkpoints/model_best.pth
Overall Timing[  7/  1]	epoch_time 0.0413 (0.0481)	validation_time 0.0005 (0.0012)	train_time 0.0408 (0.0464)
record: (train_acc, test_acc) (0.860000024676323, 0.5370000004768372)
last accs (train_acc, test_acc) (0.860000024676323, 0.5370000004768372)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.15it/s] 23%|##3       | 6/26 [00:00<00:00, 25.15it/s] 38%|###8      | 10/26 [00:00<00:00, 27.97it/s] 54%|#####3    | 14/26 [00:00<00:00, 30.33it/s] 69%|######9   | 18/26 [00:00<00:00, 31.72it/s] 85%|########4 | 22/26 [00:00<00:00, 32.55it/s]100%|##########| 26/26 [00:00<00:00, 33.15it/s]100%|##########| 26/26 [00:00<00:00, 28.52it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 208 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 209 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 210 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 211 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 212 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 213 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 214 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 215 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 216 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 217 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 218 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 219 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 220 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 221 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 222 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 223 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 224 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 225 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 226 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 227 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 228 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 229 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 230 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 231 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 232 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 233 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [8][  26/  26]	Loss 0.001 (0.002)	train_nll   0.51 (  0.46)	train_penalty   0.00 (  0.00)	weight_norm  22.79 ( 22.76)	train_acc   0.70 (  0.75)	train_minacc   0.79 (  0.78)	train_majacc   0.68 (  0.74)	train_corr   0.00 (  0.00)	l1 5.7904 (6.1870)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.97it/s] 23%|##3       | 6/26 [00:00<00:00, 30.93it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.93it/s] 42%|####2     | 11/26 [00:00<00:00, 37.45it/s] 62%|######1   | 16/26 [00:00<00:00, 37.60it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.60it/s] 81%|########  | 21/26 [00:00<00:00, 40.64it/s]100%|##########| 26/26 [00:00<00:00, 43.44it/s]100%|##########| 26/26 [00:00<00:00, 36.37it/s]
Test: [   0/  26]	Loss 0.551 (0.551)	test_acc   0.66 (  0.66)	test_minacc   0.74 (  0.74)	test_majacc   0.65 (  0.65)	Loss_d 0.551 (0.551)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.40 (  0.40)
Test: [  10/  26]	Loss 0.511 (0.522)	test_acc   0.70 (  0.69)	test_minacc   0.90 (  0.80)	test_majacc   0.66 (  0.67)	Loss_d 0.511 (0.522)	test_acc_d   0.70 (  0.69)	test_minacc_d   0.90 (  0.80)	test_majacc_d   0.66 (  0.67)	test_corr_d   0.36 (  0.42)
Test: [  20/  26]	Loss 0.511 (0.520)	test_acc   0.69 (  0.69)	test_minacc   0.72 (  0.80)	test_majacc   0.69 (  0.67)	Loss_d 0.511 (0.520)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.72 (  0.80)	test_majacc_d   0.69 (  0.67)	test_corr_d   0.47 (  0.42)
Test: [  26/  26]	Loss 0.514 (0.519)	test_acc   0.70 (  0.69)	test_minacc   0.82 (  0.80)	test_majacc   0.68 (  0.67)	Loss_d 0.514 (0.519)	test_acc_d   0.70 (  0.69)	test_minacc_d   0.82 (  0.80)	test_majacc_d   0.68 (  0.67)	test_corr_d   0.42 (  0.42)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.03it/s]
Test: [  0/  1]	Loss 0.815 (0.815)	test_acc   0.68 (  0.68)	test_minacc   0.66 (  0.66)	test_majacc   0.81 (  0.81)	Loss_d 0.815 (0.815)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.81 (  0.81)	test_corr_d  -0.00 ( -0.00)
Test: [  1/  1]	Loss 0.815 (0.815)	test_acc   0.68 (  0.68)	test_minacc   0.66 (  0.66)	test_majacc   0.81 (  0.81)	Loss_d 0.815 (0.815)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.81 (  0.81)	test_corr_d  -0.00 ( -0.00)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/163/checkpoints/model_best.pth
Overall Timing[  8/  1]	epoch_time 0.0409 (0.0473)	validation_time 0.0005 (0.0011)	train_time 0.0404 (0.0457)
record: (train_acc, test_acc) (0.6924000332355499, 0.6790000200271606)
last accs (train_acc, test_acc) (0.6924000332355499, 0.6790000200271606)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.61it/s] 15%|#5        | 4/26 [00:00<00:01, 16.36it/s] 31%|###       | 8/26 [00:00<00:00, 23.47it/s] 46%|####6     | 12/26 [00:00<00:00, 27.63it/s] 62%|######1   | 16/26 [00:00<00:00, 30.15it/s] 77%|#######6  | 20/26 [00:00<00:00, 31.97it/s] 92%|#########2| 24/26 [00:00<00:00, 33.13it/s]100%|##########| 26/26 [00:00<00:00, 26.97it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 234 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 235 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 236 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 237 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 238 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 239 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 240 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 241 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 242 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 243 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 244 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 245 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 246 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 247 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 248 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 249 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 250 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 251 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 252 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 253 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 254 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 255 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 256 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 257 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 258 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 259 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [9][  26/  26]	Loss 0.000 (0.001)	train_nll   0.53 (  0.53)	train_penalty   0.00 (  0.00)	weight_norm  22.80 ( 22.79)	train_acc   0.70 (  0.68)	train_minacc   0.79 (  0.79)	train_majacc   0.68 (  0.66)	train_corr   0.00 (  0.00)	l1 5.7505 (5.7800)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.96it/s] 12%|#1        | 3/26 [00:00<00:02, 11.03it/s] 31%|###       | 8/26 [00:00<00:00, 23.30it/s]                                               31%|###       | 8/26 [00:00<00:00, 23.30it/s] 50%|#####     | 13/26 [00:00<00:00, 30.92it/s] 69%|######9   | 18/26 [00:00<00:00, 36.16it/s]                                                69%|######9   | 18/26 [00:00<00:00, 36.16it/s] 88%|########8 | 23/26 [00:00<00:00, 39.10it/s]100%|##########| 26/26 [00:00<00:00, 29.88it/s]
Test: [   0/  26]	Loss 0.560 (0.560)	test_acc   0.64 (  0.64)	test_minacc   0.74 (  0.74)	test_majacc   0.62 (  0.62)	Loss_d 0.560 (0.560)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.39 (  0.39)
Test: [  10/  26]	Loss 0.521 (0.535)	test_acc   0.69 (  0.67)	test_minacc   0.90 (  0.79)	test_majacc   0.65 (  0.65)	Loss_d 0.521 (0.535)	test_acc_d   0.69 (  0.67)	test_minacc_d   0.90 (  0.79)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.36 (  0.41)
Test: [  20/  26]	Loss 0.524 (0.533)	test_acc   0.68 (  0.67)	test_minacc   0.71 (  0.78)	test_majacc   0.67 (  0.65)	Loss_d 0.524 (0.533)	test_acc_d   0.68 (  0.67)	test_minacc_d   0.71 (  0.78)	test_majacc_d   0.67 (  0.65)	test_corr_d   0.46 (  0.41)
Test: [  26/  26]	Loss 0.533 (0.532)	test_acc   0.69 (  0.67)	test_minacc   0.82 (  0.79)	test_majacc   0.67 (  0.65)	Loss_d 0.533 (0.532)	test_acc_d   0.69 (  0.67)	test_minacc_d   0.82 (  0.79)	test_majacc_d   0.67 (  0.65)	test_corr_d   0.41 (  0.41)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.09it/s]
Test: [  0/  1]	Loss 0.824 (0.824)	test_acc   0.69 (  0.69)	test_minacc   0.68 (  0.68)	test_majacc   0.78 (  0.78)	Loss_d 0.824 (0.824)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.68 (  0.68)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.00 (  0.00)
Test: [  1/  1]	Loss 0.824 (0.824)	test_acc   0.69 (  0.69)	test_minacc   0.68 (  0.68)	test_majacc   0.78 (  0.78)	Loss_d 0.824 (0.824)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.68 (  0.68)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.00 (  0.00)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/163/checkpoints/model_best.pth
Overall Timing[  9/  1]	epoch_time 0.0433 (0.0469)	validation_time 0.0004 (0.0011)	train_time 0.0429 (0.0455)
record: (train_acc, test_acc) (0.6707000292539597, 0.6890000104904175)
last accs (train_acc, test_acc) (0.6707000292539597, 0.6890000104904175)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.72it/s] 19%|#9        | 5/26 [00:00<00:01, 19.37it/s] 35%|###4      | 9/26 [00:00<00:00, 25.02it/s] 50%|#####     | 13/26 [00:00<00:00, 28.24it/s] 65%|######5   | 17/26 [00:00<00:00, 30.32it/s] 81%|########  | 21/26 [00:00<00:00, 31.49it/s] 96%|#########6| 25/26 [00:00<00:00, 32.54it/s]100%|##########| 26/26 [00:00<00:00, 26.92it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 260 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 261 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 262 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 263 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 264 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 265 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 266 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 267 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 268 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 269 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 270 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 271 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 272 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 273 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 274 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 275 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 276 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 277 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 278 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 279 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 280 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 281 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 282 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 283 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 284 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 285 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [10][  26/  26]	Loss 0.000 (0.000)	train_nll   0.55 (  0.54)	train_penalty   0.00 (  0.00)	weight_norm  22.80 ( 22.80)	train_acc   0.67 (  0.66)	train_minacc   0.82 (  0.79)	train_majacc   0.64 (  0.64)	train_corr   0.00 (  0.00)	l1 5.7715 (5.7519)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.43it/s] 23%|##3       | 6/26 [00:00<00:00, 26.97it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.97it/s] 42%|####2     | 11/26 [00:00<00:00, 34.96it/s] 62%|######1   | 16/26 [00:00<00:00, 39.15it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.15it/s] 81%|########  | 21/26 [00:00<00:00, 39.67it/s]100%|##########| 26/26 [00:00<00:00, 35.04it/s]
Test: [   0/  26]	Loss 0.575 (0.575)	test_acc   0.63 (  0.63)	test_minacc   0.76 (  0.76)	test_majacc   0.60 (  0.60)	Loss_d 0.575 (0.575)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.76 (  0.76)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.36 (  0.36)
Test: [  10/  26]	Loss 0.535 (0.550)	test_acc   0.68 (  0.66)	test_minacc   0.87 (  0.80)	test_majacc   0.64 (  0.64)	Loss_d 0.535 (0.550)	test_acc_d   0.68 (  0.66)	test_minacc_d   0.87 (  0.80)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.33 (  0.38)
Test: [  20/  26]	Loss 0.538 (0.547)	test_acc   0.65 (  0.66)	test_minacc   0.69 (  0.79)	test_majacc   0.64 (  0.63)	Loss_d 0.538 (0.547)	test_acc_d   0.65 (  0.66)	test_minacc_d   0.69 (  0.79)	test_majacc_d   0.64 (  0.63)	test_corr_d   0.42 (  0.38)
Test: [  26/  26]	Loss 0.548 (0.546)	test_acc   0.67 (  0.66)	test_minacc   0.82 (  0.80)	test_majacc   0.64 (  0.63)	Loss_d 0.548 (0.546)	test_acc_d   0.67 (  0.66)	test_minacc_d   0.82 (  0.80)	test_majacc_d   0.64 (  0.63)	test_corr_d   0.37 (  0.38)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.10it/s]
Test: [  0/  1]	Loss 0.810 (0.810)	test_acc   0.69 (  0.69)	test_minacc   0.69 (  0.69)	test_majacc   0.76 (  0.76)	Loss_d 0.810 (0.810)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.76 (  0.76)	test_corr_d  -0.02 ( -0.02)
Test: [  1/  1]	Loss 0.810 (0.810)	test_acc   0.69 (  0.69)	test_minacc   0.69 (  0.69)	test_majacc   0.76 (  0.76)	Loss_d 0.810 (0.810)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.76 (  0.76)	test_corr_d  -0.02 ( -0.02)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/163/checkpoints/model_best.pth
Overall Timing[ 10/  1]	epoch_time 0.0402 (0.0463)	validation_time 0.0004 (0.0010)	train_time 0.0398 (0.0449)
record: (train_acc, test_acc) (0.6582000197768212, 0.6930000185966492)
last accs (train_acc, test_acc) (0.6582000197768212, 0.6930000185966492)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.24it/s] 19%|#9        | 5/26 [00:00<00:01, 18.95it/s] 35%|###4      | 9/26 [00:00<00:00, 25.49it/s] 50%|#####     | 13/26 [00:00<00:00, 28.86it/s] 65%|######5   | 17/26 [00:00<00:00, 30.83it/s] 81%|########  | 21/26 [00:00<00:00, 32.58it/s] 96%|#########6| 25/26 [00:00<00:00, 33.57it/s]100%|##########| 26/26 [00:00<00:00, 27.26it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 286 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 287 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 288 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 289 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 290 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 291 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 292 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 293 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 294 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 295 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 296 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 297 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 298 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 299 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 300 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 301 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 302 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 303 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 304 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 305 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 306 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 307 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 308 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 309 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 310 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 311 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [11][  26/  26]	Loss 0.000 (0.000)	train_nll   0.55 (  0.54)	train_penalty   0.00 (  0.00)	weight_norm  22.80 ( 22.80)	train_acc   0.67 (  0.66)	train_minacc   0.82 (  0.79)	train_majacc   0.64 (  0.64)	train_corr   0.00 (  0.00)	l1 5.7788 (5.7585)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.40it/s] 23%|##3       | 6/26 [00:00<00:00, 21.25it/s]                                               23%|##3       | 6/26 [00:00<00:00, 21.25it/s] 42%|####2     | 11/26 [00:00<00:00, 29.53it/s] 62%|######1   | 16/26 [00:00<00:00, 35.02it/s]                                                62%|######1   | 16/26 [00:00<00:00, 35.02it/s] 81%|########  | 21/26 [00:00<00:00, 36.39it/s]100%|##########| 26/26 [00:00<00:00, 39.69it/s]100%|##########| 26/26 [00:00<00:00, 30.32it/s]
Test: [   0/  26]	Loss 0.571 (0.571)	test_acc   0.63 (  0.63)	test_minacc   0.78 (  0.78)	test_majacc   0.60 (  0.60)	Loss_d 0.571 (0.571)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.78 (  0.78)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.36 (  0.36)
Test: [  10/  26]	Loss 0.537 (0.550)	test_acc   0.68 (  0.65)	test_minacc   0.87 (  0.80)	test_majacc   0.64 (  0.63)	Loss_d 0.537 (0.550)	test_acc_d   0.68 (  0.65)	test_minacc_d   0.87 (  0.80)	test_majacc_d   0.64 (  0.63)	test_corr_d   0.33 (  0.38)
Test: [  20/  26]	Loss 0.540 (0.547)	test_acc   0.65 (  0.65)	test_minacc   0.69 (  0.80)	test_majacc   0.64 (  0.63)	Loss_d 0.540 (0.547)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.69 (  0.80)	test_majacc_d   0.64 (  0.63)	test_corr_d   0.42 (  0.38)
Test: [  26/  26]	Loss 0.547 (0.546)	test_acc   0.67 (  0.65)	test_minacc   0.82 (  0.80)	test_majacc   0.64 (  0.63)	Loss_d 0.547 (0.546)	test_acc_d   0.67 (  0.65)	test_minacc_d   0.82 (  0.80)	test_majacc_d   0.64 (  0.63)	test_corr_d   0.37 (  0.38)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.58it/s]
Test: [  0/  1]	Loss 0.814 (0.814)	test_acc   0.69 (  0.69)	test_minacc   0.69 (  0.69)	test_majacc   0.76 (  0.76)	Loss_d 0.814 (0.814)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.76 (  0.76)	test_corr_d  -0.02 ( -0.02)
Test: [  1/  1]	Loss 0.814 (0.814)	test_acc   0.69 (  0.69)	test_minacc   0.69 (  0.69)	test_majacc   0.76 (  0.76)	Loss_d 0.814 (0.814)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.76 (  0.76)	test_corr_d  -0.02 ( -0.02)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/163/checkpoints/model_best.pth
Overall Timing[ 11/  1]	epoch_time 0.0419 (0.0460)	validation_time 0.0004 (0.0010)	train_time 0.0414 (0.0446)
record: (train_acc, test_acc) (0.6538000153899193, 0.6940000057220459)
last accs (train_acc, test_acc) (0.6538000153899193, 0.6940000057220459)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.96it/s] 15%|#5        | 4/26 [00:00<00:01, 20.93it/s] 31%|###       | 8/26 [00:00<00:00, 27.99it/s] 46%|####6     | 12/26 [00:00<00:00, 31.24it/s] 62%|######1   | 16/26 [00:00<00:00, 32.92it/s] 77%|#######6  | 20/26 [00:00<00:00, 33.74it/s] 92%|#########2| 24/26 [00:00<00:00, 34.05it/s]100%|##########| 26/26 [00:00<00:00, 29.53it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 312 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 313 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 314 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 315 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 316 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 317 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 318 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 319 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 320 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 321 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 322 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 323 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 324 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 325 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 326 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 327 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 328 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 329 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 330 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 331 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 332 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 333 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 334 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 335 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 336 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 337 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [12][  26/  26]	Loss 0.000 (0.000)	train_nll   0.54 (  0.54)	train_penalty   0.00 (  0.00)	weight_norm  22.80 ( 22.80)	train_acc   0.67 (  0.66)	train_minacc   0.82 (  0.80)	train_majacc   0.64 (  0.63)	train_corr   0.00 (  0.00)	l1 5.7970 (5.7801)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.72it/s] 15%|#5        | 4/26 [00:00<00:01, 18.39it/s] 35%|###4      | 9/26 [00:00<00:00, 30.44it/s]                                               35%|###4      | 9/26 [00:00<00:00, 30.44it/s] 54%|#####3    | 14/26 [00:00<00:00, 33.79it/s] 73%|#######3  | 19/26 [00:00<00:00, 37.10it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 37.10it/s] 92%|#########2| 24/26 [00:00<00:00, 40.29it/s]100%|##########| 26/26 [00:00<00:00, 32.83it/s]
Test: [   0/  26]	Loss 0.563 (0.563)	test_acc   0.64 (  0.64)	test_minacc   0.78 (  0.78)	test_majacc   0.61 (  0.61)	Loss_d 0.563 (0.563)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.78 (  0.78)	test_majacc_d   0.61 (  0.61)	test_corr_d   0.37 (  0.37)
Test: [  10/  26]	Loss 0.535 (0.547)	test_acc   0.68 (  0.65)	test_minacc   0.87 (  0.80)	test_majacc   0.64 (  0.63)	Loss_d 0.535 (0.547)	test_acc_d   0.68 (  0.65)	test_minacc_d   0.87 (  0.80)	test_majacc_d   0.64 (  0.63)	test_corr_d   0.34 (  0.38)
Test: [  20/  26]	Loss 0.536 (0.543)	test_acc   0.64 (  0.65)	test_minacc   0.71 (  0.80)	test_majacc   0.63 (  0.63)	Loss_d 0.536 (0.543)	test_acc_d   0.64 (  0.65)	test_minacc_d   0.71 (  0.80)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.43 (  0.39)
Test: [  26/  26]	Loss 0.542 (0.542)	test_acc   0.67 (  0.65)	test_minacc   0.82 (  0.80)	test_majacc   0.64 (  0.63)	Loss_d 0.542 (0.542)	test_acc_d   0.67 (  0.65)	test_minacc_d   0.82 (  0.80)	test_majacc_d   0.64 (  0.63)	test_corr_d   0.38 (  0.39)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.69it/s]
Test: [  0/  1]	Loss 0.824 (0.824)	test_acc   0.69 (  0.69)	test_minacc   0.69 (  0.69)	test_majacc   0.76 (  0.76)	Loss_d 0.824 (0.824)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.76 (  0.76)	test_corr_d  -0.00 ( -0.00)
Test: [  1/  1]	Loss 0.824 (0.824)	test_acc   0.69 (  0.69)	test_minacc   0.69 (  0.69)	test_majacc   0.76 (  0.76)	Loss_d 0.824 (0.824)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.76 (  0.76)	test_corr_d  -0.00 ( -0.00)
Overall Timing[ 12/  1]	epoch_time 0.0377 (0.0453)	validation_time 0.0003 (0.0009)	train_time 0.0373 (0.0441)
record: (train_acc, test_acc) (0.6538000153899193, 0.6940000057220459)
last accs (train_acc, test_acc) (0.6541000188589096, 0.6940000057220459)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.36it/s] 15%|#5        | 4/26 [00:00<00:01, 19.17it/s] 31%|###       | 8/26 [00:00<00:00, 26.44it/s] 46%|####6     | 12/26 [00:00<00:00, 30.34it/s] 62%|######1   | 16/26 [00:00<00:00, 32.61it/s] 77%|#######6  | 20/26 [00:00<00:00, 34.04it/s] 92%|#########2| 24/26 [00:00<00:00, 34.61it/s]100%|##########| 26/26 [00:00<00:00, 29.01it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 338 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 339 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 340 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 341 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 342 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 343 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 344 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 345 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 346 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 347 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 348 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 349 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 350 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 351 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 352 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 353 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 354 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 355 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 356 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 357 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 358 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 359 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 360 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 361 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 362 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 363 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [13][  26/  26]	Loss 0.000 (0.000)	train_nll   0.54 (  0.54)	train_penalty   0.00 (  0.00)	weight_norm  22.80 ( 22.80)	train_acc   0.67 (  0.66)	train_minacc   0.82 (  0.81)	train_majacc   0.64 (  0.63)	train_corr   0.00 (  0.00)	l1 5.8193 (5.8059)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.13it/s] 23%|##3       | 6/26 [00:00<00:00, 26.07it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.07it/s] 42%|####2     | 11/26 [00:00<00:00, 33.45it/s] 62%|######1   | 16/26 [00:00<00:00, 38.15it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.15it/s] 81%|########  | 21/26 [00:00<00:00, 37.57it/s]100%|##########| 26/26 [00:00<00:00, 40.64it/s]100%|##########| 26/26 [00:00<00:00, 32.94it/s]
Test: [   0/  26]	Loss 0.557 (0.557)	test_acc   0.65 (  0.65)	test_minacc   0.78 (  0.78)	test_majacc   0.62 (  0.62)	Loss_d 0.557 (0.557)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.78 (  0.78)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.38 (  0.38)
Test: [  10/  26]	Loss 0.533 (0.544)	test_acc   0.68 (  0.65)	test_minacc   0.87 (  0.81)	test_majacc   0.64 (  0.63)	Loss_d 0.533 (0.544)	test_acc_d   0.68 (  0.65)	test_minacc_d   0.87 (  0.81)	test_majacc_d   0.64 (  0.63)	test_corr_d   0.34 (  0.39)
Test: [  20/  26]	Loss 0.533 (0.540)	test_acc   0.64 (  0.65)	test_minacc   0.72 (  0.81)	test_majacc   0.63 (  0.63)	Loss_d 0.533 (0.540)	test_acc_d   0.64 (  0.65)	test_minacc_d   0.72 (  0.81)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.44 (  0.39)
Test: [  26/  26]	Loss 0.538 (0.539)	test_acc   0.67 (  0.65)	test_minacc   0.82 (  0.81)	test_majacc   0.64 (  0.63)	Loss_d 0.538 (0.539)	test_acc_d   0.67 (  0.65)	test_minacc_d   0.82 (  0.81)	test_majacc_d   0.64 (  0.63)	test_corr_d   0.39 (  0.39)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 54.20it/s]
Test: [  0/  1]	Loss 0.832 (0.832)	test_acc   0.70 (  0.70)	test_minacc   0.69 (  0.69)	test_majacc   0.77 (  0.77)	Loss_d 0.832 (0.832)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.00 (  0.00)
Test: [  1/  1]	Loss 0.832 (0.832)	test_acc   0.70 (  0.70)	test_minacc   0.69 (  0.69)	test_majacc   0.77 (  0.77)	Loss_d 0.832 (0.832)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.00 (  0.00)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/163/checkpoints/model_best.pth
Overall Timing[ 13/  1]	epoch_time 0.0393 (0.0449)	validation_time 0.0006 (0.0009)	train_time 0.0387 (0.0437)
record: (train_acc, test_acc) (0.6540000200271606, 0.6990000605583191)
last accs (train_acc, test_acc) (0.6540000200271606, 0.6990000605583191)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.95it/s] 19%|#9        | 5/26 [00:00<00:00, 25.61it/s] 35%|###4      | 9/26 [00:00<00:00, 29.38it/s] 50%|#####     | 13/26 [00:00<00:00, 31.36it/s] 65%|######5   | 17/26 [00:00<00:00, 32.99it/s] 81%|########  | 21/26 [00:00<00:00, 34.09it/s] 96%|#########6| 25/26 [00:00<00:00, 34.17it/s]100%|##########| 26/26 [00:00<00:00, 29.96it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 364 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 365 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 366 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 367 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 368 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 369 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 370 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 371 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 372 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 373 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 374 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 375 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 376 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 377 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 378 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 379 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 380 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 381 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 382 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 383 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 384 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 385 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 386 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 387 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 388 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 389 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [14][  26/  26]	Loss 0.000 (0.000)	train_nll   0.54 (  0.54)	train_penalty   0.00 (  0.00)	weight_norm  22.80 ( 22.80)	train_acc   0.66 (  0.65)	train_minacc   0.82 (  0.81)	train_majacc   0.64 (  0.63)	train_corr   0.00 (  0.00)	l1 5.8421 (5.8304)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.76it/s] 27%|##6       | 7/26 [00:00<00:00, 35.55it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.55it/s] 46%|####6     | 12/26 [00:00<00:00, 40.10it/s] 65%|######5   | 17/26 [00:00<00:00, 42.92it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.92it/s] 85%|########4 | 22/26 [00:00<00:00, 41.26it/s]100%|##########| 26/26 [00:00<00:00, 38.00it/s]
Test: [   0/  26]	Loss 0.552 (0.552)	test_acc   0.66 (  0.66)	test_minacc   0.78 (  0.78)	test_majacc   0.64 (  0.64)	Loss_d 0.552 (0.552)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.78 (  0.78)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.39 (  0.39)
Test: [  10/  26]	Loss 0.533 (0.542)	test_acc   0.67 (  0.65)	test_minacc   0.87 (  0.81)	test_majacc   0.63 (  0.63)	Loss_d 0.533 (0.542)	test_acc_d   0.67 (  0.65)	test_minacc_d   0.87 (  0.81)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.35 (  0.40)
Test: [  20/  26]	Loss 0.530 (0.538)	test_acc   0.65 (  0.65)	test_minacc   0.72 (  0.81)	test_majacc   0.63 (  0.62)	Loss_d 0.530 (0.538)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.72 (  0.81)	test_majacc_d   0.63 (  0.62)	test_corr_d   0.44 (  0.40)
Test: [  26/  26]	Loss 0.536 (0.537)	test_acc   0.66 (  0.65)	test_minacc   0.82 (  0.81)	test_majacc   0.64 (  0.63)	Loss_d 0.536 (0.537)	test_acc_d   0.66 (  0.65)	test_minacc_d   0.82 (  0.81)	test_majacc_d   0.64 (  0.63)	test_corr_d   0.39 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.22it/s]
Test: [  0/  1]	Loss 0.838 (0.838)	test_acc   0.70 (  0.70)	test_minacc   0.69 (  0.69)	test_majacc   0.77 (  0.77)	Loss_d 0.838 (0.838)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.01 (  0.01)
Test: [  1/  1]	Loss 0.838 (0.838)	test_acc   0.70 (  0.70)	test_minacc   0.69 (  0.69)	test_majacc   0.77 (  0.77)	Loss_d 0.838 (0.838)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.01 (  0.01)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/163/checkpoints/model_best.pth
Overall Timing[ 14/  1]	epoch_time 0.0434 (0.0448)	validation_time 0.0004 (0.0009)	train_time 0.0429 (0.0436)
record: (train_acc, test_acc) (0.6534000210165978, 0.7010000348091125)
last accs (train_acc, test_acc) (0.6534000210165978, 0.7010000348091125)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.29it/s] 23%|##3       | 6/26 [00:00<00:00, 27.96it/s] 38%|###8      | 10/26 [00:00<00:00, 30.66it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.46it/s] 69%|######9   | 18/26 [00:00<00:00, 33.14it/s] 85%|########4 | 22/26 [00:00<00:00, 33.48it/s]100%|##########| 26/26 [00:00<00:00, 33.51it/s]100%|##########| 26/26 [00:00<00:00, 29.58it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 390 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 391 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 392 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 393 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 394 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 395 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 396 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 397 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 398 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 399 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 400 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 401 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 402 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 403 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 404 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 405 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 406 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 407 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 408 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 409 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 410 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 411 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 412 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 413 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 414 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 415 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [15][  26/  26]	Loss 0.000 (0.000)	train_nll   0.53 (  0.54)	train_penalty   0.00 (  0.00)	weight_norm  22.80 ( 22.80)	train_acc   0.66 (  0.65)	train_minacc   0.82 (  0.81)	train_majacc   0.63 (  0.63)	train_corr   0.00 (  0.00)	l1 5.8656 (5.8531)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.11it/s] 27%|##6       | 7/26 [00:00<00:00, 33.95it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.95it/s] 46%|####6     | 12/26 [00:00<00:00, 39.67it/s] 65%|######5   | 17/26 [00:00<00:00, 40.02it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.02it/s] 85%|########4 | 22/26 [00:00<00:00, 41.05it/s]100%|##########| 26/26 [00:00<00:00, 36.81it/s]
Test: [   0/  26]	Loss 0.548 (0.548)	test_acc   0.66 (  0.66)	test_minacc   0.78 (  0.78)	test_majacc   0.64 (  0.64)	Loss_d 0.548 (0.548)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.78 (  0.78)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.39 (  0.39)
Test: [  10/  26]	Loss 0.534 (0.540)	test_acc   0.66 (  0.65)	test_minacc   0.87 (  0.81)	test_majacc   0.62 (  0.63)	Loss_d 0.534 (0.540)	test_acc_d   0.66 (  0.65)	test_minacc_d   0.87 (  0.81)	test_majacc_d   0.62 (  0.63)	test_corr_d   0.35 (  0.40)
Test: [  20/  26]	Loss 0.527 (0.536)	test_acc   0.65 (  0.65)	test_minacc   0.72 (  0.81)	test_majacc   0.64 (  0.62)	Loss_d 0.527 (0.536)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.72 (  0.81)	test_majacc_d   0.64 (  0.62)	test_corr_d   0.45 (  0.40)
Test: [  26/  26]	Loss 0.534 (0.535)	test_acc   0.66 (  0.65)	test_minacc   0.82 (  0.81)	test_majacc   0.63 (  0.62)	Loss_d 0.534 (0.535)	test_acc_d   0.66 (  0.65)	test_minacc_d   0.82 (  0.81)	test_majacc_d   0.63 (  0.62)	test_corr_d   0.40 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.98it/s]
Test: [  0/  1]	Loss 0.843 (0.843)	test_acc   0.70 (  0.70)	test_minacc   0.69 (  0.69)	test_majacc   0.78 (  0.78)	Loss_d 0.843 (0.843)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.01 (  0.01)
Test: [  1/  1]	Loss 0.843 (0.843)	test_acc   0.70 (  0.70)	test_minacc   0.69 (  0.69)	test_majacc   0.78 (  0.78)	Loss_d 0.843 (0.843)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.01 (  0.01)
Overall Timing[ 15/  1]	epoch_time 0.0437 (0.0447)	validation_time 0.0004 (0.0008)	train_time 0.0433 (0.0436)
record: (train_acc, test_acc) (0.6534000210165978, 0.7010000348091125)
last accs (train_acc, test_acc) (0.6524000173807144, 0.7010000348091125)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.90it/s] 23%|##3       | 6/26 [00:00<00:00, 27.66it/s] 38%|###8      | 10/26 [00:00<00:00, 30.93it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.36it/s] 69%|######9   | 18/26 [00:00<00:00, 33.38it/s] 85%|########4 | 22/26 [00:00<00:00, 33.47it/s]100%|##########| 26/26 [00:00<00:00, 33.77it/s]100%|##########| 26/26 [00:00<00:00, 29.59it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 416 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 417 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 418 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 419 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 420 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 421 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 422 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 423 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 424 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 425 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 426 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 427 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 428 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 429 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 430 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 431 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 432 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 433 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 434 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 435 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 436 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 437 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 438 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 439 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 440 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 441 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [16][  26/  26]	Loss 0.000 (0.000)	train_nll   0.53 (  0.53)	train_penalty   0.00 (  0.00)	weight_norm  22.81 ( 22.81)	train_acc   0.67 (  0.65)	train_minacc   0.82 (  0.81)	train_majacc   0.64 (  0.62)	train_corr   0.00 (  0.00)	l1 5.8891 (5.8740)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02, 11.27it/s] 27%|##6       | 7/26 [00:00<00:00, 27.13it/s]                                               27%|##6       | 7/26 [00:00<00:00, 27.13it/s] 46%|####6     | 12/26 [00:00<00:00, 34.55it/s] 65%|######5   | 17/26 [00:00<00:00, 38.30it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.30it/s] 85%|########4 | 22/26 [00:00<00:00, 38.42it/s]100%|##########| 26/26 [00:00<00:00, 33.74it/s]
Test: [   0/  26]	Loss 0.546 (0.546)	test_acc   0.66 (  0.66)	test_minacc   0.78 (  0.78)	test_majacc   0.64 (  0.64)	Loss_d 0.546 (0.546)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.78 (  0.78)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.39 (  0.39)
Test: [  10/  26]	Loss 0.535 (0.540)	test_acc   0.66 (  0.65)	test_minacc   0.87 (  0.81)	test_majacc   0.61 (  0.62)	Loss_d 0.535 (0.540)	test_acc_d   0.66 (  0.65)	test_minacc_d   0.87 (  0.81)	test_majacc_d   0.61 (  0.62)	test_corr_d   0.35 (  0.40)
Test: [  20/  26]	Loss 0.525 (0.535)	test_acc   0.65 (  0.65)	test_minacc   0.74 (  0.81)	test_majacc   0.64 (  0.62)	Loss_d 0.525 (0.535)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.74 (  0.81)	test_majacc_d   0.64 (  0.62)	test_corr_d   0.45 (  0.40)
Test: [  26/  26]	Loss 0.533 (0.534)	test_acc   0.67 (  0.65)	test_minacc   0.82 (  0.82)	test_majacc   0.64 (  0.62)	Loss_d 0.533 (0.534)	test_acc_d   0.67 (  0.65)	test_minacc_d   0.82 (  0.82)	test_majacc_d   0.64 (  0.62)	test_corr_d   0.40 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.49it/s]
Test: [  0/  1]	Loss 0.847 (0.847)	test_acc   0.70 (  0.70)	test_minacc   0.70 (  0.70)	test_majacc   0.78 (  0.78)	Loss_d 0.847 (0.847)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.01 (  0.01)
Test: [  1/  1]	Loss 0.847 (0.847)	test_acc   0.70 (  0.70)	test_minacc   0.70 (  0.70)	test_majacc   0.78 (  0.78)	Loss_d 0.847 (0.847)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.01 (  0.01)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/163/checkpoints/model_best.pth
Overall Timing[ 16/  1]	epoch_time 0.0417 (0.0445)	validation_time 0.0003 (0.0008)	train_time 0.0413 (0.0435)
record: (train_acc, test_acc) (0.652500018954277, 0.7040000557899475)
last accs (train_acc, test_acc) (0.652500018954277, 0.7040000557899475)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.58it/s]  8%|7         | 2/26 [00:00<00:03,  6.82it/s] 23%|##3       | 6/26 [00:00<00:01, 17.92it/s] 38%|###8      | 10/26 [00:00<00:00, 24.30it/s] 54%|#####3    | 14/26 [00:00<00:00, 28.07it/s] 69%|######9   | 18/26 [00:00<00:00, 30.34it/s] 85%|########4 | 22/26 [00:00<00:00, 31.17it/s]100%|##########| 26/26 [00:00<00:00, 32.55it/s]100%|##########| 26/26 [00:01<00:00, 24.70it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 442 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 443 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 444 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 445 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 446 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 447 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 448 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 449 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 450 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 451 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 452 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 453 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 454 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 455 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 456 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 457 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 458 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 459 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 460 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 461 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 462 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 463 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 464 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 465 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 466 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 467 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [17][  26/  26]	Loss 0.000 (0.000)	train_nll   0.53 (  0.53)	train_penalty   0.00 (  0.00)	weight_norm  22.81 ( 22.81)	train_acc   0.67 (  0.65)	train_minacc   0.82 (  0.82)	train_majacc   0.64 (  0.62)	train_corr   0.00 (  0.00)	l1 5.9119 (5.8923)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.43it/s] 12%|#1        | 3/26 [00:00<00:01, 14.65it/s] 31%|###       | 8/26 [00:00<00:00, 28.35it/s]                                               31%|###       | 8/26 [00:00<00:00, 28.35it/s] 50%|#####     | 13/26 [00:00<00:00, 34.67it/s] 69%|######9   | 18/26 [00:00<00:00, 36.96it/s]                                                69%|######9   | 18/26 [00:00<00:00, 36.96it/s] 88%|########8 | 23/26 [00:00<00:00, 39.68it/s]100%|##########| 26/26 [00:00<00:00, 32.67it/s]
Test: [   0/  26]	Loss 0.544 (0.544)	test_acc   0.65 (  0.65)	test_minacc   0.76 (  0.76)	test_majacc   0.63 (  0.63)	Loss_d 0.544 (0.544)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.76 (  0.76)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.39 (  0.39)
Test: [  10/  26]	Loss 0.536 (0.540)	test_acc   0.66 (  0.65)	test_minacc   0.87 (  0.81)	test_majacc   0.61 (  0.62)	Loss_d 0.536 (0.540)	test_acc_d   0.66 (  0.65)	test_minacc_d   0.87 (  0.81)	test_majacc_d   0.61 (  0.62)	test_corr_d   0.35 (  0.40)
Test: [  20/  26]	Loss 0.524 (0.535)	test_acc   0.65 (  0.65)	test_minacc   0.74 (  0.82)	test_majacc   0.64 (  0.62)	Loss_d 0.524 (0.535)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.74 (  0.82)	test_majacc_d   0.64 (  0.62)	test_corr_d   0.45 (  0.40)
Test: [  26/  26]	Loss 0.532 (0.534)	test_acc   0.67 (  0.65)	test_minacc   0.82 (  0.82)	test_majacc   0.64 (  0.62)	Loss_d 0.532 (0.534)	test_acc_d   0.67 (  0.65)	test_minacc_d   0.82 (  0.82)	test_majacc_d   0.64 (  0.62)	test_corr_d   0.40 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.27it/s]
Test: [  0/  1]	Loss 0.850 (0.850)	test_acc   0.70 (  0.70)	test_minacc   0.69 (  0.69)	test_majacc   0.78 (  0.78)	Loss_d 0.850 (0.850)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.01 (  0.01)
Test: [  1/  1]	Loss 0.850 (0.850)	test_acc   0.70 (  0.70)	test_minacc   0.69 (  0.69)	test_majacc   0.78 (  0.78)	Loss_d 0.850 (0.850)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.01 (  0.01)
Overall Timing[ 17/  1]	epoch_time 0.0421 (0.0444)	validation_time 0.0004 (0.0008)	train_time 0.0416 (0.0434)
record: (train_acc, test_acc) (0.652500018954277, 0.7040000557899475)
last accs (train_acc, test_acc) (0.6527000203132629, 0.703000009059906)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 26.21it/s] 23%|##3       | 6/26 [00:00<00:00, 23.70it/s] 38%|###8      | 10/26 [00:00<00:00, 28.79it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.34it/s] 69%|######9   | 18/26 [00:00<00:00, 33.23it/s] 85%|########4 | 22/26 [00:00<00:00, 34.93it/s]100%|##########| 26/26 [00:00<00:00, 35.00it/s]100%|##########| 26/26 [00:00<00:00, 30.31it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 468 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 469 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 470 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 471 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 472 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 473 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 474 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 475 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 476 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 477 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 478 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 479 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 480 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 481 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 482 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 483 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 484 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 485 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 486 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 487 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 488 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 489 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 490 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 491 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 492 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 493 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [18][  26/  26]	Loss 0.000 (0.000)	train_nll   0.53 (  0.53)	train_penalty   0.00 (  0.00)	weight_norm  22.81 ( 22.81)	train_acc   0.67 (  0.66)	train_minacc   0.82 (  0.82)	train_majacc   0.64 (  0.63)	train_corr   0.00 (  0.00)	l1 5.9322 (5.9089)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.98it/s] 23%|##3       | 6/26 [00:00<00:00, 29.68it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.68it/s] 42%|####2     | 11/26 [00:00<00:00, 36.77it/s] 62%|######1   | 16/26 [00:00<00:00, 40.89it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.89it/s] 81%|########  | 21/26 [00:00<00:00, 40.25it/s]100%|##########| 26/26 [00:00<00:00, 42.82it/s]100%|##########| 26/26 [00:00<00:00, 35.53it/s]
Test: [   0/  26]	Loss 0.542 (0.542)	test_acc   0.65 (  0.65)	test_minacc   0.76 (  0.76)	test_majacc   0.64 (  0.64)	Loss_d 0.542 (0.542)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.76 (  0.76)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.39 (  0.39)
Test: [  10/  26]	Loss 0.537 (0.541)	test_acc   0.66 (  0.65)	test_minacc   0.87 (  0.81)	test_majacc   0.61 (  0.62)	Loss_d 0.537 (0.541)	test_acc_d   0.66 (  0.65)	test_minacc_d   0.87 (  0.81)	test_majacc_d   0.61 (  0.62)	test_corr_d   0.34 (  0.39)
Test: [  20/  26]	Loss 0.523 (0.535)	test_acc   0.66 (  0.65)	test_minacc   0.74 (  0.82)	test_majacc   0.64 (  0.62)	Loss_d 0.523 (0.535)	test_acc_d   0.66 (  0.65)	test_minacc_d   0.74 (  0.82)	test_majacc_d   0.64 (  0.62)	test_corr_d   0.45 (  0.40)
Test: [  26/  26]	Loss 0.531 (0.534)	test_acc   0.67 (  0.65)	test_minacc   0.82 (  0.82)	test_majacc   0.64 (  0.62)	Loss_d 0.531 (0.534)	test_acc_d   0.67 (  0.65)	test_minacc_d   0.82 (  0.82)	test_majacc_d   0.64 (  0.62)	test_corr_d   0.39 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.20it/s]
Test: [  0/  1]	Loss 0.852 (0.852)	test_acc   0.70 (  0.70)	test_minacc   0.69 (  0.69)	test_majacc   0.78 (  0.78)	Loss_d 0.852 (0.852)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.01 (  0.01)
Test: [  1/  1]	Loss 0.852 (0.852)	test_acc   0.70 (  0.70)	test_minacc   0.69 (  0.69)	test_majacc   0.78 (  0.78)	Loss_d 0.852 (0.852)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.01 (  0.01)
Overall Timing[ 18/  1]	epoch_time 0.0403 (0.0442)	validation_time 0.0004 (0.0008)	train_time 0.0399 (0.0432)
record: (train_acc, test_acc) (0.652500018954277, 0.7040000557899475)
last accs (train_acc, test_acc) (0.653600016772747, 0.703000009059906)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.34it/s] 19%|#9        | 5/26 [00:00<00:01, 18.67it/s] 35%|###4      | 9/26 [00:00<00:00, 24.84it/s] 50%|#####     | 13/26 [00:00<00:00, 27.88it/s] 65%|######5   | 17/26 [00:00<00:00, 29.54it/s] 81%|########  | 21/26 [00:00<00:00, 30.57it/s] 96%|#########6| 25/26 [00:00<00:00, 31.80it/s]100%|##########| 26/26 [00:00<00:00, 26.23it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 494 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 495 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 496 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 497 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 498 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 499 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 500 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 501 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 502 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 503 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 504 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 505 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 506 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 507 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 508 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 509 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 510 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 511 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 512 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 513 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 514 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 515 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 516 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 517 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 518 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 519 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [19][  26/  26]	Loss 0.000 (0.000)	train_nll   0.53 (  0.53)	train_penalty   0.00 (  0.00)	weight_norm  22.81 ( 22.81)	train_acc   0.66 (  0.66)	train_minacc   0.82 (  0.82)	train_majacc   0.63 (  0.63)	train_corr   0.00 (  0.00)	l1 5.9481 (5.9235)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.19it/s] 23%|##3       | 6/26 [00:00<00:00, 32.01it/s]                                               23%|##3       | 6/26 [00:00<00:00, 32.01it/s] 42%|####2     | 11/26 [00:00<00:00, 37.30it/s] 62%|######1   | 16/26 [00:00<00:00, 40.73it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.73it/s] 81%|########  | 21/26 [00:00<00:00, 39.65it/s]100%|##########| 26/26 [00:00<00:00, 42.25it/s]100%|##########| 26/26 [00:00<00:00, 35.71it/s]
Test: [   0/  26]	Loss 0.541 (0.541)	test_acc   0.66 (  0.66)	test_minacc   0.78 (  0.78)	test_majacc   0.64 (  0.64)	Loss_d 0.541 (0.541)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.78 (  0.78)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.40 (  0.40)
Test: [  10/  26]	Loss 0.538 (0.541)	test_acc   0.65 (  0.65)	test_minacc   0.87 (  0.82)	test_majacc   0.61 (  0.62)	Loss_d 0.538 (0.541)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.87 (  0.82)	test_majacc_d   0.61 (  0.62)	test_corr_d   0.34 (  0.39)
Test: [  20/  26]	Loss 0.522 (0.535)	test_acc   0.66 (  0.65)	test_minacc   0.76 (  0.82)	test_majacc   0.64 (  0.62)	Loss_d 0.522 (0.535)	test_acc_d   0.66 (  0.65)	test_minacc_d   0.76 (  0.82)	test_majacc_d   0.64 (  0.62)	test_corr_d   0.45 (  0.40)
Test: [  26/  26]	Loss 0.530 (0.533)	test_acc   0.66 (  0.65)	test_minacc   0.82 (  0.82)	test_majacc   0.63 (  0.62)	Loss_d 0.530 (0.533)	test_acc_d   0.66 (  0.65)	test_minacc_d   0.82 (  0.82)	test_majacc_d   0.63 (  0.62)	test_corr_d   0.40 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.87it/s]
Test: [  0/  1]	Loss 0.855 (0.855)	test_acc   0.70 (  0.70)	test_minacc   0.70 (  0.70)	test_majacc   0.78 (  0.78)	Loss_d 0.855 (0.855)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.01 (  0.01)
Test: [  1/  1]	Loss 0.855 (0.855)	test_acc   0.70 (  0.70)	test_minacc   0.70 (  0.70)	test_majacc   0.78 (  0.78)	Loss_d 0.855 (0.855)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.01 (  0.01)
Overall Timing[ 19/  1]	epoch_time 0.0433 (0.0441)	validation_time 0.0003 (0.0007)	train_time 0.0429 (0.0432)
record: (train_acc, test_acc) (0.652500018954277, 0.7040000557899475)
last accs (train_acc, test_acc) (0.6536000173091888, 0.7040000557899475)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.59it/s] 15%|#5        | 4/26 [00:00<00:01, 17.70it/s] 31%|###       | 8/26 [00:00<00:00, 24.86it/s] 46%|####6     | 12/26 [00:00<00:00, 27.84it/s] 62%|######1   | 16/26 [00:00<00:00, 29.97it/s] 77%|#######6  | 20/26 [00:00<00:00, 31.50it/s] 92%|#########2| 24/26 [00:00<00:00, 32.84it/s]100%|##########| 26/26 [00:00<00:00, 27.68it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 520 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 521 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 522 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 523 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 524 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 525 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 526 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 527 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 528 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 529 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 530 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 531 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 532 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 533 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 534 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 535 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 536 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 537 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 538 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 539 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 540 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 541 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 542 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 543 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 544 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 545 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [20][  26/  26]	Loss 0.000 (0.000)	train_nll   0.53 (  0.53)	train_penalty   0.00 (  0.00)	weight_norm  22.81 ( 22.81)	train_acc   0.67 (  0.66)	train_minacc   0.82 (  0.82)	train_majacc   0.64 (  0.63)	train_corr   0.00 (  0.00)	l1 5.9580 (5.9362)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.39it/s] 27%|##6       | 7/26 [00:00<00:00, 34.46it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.46it/s] 46%|####6     | 12/26 [00:00<00:00, 39.60it/s] 65%|######5   | 17/26 [00:00<00:00, 41.99it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.99it/s] 85%|########4 | 22/26 [00:00<00:00, 40.57it/s]100%|##########| 26/26 [00:00<00:00, 37.74it/s]
Test: [   0/  26]	Loss 0.537 (0.537)	test_acc   0.66 (  0.66)	test_minacc   0.78 (  0.78)	test_majacc   0.64 (  0.64)	Loss_d 0.537 (0.537)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.78 (  0.78)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.40 (  0.40)
Test: [  10/  26]	Loss 0.539 (0.539)	test_acc   0.65 (  0.65)	test_minacc   0.87 (  0.82)	test_majacc   0.61 (  0.62)	Loss_d 0.539 (0.539)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.87 (  0.82)	test_majacc_d   0.61 (  0.62)	test_corr_d   0.34 (  0.40)
Test: [  20/  26]	Loss 0.520 (0.534)	test_acc   0.66 (  0.65)	test_minacc   0.76 (  0.82)	test_majacc   0.64 (  0.62)	Loss_d 0.520 (0.534)	test_acc_d   0.66 (  0.65)	test_minacc_d   0.76 (  0.82)	test_majacc_d   0.64 (  0.62)	test_corr_d   0.45 (  0.40)
Test: [  26/  26]	Loss 0.527 (0.532)	test_acc   0.67 (  0.65)	test_minacc   0.82 (  0.83)	test_majacc   0.64 (  0.62)	Loss_d 0.527 (0.532)	test_acc_d   0.67 (  0.65)	test_minacc_d   0.82 (  0.83)	test_majacc_d   0.64 (  0.62)	test_corr_d   0.40 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.63it/s]
Test: [  0/  1]	Loss 0.858 (0.858)	test_acc   0.70 (  0.70)	test_minacc   0.69 (  0.69)	test_majacc   0.78 (  0.78)	Loss_d 0.858 (0.858)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.00 (  0.00)
Test: [  1/  1]	Loss 0.858 (0.858)	test_acc   0.70 (  0.70)	test_minacc   0.69 (  0.69)	test_majacc   0.78 (  0.78)	Loss_d 0.858 (0.858)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.00 (  0.00)
Overall Timing[ 20/  1]	epoch_time 0.0420 (0.0440)	validation_time 0.0005 (0.0007)	train_time 0.0415 (0.0431)
record: (train_acc, test_acc) (0.652500018954277, 0.7040000557899475)
last accs (train_acc, test_acc) (0.6547000201940536, 0.7020000219345093)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.53it/s] 19%|#9        | 5/26 [00:00<00:00, 24.88it/s] 35%|###4      | 9/26 [00:00<00:00, 30.53it/s] 50%|#####     | 13/26 [00:00<00:00, 31.97it/s] 65%|######5   | 17/26 [00:00<00:00, 32.19it/s] 81%|########  | 21/26 [00:00<00:00, 32.70it/s] 96%|#########6| 25/26 [00:00<00:00, 33.21it/s]100%|##########| 26/26 [00:00<00:00, 29.32it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 546 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 547 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 548 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 549 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 550 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 551 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 552 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 553 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 554 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 555 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 556 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 557 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 558 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 559 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 560 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 561 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 562 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 563 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 564 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 565 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 566 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 567 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 568 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 569 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 570 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 571 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [21][  26/  26]	Loss 0.000 (0.000)	train_nll   0.52 (  0.53)	train_penalty   0.00 (  0.00)	weight_norm  22.81 ( 22.81)	train_acc   0.67 (  0.66)	train_minacc   0.82 (  0.83)	train_majacc   0.64 (  0.63)	train_corr   0.00 (  0.00)	l1 5.9611 (5.9465)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 20.85it/s] 35%|###4      | 9/26 [00:00<00:00, 40.18it/s]                                               35%|###4      | 9/26 [00:00<00:00, 40.18it/s] 54%|#####3    | 14/26 [00:00<00:00, 43.20it/s] 73%|#######3  | 19/26 [00:00<00:00, 41.86it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 41.86it/s] 96%|#########6| 25/26 [00:00<00:00, 45.83it/s]100%|##########| 26/26 [00:00<00:00, 39.17it/s]
Test: [   0/  26]	Loss 0.533 (0.533)	test_acc   0.66 (  0.66)	test_minacc   0.78 (  0.78)	test_majacc   0.65 (  0.65)	Loss_d 0.533 (0.533)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.78 (  0.78)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.41 (  0.41)
Test: [  10/  26]	Loss 0.538 (0.536)	test_acc   0.65 (  0.65)	test_minacc   0.87 (  0.82)	test_majacc   0.61 (  0.62)	Loss_d 0.538 (0.536)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.87 (  0.82)	test_majacc_d   0.61 (  0.62)	test_corr_d   0.34 (  0.40)
Test: [  20/  26]	Loss 0.515 (0.531)	test_acc   0.66 (  0.65)	test_minacc   0.76 (  0.83)	test_majacc   0.65 (  0.62)	Loss_d 0.515 (0.531)	test_acc_d   0.66 (  0.65)	test_minacc_d   0.76 (  0.83)	test_majacc_d   0.65 (  0.62)	test_corr_d   0.46 (  0.40)
Test: [  26/  26]	Loss 0.523 (0.529)	test_acc   0.67 (  0.66)	test_minacc   0.82 (  0.83)	test_majacc   0.64 (  0.63)	Loss_d 0.523 (0.529)	test_acc_d   0.67 (  0.66)	test_minacc_d   0.82 (  0.83)	test_majacc_d   0.64 (  0.63)	test_corr_d   0.41 (  0.41)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.21it/s]
Test: [  0/  1]	Loss 0.860 (0.860)	test_acc   0.70 (  0.70)	test_minacc   0.69 (  0.69)	test_majacc   0.78 (  0.78)	Loss_d 0.860 (0.860)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.01 (  0.01)
Test: [  1/  1]	Loss 0.860 (0.860)	test_acc   0.70 (  0.70)	test_minacc   0.69 (  0.69)	test_majacc   0.78 (  0.78)	Loss_d 0.860 (0.860)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.01 (  0.01)
Overall Timing[ 21/  1]	epoch_time 0.0403 (0.0439)	validation_time 0.0004 (0.0007)	train_time 0.0399 (0.0430)
record: (train_acc, test_acc) (0.652500018954277, 0.7040000557899475)
last accs (train_acc, test_acc) (0.6561000224351883, 0.6980000138282776)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 20.98it/s] 27%|##6       | 7/26 [00:00<00:00, 28.27it/s] 42%|####2     | 11/26 [00:00<00:00, 30.82it/s] 58%|#####7    | 15/26 [00:00<00:00, 32.55it/s] 73%|#######3  | 19/26 [00:00<00:00, 33.16it/s] 88%|########8 | 23/26 [00:00<00:00, 33.89it/s]100%|##########| 26/26 [00:00<00:00, 30.04it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 572 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 573 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 574 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 575 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 576 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 577 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 578 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 579 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 580 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 581 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 582 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 583 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 584 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 585 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 586 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 587 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 588 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 589 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 590 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 591 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 592 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 593 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 594 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 595 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 596 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 597 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [22][  26/  26]	Loss 0.000 (0.000)	train_nll   0.52 (  0.53)	train_penalty   0.00 (  0.00)	weight_norm  22.81 ( 22.81)	train_acc   0.67 (  0.66)	train_minacc   0.82 (  0.83)	train_majacc   0.64 (  0.63)	train_corr   0.00 (  0.00)	l1 5.9619 (5.9544)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.50it/s] 27%|##6       | 7/26 [00:00<00:00, 21.14it/s]                                               27%|##6       | 7/26 [00:00<00:00, 21.14it/s] 46%|####6     | 12/26 [00:00<00:00, 29.63it/s] 65%|######5   | 17/26 [00:00<00:00, 34.21it/s]                                                65%|######5   | 17/26 [00:00<00:00, 34.21it/s] 85%|########4 | 22/26 [00:00<00:00, 38.36it/s]100%|##########| 26/26 [00:00<00:00, 29.56it/s]
Test: [   0/  26]	Loss 0.530 (0.530)	test_acc   0.67 (  0.67)	test_minacc   0.78 (  0.78)	test_majacc   0.65 (  0.65)	Loss_d 0.530 (0.530)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.78 (  0.78)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.42 (  0.42)
Test: [  10/  26]	Loss 0.536 (0.532)	test_acc   0.65 (  0.65)	test_minacc   0.87 (  0.82)	test_majacc   0.61 (  0.63)	Loss_d 0.536 (0.532)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.87 (  0.82)	test_majacc_d   0.61 (  0.63)	test_corr_d   0.35 (  0.41)
Test: [  20/  26]	Loss 0.510 (0.527)	test_acc   0.67 (  0.66)	test_minacc   0.76 (  0.82)	test_majacc   0.66 (  0.63)	Loss_d 0.510 (0.527)	test_acc_d   0.67 (  0.66)	test_minacc_d   0.76 (  0.82)	test_majacc_d   0.66 (  0.63)	test_corr_d   0.47 (  0.41)
Test: [  26/  26]	Loss 0.520 (0.525)	test_acc   0.67 (  0.66)	test_minacc   0.82 (  0.83)	test_majacc   0.64 (  0.63)	Loss_d 0.520 (0.525)	test_acc_d   0.67 (  0.66)	test_minacc_d   0.82 (  0.83)	test_majacc_d   0.64 (  0.63)	test_corr_d   0.41 (  0.41)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.33it/s]
Test: [  0/  1]	Loss 0.860 (0.860)	test_acc   0.70 (  0.70)	test_minacc   0.69 (  0.69)	test_majacc   0.78 (  0.78)	Loss_d 0.860 (0.860)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.01 (  0.01)
Test: [  1/  1]	Loss 0.860 (0.860)	test_acc   0.70 (  0.70)	test_minacc   0.69 (  0.69)	test_majacc   0.78 (  0.78)	Loss_d 0.860 (0.860)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.01 (  0.01)
Overall Timing[ 22/  1]	epoch_time 0.0416 (0.0438)	validation_time 0.0003 (0.0007)	train_time 0.0412 (0.0429)
record: (train_acc, test_acc) (0.652500018954277, 0.7040000557899475)
last accs (train_acc, test_acc) (0.657800023496151, 0.6990000605583191)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.77it/s] 19%|#9        | 5/26 [00:00<00:00, 21.27it/s] 31%|###       | 8/26 [00:00<00:00, 23.54it/s] 46%|####6     | 12/26 [00:00<00:00, 28.03it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.34it/s] 69%|######9   | 18/26 [00:00<00:00, 28.22it/s] 85%|########4 | 22/26 [00:00<00:00, 30.55it/s]100%|##########| 26/26 [00:00<00:00, 31.09it/s]100%|##########| 26/26 [00:00<00:00, 26.45it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 598 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 599 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 600 200
penalty weights 10000.0
l1 at pgd_anneal_iters 5.9422149658203125
set z to 5.88279281616211
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 601 200
penalty weights 10000.0
args.step pgd_anneal_iters 601 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 602 200
penalty weights 10000.0
args.step pgd_anneal_iters 602 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 603 200
penalty weights 10000.0
args.step pgd_anneal_iters 603 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 604 200
penalty weights 10000.0
args.step pgd_anneal_iters 604 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 605 200
penalty weights 10000.0
args.step pgd_anneal_iters 605 600
dim_v 512
rho, theta 381 tensor(-0.0074, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 606 200
penalty weights 10000.0
args.step pgd_anneal_iters 606 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 607 200
penalty weights 10000.0
args.step pgd_anneal_iters 607 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 608 200
penalty weights 10000.0
args.step pgd_anneal_iters 608 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 609 200
penalty weights 10000.0
args.step pgd_anneal_iters 609 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 610 200
penalty weights 10000.0
args.step pgd_anneal_iters 610 600
dim_v 512
rho, theta 248 tensor(-0.0047, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 611 200
penalty weights 10000.0
args.step pgd_anneal_iters 611 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 612 200
penalty weights 10000.0
args.step pgd_anneal_iters 612 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 613 200
penalty weights 10000.0
args.step pgd_anneal_iters 613 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 614 200
penalty weights 10000.0
args.step pgd_anneal_iters 614 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 615 200
penalty weights 10000.0
args.step pgd_anneal_iters 615 600
dim_v 512
rho, theta 228 tensor(0.0057, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 616 200
penalty weights 10000.0
args.step pgd_anneal_iters 616 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 617 200
penalty weights 10000.0
args.step pgd_anneal_iters 617 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 618 200
penalty weights 10000.0
args.step pgd_anneal_iters 618 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 619 200
penalty weights 10000.0
args.step pgd_anneal_iters 619 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 620 200
penalty weights 10000.0
args.step pgd_anneal_iters 620 600
dim_v 512
rho, theta 226 tensor(0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 621 200
penalty weights 10000.0
args.step pgd_anneal_iters 621 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 622 200
penalty weights 10000.0
args.step pgd_anneal_iters 622 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 623 200
penalty weights 10000.0
args.step pgd_anneal_iters 623 600
final projection at end of training
dim_v 512
rho, theta 227 tensor(-0.0011, device='cuda:0')
Epoch: [23][  26/  26]	Loss 0.039 (0.176)	train_nll   0.75 (  0.74)	train_penalty   0.04 (  0.18)	weight_norm  31.70 ( 25.38)	train_acc   0.82 (  0.64)	train_minacc   0.10 (  0.52)	train_majacc   0.96 (  0.66)	train_corr   0.00 (  0.00)	l1 6.6415 (6.7525)	zero_count 0.0000 (37.4790)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.45it/s] 27%|##6       | 7/26 [00:00<00:00, 34.97it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.97it/s] 46%|####6     | 12/26 [00:00<00:00, 39.62it/s] 65%|######5   | 17/26 [00:00<00:00, 38.96it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.96it/s] 85%|########4 | 22/26 [00:00<00:00, 41.93it/s]100%|##########| 26/26 [00:00<00:00, 36.43it/s]
Test: [   0/  26]	Loss 0.639 (0.639)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.52 (  0.52)	Loss_d 0.639 (0.639)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.37 (  0.37)
Test: [  10/  26]	Loss 0.624 (0.722)	test_acc   0.49 (  0.50)	test_minacc   0.44 (  0.49)	test_majacc   0.50 (  0.51)	Loss_d 0.624 (0.722)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.44 (  0.49)	test_majacc_d   0.50 (  0.51)	test_corr_d   0.34 (  0.39)
Test: [  20/  26]	Loss 0.693 (0.702)	test_acc   0.49 (  0.50)	test_minacc   0.45 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.693 (0.702)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.45 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.42 (  0.39)
Test: [  26/  26]	Loss 0.765 (0.699)	test_acc   0.51 (  0.50)	test_minacc   0.46 (  0.50)	test_majacc   0.52 (  0.50)	Loss_d 0.765 (0.699)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.46 (  0.50)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.38 (  0.39)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.08it/s]
Test: [  0/  1]	Loss 1.435 (1.435)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.435 (1.435)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.34 (  0.34)
Test: [  1/  1]	Loss 1.435 (1.435)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.435 (1.435)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.34 (  0.34)
Overall Timing[ 23/  1]	epoch_time 0.0423 (0.0437)	validation_time 0.0004 (0.0007)	train_time 0.0419 (0.0428)
record: (train_acc, test_acc) (0.652500018954277, 0.7040000557899475)
last accs (train_acc, test_acc) (0.5000000108778476, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.64it/s] 23%|##3       | 6/26 [00:00<00:00, 26.65it/s] 35%|###4      | 9/26 [00:00<00:00, 26.48it/s] 46%|####6     | 12/26 [00:00<00:00, 26.90it/s] 62%|######1   | 16/26 [00:00<00:00, 29.57it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.81it/s] 85%|########4 | 22/26 [00:00<00:00, 28.94it/s]100%|##########| 26/26 [00:00<00:00, 31.09it/s]100%|##########| 26/26 [00:00<00:00, 26.91it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 624 200
penalty weights 10000.0
args.step pgd_anneal_iters 624 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 625 200
penalty weights 10000.0
args.step pgd_anneal_iters 625 600
dim_v 512
rho, theta 233 tensor(-0.0009, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 626 200
penalty weights 10000.0
args.step pgd_anneal_iters 626 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 627 200
penalty weights 10000.0
args.step pgd_anneal_iters 627 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 628 200
penalty weights 10000.0
args.step pgd_anneal_iters 628 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 629 200
penalty weights 10000.0
args.step pgd_anneal_iters 629 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 630 200
penalty weights 10000.0
args.step pgd_anneal_iters 630 600
dim_v 512
rho, theta 263 tensor(-0.0027, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 631 200
penalty weights 10000.0
args.step pgd_anneal_iters 631 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 632 200
penalty weights 10000.0
args.step pgd_anneal_iters 632 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 633 200
penalty weights 10000.0
args.step pgd_anneal_iters 633 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 634 200
penalty weights 10000.0
args.step pgd_anneal_iters 634 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 635 200
penalty weights 10000.0
args.step pgd_anneal_iters 635 600
dim_v 512
rho, theta 289 tensor(-0.0026, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 636 200
penalty weights 10000.0
args.step pgd_anneal_iters 636 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 637 200
penalty weights 10000.0
args.step pgd_anneal_iters 637 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 638 200
penalty weights 10000.0
args.step pgd_anneal_iters 638 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 639 200
penalty weights 10000.0
args.step pgd_anneal_iters 639 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 640 200
penalty weights 10000.0
args.step pgd_anneal_iters 640 600
dim_v 512
rho, theta 285 tensor(-0.0016, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 641 200
penalty weights 10000.0
args.step pgd_anneal_iters 641 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 642 200
penalty weights 10000.0
args.step pgd_anneal_iters 642 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 643 200
penalty weights 10000.0
args.step pgd_anneal_iters 643 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 644 200
penalty weights 10000.0
args.step pgd_anneal_iters 644 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 645 200
penalty weights 10000.0
args.step pgd_anneal_iters 645 600
dim_v 512
rho, theta 293 tensor(-0.0011, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 646 200
penalty weights 10000.0
args.step pgd_anneal_iters 646 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 647 200
penalty weights 10000.0
args.step pgd_anneal_iters 647 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 648 200
penalty weights 10000.0
args.step pgd_anneal_iters 648 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 649 200
penalty weights 10000.0
args.step pgd_anneal_iters 649 600
final projection at end of training
dim_v 512
rho, theta 291 tensor(-0.0006, device='cuda:0')
Epoch: [24][  26/  26]	Loss 0.002 (0.008)	train_nll   0.65 (  0.66)	train_penalty   0.00 (  0.01)	weight_norm  37.02 ( 35.39)	train_acc   0.51 (  0.63)	train_minacc   0.46 (  0.39)	train_majacc   0.52 (  0.67)	train_corr   0.00 (  0.00)	l1 6.0094 (6.1028)	zero_count 0.0000 (57.5640)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.41it/s] 23%|##3       | 6/26 [00:00<00:00, 30.01it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.01it/s] 42%|####2     | 11/26 [00:00<00:00, 37.46it/s] 62%|######1   | 16/26 [00:00<00:00, 41.19it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.19it/s] 81%|########  | 21/26 [00:00<00:00, 42.29it/s]100%|##########| 26/26 [00:00<00:00, 43.06it/s]100%|##########| 26/26 [00:00<00:00, 36.54it/s]
Test: [   0/  26]	Loss 0.615 (0.615)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.52 (  0.52)	Loss_d 0.615 (0.615)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.40 (  0.40)
Test: [  10/  26]	Loss 0.628 (0.651)	test_acc   0.49 (  0.50)	test_minacc   0.44 (  0.49)	test_majacc   0.50 (  0.51)	Loss_d 0.628 (0.651)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.44 (  0.49)	test_majacc_d   0.50 (  0.51)	test_corr_d   0.39 (  0.40)
Test: [  20/  26]	Loss 0.652 (0.646)	test_acc   0.49 (  0.50)	test_minacc   0.45 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.652 (0.646)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.45 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.40 (  0.40)
Test: [  26/  26]	Loss 0.646 (0.643)	test_acc   0.51 (  0.50)	test_minacc   0.46 (  0.50)	test_majacc   0.52 (  0.50)	Loss_d 0.646 (0.643)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.46 (  0.50)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.42 (  0.41)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.56it/s]
Test: [  0/  1]	Loss 1.022 (1.022)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.022 (1.022)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.30 (  0.30)
Test: [  1/  1]	Loss 1.022 (1.022)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.022 (1.022)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.30 (  0.30)
Overall Timing[ 24/  1]	epoch_time 0.0435 (0.0437)	validation_time 0.0005 (0.0007)	train_time 0.0430 (0.0428)
record: (train_acc, test_acc) (0.652500018954277, 0.7040000557899475)
last accs (train_acc, test_acc) (0.5000000108778476, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:08,  3.03it/s] 19%|#9        | 5/26 [00:00<00:01, 13.63it/s] 31%|###       | 8/26 [00:00<00:00, 18.33it/s] 42%|####2     | 11/26 [00:00<00:00, 21.29it/s] 58%|#####7    | 15/26 [00:00<00:00, 25.95it/s] 69%|######9   | 18/26 [00:00<00:00, 26.39it/s] 81%|########  | 21/26 [00:00<00:00, 26.85it/s] 96%|#########6| 25/26 [00:01<00:00, 29.20it/s]100%|##########| 26/26 [00:01<00:00, 21.68it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 650 200
penalty weights 10000.0
args.step pgd_anneal_iters 650 600
dim_v 512
rho, theta 298 tensor(-0.0001, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 651 200
penalty weights 10000.0
args.step pgd_anneal_iters 651 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 652 200
penalty weights 10000.0
args.step pgd_anneal_iters 652 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 653 200
penalty weights 10000.0
args.step pgd_anneal_iters 653 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 654 200
penalty weights 10000.0
args.step pgd_anneal_iters 654 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 655 200
penalty weights 10000.0
args.step pgd_anneal_iters 655 600
dim_v 512
rho, theta 305 tensor(-0.0007, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 656 200
penalty weights 10000.0
args.step pgd_anneal_iters 656 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 657 200
penalty weights 10000.0
args.step pgd_anneal_iters 657 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 658 200
penalty weights 10000.0
args.step pgd_anneal_iters 658 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 659 200
penalty weights 10000.0
args.step pgd_anneal_iters 659 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 660 200
penalty weights 10000.0
args.step pgd_anneal_iters 660 600
dim_v 512
rho, theta 306 tensor(-0.0007, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 661 200
penalty weights 10000.0
args.step pgd_anneal_iters 661 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 662 200
penalty weights 10000.0
args.step pgd_anneal_iters 662 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 663 200
penalty weights 10000.0
args.step pgd_anneal_iters 663 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 664 200
penalty weights 10000.0
args.step pgd_anneal_iters 664 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 665 200
penalty weights 10000.0
args.step pgd_anneal_iters 665 600
dim_v 512
rho, theta 303 tensor(-0.0005, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 666 200
penalty weights 10000.0
args.step pgd_anneal_iters 666 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 667 200
penalty weights 10000.0
args.step pgd_anneal_iters 667 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 668 200
penalty weights 10000.0
args.step pgd_anneal_iters 668 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 669 200
penalty weights 10000.0
args.step pgd_anneal_iters 669 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 670 200
penalty weights 10000.0
args.step pgd_anneal_iters 670 600
dim_v 512
rho, theta 301 tensor(-0.0003, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 671 200
penalty weights 10000.0
args.step pgd_anneal_iters 671 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 672 200
penalty weights 10000.0
args.step pgd_anneal_iters 672 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 673 200
penalty weights 10000.0
args.step pgd_anneal_iters 673 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 674 200
penalty weights 10000.0
args.step pgd_anneal_iters 674 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 675 200
penalty weights 10000.0
args.step pgd_anneal_iters 675 600
dim_v 512
rho, theta 300 tensor(-0.0002, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [25][  26/  26]	Loss 0.001 (0.002)	train_nll   0.66 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm  37.47 ( 37.34)	train_acc   0.51 (  0.50)	train_minacc   0.46 (  0.50)	train_majacc   0.52 (  0.50)	train_corr   0.00 (  0.00)	l1 5.9426 (5.9335)	zero_count 0.0000 (49.2180)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.39it/s] 23%|##3       | 6/26 [00:00<00:00, 29.97it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.97it/s] 42%|####2     | 11/26 [00:00<00:00, 34.24it/s] 62%|######1   | 16/26 [00:00<00:00, 39.19it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.19it/s] 81%|########  | 21/26 [00:00<00:00, 38.90it/s]100%|##########| 26/26 [00:00<00:00, 41.60it/s]100%|##########| 26/26 [00:00<00:00, 34.20it/s]
Test: [   0/  26]	Loss 0.629 (0.629)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.52 (  0.52)	Loss_d 0.629 (0.629)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.32 (  0.32)
Test: [  10/  26]	Loss 0.641 (0.654)	test_acc   0.50 (  0.51)	test_minacc   0.47 (  0.49)	test_majacc   0.51 (  0.51)	Loss_d 0.641 (0.654)	test_acc_d   0.50 (  0.51)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.30 (  0.33)
Test: [  20/  26]	Loss 0.666 (0.654)	test_acc   0.49 (  0.50)	test_minacc   0.45 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.666 (0.654)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.45 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.33 (  0.33)
Test: [  26/  26]	Loss 0.655 (0.652)	test_acc   0.51 (  0.50)	test_minacc   0.46 (  0.50)	test_majacc   0.52 (  0.50)	Loss_d 0.655 (0.652)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.46 (  0.50)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.33 (  0.33)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.29it/s]
Test: [  0/  1]	Loss 0.892 (0.892)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.892 (0.892)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.23 (  0.23)
Test: [  1/  1]	Loss 0.892 (0.892)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.892 (0.892)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.23 (  0.23)
Overall Timing[ 25/  1]	epoch_time 0.0437 (0.0437)	validation_time 0.0003 (0.0007)	train_time 0.0433 (0.0429)
record: (train_acc, test_acc) (0.652500018954277, 0.7040000557899475)
last accs (train_acc, test_acc) (0.5003000085353851, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.87it/s] 19%|#9        | 5/26 [00:00<00:01, 19.10it/s] 35%|###4      | 9/26 [00:00<00:00, 25.58it/s] 46%|####6     | 12/26 [00:00<00:00, 26.75it/s] 58%|#####7    | 15/26 [00:00<00:00, 25.59it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.81it/s] 85%|########4 | 22/26 [00:00<00:00, 29.15it/s] 96%|#########6| 25/26 [00:00<00:00, 28.85it/s]100%|##########| 26/26 [00:01<00:00, 24.98it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 676 200
penalty weights 10000.0
args.step pgd_anneal_iters 676 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 677 200
penalty weights 10000.0
args.step pgd_anneal_iters 677 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 678 200
penalty weights 10000.0
args.step pgd_anneal_iters 678 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 679 200
penalty weights 10000.0
args.step pgd_anneal_iters 679 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 680 200
penalty weights 10000.0
args.step pgd_anneal_iters 680 600
dim_v 512
rho, theta 303 tensor(-0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 681 200
penalty weights 10000.0
args.step pgd_anneal_iters 681 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 682 200
penalty weights 10000.0
args.step pgd_anneal_iters 682 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 683 200
penalty weights 10000.0
args.step pgd_anneal_iters 683 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 684 200
penalty weights 10000.0
args.step pgd_anneal_iters 684 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 685 200
penalty weights 10000.0
args.step pgd_anneal_iters 685 600
dim_v 512
rho, theta 301 tensor(-0.0003, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 686 200
penalty weights 10000.0
args.step pgd_anneal_iters 686 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 687 200
penalty weights 10000.0
args.step pgd_anneal_iters 687 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 688 200
penalty weights 10000.0
args.step pgd_anneal_iters 688 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 689 200
penalty weights 10000.0
args.step pgd_anneal_iters 689 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 690 200
penalty weights 10000.0
args.step pgd_anneal_iters 690 600
dim_v 512
rho, theta 299 tensor(-0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 691 200
penalty weights 10000.0
args.step pgd_anneal_iters 691 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 692 200
penalty weights 10000.0
args.step pgd_anneal_iters 692 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 693 200
penalty weights 10000.0
args.step pgd_anneal_iters 693 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 694 200
penalty weights 10000.0
args.step pgd_anneal_iters 694 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 695 200
penalty weights 10000.0
args.step pgd_anneal_iters 695 600
dim_v 512
rho, theta 298 tensor(-0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 696 200
penalty weights 10000.0
args.step pgd_anneal_iters 696 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 697 200
penalty weights 10000.0
args.step pgd_anneal_iters 697 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 698 200
penalty weights 10000.0
args.step pgd_anneal_iters 698 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 699 200
penalty weights 10000.0
args.step pgd_anneal_iters 699 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 700 200
penalty weights 10000.0
args.step pgd_anneal_iters 700 600
dim_v 512
rho, theta 297 tensor(-0.0001, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 701 200
penalty weights 10000.0
args.step pgd_anneal_iters 701 600
final projection at end of training
dim_v 512
rho, theta 297 tensor(-2.4810e-05, device='cuda:0')
Epoch: [26][  26/  26]	Loss 0.000 (0.001)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  37.51 ( 37.50)	train_acc   0.51 (  0.50)	train_minacc   0.46 (  0.50)	train_majacc   0.52 (  0.50)	train_corr   0.00 (  0.00)	l1 5.8827 (5.9101)	zero_count 214.0000 (46.4560)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.00it/s] 15%|#5        | 4/26 [00:00<00:01, 17.34it/s] 35%|###4      | 9/26 [00:00<00:00, 30.26it/s]                                               35%|###4      | 9/26 [00:00<00:00, 30.26it/s] 54%|#####3    | 14/26 [00:00<00:00, 36.28it/s] 73%|#######3  | 19/26 [00:00<00:00, 39.19it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 39.19it/s] 92%|#########2| 24/26 [00:00<00:00, 38.39it/s]100%|##########| 26/26 [00:00<00:00, 33.39it/s]
Test: [   0/  26]	Loss 0.639 (0.639)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.52 (  0.52)	Loss_d 0.639 (0.639)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.28 (  0.28)
Test: [  10/  26]	Loss 0.651 (0.659)	test_acc   0.51 (  0.51)	test_minacc   0.56 (  0.50)	test_majacc   0.50 (  0.51)	Loss_d 0.651 (0.659)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.56 (  0.50)	test_majacc_d   0.50 (  0.51)	test_corr_d   0.25 (  0.28)
Test: [  20/  26]	Loss 0.671 (0.659)	test_acc   0.49 (  0.50)	test_minacc   0.45 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.671 (0.659)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.45 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.28 (  0.28)
Test: [  26/  26]	Loss 0.662 (0.658)	test_acc   0.51 (  0.50)	test_minacc   0.46 (  0.50)	test_majacc   0.52 (  0.50)	Loss_d 0.662 (0.658)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.46 (  0.50)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.27 (  0.28)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.50it/s]
Test: [  0/  1]	Loss 0.842 (0.842)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.842 (0.842)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.20)
Test: [  1/  1]	Loss 0.842 (0.842)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.842 (0.842)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.20)
Overall Timing[ 26/  1]	epoch_time 0.0425 (0.0437)	validation_time 0.0004 (0.0007)	train_time 0.0420 (0.0428)
record: (train_acc, test_acc) (0.652500018954277, 0.7040000557899475)
last accs (train_acc, test_acc) (0.5004000096917153, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.25it/s] 15%|#5        | 4/26 [00:00<00:01, 18.85it/s] 31%|###       | 8/26 [00:00<00:00, 25.81it/s] 42%|####2     | 11/26 [00:00<00:00, 26.42it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.03it/s] 69%|######9   | 18/26 [00:00<00:00, 29.02it/s] 81%|########  | 21/26 [00:00<00:00, 28.56it/s] 92%|#########2| 24/26 [00:00<00:00, 28.72it/s]100%|##########| 26/26 [00:01<00:00, 25.54it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 702 200
penalty weights 10000.0
args.step pgd_anneal_iters 702 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 703 200
penalty weights 10000.0
args.step pgd_anneal_iters 703 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 704 200
penalty weights 10000.0
args.step pgd_anneal_iters 704 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 705 200
penalty weights 10000.0
args.step pgd_anneal_iters 705 600
dim_v 512
rho, theta 295 tensor(-9.1638e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 706 200
penalty weights 10000.0
args.step pgd_anneal_iters 706 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 707 200
penalty weights 10000.0
args.step pgd_anneal_iters 707 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 708 200
penalty weights 10000.0
args.step pgd_anneal_iters 708 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 709 200
penalty weights 10000.0
args.step pgd_anneal_iters 709 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 710 200
penalty weights 10000.0
args.step pgd_anneal_iters 710 600
dim_v 512
rho, theta 293 tensor(-0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 711 200
penalty weights 10000.0
args.step pgd_anneal_iters 711 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 712 200
penalty weights 10000.0
args.step pgd_anneal_iters 712 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 713 200
penalty weights 10000.0
args.step pgd_anneal_iters 713 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 714 200
penalty weights 10000.0
args.step pgd_anneal_iters 714 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 715 200
penalty weights 10000.0
args.step pgd_anneal_iters 715 600
dim_v 512
rho, theta 293 tensor(-0.0001, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 716 200
penalty weights 10000.0
args.step pgd_anneal_iters 716 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 717 200
penalty weights 10000.0
args.step pgd_anneal_iters 717 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 718 200
penalty weights 10000.0
args.step pgd_anneal_iters 718 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 719 200
penalty weights 10000.0
args.step pgd_anneal_iters 719 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 720 200
penalty weights 10000.0
args.step pgd_anneal_iters 720 600
dim_v 512
rho, theta 293 tensor(-0.0001, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 721 200
penalty weights 10000.0
args.step pgd_anneal_iters 721 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 722 200
penalty weights 10000.0
args.step pgd_anneal_iters 722 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 723 200
penalty weights 10000.0
args.step pgd_anneal_iters 723 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 724 200
penalty weights 10000.0
args.step pgd_anneal_iters 724 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 725 200
penalty weights 10000.0
args.step pgd_anneal_iters 725 600
dim_v 512
rho, theta 295 tensor(-0.0001, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 726 200
penalty weights 10000.0
args.step pgd_anneal_iters 726 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 727 200
penalty weights 10000.0
args.step pgd_anneal_iters 727 600
final projection at end of training
dim_v 512
rho, theta 293 tensor(-3.6498e-05, device='cuda:0')
Epoch: [27][  26/  26]	Loss 0.000 (0.001)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  37.52 ( 37.52)	train_acc   0.51 (  0.50)	train_minacc   0.46 (  0.52)	train_majacc   0.52 (  0.50)	train_corr   0.00 (  0.00)	l1 5.8901 (5.9018)	zero_count 0.0000 (50.7000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.12it/s] 23%|##3       | 6/26 [00:00<00:00, 29.40it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.40it/s] 42%|####2     | 11/26 [00:00<00:00, 36.33it/s] 62%|######1   | 16/26 [00:00<00:00, 40.71it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.71it/s] 81%|########  | 21/26 [00:00<00:00, 38.82it/s]100%|##########| 26/26 [00:00<00:00, 41.71it/s]100%|##########| 26/26 [00:00<00:00, 34.73it/s]
Test: [   0/  26]	Loss 0.644 (0.644)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.52 (  0.52)	Loss_d 0.644 (0.644)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.26 (  0.26)
Test: [  10/  26]	Loss 0.655 (0.660)	test_acc   0.55 (  0.51)	test_minacc   0.66 (  0.52)	test_majacc   0.52 (  0.51)	Loss_d 0.655 (0.660)	test_acc_d   0.55 (  0.51)	test_minacc_d   0.66 (  0.52)	test_majacc_d   0.52 (  0.51)	test_corr_d   0.23 (  0.27)
Test: [  20/  26]	Loss 0.671 (0.661)	test_acc   0.49 (  0.50)	test_minacc   0.45 (  0.53)	test_majacc   0.50 (  0.50)	Loss_d 0.671 (0.661)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.45 (  0.53)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.27 (  0.26)
Test: [  26/  26]	Loss 0.663 (0.661)	test_acc   0.51 (  0.50)	test_minacc   0.46 (  0.52)	test_majacc   0.52 (  0.50)	Loss_d 0.663 (0.661)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.46 (  0.52)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.25 (  0.26)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.41it/s]
Test: [  0/  1]	Loss 0.818 (0.818)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.818 (0.818)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.19 (  0.19)
Test: [  1/  1]	Loss 0.818 (0.818)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.818 (0.818)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.19 (  0.19)
Overall Timing[ 27/  1]	epoch_time 0.0478 (0.0438)	validation_time 0.0005 (0.0006)	train_time 0.0473 (0.0430)
record: (train_acc, test_acc) (0.652500018954277, 0.7040000557899475)
last accs (train_acc, test_acc) (0.5016000049710274, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.02it/s] 15%|#5        | 4/26 [00:00<00:01, 17.69it/s] 27%|##6       | 7/26 [00:00<00:00, 22.69it/s] 38%|###8      | 10/26 [00:00<00:00, 24.66it/s] 50%|#####     | 13/26 [00:00<00:00, 25.93it/s] 65%|######5   | 17/26 [00:00<00:00, 28.42it/s] 77%|#######6  | 20/26 [00:00<00:00, 27.57it/s] 88%|########8 | 23/26 [00:00<00:00, 27.35it/s]100%|##########| 26/26 [00:01<00:00, 25.14it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 728 200
penalty weights 10000.0
args.step pgd_anneal_iters 728 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 729 200
penalty weights 10000.0
args.step pgd_anneal_iters 729 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 730 200
penalty weights 10000.0
args.step pgd_anneal_iters 730 600
dim_v 512
rho, theta 292 tensor(-4.0033e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 731 200
penalty weights 10000.0
args.step pgd_anneal_iters 731 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 732 200
penalty weights 10000.0
args.step pgd_anneal_iters 732 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 733 200
penalty weights 10000.0
args.step pgd_anneal_iters 733 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 734 200
penalty weights 10000.0
args.step pgd_anneal_iters 734 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 735 200
penalty weights 10000.0
args.step pgd_anneal_iters 735 600
dim_v 512
rho, theta 292 tensor(-0.0001, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 736 200
penalty weights 10000.0
args.step pgd_anneal_iters 736 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 737 200
penalty weights 10000.0
args.step pgd_anneal_iters 737 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 738 200
penalty weights 10000.0
args.step pgd_anneal_iters 738 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 739 200
penalty weights 10000.0
args.step pgd_anneal_iters 739 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 740 200
penalty weights 10000.0
args.step pgd_anneal_iters 740 600
dim_v 512
rho, theta 292 tensor(-0.0001, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 741 200
penalty weights 10000.0
args.step pgd_anneal_iters 741 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 742 200
penalty weights 10000.0
args.step pgd_anneal_iters 742 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 743 200
penalty weights 10000.0
args.step pgd_anneal_iters 743 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 744 200
penalty weights 10000.0
args.step pgd_anneal_iters 744 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 745 200
penalty weights 10000.0
args.step pgd_anneal_iters 745 600
dim_v 512
rho, theta 291 tensor(-8.1521e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 746 200
penalty weights 10000.0
args.step pgd_anneal_iters 746 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 747 200
penalty weights 10000.0
args.step pgd_anneal_iters 747 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 748 200
penalty weights 10000.0
args.step pgd_anneal_iters 748 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 749 200
penalty weights 10000.0
args.step pgd_anneal_iters 749 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 750 200
penalty weights 10000.0
args.step pgd_anneal_iters 750 600
dim_v 512
rho, theta 294 tensor(-9.2182e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 751 200
penalty weights 10000.0
args.step pgd_anneal_iters 751 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 752 200
penalty weights 10000.0
args.step pgd_anneal_iters 752 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 753 200
penalty weights 10000.0
args.step pgd_anneal_iters 753 600
final projection at end of training
dim_v 512
rho, theta 293 tensor(-4.6842e-05, device='cuda:0')
Epoch: [28][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  37.53 ( 37.53)	train_acc   0.50 (  0.50)	train_minacc   0.46 (  0.53)	train_majacc   0.51 (  0.49)	train_corr   0.00 (  0.00)	l1 5.8959 (5.8985)	zero_count 0.0000 (51.1680)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.09it/s] 15%|#5        | 4/26 [00:00<00:01, 19.46it/s] 35%|###4      | 9/26 [00:00<00:00, 30.89it/s]                                               35%|###4      | 9/26 [00:00<00:00, 30.89it/s] 54%|#####3    | 14/26 [00:00<00:00, 34.51it/s] 73%|#######3  | 19/26 [00:00<00:00, 38.46it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 38.46it/s] 92%|#########2| 24/26 [00:00<00:00, 41.39it/s]100%|##########| 26/26 [00:00<00:00, 33.96it/s]
Test: [   0/  26]	Loss 0.649 (0.649)	test_acc   0.53 (  0.53)	test_minacc   0.59 (  0.59)	test_majacc   0.51 (  0.51)	Loss_d 0.649 (0.649)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.24 (  0.24)
Test: [  10/  26]	Loss 0.658 (0.662)	test_acc   0.52 (  0.51)	test_minacc   0.66 (  0.53)	test_majacc   0.49 (  0.50)	Loss_d 0.658 (0.662)	test_acc_d   0.52 (  0.51)	test_minacc_d   0.66 (  0.53)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.22 (  0.25)
Test: [  20/  26]	Loss 0.671 (0.663)	test_acc   0.49 (  0.50)	test_minacc   0.45 (  0.54)	test_majacc   0.50 (  0.49)	Loss_d 0.671 (0.663)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.45 (  0.54)	test_majacc_d   0.50 (  0.49)	test_corr_d   0.26 (  0.25)
Test: [  26/  26]	Loss 0.664 (0.663)	test_acc   0.50 (  0.50)	test_minacc   0.46 (  0.54)	test_majacc   0.51 (  0.49)	Loss_d 0.664 (0.663)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.46 (  0.54)	test_majacc_d   0.51 (  0.49)	test_corr_d   0.23 (  0.25)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.08it/s]
Test: [  0/  1]	Loss 0.802 (0.802)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.802 (0.802)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.18 (  0.18)
Test: [  1/  1]	Loss 0.802 (0.802)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.802 (0.802)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.18 (  0.18)
Overall Timing[ 28/  1]	epoch_time 0.0432 (0.0438)	validation_time 0.0005 (0.0006)	train_time 0.0427 (0.0430)
record: (train_acc, test_acc) (0.652500018954277, 0.7040000557899475)
last accs (train_acc, test_acc) (0.4961000085771084, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.43it/s] 23%|##3       | 6/26 [00:00<00:00, 27.87it/s] 35%|###4      | 9/26 [00:00<00:00, 27.61it/s] 46%|####6     | 12/26 [00:00<00:00, 27.68it/s] 62%|######1   | 16/26 [00:00<00:00, 30.04it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.91it/s] 85%|########4 | 22/26 [00:00<00:00, 28.70it/s]100%|##########| 26/26 [00:00<00:00, 30.54it/s]100%|##########| 26/26 [00:00<00:00, 27.16it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 754 200
penalty weights 10000.0
args.step pgd_anneal_iters 754 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 755 200
penalty weights 10000.0
args.step pgd_anneal_iters 755 600
dim_v 512
rho, theta 292 tensor(-2.2927e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 756 200
penalty weights 10000.0
args.step pgd_anneal_iters 756 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 757 200
penalty weights 10000.0
args.step pgd_anneal_iters 757 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 758 200
penalty weights 10000.0
args.step pgd_anneal_iters 758 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 759 200
penalty weights 10000.0
args.step pgd_anneal_iters 759 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 760 200
penalty weights 10000.0
args.step pgd_anneal_iters 760 600
dim_v 512
rho, theta 289 tensor(-7.1488e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 761 200
penalty weights 10000.0
args.step pgd_anneal_iters 761 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 762 200
penalty weights 10000.0
args.step pgd_anneal_iters 762 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 763 200
penalty weights 10000.0
args.step pgd_anneal_iters 763 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 764 200
penalty weights 10000.0
args.step pgd_anneal_iters 764 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 765 200
penalty weights 10000.0
args.step pgd_anneal_iters 765 600
dim_v 512
rho, theta 289 tensor(-9.4818e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 766 200
penalty weights 10000.0
args.step pgd_anneal_iters 766 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 767 200
penalty weights 10000.0
args.step pgd_anneal_iters 767 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 768 200
penalty weights 10000.0
args.step pgd_anneal_iters 768 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 769 200
penalty weights 10000.0
args.step pgd_anneal_iters 769 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 770 200
penalty weights 10000.0
args.step pgd_anneal_iters 770 600
dim_v 512
rho, theta 287 tensor(-7.3670e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 771 200
penalty weights 10000.0
args.step pgd_anneal_iters 771 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 772 200
penalty weights 10000.0
args.step pgd_anneal_iters 772 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 773 200
penalty weights 10000.0
args.step pgd_anneal_iters 773 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 774 200
penalty weights 10000.0
args.step pgd_anneal_iters 774 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 775 200
penalty weights 10000.0
args.step pgd_anneal_iters 775 600
dim_v 512
rho, theta 289 tensor(-7.2606e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 776 200
penalty weights 10000.0
args.step pgd_anneal_iters 776 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 777 200
penalty weights 10000.0
args.step pgd_anneal_iters 777 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 778 200
penalty weights 10000.0
args.step pgd_anneal_iters 778 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 779 200
penalty weights 10000.0
args.step pgd_anneal_iters 779 600
final projection at end of training
dim_v 512
rho, theta 288 tensor(-4.9972e-05, device='cuda:0')
Epoch: [29][  26/  26]	Loss 0.000 (0.000)	train_nll   0.67 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  37.53 ( 37.53)	train_acc   0.51 (  0.49)	train_minacc   0.51 (  0.55)	train_majacc   0.51 (  0.48)	train_corr   0.00 (  0.00)	l1 5.8995 (5.8959)	zero_count 0.0000 (51.7530)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 20.13it/s] 31%|###       | 8/26 [00:00<00:00, 34.20it/s]                                               31%|###       | 8/26 [00:00<00:00, 34.20it/s] 50%|#####     | 13/26 [00:00<00:00, 40.36it/s] 69%|######9   | 18/26 [00:00<00:00, 43.40it/s]                                                69%|######9   | 18/26 [00:00<00:00, 43.40it/s] 88%|########8 | 23/26 [00:00<00:00, 42.31it/s]100%|##########| 26/26 [00:00<00:00, 37.90it/s]
Test: [   0/  26]	Loss 0.653 (0.653)	test_acc   0.48 (  0.48)	test_minacc   0.61 (  0.61)	test_majacc   0.46 (  0.46)	Loss_d 0.653 (0.653)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.23 (  0.23)
Test: [  10/  26]	Loss 0.660 (0.663)	test_acc   0.52 (  0.50)	test_minacc   0.71 (  0.56)	test_majacc   0.48 (  0.49)	Loss_d 0.660 (0.663)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.71 (  0.56)	test_majacc_d   0.48 (  0.49)	test_corr_d   0.20 (  0.24)
Test: [  20/  26]	Loss 0.672 (0.664)	test_acc   0.49 (  0.49)	test_minacc   0.45 (  0.56)	test_majacc   0.50 (  0.48)	Loss_d 0.672 (0.664)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.45 (  0.56)	test_majacc_d   0.50 (  0.48)	test_corr_d   0.25 (  0.24)
Test: [  26/  26]	Loss 0.665 (0.664)	test_acc   0.51 (  0.49)	test_minacc   0.51 (  0.56)	test_majacc   0.51 (  0.48)	Loss_d 0.665 (0.664)	test_acc_d   0.51 (  0.49)	test_minacc_d   0.51 (  0.56)	test_majacc_d   0.51 (  0.48)	test_corr_d   0.22 (  0.24)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.81it/s]
Test: [  0/  1]	Loss 0.792 (0.792)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.792 (0.792)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.17 (  0.17)
Test: [  1/  1]	Loss 0.792 (0.792)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.792 (0.792)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.17 (  0.17)
Overall Timing[ 29/  1]	epoch_time 0.0433 (0.0438)	validation_time 0.0005 (0.0006)	train_time 0.0428 (0.0430)
record: (train_acc, test_acc) (0.652500018954277, 0.7040000557899475)
last accs (train_acc, test_acc) (0.49200001135468485, 0.5010000467300415)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.39it/s] 19%|#9        | 5/26 [00:00<00:01, 20.69it/s] 31%|###       | 8/26 [00:00<00:00, 23.38it/s] 42%|####2     | 11/26 [00:00<00:00, 24.41it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.63it/s] 69%|######9   | 18/26 [00:00<00:00, 27.60it/s] 81%|########  | 21/26 [00:00<00:00, 27.16it/s] 96%|#########6| 25/26 [00:00<00:00, 30.37it/s]100%|##########| 26/26 [00:01<00:00, 24.69it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 780 200
penalty weights 10000.0
args.step pgd_anneal_iters 780 600
dim_v 512
rho, theta 288 tensor(-9.4988e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 781 200
penalty weights 10000.0
args.step pgd_anneal_iters 781 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 782 200
penalty weights 10000.0
args.step pgd_anneal_iters 782 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 783 200
penalty weights 10000.0
args.step pgd_anneal_iters 783 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 784 200
penalty weights 10000.0
args.step pgd_anneal_iters 784 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 785 200
penalty weights 10000.0
args.step pgd_anneal_iters 785 600
dim_v 512
rho, theta 285 tensor(-5.5028e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 786 200
penalty weights 10000.0
args.step pgd_anneal_iters 786 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 787 200
penalty weights 10000.0
args.step pgd_anneal_iters 787 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 788 200
penalty weights 10000.0
args.step pgd_anneal_iters 788 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 789 200
penalty weights 10000.0
args.step pgd_anneal_iters 789 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 790 200
penalty weights 10000.0
args.step pgd_anneal_iters 790 600
dim_v 512
rho, theta 284 tensor(-7.3051e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 791 200
penalty weights 10000.0
args.step pgd_anneal_iters 791 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 792 200
penalty weights 10000.0
args.step pgd_anneal_iters 792 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 793 200
penalty weights 10000.0
args.step pgd_anneal_iters 793 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 794 200
penalty weights 10000.0
args.step pgd_anneal_iters 794 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 795 200
penalty weights 10000.0
args.step pgd_anneal_iters 795 600
dim_v 512
rho, theta 284 tensor(-6.1532e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 796 200
penalty weights 10000.0
args.step pgd_anneal_iters 796 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 797 200
penalty weights 10000.0
args.step pgd_anneal_iters 797 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 798 200
penalty weights 10000.0
args.step pgd_anneal_iters 798 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 799 200
penalty weights 10000.0
args.step pgd_anneal_iters 799 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 800 200
penalty weights 10000.0
args.step pgd_anneal_iters 800 600
dim_v 512
rho, theta 284 tensor(-5.7359e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 801 200
penalty weights 10000.0
args.step pgd_anneal_iters 801 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 802 200
penalty weights 10000.0
args.step pgd_anneal_iters 802 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 803 200
penalty weights 10000.0
args.step pgd_anneal_iters 803 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 804 200
penalty weights 10000.0
args.step pgd_anneal_iters 804 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 805 200
penalty weights 10000.0
args.step pgd_anneal_iters 805 600
dim_v 512
rho, theta 284 tensor(-5.1102e-05, device='cuda:0')
final projection at end of training
dim_v 512
rho, theta 284 tensor(-1.7902e-07, device='cuda:0')
Epoch: [30][  26/  26]	Loss 0.000 (0.000)	train_nll   0.67 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  37.54 ( 37.53)	train_acc   0.50 (  0.49)	train_minacc   0.67 (  0.58)	train_majacc   0.46 (  0.47)	train_corr   0.00 (  0.00)	l1 5.9027 (5.8941)	zero_count 0.0000 (52.7670)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.23it/s] 27%|##6       | 7/26 [00:00<00:00, 30.73it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.73it/s] 46%|####6     | 12/26 [00:00<00:00, 36.22it/s] 65%|######5   | 17/26 [00:00<00:00, 39.50it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.50it/s] 85%|########4 | 22/26 [00:00<00:00, 41.94it/s]100%|##########| 26/26 [00:00<00:00, 36.43it/s]
Test: [   0/  26]	Loss 0.656 (0.656)	test_acc   0.46 (  0.46)	test_minacc   0.70 (  0.70)	test_majacc   0.42 (  0.42)	Loss_d 0.656 (0.656)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.42 (  0.42)	test_corr_d   0.21 (  0.21)
Test: [  10/  26]	Loss 0.662 (0.665)	test_acc   0.49 (  0.49)	test_minacc   0.72 (  0.59)	test_majacc   0.44 (  0.47)	Loss_d 0.662 (0.665)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.72 (  0.59)	test_majacc_d   0.44 (  0.47)	test_corr_d   0.19 (  0.23)
Test: [  20/  26]	Loss 0.673 (0.666)	test_acc   0.49 (  0.48)	test_minacc   0.45 (  0.59)	test_majacc   0.49 (  0.47)	Loss_d 0.673 (0.666)	test_acc_d   0.49 (  0.48)	test_minacc_d   0.45 (  0.59)	test_majacc_d   0.49 (  0.47)	test_corr_d   0.24 (  0.23)
Test: [  26/  26]	Loss 0.666 (0.665)	test_acc   0.50 (  0.48)	test_minacc   0.67 (  0.59)	test_majacc   0.47 (  0.46)	Loss_d 0.666 (0.665)	test_acc_d   0.50 (  0.48)	test_minacc_d   0.67 (  0.59)	test_majacc_d   0.47 (  0.46)	test_corr_d   0.20 (  0.22)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.14it/s]
Test: [  0/  1]	Loss 0.783 (0.783)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.783 (0.783)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.16 (  0.16)
Test: [  1/  1]	Loss 0.783 (0.783)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.783 (0.783)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.16 (  0.16)
Overall Timing[ 30/  1]	epoch_time 0.0419 (0.0437)	validation_time 0.0003 (0.0006)	train_time 0.0416 (0.0429)
record: (train_acc, test_acc) (0.652500018954277, 0.7040000557899475)
last accs (train_acc, test_acc) (0.4820000092089176, 0.5020000338554382)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.76it/s] 19%|#9        | 5/26 [00:00<00:00, 23.26it/s] 35%|###4      | 9/26 [00:00<00:00, 29.87it/s] 50%|#####     | 13/26 [00:00<00:00, 30.26it/s] 65%|######5   | 17/26 [00:00<00:00, 29.39it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.20it/s] 92%|#########2| 24/26 [00:00<00:00, 31.23it/s]100%|##########| 26/26 [00:00<00:00, 26.99it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 806 200
penalty weights 10000.0
args.step pgd_anneal_iters 806 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 807 200
penalty weights 10000.0
args.step pgd_anneal_iters 807 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 808 200
penalty weights 10000.0
args.step pgd_anneal_iters 808 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 809 200
penalty weights 10000.0
args.step pgd_anneal_iters 809 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 810 200
penalty weights 10000.0
args.step pgd_anneal_iters 810 600
dim_v 512
rho, theta 284 tensor(-4.3382e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 811 200
penalty weights 10000.0
args.step pgd_anneal_iters 811 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 812 200
penalty weights 10000.0
args.step pgd_anneal_iters 812 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 813 200
penalty weights 10000.0
args.step pgd_anneal_iters 813 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 814 200
penalty weights 10000.0
args.step pgd_anneal_iters 814 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 815 200
penalty weights 10000.0
args.step pgd_anneal_iters 815 600
dim_v 512
rho, theta 283 tensor(-5.8842e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 816 200
penalty weights 10000.0
args.step pgd_anneal_iters 816 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 817 200
penalty weights 10000.0
args.step pgd_anneal_iters 817 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 818 200
penalty weights 10000.0
args.step pgd_anneal_iters 818 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 819 200
penalty weights 10000.0
args.step pgd_anneal_iters 819 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 820 200
penalty weights 10000.0
args.step pgd_anneal_iters 820 600
dim_v 512
rho, theta 283 tensor(-5.4663e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 821 200
penalty weights 10000.0
args.step pgd_anneal_iters 821 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 822 200
penalty weights 10000.0
args.step pgd_anneal_iters 822 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 823 200
penalty weights 10000.0
args.step pgd_anneal_iters 823 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 824 200
penalty weights 10000.0
args.step pgd_anneal_iters 824 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 825 200
penalty weights 10000.0
args.step pgd_anneal_iters 825 600
dim_v 512
rho, theta 283 tensor(-4.8078e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 826 200
penalty weights 10000.0
args.step pgd_anneal_iters 826 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 827 200
penalty weights 10000.0
args.step pgd_anneal_iters 827 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 828 200
penalty weights 10000.0
args.step pgd_anneal_iters 828 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 829 200
penalty weights 10000.0
args.step pgd_anneal_iters 829 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 830 200
penalty weights 10000.0
args.step pgd_anneal_iters 830 600
dim_v 512
rho, theta 282 tensor(-4.7392e-05, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 831 200
penalty weights 10000.0
args.step pgd_anneal_iters 831 600
final projection at end of training
dim_v 512
rho, theta 282 tensor(-7.4794e-06, device='cuda:0')
Epoch: [31][  26/  26]	Loss 0.000 (0.000)	train_nll   0.67 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  37.54 ( 37.54)	train_acc   0.48 (  0.48)	train_minacc   0.69 (  0.60)	train_majacc   0.45 (  0.45)	train_corr   0.00 (  0.00)	l1 5.8828 (5.8930)	zero_count 229.0000 (41.2540)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 26.67it/s] 31%|###       | 8/26 [00:00<00:00, 38.06it/s]                                               31%|###       | 8/26 [00:00<00:00, 38.06it/s] 50%|#####     | 13/26 [00:00<00:00, 38.14it/s] 69%|######9   | 18/26 [00:00<00:00, 39.99it/s]                                                69%|######9   | 18/26 [00:00<00:00, 39.99it/s] 88%|########8 | 23/26 [00:00<00:00, 41.95it/s]100%|##########| 26/26 [00:00<00:00, 37.48it/s]
Test: [   0/  26]	Loss 0.658 (0.658)	test_acc   0.44 (  0.44)	test_minacc   0.70 (  0.70)	test_majacc   0.40 (  0.40)	Loss_d 0.658 (0.658)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.40 (  0.40)	test_corr_d   0.20 (  0.20)
Test: [  10/  26]	Loss 0.664 (0.666)	test_acc   0.47 (  0.48)	test_minacc   0.74 (  0.61)	test_majacc   0.42 (  0.46)	Loss_d 0.664 (0.666)	test_acc_d   0.47 (  0.48)	test_minacc_d   0.74 (  0.61)	test_majacc_d   0.42 (  0.46)	test_corr_d   0.18 (  0.22)
Test: [  20/  26]	Loss 0.674 (0.667)	test_acc   0.48 (  0.48)	test_minacc   0.45 (  0.60)	test_majacc   0.49 (  0.45)	Loss_d 0.674 (0.667)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.45 (  0.60)	test_majacc_d   0.49 (  0.45)	test_corr_d   0.24 (  0.22)
Test: [  26/  26]	Loss 0.667 (0.666)	test_acc   0.48 (  0.47)	test_minacc   0.69 (  0.61)	test_majacc   0.45 (  0.45)	Loss_d 0.667 (0.666)	test_acc_d   0.48 (  0.47)	test_minacc_d   0.69 (  0.61)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.19 (  0.22)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.50it/s]
Test: [  0/  1]	Loss 0.777 (0.777)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.777 (0.777)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.16 (  0.16)
Test: [  1/  1]	Loss 0.777 (0.777)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.777 (0.777)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.16 (  0.16)
Overall Timing[ 31/  1]	epoch_time 0.0449 (0.0437)	validation_time 0.0005 (0.0006)	train_time 0.0444 (0.0430)
record: (train_acc, test_acc) (0.652500018954277, 0.7040000557899475)
last accs (train_acc, test_acc) (0.4743000091612339, 0.5040000081062317)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.92it/s] 15%|#5        | 4/26 [00:00<00:01, 15.61it/s] 31%|###       | 8/26 [00:00<00:00, 22.96it/s] 42%|####2     | 11/26 [00:00<00:00, 24.19it/s] 54%|#####3    | 14/26 [00:00<00:00, 25.17it/s] 69%|######9   | 18/26 [00:00<00:00, 28.31it/s] 81%|########  | 21/26 [00:00<00:00, 28.66it/s] 96%|#########6| 25/26 [00:00<00:00, 29.51it/s]100%|##########| 26/26 [00:01<00:00, 24.78it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 832 200
penalty weights 10000.0
args.step pgd_anneal_iters 832 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 833 200
penalty weights 10000.0
args.step pgd_anneal_iters 833 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 834 200
penalty weights 10000.0
args.step pgd_anneal_iters 834 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 835 200
penalty weights 10000.0
args.step pgd_anneal_iters 835 600
dim_v 512
rho, theta 282 tensor(-2.8238e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 836 200
penalty weights 10000.0
args.step pgd_anneal_iters 836 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 837 200
penalty weights 10000.0
args.step pgd_anneal_iters 837 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 838 200
penalty weights 10000.0
args.step pgd_anneal_iters 838 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 839 200
penalty weights 10000.0
args.step pgd_anneal_iters 839 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 840 200
penalty weights 10000.0
args.step pgd_anneal_iters 840 600
dim_v 512
rho, theta 281 tensor(-4.8806e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 841 200
penalty weights 10000.0
args.step pgd_anneal_iters 841 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 842 200
penalty weights 10000.0
args.step pgd_anneal_iters 842 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 843 200
penalty weights 10000.0
args.step pgd_anneal_iters 843 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 844 200
penalty weights 10000.0
args.step pgd_anneal_iters 844 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 845 200
penalty weights 10000.0
args.step pgd_anneal_iters 845 600
dim_v 512
rho, theta 281 tensor(-5.0004e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 846 200
penalty weights 10000.0
args.step pgd_anneal_iters 846 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 847 200
penalty weights 10000.0
args.step pgd_anneal_iters 847 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 848 200
penalty weights 10000.0
args.step pgd_anneal_iters 848 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 849 200
penalty weights 10000.0
args.step pgd_anneal_iters 849 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 850 200
penalty weights 10000.0
args.step pgd_anneal_iters 850 600
dim_v 512
rho, theta 281 tensor(-4.2183e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 851 200
penalty weights 10000.0
args.step pgd_anneal_iters 851 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 852 200
penalty weights 10000.0
args.step pgd_anneal_iters 852 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 853 200
penalty weights 10000.0
args.step pgd_anneal_iters 853 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 854 200
penalty weights 10000.0
args.step pgd_anneal_iters 854 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 855 200
penalty weights 10000.0
args.step pgd_anneal_iters 855 600
dim_v 512
rho, theta 281 tensor(-4.1297e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 856 200
penalty weights 10000.0
args.step pgd_anneal_iters 856 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 857 200
penalty weights 10000.0
args.step pgd_anneal_iters 857 600
final projection at end of training
dim_v 512
rho, theta 280 tensor(-1.3647e-05, device='cuda:0')
Epoch: [32][  26/  26]	Loss 0.000 (0.000)	train_nll   0.67 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  37.54 ( 37.54)	train_acc   0.48 (  0.47)	train_minacc   0.72 (  0.62)	train_majacc   0.44 (  0.45)	train_corr   0.00 (  0.00)	l1 5.8869 (5.8916)	zero_count 0.0000 (53.7420)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  4.10it/s] 23%|##3       | 6/26 [00:00<00:00, 20.77it/s]                                               23%|##3       | 6/26 [00:00<00:00, 20.77it/s] 42%|####2     | 11/26 [00:00<00:00, 29.88it/s] 62%|######1   | 16/26 [00:00<00:00, 35.94it/s]                                                62%|######1   | 16/26 [00:00<00:00, 35.94it/s] 81%|########  | 21/26 [00:00<00:00, 36.05it/s]100%|##########| 26/26 [00:00<00:00, 30.59it/s]
Test: [   0/  26]	Loss 0.660 (0.660)	test_acc   0.43 (  0.43)	test_minacc   0.70 (  0.70)	test_majacc   0.39 (  0.39)	Loss_d 0.660 (0.660)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.39 (  0.39)	test_corr_d   0.19 (  0.19)
Test: [  10/  26]	Loss 0.665 (0.667)	test_acc   0.47 (  0.48)	test_minacc   0.78 (  0.62)	test_majacc   0.40 (  0.45)	Loss_d 0.665 (0.667)	test_acc_d   0.47 (  0.48)	test_minacc_d   0.78 (  0.62)	test_majacc_d   0.40 (  0.45)	test_corr_d   0.18 (  0.21)
Test: [  20/  26]	Loss 0.674 (0.668)	test_acc   0.48 (  0.47)	test_minacc   0.45 (  0.61)	test_majacc   0.48 (  0.45)	Loss_d 0.674 (0.668)	test_acc_d   0.48 (  0.47)	test_minacc_d   0.45 (  0.61)	test_majacc_d   0.48 (  0.45)	test_corr_d   0.23 (  0.21)
Test: [  26/  26]	Loss 0.668 (0.667)	test_acc   0.48 (  0.47)	test_minacc   0.72 (  0.62)	test_majacc   0.44 (  0.45)	Loss_d 0.668 (0.667)	test_acc_d   0.48 (  0.47)	test_minacc_d   0.72 (  0.62)	test_majacc_d   0.44 (  0.45)	test_corr_d   0.19 (  0.21)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.19it/s]
Test: [  0/  1]	Loss 0.771 (0.771)	test_acc   0.50 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.771 (0.771)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.15 (  0.15)
Test: [  1/  1]	Loss 0.771 (0.771)	test_acc   0.50 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.771 (0.771)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.15 (  0.15)
Overall Timing[ 32/  1]	epoch_time 0.0419 (0.0437)	validation_time 0.0004 (0.0006)	train_time 0.0415 (0.0429)
record: (train_acc, test_acc) (0.652500018954277, 0.7040000557899475)
last accs (train_acc, test_acc) (0.47140000680088995, 0.5049999952316284)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.83it/s] 15%|#5        | 4/26 [00:00<00:01, 13.87it/s] 31%|###       | 8/26 [00:00<00:00, 20.72it/s] 46%|####6     | 12/26 [00:00<00:00, 25.60it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.42it/s] 69%|######9   | 18/26 [00:00<00:00, 26.51it/s] 85%|########4 | 22/26 [00:00<00:00, 29.15it/s] 96%|#########6| 25/26 [00:01<00:00, 28.57it/s]100%|##########| 26/26 [00:01<00:00, 23.54it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 858 200
penalty weights 10000.0
args.step pgd_anneal_iters 858 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 859 200
penalty weights 10000.0
args.step pgd_anneal_iters 859 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 860 200
penalty weights 10000.0
args.step pgd_anneal_iters 860 600
dim_v 512
rho, theta 282 tensor(-1.4844e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 861 200
penalty weights 10000.0
args.step pgd_anneal_iters 861 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 862 200
penalty weights 10000.0
args.step pgd_anneal_iters 862 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 863 200
penalty weights 10000.0
args.step pgd_anneal_iters 863 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 864 200
penalty weights 10000.0
args.step pgd_anneal_iters 864 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 865 200
penalty weights 10000.0
args.step pgd_anneal_iters 865 600
dim_v 512
rho, theta 280 tensor(-4.1280e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 866 200
penalty weights 10000.0
args.step pgd_anneal_iters 866 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 867 200
penalty weights 10000.0
args.step pgd_anneal_iters 867 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 868 200
penalty weights 10000.0
args.step pgd_anneal_iters 868 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 869 200
penalty weights 10000.0
args.step pgd_anneal_iters 869 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 870 200
penalty weights 10000.0
args.step pgd_anneal_iters 870 600
dim_v 512
rho, theta 279 tensor(-4.7137e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 871 200
penalty weights 10000.0
args.step pgd_anneal_iters 871 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 872 200
penalty weights 10000.0
args.step pgd_anneal_iters 872 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 873 200
penalty weights 10000.0
args.step pgd_anneal_iters 873 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 874 200
penalty weights 10000.0
args.step pgd_anneal_iters 874 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 875 200
penalty weights 10000.0
args.step pgd_anneal_iters 875 600
dim_v 512
rho, theta 279 tensor(-3.7699e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 876 200
penalty weights 10000.0
args.step pgd_anneal_iters 876 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 877 200
penalty weights 10000.0
args.step pgd_anneal_iters 877 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 878 200
penalty weights 10000.0
args.step pgd_anneal_iters 878 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 879 200
penalty weights 10000.0
args.step pgd_anneal_iters 879 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 880 200
penalty weights 10000.0
args.step pgd_anneal_iters 880 600
dim_v 512
rho, theta 279 tensor(-3.7902e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 881 200
penalty weights 10000.0
args.step pgd_anneal_iters 881 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 882 200
penalty weights 10000.0
args.step pgd_anneal_iters 882 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 883 200
penalty weights 10000.0
args.step pgd_anneal_iters 883 600
final projection at end of training
dim_v 512
rho, theta 279 tensor(-1.8946e-05, device='cuda:0')
Epoch: [33][  26/  26]	Loss 0.000 (0.000)	train_nll   0.67 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  37.54 ( 37.54)	train_acc   0.48 (  0.47)	train_minacc   0.69 (  0.63)	train_majacc   0.44 (  0.44)	train_corr   0.00 (  0.00)	l1 5.8910 (5.8912)	zero_count 0.0000 (54.0930)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.95it/s] 27%|##6       | 7/26 [00:00<00:00, 30.99it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.99it/s] 46%|####6     | 12/26 [00:00<00:00, 36.20it/s] 65%|######5   | 17/26 [00:00<00:00, 39.70it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.70it/s] 85%|########4 | 22/26 [00:00<00:00, 40.21it/s]100%|##########| 26/26 [00:00<00:00, 35.47it/s]
Test: [   0/  26]	Loss 0.662 (0.662)	test_acc   0.43 (  0.43)	test_minacc   0.72 (  0.72)	test_majacc   0.38 (  0.38)	Loss_d 0.662 (0.662)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.38 (  0.38)	test_corr_d   0.18 (  0.18)
Test: [  10/  26]	Loss 0.666 (0.668)	test_acc   0.45 (  0.47)	test_minacc   0.76 (  0.63)	test_majacc   0.39 (  0.44)	Loss_d 0.666 (0.668)	test_acc_d   0.45 (  0.47)	test_minacc_d   0.76 (  0.63)	test_majacc_d   0.39 (  0.44)	test_corr_d   0.17 (  0.20)
Test: [  20/  26]	Loss 0.675 (0.669)	test_acc   0.48 (  0.47)	test_minacc   0.45 (  0.62)	test_majacc   0.48 (  0.44)	Loss_d 0.675 (0.669)	test_acc_d   0.48 (  0.47)	test_minacc_d   0.45 (  0.62)	test_majacc_d   0.48 (  0.44)	test_corr_d   0.22 (  0.20)
Test: [  26/  26]	Loss 0.669 (0.668)	test_acc   0.48 (  0.47)	test_minacc   0.69 (  0.63)	test_majacc   0.44 (  0.44)	Loss_d 0.669 (0.668)	test_acc_d   0.48 (  0.47)	test_minacc_d   0.69 (  0.63)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.18 (  0.20)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.10it/s]
Test: [  0/  1]	Loss 0.767 (0.767)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.767 (0.767)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.15 (  0.15)
Test: [  1/  1]	Loss 0.767 (0.767)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.767 (0.767)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.15 (  0.15)
Overall Timing[ 33/  1]	epoch_time 0.0413 (0.0436)	validation_time 0.0003 (0.0006)	train_time 0.0409 (0.0429)
record: (train_acc, test_acc) (0.652500018954277, 0.7040000557899475)
last accs (train_acc, test_acc) (0.4679000044763088, 0.5060000419616699)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.89it/s] 15%|#5        | 4/26 [00:00<00:01, 19.20it/s] 27%|##6       | 7/26 [00:00<00:00, 22.95it/s] 42%|####2     | 11/26 [00:00<00:00, 27.58it/s] 54%|#####3    | 14/26 [00:00<00:00, 27.55it/s] 65%|######5   | 17/26 [00:00<00:00, 27.25it/s] 81%|########  | 21/26 [00:00<00:00, 29.92it/s] 92%|#########2| 24/26 [00:00<00:00, 29.24it/s]100%|##########| 26/26 [00:01<00:00, 25.77it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 884 200
penalty weights 10000.0
args.step pgd_anneal_iters 884 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 885 200
penalty weights 10000.0
args.step pgd_anneal_iters 885 600
dim_v 512
rho, theta 281 tensor(-9.6500e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 886 200
penalty weights 10000.0
args.step pgd_anneal_iters 886 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 887 200
penalty weights 10000.0
args.step pgd_anneal_iters 887 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 888 200
penalty weights 10000.0
args.step pgd_anneal_iters 888 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 889 200
penalty weights 10000.0
args.step pgd_anneal_iters 889 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 890 200
penalty weights 10000.0
args.step pgd_anneal_iters 890 600
dim_v 512
rho, theta 277 tensor(-3.3936e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 891 200
penalty weights 10000.0
args.step pgd_anneal_iters 891 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 892 200
penalty weights 10000.0
args.step pgd_anneal_iters 892 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 893 200
penalty weights 10000.0
args.step pgd_anneal_iters 893 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 894 200
penalty weights 10000.0
args.step pgd_anneal_iters 894 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 895 200
penalty weights 10000.0
args.step pgd_anneal_iters 895 600
dim_v 512
rho, theta 277 tensor(-4.1404e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 896 200
penalty weights 10000.0
args.step pgd_anneal_iters 896 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 897 200
penalty weights 10000.0
args.step pgd_anneal_iters 897 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 898 200
penalty weights 10000.0
args.step pgd_anneal_iters 898 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 899 200
penalty weights 10000.0
args.step pgd_anneal_iters 899 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 900 200
penalty weights 10000.0
args.step pgd_anneal_iters 900 600
dim_v 512
rho, theta 276 tensor(-3.8051e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 901 200
penalty weights 10000.0
args.step pgd_anneal_iters 901 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 902 200
penalty weights 10000.0
args.step pgd_anneal_iters 902 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 903 200
penalty weights 10000.0
args.step pgd_anneal_iters 903 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 904 200
penalty weights 10000.0
args.step pgd_anneal_iters 904 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 905 200
penalty weights 10000.0
args.step pgd_anneal_iters 905 600
dim_v 512
rho, theta 275 tensor(-3.3252e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 906 200
penalty weights 10000.0
args.step pgd_anneal_iters 906 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 907 200
penalty weights 10000.0
args.step pgd_anneal_iters 907 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 908 200
penalty weights 10000.0
args.step pgd_anneal_iters 908 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 909 200
penalty weights 10000.0
args.step pgd_anneal_iters 909 600
final projection at end of training
dim_v 512
rho, theta 275 tensor(-2.1302e-05, device='cuda:0')
Epoch: [34][  26/  26]	Loss 0.000 (0.000)	train_nll   0.67 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  37.55 ( 37.55)	train_acc   0.48 (  0.47)	train_minacc   0.69 (  0.64)	train_majacc   0.44 (  0.44)	train_corr   0.00 (  0.00)	l1 5.8941 (5.8908)	zero_count 0.0000 (54.6390)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.27it/s] 23%|##3       | 6/26 [00:00<00:00, 21.42it/s]                                               23%|##3       | 6/26 [00:00<00:00, 21.42it/s] 42%|####2     | 11/26 [00:00<00:00, 30.61it/s] 62%|######1   | 16/26 [00:00<00:00, 36.17it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.17it/s] 81%|########  | 21/26 [00:00<00:00, 36.54it/s]100%|##########| 26/26 [00:00<00:00, 31.26it/s]
Test: [   0/  26]	Loss 0.664 (0.664)	test_acc   0.42 (  0.42)	test_minacc   0.72 (  0.72)	test_majacc   0.37 (  0.37)	Loss_d 0.664 (0.664)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.37 (  0.37)	test_corr_d   0.17 (  0.17)
Test: [  10/  26]	Loss 0.667 (0.669)	test_acc   0.44 (  0.47)	test_minacc   0.76 (  0.64)	test_majacc   0.37 (  0.44)	Loss_d 0.667 (0.669)	test_acc_d   0.44 (  0.47)	test_minacc_d   0.76 (  0.64)	test_majacc_d   0.37 (  0.44)	test_corr_d   0.17 (  0.20)
Test: [  20/  26]	Loss 0.676 (0.670)	test_acc   0.48 (  0.47)	test_minacc   0.45 (  0.63)	test_majacc   0.48 (  0.44)	Loss_d 0.676 (0.670)	test_acc_d   0.48 (  0.47)	test_minacc_d   0.45 (  0.63)	test_majacc_d   0.48 (  0.44)	test_corr_d   0.22 (  0.20)
Test: [  26/  26]	Loss 0.670 (0.669)	test_acc   0.48 (  0.47)	test_minacc   0.69 (  0.64)	test_majacc   0.44 (  0.44)	Loss_d 0.670 (0.669)	test_acc_d   0.48 (  0.47)	test_minacc_d   0.69 (  0.64)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.17 (  0.20)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.39it/s]
Test: [  0/  1]	Loss 0.763 (0.763)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.763 (0.763)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.14 (  0.14)
Test: [  1/  1]	Loss 0.763 (0.763)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.763 (0.763)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.14 (  0.14)
Overall Timing[ 34/  1]	epoch_time 0.0409 (0.0435)	validation_time 0.0005 (0.0006)	train_time 0.0404 (0.0428)
record: (train_acc, test_acc) (0.652500018954277, 0.7040000557899475)
last accs (train_acc, test_acc) (0.46570000576972964, 0.5070000290870667)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.72it/s] 19%|#9        | 5/26 [00:00<00:00, 21.90it/s] 31%|###       | 8/26 [00:00<00:00, 24.75it/s] 42%|####2     | 11/26 [00:00<00:00, 25.86it/s] 58%|#####7    | 15/26 [00:00<00:00, 29.10it/s] 69%|######9   | 18/26 [00:00<00:00, 29.19it/s] 81%|########  | 21/26 [00:00<00:00, 28.99it/s] 96%|#########6| 25/26 [00:00<00:00, 31.00it/s]100%|##########| 26/26 [00:01<00:00, 25.93it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 910 200
penalty weights 10000.0
args.step pgd_anneal_iters 910 600
dim_v 512
rho, theta 279 tensor(-3.4894e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 911 200
penalty weights 10000.0
args.step pgd_anneal_iters 911 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 912 200
penalty weights 10000.0
args.step pgd_anneal_iters 912 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 913 200
penalty weights 10000.0
args.step pgd_anneal_iters 913 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 914 200
penalty weights 10000.0
args.step pgd_anneal_iters 914 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 915 200
penalty weights 10000.0
args.step pgd_anneal_iters 915 600
dim_v 512
rho, theta 275 tensor(-2.9832e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 916 200
penalty weights 10000.0
args.step pgd_anneal_iters 916 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 917 200
penalty weights 10000.0
args.step pgd_anneal_iters 917 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 918 200
penalty weights 10000.0
args.step pgd_anneal_iters 918 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 919 200
penalty weights 10000.0
args.step pgd_anneal_iters 919 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 920 200
penalty weights 10000.0
args.step pgd_anneal_iters 920 600
dim_v 512
rho, theta 275 tensor(-3.6687e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 921 200
penalty weights 10000.0
args.step pgd_anneal_iters 921 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 922 200
penalty weights 10000.0
args.step pgd_anneal_iters 922 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 923 200
penalty weights 10000.0
args.step pgd_anneal_iters 923 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 924 200
penalty weights 10000.0
args.step pgd_anneal_iters 924 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 925 200
penalty weights 10000.0
args.step pgd_anneal_iters 925 600
dim_v 512
rho, theta 275 tensor(-3.4852e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 926 200
penalty weights 10000.0
args.step pgd_anneal_iters 926 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 927 200
penalty weights 10000.0
args.step pgd_anneal_iters 927 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 928 200
penalty weights 10000.0
args.step pgd_anneal_iters 928 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 929 200
penalty weights 10000.0
args.step pgd_anneal_iters 929 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 930 200
penalty weights 10000.0
args.step pgd_anneal_iters 930 600
dim_v 512
rho, theta 275 tensor(-2.9723e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 931 200
penalty weights 10000.0
args.step pgd_anneal_iters 931 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 932 200
penalty weights 10000.0
args.step pgd_anneal_iters 932 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 933 200
penalty weights 10000.0
args.step pgd_anneal_iters 933 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 934 200
penalty weights 10000.0
args.step pgd_anneal_iters 934 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 935 200
penalty weights 10000.0
args.step pgd_anneal_iters 935 600
dim_v 512
rho, theta 274 tensor(-2.4014e-05, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [35][  26/  26]	Loss 0.000 (0.000)	train_nll   0.67 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  37.55 ( 37.55)	train_acc   0.48 (  0.47)	train_minacc   0.69 (  0.65)	train_majacc   0.44 (  0.43)	train_corr   0.00 (  0.00)	l1 5.8967 (5.8903)	zero_count 0.0000 (55.0680)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.17it/s] 15%|#5        | 4/26 [00:00<00:01, 17.55it/s] 35%|###4      | 9/26 [00:00<00:00, 29.78it/s]                                               35%|###4      | 9/26 [00:00<00:00, 29.78it/s] 54%|#####3    | 14/26 [00:00<00:00, 33.05it/s] 73%|#######3  | 19/26 [00:00<00:00, 37.64it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 37.64it/s] 92%|#########2| 24/26 [00:00<00:00, 40.73it/s]100%|##########| 26/26 [00:00<00:00, 32.91it/s]
Test: [   0/  26]	Loss 0.665 (0.665)	test_acc   0.41 (  0.41)	test_minacc   0.72 (  0.72)	test_majacc   0.35 (  0.35)	Loss_d 0.665 (0.665)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.35 (  0.35)	test_corr_d   0.16 (  0.16)
Test: [  10/  26]	Loss 0.668 (0.670)	test_acc   0.43 (  0.46)	test_minacc   0.79 (  0.65)	test_majacc   0.36 (  0.43)	Loss_d 0.668 (0.670)	test_acc_d   0.43 (  0.46)	test_minacc_d   0.79 (  0.65)	test_majacc_d   0.36 (  0.43)	test_corr_d   0.16 (  0.19)
Test: [  20/  26]	Loss 0.676 (0.670)	test_acc   0.48 (  0.46)	test_minacc   0.47 (  0.64)	test_majacc   0.48 (  0.43)	Loss_d 0.676 (0.670)	test_acc_d   0.48 (  0.46)	test_minacc_d   0.47 (  0.64)	test_majacc_d   0.48 (  0.43)	test_corr_d   0.21 (  0.19)
Test: [  26/  26]	Loss 0.671 (0.670)	test_acc   0.47 (  0.46)	test_minacc   0.67 (  0.65)	test_majacc   0.44 (  0.43)	Loss_d 0.671 (0.670)	test_acc_d   0.47 (  0.46)	test_minacc_d   0.67 (  0.65)	test_majacc_d   0.44 (  0.43)	test_corr_d   0.17 (  0.19)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.75it/s]
Test: [  0/  1]	Loss 0.759 (0.759)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.759 (0.759)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.14 (  0.14)
Test: [  1/  1]	Loss 0.759 (0.759)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.759 (0.759)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.14 (  0.14)
Overall Timing[ 35/  1]	epoch_time 0.0461 (0.0436)	validation_time 0.0003 (0.0006)	train_time 0.0457 (0.0429)
record: (train_acc, test_acc) (0.652500018954277, 0.7040000557899475)
last accs (train_acc, test_acc) (0.46390000757575034, 0.5080000162124634)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.98it/s] 12%|#1        | 3/26 [00:00<00:02, 11.29it/s] 23%|##3       | 6/26 [00:00<00:01, 17.92it/s] 38%|###8      | 10/26 [00:00<00:00, 22.87it/s] 54%|#####3    | 14/26 [00:00<00:00, 25.90it/s] 65%|######5   | 17/26 [00:00<00:00, 26.26it/s] 77%|#######6  | 20/26 [00:00<00:00, 26.44it/s] 92%|#########2| 24/26 [00:00<00:00, 28.37it/s]100%|##########| 26/26 [00:01<00:00, 23.25it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 936 200
penalty weights 10000.0
args.step pgd_anneal_iters 936 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 937 200
penalty weights 10000.0
args.step pgd_anneal_iters 937 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 938 200
penalty weights 10000.0
args.step pgd_anneal_iters 938 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 939 200
penalty weights 10000.0
args.step pgd_anneal_iters 939 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 940 200
penalty weights 10000.0
args.step pgd_anneal_iters 940 600
dim_v 512
rho, theta 273 tensor(-2.4912e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 941 200
penalty weights 10000.0
args.step pgd_anneal_iters 941 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 942 200
penalty weights 10000.0
args.step pgd_anneal_iters 942 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 943 200
penalty weights 10000.0
args.step pgd_anneal_iters 943 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 944 200
penalty weights 10000.0
args.step pgd_anneal_iters 944 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 945 200
penalty weights 10000.0
args.step pgd_anneal_iters 945 600
dim_v 512
rho, theta 274 tensor(-3.2860e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 946 200
penalty weights 10000.0
args.step pgd_anneal_iters 946 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 947 200
penalty weights 10000.0
args.step pgd_anneal_iters 947 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 948 200
penalty weights 10000.0
args.step pgd_anneal_iters 948 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 949 200
penalty weights 10000.0
args.step pgd_anneal_iters 949 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 950 200
penalty weights 10000.0
args.step pgd_anneal_iters 950 600
dim_v 512
rho, theta 272 tensor(-3.2535e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 951 200
penalty weights 10000.0
args.step pgd_anneal_iters 951 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 952 200
penalty weights 10000.0
args.step pgd_anneal_iters 952 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 953 200
penalty weights 10000.0
args.step pgd_anneal_iters 953 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 954 200
penalty weights 10000.0
args.step pgd_anneal_iters 954 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 955 200
penalty weights 10000.0
args.step pgd_anneal_iters 955 600
dim_v 512
rho, theta 272 tensor(-2.7571e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 956 200
penalty weights 10000.0
args.step pgd_anneal_iters 956 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 957 200
penalty weights 10000.0
args.step pgd_anneal_iters 957 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 958 200
penalty weights 10000.0
args.step pgd_anneal_iters 958 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 959 200
penalty weights 10000.0
args.step pgd_anneal_iters 959 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 960 200
penalty weights 10000.0
args.step pgd_anneal_iters 960 600
dim_v 512
rho, theta 272 tensor(-2.3421e-05, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 961 200
penalty weights 10000.0
args.step pgd_anneal_iters 961 600
final projection at end of training
dim_v 512
rho, theta 275 tensor(-3.3603e-06, device='cuda:0')
Epoch: [36][  26/  26]	Loss 0.000 (0.000)	train_nll   0.67 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  37.55 ( 37.55)	train_acc   0.49 (  0.47)	train_minacc   0.67 (  0.65)	train_majacc   0.45 (  0.43)	train_corr   0.00 (  0.00)	l1 5.8828 (5.8900)	zero_count 239.0000 (52.3850)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.34it/s] 27%|##6       | 7/26 [00:00<00:00, 34.13it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.13it/s] 46%|####6     | 12/26 [00:00<00:00, 40.23it/s] 69%|######9   | 18/26 [00:00<00:00, 42.25it/s]                                                69%|######9   | 18/26 [00:00<00:00, 42.25it/s] 88%|########8 | 23/26 [00:00<00:00, 44.27it/s]100%|##########| 26/26 [00:00<00:00, 39.02it/s]
Test: [   0/  26]	Loss 0.666 (0.666)	test_acc   0.41 (  0.41)	test_minacc   0.69 (  0.69)	test_majacc   0.37 (  0.37)	Loss_d 0.666 (0.666)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.37 (  0.37)	test_corr_d   0.16 (  0.16)
Test: [  10/  26]	Loss 0.669 (0.671)	test_acc   0.44 (  0.47)	test_minacc   0.81 (  0.65)	test_majacc   0.36 (  0.43)	Loss_d 0.669 (0.671)	test_acc_d   0.44 (  0.47)	test_minacc_d   0.81 (  0.65)	test_majacc_d   0.36 (  0.43)	test_corr_d   0.16 (  0.19)
Test: [  20/  26]	Loss 0.677 (0.671)	test_acc   0.48 (  0.47)	test_minacc   0.47 (  0.64)	test_majacc   0.48 (  0.44)	Loss_d 0.677 (0.671)	test_acc_d   0.48 (  0.47)	test_minacc_d   0.47 (  0.64)	test_majacc_d   0.48 (  0.44)	test_corr_d   0.21 (  0.19)
Test: [  26/  26]	Loss 0.672 (0.671)	test_acc   0.48 (  0.47)	test_minacc   0.67 (  0.65)	test_majacc   0.45 (  0.43)	Loss_d 0.672 (0.671)	test_acc_d   0.48 (  0.47)	test_minacc_d   0.67 (  0.65)	test_majacc_d   0.45 (  0.43)	test_corr_d   0.16 (  0.19)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.64it/s]
Test: [  0/  1]	Loss 0.756 (0.756)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.756 (0.756)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.14 (  0.14)
Test: [  1/  1]	Loss 0.756 (0.756)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.756 (0.756)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.14 (  0.14)
Overall Timing[ 36/  1]	epoch_time 0.0455 (0.0437)	validation_time 0.0004 (0.0006)	train_time 0.0451 (0.0429)
record: (train_acc, test_acc) (0.652500018954277, 0.7040000557899475)
last accs (train_acc, test_acc) (0.4654000048339367, 0.5090000033378601)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  4.15it/s] 15%|#5        | 4/26 [00:00<00:01, 12.32it/s] 31%|###       | 8/26 [00:00<00:00, 19.35it/s] 42%|####2     | 11/26 [00:00<00:00, 22.07it/s] 54%|#####3    | 14/26 [00:00<00:00, 23.78it/s] 69%|######9   | 18/26 [00:00<00:00, 27.40it/s] 81%|########  | 21/26 [00:00<00:00, 27.74it/s] 92%|#########2| 24/26 [00:01<00:00, 27.88it/s]100%|##########| 26/26 [00:01<00:00, 22.53it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 962 200
penalty weights 10000.0
args.step pgd_anneal_iters 962 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 963 200
penalty weights 10000.0
args.step pgd_anneal_iters 963 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 964 200
penalty weights 10000.0
args.step pgd_anneal_iters 964 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 965 200
penalty weights 10000.0
args.step pgd_anneal_iters 965 600
dim_v 512
rho, theta 272 tensor(-1.6826e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 966 200
penalty weights 10000.0
args.step pgd_anneal_iters 966 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 967 200
penalty weights 10000.0
args.step pgd_anneal_iters 967 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 968 200
penalty weights 10000.0
args.step pgd_anneal_iters 968 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 969 200
penalty weights 10000.0
args.step pgd_anneal_iters 969 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 970 200
penalty weights 10000.0
args.step pgd_anneal_iters 970 600
dim_v 512
rho, theta 273 tensor(-3.0354e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 971 200
penalty weights 10000.0
args.step pgd_anneal_iters 971 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 972 200
penalty weights 10000.0
args.step pgd_anneal_iters 972 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 973 200
penalty weights 10000.0
args.step pgd_anneal_iters 973 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 974 200
penalty weights 10000.0
args.step pgd_anneal_iters 974 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 975 200
penalty weights 10000.0
args.step pgd_anneal_iters 975 600
dim_v 512
rho, theta 269 tensor(-3.0816e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 976 200
penalty weights 10000.0
args.step pgd_anneal_iters 976 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 977 200
penalty weights 10000.0
args.step pgd_anneal_iters 977 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 978 200
penalty weights 10000.0
args.step pgd_anneal_iters 978 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 979 200
penalty weights 10000.0
args.step pgd_anneal_iters 979 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 980 200
penalty weights 10000.0
args.step pgd_anneal_iters 980 600
dim_v 512
rho, theta 269 tensor(-2.6459e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 981 200
penalty weights 10000.0
args.step pgd_anneal_iters 981 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 982 200
penalty weights 10000.0
args.step pgd_anneal_iters 982 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 983 200
penalty weights 10000.0
args.step pgd_anneal_iters 983 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 984 200
penalty weights 10000.0
args.step pgd_anneal_iters 984 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 985 200
penalty weights 10000.0
args.step pgd_anneal_iters 985 600
dim_v 512
rho, theta 269 tensor(-2.1747e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 986 200
penalty weights 10000.0
args.step pgd_anneal_iters 986 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 987 200
penalty weights 10000.0
args.step pgd_anneal_iters 987 600
final projection at end of training
dim_v 512
rho, theta 274 tensor(-6.5769e-06, device='cuda:0')
Epoch: [37][  26/  26]	Loss 0.000 (0.000)	train_nll   0.67 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  37.55 ( 37.55)	train_acc   0.48 (  0.47)	train_minacc   0.67 (  0.66)	train_majacc   0.45 (  0.43)	train_corr   0.00 (  0.00)	l1 5.8859 (5.8893)	zero_count 0.0000 (56.1210)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.31it/s] 23%|##3       | 6/26 [00:00<00:00, 28.01it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.01it/s] 42%|####2     | 11/26 [00:00<00:00, 32.57it/s] 65%|######5   | 17/26 [00:00<00:00, 39.92it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.92it/s] 85%|########4 | 22/26 [00:00<00:00, 41.68it/s]100%|##########| 26/26 [00:00<00:00, 35.03it/s]
Test: [   0/  26]	Loss 0.667 (0.667)	test_acc   0.42 (  0.42)	test_minacc   0.69 (  0.69)	test_majacc   0.38 (  0.38)	Loss_d 0.667 (0.667)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.38 (  0.38)	test_corr_d   0.15 (  0.15)
Test: [  10/  26]	Loss 0.670 (0.671)	test_acc   0.43 (  0.47)	test_minacc   0.79 (  0.66)	test_majacc   0.35 (  0.43)	Loss_d 0.670 (0.671)	test_acc_d   0.43 (  0.47)	test_minacc_d   0.79 (  0.66)	test_majacc_d   0.35 (  0.43)	test_corr_d   0.16 (  0.18)
Test: [  20/  26]	Loss 0.677 (0.672)	test_acc   0.48 (  0.47)	test_minacc   0.47 (  0.65)	test_majacc   0.48 (  0.43)	Loss_d 0.677 (0.672)	test_acc_d   0.48 (  0.47)	test_minacc_d   0.47 (  0.65)	test_majacc_d   0.48 (  0.43)	test_corr_d   0.20 (  0.18)
Test: [  26/  26]	Loss 0.672 (0.671)	test_acc   0.48 (  0.47)	test_minacc   0.67 (  0.66)	test_majacc   0.45 (  0.43)	Loss_d 0.672 (0.671)	test_acc_d   0.48 (  0.47)	test_minacc_d   0.67 (  0.66)	test_majacc_d   0.45 (  0.43)	test_corr_d   0.15 (  0.18)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.80it/s]
Test: [  0/  1]	Loss 0.754 (0.754)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.754 (0.754)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 0.754 (0.754)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.754 (0.754)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.13 (  0.13)
Overall Timing[ 37/  1]	epoch_time 0.0429 (0.0436)	validation_time 0.0004 (0.0006)	train_time 0.0424 (0.0429)
record: (train_acc, test_acc) (0.652500018954277, 0.7040000557899475)
last accs (train_acc, test_acc) (0.46640000730752945, 0.5090000033378601)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.28it/s] 15%|#5        | 4/26 [00:00<00:01, 17.28it/s] 31%|###       | 8/26 [00:00<00:00, 22.78it/s] 46%|####6     | 12/26 [00:00<00:00, 27.38it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.90it/s] 69%|######9   | 18/26 [00:00<00:00, 28.50it/s] 85%|########4 | 22/26 [00:00<00:00, 30.75it/s]100%|##########| 26/26 [00:00<00:00, 30.83it/s]100%|##########| 26/26 [00:01<00:00, 25.48it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 988 200
penalty weights 10000.0
args.step pgd_anneal_iters 988 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 989 200
penalty weights 10000.0
args.step pgd_anneal_iters 989 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 990 200
penalty weights 10000.0
args.step pgd_anneal_iters 990 600
dim_v 512
rho, theta 273 tensor(-8.7380e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 991 200
penalty weights 10000.0
args.step pgd_anneal_iters 991 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 992 200
penalty weights 10000.0
args.step pgd_anneal_iters 992 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 993 200
penalty weights 10000.0
args.step pgd_anneal_iters 993 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 994 200
penalty weights 10000.0
args.step pgd_anneal_iters 994 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 995 200
penalty weights 10000.0
args.step pgd_anneal_iters 995 600
dim_v 512
rho, theta 270 tensor(-2.8663e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 996 200
penalty weights 10000.0
args.step pgd_anneal_iters 996 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 997 200
penalty weights 10000.0
args.step pgd_anneal_iters 997 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 998 200
penalty weights 10000.0
args.step pgd_anneal_iters 998 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 999 200
penalty weights 10000.0
args.step pgd_anneal_iters 999 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1000 200
penalty weights 10000.0
args.step pgd_anneal_iters 1000 600
dim_v 512
rho, theta 269 tensor(-2.9624e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1001 200
penalty weights 10000.0
args.step pgd_anneal_iters 1001 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1002 200
penalty weights 10000.0
args.step pgd_anneal_iters 1002 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1003 200
penalty weights 10000.0
args.step pgd_anneal_iters 1003 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1004 200
penalty weights 10000.0
args.step pgd_anneal_iters 1004 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1005 200
penalty weights 10000.0
args.step pgd_anneal_iters 1005 600
dim_v 512
rho, theta 268 tensor(-2.5841e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1006 200
penalty weights 10000.0
args.step pgd_anneal_iters 1006 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1007 200
penalty weights 10000.0
args.step pgd_anneal_iters 1007 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1008 200
penalty weights 10000.0
args.step pgd_anneal_iters 1008 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1009 200
penalty weights 10000.0
args.step pgd_anneal_iters 1009 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1010 200
penalty weights 10000.0
args.step pgd_anneal_iters 1010 600
dim_v 512
rho, theta 267 tensor(-2.1118e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1011 200
penalty weights 10000.0
args.step pgd_anneal_iters 1011 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1012 200
penalty weights 10000.0
args.step pgd_anneal_iters 1012 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1013 200
penalty weights 10000.0
args.step pgd_anneal_iters 1013 600
final projection at end of training
dim_v 512
rho, theta 271 tensor(-9.9277e-06, device='cuda:0')
Epoch: [38][  26/  26]	Loss 0.000 (0.000)	train_nll   0.67 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  37.55 ( 37.55)	train_acc   0.48 (  0.47)	train_minacc   0.67 (  0.66)	train_majacc   0.45 (  0.43)	train_corr   0.00 (  0.00)	l1 5.8892 (5.8892)	zero_count 0.0000 (56.3550)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.26it/s] 23%|##3       | 6/26 [00:00<00:00, 30.68it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.68it/s] 42%|####2     | 11/26 [00:00<00:00, 37.28it/s] 62%|######1   | 16/26 [00:00<00:00, 41.03it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.03it/s] 81%|########  | 21/26 [00:00<00:00, 39.86it/s]100%|##########| 26/26 [00:00<00:00, 42.89it/s]100%|##########| 26/26 [00:00<00:00, 35.73it/s]
Test: [   0/  26]	Loss 0.668 (0.668)	test_acc   0.41 (  0.41)	test_minacc   0.69 (  0.69)	test_majacc   0.37 (  0.37)	Loss_d 0.668 (0.668)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.37 (  0.37)	test_corr_d   0.15 (  0.15)
Test: [  10/  26]	Loss 0.670 (0.672)	test_acc   0.43 (  0.46)	test_minacc   0.79 (  0.67)	test_majacc   0.35 (  0.43)	Loss_d 0.670 (0.672)	test_acc_d   0.43 (  0.46)	test_minacc_d   0.79 (  0.67)	test_majacc_d   0.35 (  0.43)	test_corr_d   0.15 (  0.18)
Test: [  20/  26]	Loss 0.677 (0.672)	test_acc   0.48 (  0.47)	test_minacc   0.47 (  0.66)	test_majacc   0.48 (  0.43)	Loss_d 0.677 (0.672)	test_acc_d   0.48 (  0.47)	test_minacc_d   0.47 (  0.66)	test_majacc_d   0.48 (  0.43)	test_corr_d   0.20 (  0.18)
Test: [  26/  26]	Loss 0.673 (0.672)	test_acc   0.48 (  0.46)	test_minacc   0.67 (  0.66)	test_majacc   0.45 (  0.43)	Loss_d 0.673 (0.672)	test_acc_d   0.48 (  0.46)	test_minacc_d   0.67 (  0.66)	test_majacc_d   0.45 (  0.43)	test_corr_d   0.15 (  0.18)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.92it/s]
Test: [  0/  1]	Loss 0.751 (0.751)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.751 (0.751)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 0.751 (0.751)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.751 (0.751)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.13 (  0.13)
Overall Timing[ 38/  1]	epoch_time 0.0436 (0.0436)	validation_time 0.0004 (0.0006)	train_time 0.0431 (0.0429)
record: (train_acc, test_acc) (0.652500018954277, 0.7040000557899475)
last accs (train_acc, test_acc) (0.46480000391602516, 0.5090000033378601)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.44it/s] 12%|#1        | 3/26 [00:00<00:01, 12.87it/s] 27%|##6       | 7/26 [00:00<00:00, 20.53it/s] 42%|####2     | 11/26 [00:00<00:00, 25.66it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.93it/s] 69%|######9   | 18/26 [00:00<00:00, 28.52it/s] 85%|########4 | 22/26 [00:00<00:00, 29.50it/s]100%|##########| 26/26 [00:00<00:00, 31.48it/s]100%|##########| 26/26 [00:01<00:00, 25.40it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1014 200
penalty weights 10000.0
args.step pgd_anneal_iters 1014 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1015 200
penalty weights 10000.0
args.step pgd_anneal_iters 1015 600
dim_v 512
rho, theta 272 tensor(-5.5631e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1016 200
penalty weights 10000.0
args.step pgd_anneal_iters 1016 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1017 200
penalty weights 10000.0
args.step pgd_anneal_iters 1017 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1018 200
penalty weights 10000.0
args.step pgd_anneal_iters 1018 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1019 200
penalty weights 10000.0
args.step pgd_anneal_iters 1019 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1020 200
penalty weights 10000.0
args.step pgd_anneal_iters 1020 600
dim_v 512
rho, theta 267 tensor(-2.4892e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1021 200
penalty weights 10000.0
args.step pgd_anneal_iters 1021 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1022 200
penalty weights 10000.0
args.step pgd_anneal_iters 1022 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1023 200
penalty weights 10000.0
args.step pgd_anneal_iters 1023 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1024 200
penalty weights 10000.0
args.step pgd_anneal_iters 1024 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1025 200
penalty weights 10000.0
args.step pgd_anneal_iters 1025 600
dim_v 512
rho, theta 268 tensor(-2.6887e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1026 200
penalty weights 10000.0
args.step pgd_anneal_iters 1026 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1027 200
penalty weights 10000.0
args.step pgd_anneal_iters 1027 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1028 200
penalty weights 10000.0
args.step pgd_anneal_iters 1028 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1029 200
penalty weights 10000.0
args.step pgd_anneal_iters 1029 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1030 200
penalty weights 10000.0
args.step pgd_anneal_iters 1030 600
dim_v 512
rho, theta 265 tensor(-2.6859e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1031 200
penalty weights 10000.0
args.step pgd_anneal_iters 1031 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1032 200
penalty weights 10000.0
args.step pgd_anneal_iters 1032 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1033 200
penalty weights 10000.0
args.step pgd_anneal_iters 1033 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1034 200
penalty weights 10000.0
args.step pgd_anneal_iters 1034 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1035 200
penalty weights 10000.0
args.step pgd_anneal_iters 1035 600
dim_v 512
rho, theta 264 tensor(-2.0572e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1036 200
penalty weights 10000.0
args.step pgd_anneal_iters 1036 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1037 200
penalty weights 10000.0
args.step pgd_anneal_iters 1037 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1038 200
penalty weights 10000.0
args.step pgd_anneal_iters 1038 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1039 200
penalty weights 10000.0
args.step pgd_anneal_iters 1039 600
final projection at end of training
dim_v 512
rho, theta 269 tensor(-1.1343e-05, device='cuda:0')
Epoch: [39][  26/  26]	Loss 0.000 (0.000)	train_nll   0.67 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  37.56 ( 37.55)	train_acc   0.48 (  0.47)	train_minacc   0.64 (  0.67)	train_majacc   0.45 (  0.43)	train_corr   0.00 (  0.00)	l1 5.8918 (5.8891)	zero_count 0.0000 (56.9010)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.02it/s] 27%|##6       | 7/26 [00:00<00:00, 33.55it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.55it/s] 46%|####6     | 12/26 [00:00<00:00, 39.74it/s] 65%|######5   | 17/26 [00:00<00:00, 39.04it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.04it/s] 85%|########4 | 22/26 [00:00<00:00, 41.04it/s]100%|##########| 26/26 [00:00<00:00, 36.47it/s]
Test: [   0/  26]	Loss 0.669 (0.669)	test_acc   0.41 (  0.41)	test_minacc   0.70 (  0.70)	test_majacc   0.36 (  0.36)	Loss_d 0.669 (0.669)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.36 (  0.36)	test_corr_d   0.14 (  0.14)
Test: [  10/  26]	Loss 0.671 (0.672)	test_acc   0.43 (  0.46)	test_minacc   0.82 (  0.68)	test_majacc   0.34 (  0.42)	Loss_d 0.671 (0.672)	test_acc_d   0.43 (  0.46)	test_minacc_d   0.82 (  0.68)	test_majacc_d   0.34 (  0.42)	test_corr_d   0.15 (  0.17)
Test: [  20/  26]	Loss 0.678 (0.673)	test_acc   0.48 (  0.46)	test_minacc   0.48 (  0.66)	test_majacc   0.48 (  0.43)	Loss_d 0.678 (0.673)	test_acc_d   0.48 (  0.46)	test_minacc_d   0.48 (  0.66)	test_majacc_d   0.48 (  0.43)	test_corr_d   0.20 (  0.18)
Test: [  26/  26]	Loss 0.674 (0.673)	test_acc   0.48 (  0.46)	test_minacc   0.64 (  0.67)	test_majacc   0.45 (  0.43)	Loss_d 0.674 (0.673)	test_acc_d   0.48 (  0.46)	test_minacc_d   0.64 (  0.67)	test_majacc_d   0.45 (  0.43)	test_corr_d   0.14 (  0.17)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.27it/s]
Test: [  0/  1]	Loss 0.749 (0.749)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.49 (  0.49)	Loss_d 0.749 (0.749)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 0.749 (0.749)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.49 (  0.49)	Loss_d 0.749 (0.749)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.13 (  0.13)
Overall Timing[ 39/  1]	epoch_time 0.0469 (0.0437)	validation_time 0.0004 (0.0006)	train_time 0.0465 (0.0430)
record: (train_acc, test_acc) (0.652500018954277, 0.7040000557899475)
last accs (train_acc, test_acc) (0.4628000061511993, 0.5080000162124634)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.66it/s] 15%|#5        | 4/26 [00:00<00:01, 12.66it/s] 27%|##6       | 7/26 [00:00<00:01, 18.22it/s] 42%|####2     | 11/26 [00:00<00:00, 22.91it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.45it/s] 69%|######9   | 18/26 [00:00<00:00, 26.85it/s] 81%|########  | 21/26 [00:00<00:00, 27.22it/s] 96%|#########6| 25/26 [00:01<00:00, 30.33it/s]100%|##########| 26/26 [00:01<00:00, 22.84it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1040 200
penalty weights 10000.0
args.step pgd_anneal_iters 1040 600
dim_v 512
rho, theta 276 tensor(-2.0606e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1041 200
penalty weights 10000.0
args.step pgd_anneal_iters 1041 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1042 200
penalty weights 10000.0
args.step pgd_anneal_iters 1042 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1043 200
penalty weights 10000.0
args.step pgd_anneal_iters 1043 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1044 200
penalty weights 10000.0
args.step pgd_anneal_iters 1044 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1045 200
penalty weights 10000.0
args.step pgd_anneal_iters 1045 600
dim_v 512
rho, theta 264 tensor(-2.2555e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1046 200
penalty weights 10000.0
args.step pgd_anneal_iters 1046 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1047 200
penalty weights 10000.0
args.step pgd_anneal_iters 1047 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1048 200
penalty weights 10000.0
args.step pgd_anneal_iters 1048 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1049 200
penalty weights 10000.0
args.step pgd_anneal_iters 1049 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1050 200
penalty weights 10000.0
args.step pgd_anneal_iters 1050 600
dim_v 512
rho, theta 266 tensor(-2.4594e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1051 200
penalty weights 10000.0
args.step pgd_anneal_iters 1051 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1052 200
penalty weights 10000.0
args.step pgd_anneal_iters 1052 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1053 200
penalty weights 10000.0
args.step pgd_anneal_iters 1053 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1054 200
penalty weights 10000.0
args.step pgd_anneal_iters 1054 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1055 200
penalty weights 10000.0
args.step pgd_anneal_iters 1055 600
dim_v 512
rho, theta 264 tensor(-2.5294e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1056 200
penalty weights 10000.0
args.step pgd_anneal_iters 1056 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1057 200
penalty weights 10000.0
args.step pgd_anneal_iters 1057 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1058 200
penalty weights 10000.0
args.step pgd_anneal_iters 1058 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1059 200
penalty weights 10000.0
args.step pgd_anneal_iters 1059 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1060 200
penalty weights 10000.0
args.step pgd_anneal_iters 1060 600
dim_v 512
rho, theta 264 tensor(-1.9133e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1061 200
penalty weights 10000.0
args.step pgd_anneal_iters 1061 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1062 200
penalty weights 10000.0
args.step pgd_anneal_iters 1062 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1063 200
penalty weights 10000.0
args.step pgd_anneal_iters 1063 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1064 200
penalty weights 10000.0
args.step pgd_anneal_iters 1064 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1065 200
penalty weights 10000.0
args.step pgd_anneal_iters 1065 600
dim_v 512
rho, theta 270 tensor(-1.3848e-05, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [40][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  37.56 ( 37.56)	train_acc   0.48 (  0.46)	train_minacc   0.64 (  0.67)	train_majacc   0.45 (  0.43)	train_corr   0.00 (  0.00)	l1 5.8940 (5.8889)	zero_count 0.0000 (57.0570)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.49it/s] 27%|##6       | 7/26 [00:00<00:00, 29.26it/s]                                               27%|##6       | 7/26 [00:00<00:00, 29.26it/s] 46%|####6     | 12/26 [00:00<00:00, 36.74it/s] 65%|######5   | 17/26 [00:00<00:00, 41.25it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.25it/s] 85%|########4 | 22/26 [00:00<00:00, 42.09it/s]100%|##########| 26/26 [00:00<00:00, 36.52it/s]
Test: [   0/  26]	Loss 0.670 (0.670)	test_acc   0.40 (  0.40)	test_minacc   0.69 (  0.69)	test_majacc   0.36 (  0.36)	Loss_d 0.670 (0.670)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.36 (  0.36)	test_corr_d   0.14 (  0.14)
Test: [  10/  26]	Loss 0.672 (0.673)	test_acc   0.43 (  0.46)	test_minacc   0.84 (  0.68)	test_majacc   0.34 (  0.42)	Loss_d 0.672 (0.673)	test_acc_d   0.43 (  0.46)	test_minacc_d   0.84 (  0.68)	test_majacc_d   0.34 (  0.42)	test_corr_d   0.15 (  0.17)
Test: [  20/  26]	Loss 0.678 (0.673)	test_acc   0.47 (  0.46)	test_minacc   0.48 (  0.67)	test_majacc   0.47 (  0.42)	Loss_d 0.678 (0.673)	test_acc_d   0.47 (  0.46)	test_minacc_d   0.48 (  0.67)	test_majacc_d   0.47 (  0.42)	test_corr_d   0.19 (  0.17)
Test: [  26/  26]	Loss 0.675 (0.673)	test_acc   0.48 (  0.46)	test_minacc   0.67 (  0.67)	test_majacc   0.45 (  0.42)	Loss_d 0.675 (0.673)	test_acc_d   0.48 (  0.46)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.45 (  0.42)	test_corr_d   0.14 (  0.17)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.29it/s]
Test: [  0/  1]	Loss 0.747 (0.747)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.49 (  0.49)	Loss_d 0.747 (0.747)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 0.747 (0.747)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.49 (  0.49)	Loss_d 0.747 (0.747)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.13 (  0.13)
Overall Timing[ 40/  1]	epoch_time 0.0437 (0.0437)	validation_time 0.0004 (0.0006)	train_time 0.0433 (0.0430)
record: (train_acc, test_acc) (0.652500018954277, 0.7040000557899475)
last accs (train_acc, test_acc) (0.46090000531077385, 0.5090000033378601)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.42it/s] 19%|#9        | 5/26 [00:00<00:00, 21.55it/s] 35%|###4      | 9/26 [00:00<00:00, 26.69it/s] 46%|####6     | 12/26 [00:00<00:00, 27.21it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.21it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.10it/s] 85%|########4 | 22/26 [00:00<00:00, 28.89it/s] 96%|#########6| 25/26 [00:00<00:00, 28.70it/s]100%|##########| 26/26 [00:01<00:00, 25.91it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1066 200
penalty weights 10000.0
args.step pgd_anneal_iters 1066 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1067 200
penalty weights 10000.0
args.step pgd_anneal_iters 1067 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1068 200
penalty weights 10000.0
args.step pgd_anneal_iters 1068 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1069 200
penalty weights 10000.0
args.step pgd_anneal_iters 1069 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1070 200
penalty weights 10000.0
args.step pgd_anneal_iters 1070 600
dim_v 512
rho, theta 265 tensor(-1.8147e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1071 200
penalty weights 10000.0
args.step pgd_anneal_iters 1071 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1072 200
penalty weights 10000.0
args.step pgd_anneal_iters 1072 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1073 200
penalty weights 10000.0
args.step pgd_anneal_iters 1073 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1074 200
penalty weights 10000.0
args.step pgd_anneal_iters 1074 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1075 200
penalty weights 10000.0
args.step pgd_anneal_iters 1075 600
dim_v 512
rho, theta 268 tensor(-2.3858e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1076 200
penalty weights 10000.0
args.step pgd_anneal_iters 1076 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1077 200
penalty weights 10000.0
args.step pgd_anneal_iters 1077 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1078 200
penalty weights 10000.0
args.step pgd_anneal_iters 1078 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1079 200
penalty weights 10000.0
args.step pgd_anneal_iters 1079 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1080 200
penalty weights 10000.0
args.step pgd_anneal_iters 1080 600
dim_v 512
rho, theta 264 tensor(-2.3212e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1081 200
penalty weights 10000.0
args.step pgd_anneal_iters 1081 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1082 200
penalty weights 10000.0
args.step pgd_anneal_iters 1082 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1083 200
penalty weights 10000.0
args.step pgd_anneal_iters 1083 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1084 200
penalty weights 10000.0
args.step pgd_anneal_iters 1084 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1085 200
penalty weights 10000.0
args.step pgd_anneal_iters 1085 600
dim_v 512
rho, theta 263 tensor(-1.9288e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1086 200
penalty weights 10000.0
args.step pgd_anneal_iters 1086 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1087 200
penalty weights 10000.0
args.step pgd_anneal_iters 1087 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1088 200
penalty weights 10000.0
args.step pgd_anneal_iters 1088 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1089 200
penalty weights 10000.0
args.step pgd_anneal_iters 1089 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1090 200
penalty weights 10000.0
args.step pgd_anneal_iters 1090 600
dim_v 512
rho, theta 266 tensor(-1.3828e-05, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1091 200
penalty weights 10000.0
args.step pgd_anneal_iters 1091 600
final projection at end of training
dim_v 512
rho, theta 274 tensor(-2.0374e-06, device='cuda:0')
Epoch: [41][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  37.56 ( 37.56)	train_acc   0.48 (  0.46)	train_minacc   0.64 (  0.67)	train_majacc   0.45 (  0.42)	train_corr   0.00 (  0.00)	l1 5.8828 (5.8886)	zero_count 245.0000 (53.9000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.82it/s] 23%|##3       | 6/26 [00:00<00:00, 22.63it/s]                                               23%|##3       | 6/26 [00:00<00:00, 22.63it/s] 42%|####2     | 11/26 [00:00<00:00, 30.58it/s] 62%|######1   | 16/26 [00:00<00:00, 36.07it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.07it/s] 81%|########  | 21/26 [00:00<00:00, 36.25it/s]100%|##########| 26/26 [00:00<00:00, 40.02it/s]100%|##########| 26/26 [00:00<00:00, 31.17it/s]
Test: [   0/  26]	Loss 0.670 (0.670)	test_acc   0.40 (  0.40)	test_minacc   0.72 (  0.72)	test_majacc   0.35 (  0.35)	Loss_d 0.670 (0.670)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.35 (  0.35)	test_corr_d   0.14 (  0.14)
Test: [  10/  26]	Loss 0.672 (0.673)	test_acc   0.43 (  0.45)	test_minacc   0.84 (  0.69)	test_majacc   0.34 (  0.41)	Loss_d 0.672 (0.673)	test_acc_d   0.43 (  0.45)	test_minacc_d   0.84 (  0.69)	test_majacc_d   0.34 (  0.41)	test_corr_d   0.15 (  0.17)
Test: [  20/  26]	Loss 0.678 (0.673)	test_acc   0.47 (  0.46)	test_minacc   0.48 (  0.68)	test_majacc   0.47 (  0.42)	Loss_d 0.678 (0.673)	test_acc_d   0.47 (  0.46)	test_minacc_d   0.48 (  0.68)	test_majacc_d   0.47 (  0.42)	test_corr_d   0.19 (  0.17)
Test: [  26/  26]	Loss 0.676 (0.673)	test_acc   0.47 (  0.46)	test_minacc   0.64 (  0.68)	test_majacc   0.44 (  0.42)	Loss_d 0.676 (0.673)	test_acc_d   0.47 (  0.46)	test_minacc_d   0.64 (  0.68)	test_majacc_d   0.44 (  0.42)	test_corr_d   0.13 (  0.17)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.13it/s]
Test: [  0/  1]	Loss 0.745 (0.745)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.49 (  0.49)	Loss_d 0.745 (0.745)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.12 (  0.12)
Test: [  1/  1]	Loss 0.745 (0.745)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.49 (  0.49)	Loss_d 0.745 (0.745)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.12 (  0.12)
Overall Timing[ 41/  1]	epoch_time 0.0473 (0.0438)	validation_time 0.0008 (0.0006)	train_time 0.0465 (0.0431)
record: (train_acc, test_acc) (0.652500018954277, 0.7040000557899475)
last accs (train_acc, test_acc) (0.4575000033080578, 0.5090000033378601)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.47it/s] 15%|#5        | 4/26 [00:00<00:01, 12.09it/s] 31%|###       | 8/26 [00:00<00:00, 19.81it/s] 42%|####2     | 11/26 [00:00<00:00, 22.24it/s] 54%|#####3    | 14/26 [00:00<00:00, 24.32it/s] 69%|######9   | 18/26 [00:00<00:00, 27.91it/s] 85%|########4 | 22/26 [00:00<00:00, 29.37it/s]100%|##########| 26/26 [00:01<00:00, 30.86it/s]100%|##########| 26/26 [00:01<00:00, 22.97it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1092 200
penalty weights 10000.0
args.step pgd_anneal_iters 1092 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1093 200
penalty weights 10000.0
args.step pgd_anneal_iters 1093 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1094 200
penalty weights 10000.0
args.step pgd_anneal_iters 1094 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1095 200
penalty weights 10000.0
args.step pgd_anneal_iters 1095 600
dim_v 512
rho, theta 266 tensor(-1.1785e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1096 200
penalty weights 10000.0
args.step pgd_anneal_iters 1096 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1097 200
penalty weights 10000.0
args.step pgd_anneal_iters 1097 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1098 200
penalty weights 10000.0
args.step pgd_anneal_iters 1098 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1099 200
penalty weights 10000.0
args.step pgd_anneal_iters 1099 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1100 200
penalty weights 10000.0
args.step pgd_anneal_iters 1100 600
dim_v 512
rho, theta 266 tensor(-2.2824e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1101 200
penalty weights 10000.0
args.step pgd_anneal_iters 1101 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1102 200
penalty weights 10000.0
args.step pgd_anneal_iters 1102 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1103 200
penalty weights 10000.0
args.step pgd_anneal_iters 1103 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1104 200
penalty weights 10000.0
args.step pgd_anneal_iters 1104 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1105 200
penalty weights 10000.0
args.step pgd_anneal_iters 1105 600
dim_v 512
rho, theta 263 tensor(-2.2000e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1106 200
penalty weights 10000.0
args.step pgd_anneal_iters 1106 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1107 200
penalty weights 10000.0
args.step pgd_anneal_iters 1107 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1108 200
penalty weights 10000.0
args.step pgd_anneal_iters 1108 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1109 200
penalty weights 10000.0
args.step pgd_anneal_iters 1109 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1110 200
penalty weights 10000.0
args.step pgd_anneal_iters 1110 600
dim_v 512
rho, theta 261 tensor(-1.9459e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1111 200
penalty weights 10000.0
args.step pgd_anneal_iters 1111 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1112 200
penalty weights 10000.0
args.step pgd_anneal_iters 1112 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1113 200
penalty weights 10000.0
args.step pgd_anneal_iters 1113 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1114 200
penalty weights 10000.0
args.step pgd_anneal_iters 1114 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1115 200
penalty weights 10000.0
args.step pgd_anneal_iters 1115 600
dim_v 512
rho, theta 264 tensor(-1.3047e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1116 200
penalty weights 10000.0
args.step pgd_anneal_iters 1116 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1117 200
penalty weights 10000.0
args.step pgd_anneal_iters 1117 600
final projection at end of training
dim_v 512
rho, theta 273 tensor(-3.9574e-06, device='cuda:0')
Epoch: [42][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  37.56 ( 37.56)	train_acc   0.48 (  0.46)	train_minacc   0.67 (  0.68)	train_majacc   0.44 (  0.42)	train_corr   0.00 (  0.00)	l1 5.8854 (5.8881)	zero_count 0.0000 (57.4080)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.30it/s] 27%|##6       | 7/26 [00:00<00:00, 33.70it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.70it/s] 46%|####6     | 12/26 [00:00<00:00, 40.13it/s] 65%|######5   | 17/26 [00:00<00:00, 42.37it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.37it/s] 85%|########4 | 22/26 [00:00<00:00, 43.72it/s]100%|##########| 26/26 [00:00<00:00, 38.03it/s]
Test: [   0/  26]	Loss 0.671 (0.671)	test_acc   0.41 (  0.41)	test_minacc   0.72 (  0.72)	test_majacc   0.36 (  0.36)	Loss_d 0.671 (0.671)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.36 (  0.36)	test_corr_d   0.13 (  0.13)
Test: [  10/  26]	Loss 0.673 (0.674)	test_acc   0.43 (  0.45)	test_minacc   0.85 (  0.69)	test_majacc   0.34 (  0.41)	Loss_d 0.673 (0.674)	test_acc_d   0.43 (  0.45)	test_minacc_d   0.85 (  0.69)	test_majacc_d   0.34 (  0.41)	test_corr_d   0.14 (  0.17)
Test: [  20/  26]	Loss 0.678 (0.674)	test_acc   0.47 (  0.46)	test_minacc   0.48 (  0.68)	test_majacc   0.46 (  0.42)	Loss_d 0.678 (0.674)	test_acc_d   0.47 (  0.46)	test_minacc_d   0.48 (  0.68)	test_majacc_d   0.46 (  0.42)	test_corr_d   0.18 (  0.17)
Test: [  26/  26]	Loss 0.677 (0.674)	test_acc   0.47 (  0.46)	test_minacc   0.67 (  0.68)	test_majacc   0.44 (  0.42)	Loss_d 0.677 (0.674)	test_acc_d   0.47 (  0.46)	test_minacc_d   0.67 (  0.68)	test_majacc_d   0.44 (  0.42)	test_corr_d   0.13 (  0.16)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.04it/s]
Test: [  0/  1]	Loss 0.744 (0.744)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.49 (  0.49)	Loss_d 0.744 (0.744)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.12 (  0.12)
Test: [  1/  1]	Loss 0.744 (0.744)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.49 (  0.49)	Loss_d 0.744 (0.744)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.12 (  0.12)
Overall Timing[ 42/  1]	epoch_time 0.0423 (0.0438)	validation_time 0.0004 (0.0006)	train_time 0.0419 (0.0431)
record: (train_acc, test_acc) (0.652500018954277, 0.7040000557899475)
last accs (train_acc, test_acc) (0.45710000798106193, 0.5090000033378601)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.39it/s] 15%|#5        | 4/26 [00:00<00:01, 11.82it/s] 31%|###       | 8/26 [00:00<00:00, 19.06it/s] 46%|####6     | 12/26 [00:00<00:00, 24.79it/s] 62%|######1   | 16/26 [00:00<00:00, 27.38it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.15it/s] 92%|#########2| 24/26 [00:00<00:00, 30.34it/s]100%|##########| 26/26 [00:01<00:00, 23.47it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1118 200
penalty weights 10000.0
args.step pgd_anneal_iters 1118 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1119 200
penalty weights 10000.0
args.step pgd_anneal_iters 1119 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1120 200
penalty weights 10000.0
args.step pgd_anneal_iters 1120 600
dim_v 512
rho, theta 271 tensor(-5.7273e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1121 200
penalty weights 10000.0
args.step pgd_anneal_iters 1121 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1122 200
penalty weights 10000.0
args.step pgd_anneal_iters 1122 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1123 200
penalty weights 10000.0
args.step pgd_anneal_iters 1123 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1124 200
penalty weights 10000.0
args.step pgd_anneal_iters 1124 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1125 200
penalty weights 10000.0
args.step pgd_anneal_iters 1125 600
dim_v 512
rho, theta 269 tensor(-2.2544e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1126 200
penalty weights 10000.0
args.step pgd_anneal_iters 1126 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1127 200
penalty weights 10000.0
args.step pgd_anneal_iters 1127 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1128 200
penalty weights 10000.0
args.step pgd_anneal_iters 1128 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1129 200
penalty weights 10000.0
args.step pgd_anneal_iters 1129 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1130 200
penalty weights 10000.0
args.step pgd_anneal_iters 1130 600
dim_v 512
rho, theta 266 tensor(-2.1272e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1131 200
penalty weights 10000.0
args.step pgd_anneal_iters 1131 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1132 200
penalty weights 10000.0
args.step pgd_anneal_iters 1132 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1133 200
penalty weights 10000.0
args.step pgd_anneal_iters 1133 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1134 200
penalty weights 10000.0
args.step pgd_anneal_iters 1134 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1135 200
penalty weights 10000.0
args.step pgd_anneal_iters 1135 600
dim_v 512
rho, theta 262 tensor(-1.9391e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1136 200
penalty weights 10000.0
args.step pgd_anneal_iters 1136 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1137 200
penalty weights 10000.0
args.step pgd_anneal_iters 1137 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1138 200
penalty weights 10000.0
args.step pgd_anneal_iters 1138 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1139 200
penalty weights 10000.0
args.step pgd_anneal_iters 1139 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1140 200
penalty weights 10000.0
args.step pgd_anneal_iters 1140 600
dim_v 512
rho, theta 262 tensor(-1.2866e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1141 200
penalty weights 10000.0
args.step pgd_anneal_iters 1141 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1142 200
penalty weights 10000.0
args.step pgd_anneal_iters 1142 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1143 200
penalty weights 10000.0
args.step pgd_anneal_iters 1143 600
final projection at end of training
dim_v 512
rho, theta 271 tensor(-6.1901e-06, device='cuda:0')
Epoch: [43][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  37.56 ( 37.56)	train_acc   0.47 (  0.46)	train_minacc   0.67 (  0.68)	train_majacc   0.44 (  0.42)	train_corr   0.00 (  0.00)	l1 5.8882 (5.8880)	zero_count 0.0000 (57.0570)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.23it/s] 19%|#9        | 5/26 [00:00<00:01, 20.77it/s] 38%|###8      | 10/26 [00:00<00:00, 31.65it/s]                                                38%|###8      | 10/26 [00:00<00:00, 31.65it/s] 58%|#####7    | 15/26 [00:00<00:00, 37.43it/s] 73%|#######3  | 19/26 [00:00<00:00, 37.39it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 37.39it/s] 92%|#########2| 24/26 [00:00<00:00, 37.83it/s]100%|##########| 26/26 [00:00<00:00, 32.16it/s]
Test: [   0/  26]	Loss 0.672 (0.672)	test_acc   0.41 (  0.41)	test_minacc   0.74 (  0.74)	test_majacc   0.35 (  0.35)	Loss_d 0.672 (0.672)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.35 (  0.35)	test_corr_d   0.13 (  0.13)
Test: [  10/  26]	Loss 0.673 (0.674)	test_acc   0.42 (  0.45)	test_minacc   0.85 (  0.70)	test_majacc   0.33 (  0.41)	Loss_d 0.673 (0.674)	test_acc_d   0.42 (  0.45)	test_minacc_d   0.85 (  0.70)	test_majacc_d   0.33 (  0.41)	test_corr_d   0.14 (  0.16)
Test: [  20/  26]	Loss 0.679 (0.674)	test_acc   0.47 (  0.46)	test_minacc   0.48 (  0.68)	test_majacc   0.46 (  0.42)	Loss_d 0.679 (0.674)	test_acc_d   0.47 (  0.46)	test_minacc_d   0.48 (  0.68)	test_majacc_d   0.46 (  0.42)	test_corr_d   0.18 (  0.16)
Test: [  26/  26]	Loss 0.677 (0.674)	test_acc   0.46 (  0.45)	test_minacc   0.67 (  0.68)	test_majacc   0.43 (  0.41)	Loss_d 0.677 (0.674)	test_acc_d   0.46 (  0.45)	test_minacc_d   0.67 (  0.68)	test_majacc_d   0.43 (  0.41)	test_corr_d   0.12 (  0.16)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.25it/s]
Test: [  0/  1]	Loss 0.742 (0.742)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.49 (  0.49)	Loss_d 0.742 (0.742)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.12 (  0.12)
Test: [  1/  1]	Loss 0.742 (0.742)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.49 (  0.49)	Loss_d 0.742 (0.742)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.12 (  0.12)
Overall Timing[ 43/  1]	epoch_time 0.0430 (0.0438)	validation_time 0.0005 (0.0006)	train_time 0.0425 (0.0431)
record: (train_acc, test_acc) (0.652500018954277, 0.7040000557899475)
last accs (train_acc, test_acc) (0.4537000054419041, 0.5100000500679016)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.64it/s] 15%|#5        | 4/26 [00:00<00:01, 16.09it/s] 27%|##6       | 7/26 [00:00<00:00, 20.94it/s] 42%|####2     | 11/26 [00:00<00:00, 26.36it/s] 54%|#####3    | 14/26 [00:00<00:00, 27.04it/s] 69%|######9   | 18/26 [00:00<00:00, 29.12it/s] 85%|########4 | 22/26 [00:00<00:00, 29.09it/s]100%|##########| 26/26 [00:00<00:00, 30.75it/s]100%|##########| 26/26 [00:01<00:00, 24.93it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1144 200
penalty weights 10000.0
args.step pgd_anneal_iters 1144 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1145 200
penalty weights 10000.0
args.step pgd_anneal_iters 1145 600
dim_v 512
rho, theta 269 tensor(-3.5056e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1146 200
penalty weights 10000.0
args.step pgd_anneal_iters 1146 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1147 200
penalty weights 10000.0
args.step pgd_anneal_iters 1147 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1148 200
penalty weights 10000.0
args.step pgd_anneal_iters 1148 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1149 200
penalty weights 10000.0
args.step pgd_anneal_iters 1149 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1150 200
penalty weights 10000.0
args.step pgd_anneal_iters 1150 600
dim_v 512
rho, theta 260 tensor(-1.9402e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1151 200
penalty weights 10000.0
args.step pgd_anneal_iters 1151 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1152 200
penalty weights 10000.0
args.step pgd_anneal_iters 1152 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1153 200
penalty weights 10000.0
args.step pgd_anneal_iters 1153 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1154 200
penalty weights 10000.0
args.step pgd_anneal_iters 1154 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1155 200
penalty weights 10000.0
args.step pgd_anneal_iters 1155 600
dim_v 512
rho, theta 265 tensor(-1.9290e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1156 200
penalty weights 10000.0
args.step pgd_anneal_iters 1156 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1157 200
penalty weights 10000.0
args.step pgd_anneal_iters 1157 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1158 200
penalty weights 10000.0
args.step pgd_anneal_iters 1158 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1159 200
penalty weights 10000.0
args.step pgd_anneal_iters 1159 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1160 200
penalty weights 10000.0
args.step pgd_anneal_iters 1160 600
dim_v 512
rho, theta 262 tensor(-1.9752e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1161 200
penalty weights 10000.0
args.step pgd_anneal_iters 1161 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1162 200
penalty weights 10000.0
args.step pgd_anneal_iters 1162 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1163 200
penalty weights 10000.0
args.step pgd_anneal_iters 1163 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1164 200
penalty weights 10000.0
args.step pgd_anneal_iters 1164 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1165 200
penalty weights 10000.0
args.step pgd_anneal_iters 1165 600
dim_v 512
rho, theta 263 tensor(-1.2941e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1166 200
penalty weights 10000.0
args.step pgd_anneal_iters 1166 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1167 200
penalty weights 10000.0
args.step pgd_anneal_iters 1167 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1168 200
penalty weights 10000.0
args.step pgd_anneal_iters 1168 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1169 200
penalty weights 10000.0
args.step pgd_anneal_iters 1169 600
final projection at end of training
dim_v 512
rho, theta 270 tensor(-7.4235e-06, device='cuda:0')
Epoch: [44][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  37.56 ( 37.56)	train_acc   0.46 (  0.46)	train_minacc   0.67 (  0.68)	train_majacc   0.42 (  0.42)	train_corr   0.00 (  0.00)	l1 5.8901 (5.8880)	zero_count 0.0000 (57.5640)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.68it/s] 19%|#9        | 5/26 [00:00<00:00, 22.38it/s]                                               19%|#9        | 5/26 [00:00<00:00, 22.38it/s] 42%|####2     | 11/26 [00:00<00:00, 35.30it/s] 62%|######1   | 16/26 [00:00<00:00, 39.14it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.14it/s] 81%|########  | 21/26 [00:00<00:00, 38.39it/s]100%|##########| 26/26 [00:00<00:00, 41.41it/s]100%|##########| 26/26 [00:00<00:00, 33.15it/s]
Test: [   0/  26]	Loss 0.672 (0.672)	test_acc   0.41 (  0.41)	test_minacc   0.74 (  0.74)	test_majacc   0.35 (  0.35)	Loss_d 0.672 (0.672)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.35 (  0.35)	test_corr_d   0.13 (  0.13)
Test: [  10/  26]	Loss 0.673 (0.674)	test_acc   0.43 (  0.45)	test_minacc   0.87 (  0.70)	test_majacc   0.33 (  0.41)	Loss_d 0.673 (0.674)	test_acc_d   0.43 (  0.45)	test_minacc_d   0.87 (  0.70)	test_majacc_d   0.33 (  0.41)	test_corr_d   0.14 (  0.16)
Test: [  20/  26]	Loss 0.679 (0.674)	test_acc   0.47 (  0.46)	test_minacc   0.50 (  0.68)	test_majacc   0.46 (  0.42)	Loss_d 0.679 (0.674)	test_acc_d   0.47 (  0.46)	test_minacc_d   0.50 (  0.68)	test_majacc_d   0.46 (  0.42)	test_corr_d   0.18 (  0.16)
Test: [  26/  26]	Loss 0.678 (0.675)	test_acc   0.46 (  0.45)	test_minacc   0.67 (  0.69)	test_majacc   0.42 (  0.41)	Loss_d 0.678 (0.675)	test_acc_d   0.46 (  0.45)	test_minacc_d   0.67 (  0.69)	test_majacc_d   0.42 (  0.41)	test_corr_d   0.12 (  0.16)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 58.60it/s]
Test: [  0/  1]	Loss 0.741 (0.741)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.49 (  0.49)	Loss_d 0.741 (0.741)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.12 (  0.12)
Test: [  1/  1]	Loss 0.741 (0.741)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.49 (  0.49)	Loss_d 0.741 (0.741)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.12 (  0.12)
Overall Timing[ 44/  1]	epoch_time 0.0421 (0.0437)	validation_time 0.0005 (0.0006)	train_time 0.0416 (0.0430)
record: (train_acc, test_acc) (0.652500018954277, 0.7040000557899475)
last accs (train_acc, test_acc) (0.45430000573396684, 0.5100000500679016)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.56it/s] 19%|#9        | 5/26 [00:00<00:00, 23.31it/s] 35%|###4      | 9/26 [00:00<00:00, 27.04it/s] 46%|####6     | 12/26 [00:00<00:00, 27.90it/s] 62%|######1   | 16/26 [00:00<00:00, 28.54it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.75it/s] 85%|########4 | 22/26 [00:00<00:00, 28.26it/s]100%|##########| 26/26 [00:00<00:00, 29.38it/s]100%|##########| 26/26 [00:01<00:00, 25.96it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1170 200
penalty weights 10000.0
args.step pgd_anneal_iters 1170 600
dim_v 512
rho, theta 281 tensor(-1.1972e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1171 200
penalty weights 10000.0
args.step pgd_anneal_iters 1171 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1172 200
penalty weights 10000.0
args.step pgd_anneal_iters 1172 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1173 200
penalty weights 10000.0
args.step pgd_anneal_iters 1173 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1174 200
penalty weights 10000.0
args.step pgd_anneal_iters 1174 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1175 200
penalty weights 10000.0
args.step pgd_anneal_iters 1175 600
dim_v 512
rho, theta 261 tensor(-1.7359e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1176 200
penalty weights 10000.0
args.step pgd_anneal_iters 1176 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1177 200
penalty weights 10000.0
args.step pgd_anneal_iters 1177 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1178 200
penalty weights 10000.0
args.step pgd_anneal_iters 1178 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1179 200
penalty weights 10000.0
args.step pgd_anneal_iters 1179 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1180 200
penalty weights 10000.0
args.step pgd_anneal_iters 1180 600
dim_v 512
rho, theta 267 tensor(-1.8646e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1181 200
penalty weights 10000.0
args.step pgd_anneal_iters 1181 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1182 200
penalty weights 10000.0
args.step pgd_anneal_iters 1182 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1183 200
penalty weights 10000.0
args.step pgd_anneal_iters 1183 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1184 200
penalty weights 10000.0
args.step pgd_anneal_iters 1184 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1185 200
penalty weights 10000.0
args.step pgd_anneal_iters 1185 600
dim_v 512
rho, theta 263 tensor(-1.8470e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1186 200
penalty weights 10000.0
args.step pgd_anneal_iters 1186 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1187 200
penalty weights 10000.0
args.step pgd_anneal_iters 1187 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1188 200
penalty weights 10000.0
args.step pgd_anneal_iters 1188 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1189 200
penalty weights 10000.0
args.step pgd_anneal_iters 1189 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1190 200
penalty weights 10000.0
args.step pgd_anneal_iters 1190 600
dim_v 512
rho, theta 262 tensor(-1.3315e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1191 200
penalty weights 10000.0
args.step pgd_anneal_iters 1191 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1192 200
penalty weights 10000.0
args.step pgd_anneal_iters 1192 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1193 200
penalty weights 10000.0
args.step pgd_anneal_iters 1193 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1194 200
penalty weights 10000.0
args.step pgd_anneal_iters 1194 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1195 200
penalty weights 10000.0
args.step pgd_anneal_iters 1195 600
dim_v 512
rho, theta 269 tensor(-8.6308e-06, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [45][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  37.56 ( 37.56)	train_acc   0.45 (  0.45)	train_minacc   0.67 (  0.68)	train_majacc   0.41 (  0.41)	train_corr   0.00 (  0.00)	l1 5.8922 (5.8877)	zero_count 0.0000 (57.0180)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.77it/s] 27%|##6       | 7/26 [00:00<00:00, 34.14it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.14it/s] 46%|####6     | 12/26 [00:00<00:00, 36.81it/s] 65%|######5   | 17/26 [00:00<00:00, 40.07it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.07it/s] 85%|########4 | 22/26 [00:00<00:00, 41.54it/s]100%|##########| 26/26 [00:00<00:00, 36.22it/s]
Test: [   0/  26]	Loss 0.673 (0.673)	test_acc   0.41 (  0.41)	test_minacc   0.76 (  0.76)	test_majacc   0.35 (  0.35)	Loss_d 0.673 (0.673)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.76 (  0.76)	test_majacc_d   0.35 (  0.35)	test_corr_d   0.12 (  0.12)
Test: [  10/  26]	Loss 0.674 (0.675)	test_acc   0.41 (  0.45)	test_minacc   0.87 (  0.71)	test_majacc   0.31 (  0.40)	Loss_d 0.674 (0.675)	test_acc_d   0.41 (  0.45)	test_minacc_d   0.87 (  0.71)	test_majacc_d   0.31 (  0.40)	test_corr_d   0.14 (  0.16)
Test: [  20/  26]	Loss 0.679 (0.675)	test_acc   0.47 (  0.45)	test_minacc   0.52 (  0.69)	test_majacc   0.46 (  0.41)	Loss_d 0.679 (0.675)	test_acc_d   0.47 (  0.45)	test_minacc_d   0.52 (  0.69)	test_majacc_d   0.46 (  0.41)	test_corr_d   0.17 (  0.16)
Test: [  26/  26]	Loss 0.679 (0.675)	test_acc   0.45 (  0.45)	test_minacc   0.67 (  0.70)	test_majacc   0.41 (  0.41)	Loss_d 0.679 (0.675)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.67 (  0.70)	test_majacc_d   0.41 (  0.41)	test_corr_d   0.11 (  0.16)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.32it/s]
Test: [  0/  1]	Loss 0.740 (0.740)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.49 (  0.49)	Loss_d 0.740 (0.740)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.12 (  0.12)
Test: [  1/  1]	Loss 0.740 (0.740)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.49 (  0.49)	Loss_d 0.740 (0.740)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.12 (  0.12)
Overall Timing[ 45/  1]	epoch_time 0.0456 (0.0438)	validation_time 0.0004 (0.0006)	train_time 0.0451 (0.0431)
record: (train_acc, test_acc) (0.652500018954277, 0.7040000557899475)
last accs (train_acc, test_acc) (0.45150000432133675, 0.5120000243186951)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.14it/s] 19%|#9        | 5/26 [00:00<00:01, 20.50it/s] 35%|###4      | 9/26 [00:00<00:00, 26.30it/s] 46%|####6     | 12/26 [00:00<00:00, 26.68it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.82it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.08it/s] 85%|########4 | 22/26 [00:00<00:00, 28.71it/s] 96%|#########6| 25/26 [00:00<00:00, 28.66it/s]100%|##########| 26/26 [00:01<00:00, 25.53it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1196 200
penalty weights 10000.0
args.step pgd_anneal_iters 1196 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1197 200
penalty weights 10000.0
args.step pgd_anneal_iters 1197 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1198 200
penalty weights 10000.0
args.step pgd_anneal_iters 1198 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1199 200
penalty weights 10000.0
args.step pgd_anneal_iters 1199 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1200 200
penalty weights 10000.0
args.step pgd_anneal_iters 1200 600
dim_v 512
rho, theta 262 tensor(-1.3935e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1201 200
penalty weights 10000.0
args.step pgd_anneal_iters 1201 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1202 200
penalty weights 10000.0
args.step pgd_anneal_iters 1202 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1203 200
penalty weights 10000.0
args.step pgd_anneal_iters 1203 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1204 200
penalty weights 10000.0
args.step pgd_anneal_iters 1204 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1205 200
penalty weights 10000.0
args.step pgd_anneal_iters 1205 600
dim_v 512
rho, theta 267 tensor(-1.8187e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1206 200
penalty weights 10000.0
args.step pgd_anneal_iters 1206 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1207 200
penalty weights 10000.0
args.step pgd_anneal_iters 1207 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1208 200
penalty weights 10000.0
args.step pgd_anneal_iters 1208 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1209 200
penalty weights 10000.0
args.step pgd_anneal_iters 1209 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1210 200
penalty weights 10000.0
args.step pgd_anneal_iters 1210 600
dim_v 512
rho, theta 265 tensor(-1.7216e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1211 200
penalty weights 10000.0
args.step pgd_anneal_iters 1211 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1212 200
penalty weights 10000.0
args.step pgd_anneal_iters 1212 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1213 200
penalty weights 10000.0
args.step pgd_anneal_iters 1213 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1214 200
penalty weights 10000.0
args.step pgd_anneal_iters 1214 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1215 200
penalty weights 10000.0
args.step pgd_anneal_iters 1215 600
dim_v 512
rho, theta 260 tensor(-1.4113e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1216 200
penalty weights 10000.0
args.step pgd_anneal_iters 1216 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1217 200
penalty weights 10000.0
args.step pgd_anneal_iters 1217 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1218 200
penalty weights 10000.0
args.step pgd_anneal_iters 1218 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1219 200
penalty weights 10000.0
args.step pgd_anneal_iters 1219 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1220 200
penalty weights 10000.0
args.step pgd_anneal_iters 1220 600
dim_v 512
rho, theta 267 tensor(-8.7094e-06, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1221 200
penalty weights 10000.0
args.step pgd_anneal_iters 1221 600
final projection at end of training
dim_v 512
rho, theta 280 tensor(-1.3066e-06, device='cuda:0')
Epoch: [46][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  37.56 ( 37.56)	train_acc   0.44 (  0.45)	train_minacc   0.67 (  0.69)	train_majacc   0.40 (  0.41)	train_corr   0.00 (  0.00)	l1 5.8828 (5.8875)	zero_count 244.0000 (54.1480)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.82it/s]  8%|7         | 2/26 [00:00<00:03,  6.81it/s] 27%|##6       | 7/26 [00:00<00:00, 21.67it/s]                                               27%|##6       | 7/26 [00:00<00:00, 21.67it/s] 50%|#####     | 13/26 [00:00<00:00, 33.17it/s] 73%|#######3  | 19/26 [00:00<00:00, 38.83it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 38.83it/s] 92%|#########2| 24/26 [00:00<00:00, 39.45it/s]100%|##########| 26/26 [00:00<00:00, 29.82it/s]
Test: [   0/  26]	Loss 0.673 (0.673)	test_acc   0.39 (  0.39)	test_minacc   0.74 (  0.74)	test_majacc   0.34 (  0.34)	Loss_d 0.673 (0.673)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.34 (  0.34)	test_corr_d   0.12 (  0.12)
Test: [  10/  26]	Loss 0.674 (0.675)	test_acc   0.41 (  0.45)	test_minacc   0.87 (  0.71)	test_majacc   0.32 (  0.40)	Loss_d 0.674 (0.675)	test_acc_d   0.41 (  0.45)	test_minacc_d   0.87 (  0.71)	test_majacc_d   0.32 (  0.40)	test_corr_d   0.14 (  0.16)
Test: [  20/  26]	Loss 0.679 (0.675)	test_acc   0.47 (  0.45)	test_minacc   0.50 (  0.69)	test_majacc   0.46 (  0.41)	Loss_d 0.679 (0.675)	test_acc_d   0.47 (  0.45)	test_minacc_d   0.50 (  0.69)	test_majacc_d   0.46 (  0.41)	test_corr_d   0.17 (  0.16)
Test: [  26/  26]	Loss 0.679 (0.675)	test_acc   0.44 (  0.45)	test_minacc   0.67 (  0.69)	test_majacc   0.40 (  0.41)	Loss_d 0.679 (0.675)	test_acc_d   0.44 (  0.45)	test_minacc_d   0.67 (  0.69)	test_majacc_d   0.40 (  0.41)	test_corr_d   0.11 (  0.15)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.87it/s]
Test: [  0/  1]	Loss 0.739 (0.739)	test_acc   0.51 (  0.51)	test_minacc   0.52 (  0.52)	test_majacc   0.49 (  0.49)	Loss_d 0.739 (0.739)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 0.739 (0.739)	test_acc   0.51 (  0.51)	test_minacc   0.52 (  0.52)	test_majacc   0.49 (  0.49)	Loss_d 0.739 (0.739)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.11 (  0.11)
Overall Timing[ 46/  1]	epoch_time 0.0418 (0.0437)	validation_time 0.0003 (0.0006)	train_time 0.0414 (0.0431)
record: (train_acc, test_acc) (0.652500018954277, 0.7040000557899475)
last accs (train_acc, test_acc) (0.45030000376701357, 0.5139999985694885)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.32it/s] 19%|#9        | 5/26 [00:00<00:01, 14.10it/s] 35%|###4      | 9/26 [00:00<00:00, 20.69it/s] 50%|#####     | 13/26 [00:00<00:00, 25.31it/s] 65%|######5   | 17/26 [00:00<00:00, 26.46it/s] 77%|#######6  | 20/26 [00:00<00:00, 27.20it/s] 92%|#########2| 24/26 [00:01<00:00, 28.84it/s]100%|##########| 26/26 [00:01<00:00, 23.11it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1222 200
penalty weights 10000.0
args.step pgd_anneal_iters 1222 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1223 200
penalty weights 10000.0
args.step pgd_anneal_iters 1223 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1224 200
penalty weights 10000.0
args.step pgd_anneal_iters 1224 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1225 200
penalty weights 10000.0
args.step pgd_anneal_iters 1225 600
dim_v 512
rho, theta 265 tensor(-9.0097e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1226 200
penalty weights 10000.0
args.step pgd_anneal_iters 1226 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1227 200
penalty weights 10000.0
args.step pgd_anneal_iters 1227 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1228 200
penalty weights 10000.0
args.step pgd_anneal_iters 1228 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1229 200
penalty weights 10000.0
args.step pgd_anneal_iters 1229 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1230 200
penalty weights 10000.0
args.step pgd_anneal_iters 1230 600
dim_v 512
rho, theta 266 tensor(-1.8039e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1231 200
penalty weights 10000.0
args.step pgd_anneal_iters 1231 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1232 200
penalty weights 10000.0
args.step pgd_anneal_iters 1232 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1233 200
penalty weights 10000.0
args.step pgd_anneal_iters 1233 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1234 200
penalty weights 10000.0
args.step pgd_anneal_iters 1234 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1235 200
penalty weights 10000.0
args.step pgd_anneal_iters 1235 600
dim_v 512
rho, theta 264 tensor(-1.6423e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1236 200
penalty weights 10000.0
args.step pgd_anneal_iters 1236 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1237 200
penalty weights 10000.0
args.step pgd_anneal_iters 1237 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1238 200
penalty weights 10000.0
args.step pgd_anneal_iters 1238 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1239 200
penalty weights 10000.0
args.step pgd_anneal_iters 1239 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1240 200
penalty weights 10000.0
args.step pgd_anneal_iters 1240 600
dim_v 512
rho, theta 260 tensor(-1.4515e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1241 200
penalty weights 10000.0
args.step pgd_anneal_iters 1241 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1242 200
penalty weights 10000.0
args.step pgd_anneal_iters 1242 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1243 200
penalty weights 10000.0
args.step pgd_anneal_iters 1243 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1244 200
penalty weights 10000.0
args.step pgd_anneal_iters 1244 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1245 200
penalty weights 10000.0
args.step pgd_anneal_iters 1245 600
dim_v 512
rho, theta 265 tensor(-8.5867e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1246 200
penalty weights 10000.0
args.step pgd_anneal_iters 1246 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1247 200
penalty weights 10000.0
args.step pgd_anneal_iters 1247 600
final projection at end of training
dim_v 512
rho, theta 279 tensor(-2.4353e-06, device='cuda:0')
Epoch: [47][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm  37.56 ( 37.56)	train_acc   0.44 (  0.45)	train_minacc   0.67 (  0.69)	train_majacc   0.40 (  0.41)	train_corr   0.00 (  0.00)	l1 5.8852 (5.8871)	zero_count 0.0000 (57.1740)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.00it/s] 15%|#5        | 4/26 [00:00<00:01, 16.02it/s] 35%|###4      | 9/26 [00:00<00:00, 27.78it/s]                                               35%|###4      | 9/26 [00:00<00:00, 27.78it/s] 54%|#####3    | 14/26 [00:00<00:00, 34.51it/s] 73%|#######3  | 19/26 [00:00<00:00, 35.12it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 35.12it/s] 92%|#########2| 24/26 [00:00<00:00, 38.77it/s]100%|##########| 26/26 [00:00<00:00, 31.14it/s]
Test: [   0/  26]	Loss 0.674 (0.674)	test_acc   0.40 (  0.40)	test_minacc   0.78 (  0.78)	test_majacc   0.34 (  0.34)	Loss_d 0.674 (0.674)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.78 (  0.78)	test_majacc_d   0.34 (  0.34)	test_corr_d   0.12 (  0.12)
Test: [  10/  26]	Loss 0.674 (0.675)	test_acc   0.40 (  0.44)	test_minacc   0.87 (  0.71)	test_majacc   0.30 (  0.40)	Loss_d 0.674 (0.675)	test_acc_d   0.40 (  0.44)	test_minacc_d   0.87 (  0.71)	test_majacc_d   0.30 (  0.40)	test_corr_d   0.14 (  0.15)
Test: [  20/  26]	Loss 0.679 (0.675)	test_acc   0.46 (  0.45)	test_minacc   0.50 (  0.70)	test_majacc   0.46 (  0.41)	Loss_d 0.679 (0.675)	test_acc_d   0.46 (  0.45)	test_minacc_d   0.50 (  0.70)	test_majacc_d   0.46 (  0.41)	test_corr_d   0.17 (  0.16)
Test: [  26/  26]	Loss 0.680 (0.675)	test_acc   0.44 (  0.45)	test_minacc   0.67 (  0.70)	test_majacc   0.40 (  0.40)	Loss_d 0.680 (0.675)	test_acc_d   0.44 (  0.45)	test_minacc_d   0.67 (  0.70)	test_majacc_d   0.40 (  0.40)	test_corr_d   0.11 (  0.15)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.11it/s]
Test: [  0/  1]	Loss 0.738 (0.738)	test_acc   0.51 (  0.51)	test_minacc   0.52 (  0.52)	test_majacc   0.49 (  0.49)	Loss_d 0.738 (0.738)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 0.738 (0.738)	test_acc   0.51 (  0.51)	test_minacc   0.52 (  0.52)	test_majacc   0.49 (  0.49)	Loss_d 0.738 (0.738)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.11 (  0.11)
Overall Timing[ 47/  1]	epoch_time 0.0436 (0.0437)	validation_time 0.0004 (0.0006)	train_time 0.0432 (0.0431)
record: (train_acc, test_acc) (0.652500018954277, 0.7040000557899475)
last accs (train_acc, test_acc) (0.44800000739097595, 0.5139999985694885)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.55it/s] 15%|#5        | 4/26 [00:00<00:01, 17.19it/s] 31%|###       | 8/26 [00:00<00:00, 23.37it/s] 46%|####6     | 12/26 [00:00<00:00, 26.95it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.31it/s] 69%|######9   | 18/26 [00:00<00:00, 27.06it/s] 85%|########4 | 22/26 [00:00<00:00, 29.91it/s]100%|##########| 26/26 [00:00<00:00, 30.47it/s]100%|##########| 26/26 [00:01<00:00, 25.25it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1248 200
penalty weights 10000.0
args.step pgd_anneal_iters 1248 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1249 200
penalty weights 10000.0
args.step pgd_anneal_iters 1249 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1250 200
penalty weights 10000.0
args.step pgd_anneal_iters 1250 600
dim_v 512
rho, theta 274 tensor(-3.9656e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1251 200
penalty weights 10000.0
args.step pgd_anneal_iters 1251 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1252 200
penalty weights 10000.0
args.step pgd_anneal_iters 1252 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1253 200
penalty weights 10000.0
args.step pgd_anneal_iters 1253 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1254 200
penalty weights 10000.0
args.step pgd_anneal_iters 1254 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1255 200
penalty weights 10000.0
args.step pgd_anneal_iters 1255 600
dim_v 512
rho, theta 266 tensor(-1.8425e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1256 200
penalty weights 10000.0
args.step pgd_anneal_iters 1256 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1257 200
penalty weights 10000.0
args.step pgd_anneal_iters 1257 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1258 200
penalty weights 10000.0
args.step pgd_anneal_iters 1258 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1259 200
penalty weights 10000.0
args.step pgd_anneal_iters 1259 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1260 200
penalty weights 10000.0
args.step pgd_anneal_iters 1260 600
dim_v 512
rho, theta 265 tensor(-1.5684e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1261 200
penalty weights 10000.0
args.step pgd_anneal_iters 1261 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1262 200
penalty weights 10000.0
args.step pgd_anneal_iters 1262 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1263 200
penalty weights 10000.0
args.step pgd_anneal_iters 1263 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1264 200
penalty weights 10000.0
args.step pgd_anneal_iters 1264 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1265 200
penalty weights 10000.0
args.step pgd_anneal_iters 1265 600
dim_v 512
rho, theta 261 tensor(-1.4766e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1266 200
penalty weights 10000.0
args.step pgd_anneal_iters 1266 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1267 200
penalty weights 10000.0
args.step pgd_anneal_iters 1267 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1268 200
penalty weights 10000.0
args.step pgd_anneal_iters 1268 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1269 200
penalty weights 10000.0
args.step pgd_anneal_iters 1269 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1270 200
penalty weights 10000.0
args.step pgd_anneal_iters 1270 600
dim_v 512
rho, theta 266 tensor(-8.6831e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1271 200
penalty weights 10000.0
args.step pgd_anneal_iters 1271 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1272 200
penalty weights 10000.0
args.step pgd_anneal_iters 1272 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1273 200
penalty weights 10000.0
args.step pgd_anneal_iters 1273 600
final projection at end of training
dim_v 512
rho, theta 276 tensor(-4.0746e-06, device='cuda:0')
Epoch: [48][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm  37.57 ( 37.57)	train_acc   0.43 (  0.45)	train_minacc   0.67 (  0.70)	train_majacc   0.38 (  0.40)	train_corr   0.00 (  0.00)	l1 5.8874 (5.8870)	zero_count 0.0000 (56.7450)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:09,  2.65it/s] 23%|##3       | 6/26 [00:00<00:01, 14.95it/s]                                               23%|##3       | 6/26 [00:00<00:01, 14.95it/s] 42%|####2     | 11/26 [00:00<00:00, 23.83it/s] 62%|######1   | 16/26 [00:00<00:00, 30.70it/s]                                                62%|######1   | 16/26 [00:00<00:00, 30.70it/s] 81%|########  | 21/26 [00:00<00:00, 33.68it/s]100%|##########| 26/26 [00:00<00:00, 37.82it/s]100%|##########| 26/26 [00:01<00:00, 25.99it/s]
Test: [   0/  26]	Loss 0.674 (0.674)	test_acc   0.39 (  0.39)	test_minacc   0.78 (  0.78)	test_majacc   0.33 (  0.33)	Loss_d 0.674 (0.674)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.78 (  0.78)	test_majacc_d   0.33 (  0.33)	test_corr_d   0.11 (  0.11)
Test: [  10/  26]	Loss 0.675 (0.675)	test_acc   0.40 (  0.44)	test_minacc   0.87 (  0.72)	test_majacc   0.30 (  0.39)	Loss_d 0.675 (0.675)	test_acc_d   0.40 (  0.44)	test_minacc_d   0.87 (  0.72)	test_majacc_d   0.30 (  0.39)	test_corr_d   0.14 (  0.15)
Test: [  20/  26]	Loss 0.680 (0.675)	test_acc   0.45 (  0.45)	test_minacc   0.50 (  0.70)	test_majacc   0.45 (  0.40)	Loss_d 0.680 (0.675)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.50 (  0.70)	test_majacc_d   0.45 (  0.40)	test_corr_d   0.17 (  0.15)
Test: [  26/  26]	Loss 0.680 (0.676)	test_acc   0.43 (  0.44)	test_minacc   0.67 (  0.71)	test_majacc   0.38 (  0.40)	Loss_d 0.680 (0.676)	test_acc_d   0.43 (  0.44)	test_minacc_d   0.67 (  0.71)	test_majacc_d   0.38 (  0.40)	test_corr_d   0.10 (  0.15)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.80it/s]
Test: [  0/  1]	Loss 0.737 (0.737)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.49 (  0.49)	Loss_d 0.737 (0.737)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 0.737 (0.737)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.49 (  0.49)	Loss_d 0.737 (0.737)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.11 (  0.11)
Overall Timing[ 48/  1]	epoch_time 0.0421 (0.0437)	validation_time 0.0004 (0.0006)	train_time 0.0417 (0.0430)
record: (train_acc, test_acc) (0.652500018954277, 0.7040000557899475)
last accs (train_acc, test_acc) (0.44280000412464143, 0.5160000324249268)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.78it/s] 15%|#5        | 4/26 [00:00<00:01, 16.40it/s] 27%|##6       | 7/26 [00:00<00:00, 21.22it/s] 42%|####2     | 11/26 [00:00<00:00, 26.20it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.58it/s] 65%|######5   | 17/26 [00:00<00:00, 26.75it/s] 81%|########  | 21/26 [00:00<00:00, 29.18it/s] 92%|#########2| 24/26 [00:00<00:00, 29.34it/s]100%|##########| 26/26 [00:01<00:00, 24.56it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1274 200
penalty weights 10000.0
args.step pgd_anneal_iters 1274 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1275 200
penalty weights 10000.0
args.step pgd_anneal_iters 1275 600
dim_v 512
rho, theta 274 tensor(-2.4570e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1276 200
penalty weights 10000.0
args.step pgd_anneal_iters 1276 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1277 200
penalty weights 10000.0
args.step pgd_anneal_iters 1277 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1278 200
penalty weights 10000.0
args.step pgd_anneal_iters 1278 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1279 200
penalty weights 10000.0
args.step pgd_anneal_iters 1279 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1280 200
penalty weights 10000.0
args.step pgd_anneal_iters 1280 600
dim_v 512
rho, theta 263 tensor(-1.6254e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1281 200
penalty weights 10000.0
args.step pgd_anneal_iters 1281 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1282 200
penalty weights 10000.0
args.step pgd_anneal_iters 1282 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1283 200
penalty weights 10000.0
args.step pgd_anneal_iters 1283 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1284 200
penalty weights 10000.0
args.step pgd_anneal_iters 1284 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1285 200
penalty weights 10000.0
args.step pgd_anneal_iters 1285 600
dim_v 512
rho, theta 265 tensor(-1.4509e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1286 200
penalty weights 10000.0
args.step pgd_anneal_iters 1286 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1287 200
penalty weights 10000.0
args.step pgd_anneal_iters 1287 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1288 200
penalty weights 10000.0
args.step pgd_anneal_iters 1288 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1289 200
penalty weights 10000.0
args.step pgd_anneal_iters 1289 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1290 200
penalty weights 10000.0
args.step pgd_anneal_iters 1290 600
dim_v 512
rho, theta 261 tensor(-1.4904e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1291 200
penalty weights 10000.0
args.step pgd_anneal_iters 1291 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1292 200
penalty weights 10000.0
args.step pgd_anneal_iters 1292 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1293 200
penalty weights 10000.0
args.step pgd_anneal_iters 1293 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1294 200
penalty weights 10000.0
args.step pgd_anneal_iters 1294 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1295 200
penalty weights 10000.0
args.step pgd_anneal_iters 1295 600
dim_v 512
rho, theta 264 tensor(-9.3658e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1296 200
penalty weights 10000.0
args.step pgd_anneal_iters 1296 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1297 200
penalty weights 10000.0
args.step pgd_anneal_iters 1297 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1298 200
penalty weights 10000.0
args.step pgd_anneal_iters 1298 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1299 200
penalty weights 10000.0
args.step pgd_anneal_iters 1299 600
final projection at end of training
dim_v 512
rho, theta 275 tensor(-4.8288e-06, device='cuda:0')
Epoch: [49][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm  37.57 ( 37.57)	train_acc   0.43 (  0.45)	train_minacc   0.69 (  0.70)	train_majacc   0.38 (  0.40)	train_corr   0.00 (  0.00)	l1 5.8890 (5.8869)	zero_count 0.0000 (57.0570)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.39it/s] 27%|##6       | 7/26 [00:00<00:00, 28.33it/s]                                               27%|##6       | 7/26 [00:00<00:00, 28.33it/s] 46%|####6     | 12/26 [00:00<00:00, 35.77it/s] 65%|######5   | 17/26 [00:00<00:00, 38.29it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.29it/s] 85%|########4 | 22/26 [00:00<00:00, 40.83it/s]100%|##########| 26/26 [00:00<00:00, 34.14it/s]
Test: [   0/  26]	Loss 0.675 (0.675)	test_acc   0.39 (  0.39)	test_minacc   0.78 (  0.78)	test_majacc   0.32 (  0.32)	Loss_d 0.675 (0.675)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.78 (  0.78)	test_majacc_d   0.32 (  0.32)	test_corr_d   0.11 (  0.11)
Test: [  10/  26]	Loss 0.675 (0.676)	test_acc   0.39 (  0.44)	test_minacc   0.87 (  0.71)	test_majacc   0.29 (  0.39)	Loss_d 0.675 (0.676)	test_acc_d   0.39 (  0.44)	test_minacc_d   0.87 (  0.71)	test_majacc_d   0.29 (  0.39)	test_corr_d   0.13 (  0.15)
Test: [  20/  26]	Loss 0.680 (0.676)	test_acc   0.45 (  0.45)	test_minacc   0.52 (  0.70)	test_majacc   0.44 (  0.40)	Loss_d 0.680 (0.676)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.52 (  0.70)	test_majacc_d   0.44 (  0.40)	test_corr_d   0.16 (  0.15)
Test: [  26/  26]	Loss 0.681 (0.676)	test_acc   0.43 (  0.44)	test_minacc   0.67 (  0.70)	test_majacc   0.39 (  0.40)	Loss_d 0.681 (0.676)	test_acc_d   0.43 (  0.44)	test_minacc_d   0.67 (  0.70)	test_majacc_d   0.39 (  0.40)	test_corr_d   0.10 (  0.15)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.49it/s]
Test: [  0/  1]	Loss 0.736 (0.736)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.49 (  0.49)	Loss_d 0.736 (0.736)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.10 (  0.10)
Test: [  1/  1]	Loss 0.736 (0.736)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.49 (  0.49)	Loss_d 0.736 (0.736)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.10 (  0.10)
Overall Timing[ 49/  1]	epoch_time 0.0410 (0.0436)	validation_time 0.0004 (0.0006)	train_time 0.0405 (0.0430)
record: (train_acc, test_acc) (0.652500018954277, 0.7040000557899475)
last accs (train_acc, test_acc) (0.44270000475645066, 0.5160000324249268)
done saving aggregate.csv to ./aggregate.csv
wandb: - 0.161 MB of 0.161 MB uploadedwandb: \ 0.161 MB of 0.161 MB uploadedwandb: | 0.161 MB of 0.161 MB uploadedwandb: / 0.161 MB of 0.161 MB uploadedThread SenderThread:
Traceback (most recent call last):
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/internal_util.py", line 48, in run
    self._run()
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/internal_util.py", line 99, in _run
    self._process(record)
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/internal.py", line 327, in _process
    self._sm.send(record)
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/sender.py", line 398, in send
    send_handler(record)
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/sender.py", line 420, in send_request
    send_handler(record)
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/sender.py", line 654, in send_request_defer
    self._flush_job()
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/sender.py", line 1706, in _flush_job
    artifact = self._job_builder.build(api=self._api)
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/job_builder.py", line 552, in build
    artifact.add_file(
  File "/home/zd16/scratch/mypython3/wandb/sdk/artifacts/artifact.py", line 1196, in add_file
    return self._add_local_file(
  File "/home/zd16/scratch/mypython3/wandb/sdk/artifacts/artifact.py", line 1459, in _add_local_file
    with tempfile.NamedTemporaryFile(dir=get_staging_dir(), delete=False) as f:
  File "/usr/local/python/3.9.16/lib/python3.9/tempfile.py", line 545, in NamedTemporaryFile
    (fd, name) = _mkstemp_inner(dir, prefix, suffix, flags, output_type)
  File "/usr/local/python/3.9.16/lib/python3.9/tempfile.py", line 255, in _mkstemp_inner
    fd = _os.open(file, flags, 0o600)
OSError: [Errno 122] Disk quota exceeded: '/home/zd16/.local/share/wandb/artifacts/staging/tmpbn_3f3hf'
wandb: ERROR Internal wandb error: file data was not synced
wandb: Currently logged in as: janezdu (janezdu-uiuc). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.17.9 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.7
wandb: Run data is saved locally in /scratch/users/zd16/sparseIRM-resnet-ver/wandb/run-20240907_205404-21r90zx8
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run name_random
wandb: ⭐️ View project at https://wandb.ai/janezdu-uiuc/irm
wandb: 🚀 View run at https://wandb.ai/janezdu-uiuc/irm/runs/21r90zx8
=> Reading YAML config from configs/smallscale/resnet18/resnet18-usc-unsigned.yaml
Namespace(data='dataset/', optimizer='adam', weight_opt='adam', set='mnistcifar', arch='ResNet18', config='configs/smallscale/resnet18/resnet18-usc-unsigned.yaml', log_dir=None, workers=4, epochs=50, start_epoch=None, batch_size=390, lr=0.006, warmup_length=0, momentum=0.9, weight_decay=0.0, print_freq=10, num_classes=1, resume='', resume_train_weights='', evaluate=False, pretrained=None, pretrained_distill=None, alpha_distill=0.95, T_distill=2, seed=0, multigpu=[0], lr_policy='cosine_lr', lr_adjust=30, lr_gamma=0.1, name='baseline', save_every=-1, prune_rate=1.0, param_prune_rate=0.0, pr_start=1.0, low_data=1, width_mult=1.0, nesterov=False, threetimes=False, random_subnet=False, one_batch=False, conv_type='DenseConv', freeze_weights=False, st=False, mode='fan_in', nonlinearity='relu', bn_type='LearnedBatchNorm', init='kaiming_normal', no_bn_decay=False, scale_fan=False, first_layer_dense=False, last_layer_dense=True, approx=False, zero=False, flip=False, bs=False, gumbel_sample=False, multiply_prob=False, no_multiply=False, multiply_cont=False, multiply_prob_bs=False, indiv=False, label_smoothing=None, first_layer_type=None, trainer='default', score_init_constant=1.0, K=1, update_freq=20, D=0.01, T=1, TA=True, TA2=False, TA_grow=False, center=False, straight_through=False, PLA_factor=0.1, PLA_patience=10, gradient_loss_para=0, abs_loss_para=0, thres=0.9, runs_name='name_random', resume_compare_loss1='', resume_compare_loss2='', init_weights='', trained_mask='', weight_rescaling=False, constrain_by_layer=False, weight_rescaling_data=False, use_running_stats=False, not_clipping=False, rescaling_para=False, lasso_para=0, dont_freeze_weights=False, iterative=True, prob_by_weight=False, rescale_at_fix_subnet=False, train_weights_at_the_same_time=False, sample_from_training_set=False, load_true_para=False, distill=False, finetune=False, stablize=False, prev_best=0, weight_opt_lr=0.0006, n=500, ts=0.28, te=0.6, d=20000, s=80, c=0.75, init_prob=False, thres_before=0.001, wide_ratio=0.001, noise=1, cal_p_q=False, just_finetune=False, snip=False, envs_num=2, l2_regularizer_weight=0.001, data_num=50000, env_type='linear', irm_type='irmv1', hidden_dim=390, penalty_anneal_iters=200, penalty_weight=10000.0, grayscale_model=0, weight_lr_schedule=False, fix_subnet=False, freeze_weight=False, step='ours', prior_sd_coef=0, dim_inv=2, variance_gamma=1.0, dim_spu=10, image_scale=32, cons_ratio='0.999_0.7_0.1', noise_ratio=0.2, step_gamma=0.1, step_round=3, inner_steps=1, use_pgd=True, z=15.0, pgd_anneal_iters=600, pgd_skip_steps=5, fraction_z=0.99)
=> Creating model 'ResNet18'
Here!!!!!!!!
==> Conv Type: DenseConv
==> BN Type: LearnedBatchNorm
<class 'torch.nn.modules.conv.Conv2d'>
<class 'torch.nn.modules.batchnorm.BatchNorm2d'>
==> Building first layer with <class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): Linear(in_features=512, out_features=1, bias=True)
)
=> Parallelizing on [0] gpus
<DEBUG> gradient to module.conv1.weight
<DEBUG> gradient to module.bn1.weight
<DEBUG> gradient to module.bn1.bias
<DEBUG> gradient to module.layer1.0.conv1.weight
<DEBUG> gradient to module.layer1.0.bn1.weight
<DEBUG> gradient to module.layer1.0.bn1.bias
<DEBUG> gradient to module.layer1.0.conv2.weight
<DEBUG> gradient to module.layer1.0.bn2.weight
<DEBUG> gradient to module.layer1.0.bn2.bias
<DEBUG> gradient to module.layer1.1.conv1.weight
<DEBUG> gradient to module.layer1.1.bn1.weight
<DEBUG> gradient to module.layer1.1.bn1.bias
<DEBUG> gradient to module.layer1.1.conv2.weight
<DEBUG> gradient to module.layer1.1.bn2.weight
<DEBUG> gradient to module.layer1.1.bn2.bias
<DEBUG> gradient to module.layer2.0.conv1.weight
<DEBUG> gradient to module.layer2.0.bn1.weight
<DEBUG> gradient to module.layer2.0.bn1.bias
<DEBUG> gradient to module.layer2.0.conv2.weight
<DEBUG> gradient to module.layer2.0.bn2.weight
<DEBUG> gradient to module.layer2.0.bn2.bias
<DEBUG> gradient to module.layer2.0.downsample.0.weight
<DEBUG> gradient to module.layer2.0.downsample.1.weight
<DEBUG> gradient to module.layer2.0.downsample.1.bias
<DEBUG> gradient to module.layer2.1.conv1.weight
<DEBUG> gradient to module.layer2.1.bn1.weight
<DEBUG> gradient to module.layer2.1.bn1.bias
<DEBUG> gradient to module.layer2.1.conv2.weight
<DEBUG> gradient to module.layer2.1.bn2.weight
<DEBUG> gradient to module.layer2.1.bn2.bias
<DEBUG> gradient to module.layer3.0.conv1.weight
<DEBUG> gradient to module.layer3.0.bn1.weight
<DEBUG> gradient to module.layer3.0.bn1.bias
<DEBUG> gradient to module.layer3.0.conv2.weight
<DEBUG> gradient to module.layer3.0.bn2.weight
<DEBUG> gradient to module.layer3.0.bn2.bias
<DEBUG> gradient to module.layer3.0.downsample.0.weight
<DEBUG> gradient to module.layer3.0.downsample.1.weight
<DEBUG> gradient to module.layer3.0.downsample.1.bias
<DEBUG> gradient to module.layer3.1.conv1.weight
<DEBUG> gradient to module.layer3.1.bn1.weight
<DEBUG> gradient to module.layer3.1.bn1.bias
<DEBUG> gradient to module.layer3.1.conv2.weight
<DEBUG> gradient to module.layer3.1.bn2.weight
<DEBUG> gradient to module.layer3.1.bn2.bias
<DEBUG> gradient to module.layer4.0.conv1.weight
<DEBUG> gradient to module.layer4.0.bn1.weight
<DEBUG> gradient to module.layer4.0.bn1.bias
<DEBUG> gradient to module.layer4.0.conv2.weight
<DEBUG> gradient to module.layer4.0.bn2.weight
<DEBUG> gradient to module.layer4.0.bn2.bias
<DEBUG> gradient to module.layer4.0.downsample.0.weight
<DEBUG> gradient to module.layer4.0.downsample.1.weight
<DEBUG> gradient to module.layer4.0.downsample.1.bias
<DEBUG> gradient to module.layer4.1.conv1.weight
<DEBUG> gradient to module.layer4.1.bn1.weight
<DEBUG> gradient to module.layer4.1.bn1.bias
<DEBUG> gradient to module.layer4.1.conv2.weight
<DEBUG> gradient to module.layer4.1.bn2.weight
<DEBUG> gradient to module.layer4.1.bn2.bias
<DEBUG> gradient to module.fc.weight
<DEBUG> gradient to module.fc.bias
Files already downloaded and verified
Files already downloaded and verified
Adding Noise to Label, len(Y)=12000, Label_noise=1189
Xmp (7877, 3, 32, 32) (6903, 3, 32, 32)
Xcp (6005, 3, 32, 32) (5995, 3, 32, 32)
env=0 2497 2497 3 3
xn 2500 xp 2500
env=1 1750 1750 750 750
xn 2500 xp 2500
env=2 50 50 450 450
xn 500 xp 500
=> Creating model 'EBD'
EBD(
  (embedings): Embedding(2, 1)
)
=> Parallelizing on [0] gpus
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:03<01:15,  3.04s/it] 19%|#9        | 5/26 [00:03<00:09,  2.11it/s] 35%|###4      | 9/26 [00:03<00:03,  4.38it/s] 50%|#####     | 13/26 [00:03<00:01,  7.11it/s] 65%|######5   | 17/26 [00:03<00:00, 10.27it/s] 81%|########  | 21/26 [00:03<00:00, 13.77it/s] 96%|#########6| 25/26 [00:03<00:00, 17.26it/s]100%|##########| 26/26 [00:04<00:00,  6.37it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 0 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 2 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 3 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 4 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 5 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 6 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 7 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 8 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 9 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 10 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 11 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 12 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 13 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 14 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 15 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 16 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 17 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 18 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 19 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 20 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 21 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 22 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 23 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 24 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 25 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [0][  26/  26]	Loss 0.420 (0.582)	train_nll   0.42 (  0.58)	train_penalty   0.07 (  0.34)	weight_norm  20.90 ( 18.13)	train_acc   0.84 (  0.81)	train_minacc   0.03 (  0.07)	train_majacc   0.99 (  0.94)	train_corr   0.00 (  0.00)	l1 7.1509 (8.3916)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.35it/s] 27%|##6       | 7/26 [00:00<00:00, 29.53it/s]                                               27%|##6       | 7/26 [00:00<00:00, 29.53it/s] 46%|####6     | 12/26 [00:00<00:00, 35.77it/s] 65%|######5   | 17/26 [00:00<00:00, 36.75it/s]                                                65%|######5   | 17/26 [00:00<00:00, 36.75it/s] 85%|########4 | 22/26 [00:00<00:00, 39.70it/s]100%|##########| 26/26 [00:00<00:00, 33.65it/s]
Test: [   0/  26]	Loss 0.366 (0.366)	test_acc   0.88 (  0.88)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.366 (0.366)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.99 (  0.99)
Test: [  10/  26]	Loss 0.399 (0.413)	test_acc   0.86 (  0.85)	test_minacc   0.02 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.399 (0.413)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.02 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.99 (  0.99)
Test: [  20/  26]	Loss 0.434 (0.418)	test_acc   0.84 (  0.85)	test_minacc   0.02 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.434 (0.418)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.02 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.99 (  0.99)
Test: [  26/  26]	Loss 0.423 (0.421)	test_acc   0.84 (  0.85)	test_minacc   0.03 (  0.01)	test_majacc   0.99 (  1.00)	Loss_d 0.423 (0.421)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.03 (  0.01)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.98 (  0.99)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00,  2.54it/s]100%|##########| 1/1 [00:00<00:00,  2.53it/s]
Test: [  0/  1]	Loss 1.868 (1.868)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.868 (1.868)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  1/  1]	Loss 1.868 (1.868)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.868 (1.868)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/165/checkpoints/model_best.pth
Overall Timing[  0/  1]	epoch_time 0.1037 (0.1037)	validation_time 0.0067 (0.0067)	train_time 0.0915 (0.0915)
record: (train_acc, test_acc) (0.8466000236868858, 0.10500000417232513)
last accs (train_acc, test_acc) (0.8466000236868858, 0.10500000417232513)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.48it/s] 23%|##3       | 6/26 [00:00<00:00, 25.69it/s] 38%|###8      | 10/26 [00:00<00:00, 30.15it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.96it/s] 69%|######9   | 18/26 [00:00<00:00, 34.35it/s] 85%|########4 | 22/26 [00:00<00:00, 35.56it/s]100%|##########| 26/26 [00:00<00:00, 36.49it/s]100%|##########| 26/26 [00:00<00:00, 30.71it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 26 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 27 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 28 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 29 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 30 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 31 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 32 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 33 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 34 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 35 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 36 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 37 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 38 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 39 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 40 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 41 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 42 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 43 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 44 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 45 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 46 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 47 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 48 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 49 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 50 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 51 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [1][  26/  26]	Loss 0.413 (0.416)	train_nll   0.41 (  0.42)	train_penalty   0.05 (  0.06)	weight_norm  22.03 ( 21.68)	train_acc   0.84 (  0.85)	train_minacc   0.03 (  0.01)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 6.8350 (6.9451)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.45it/s] 15%|#5        | 4/26 [00:00<00:01, 14.98it/s] 35%|###4      | 9/26 [00:00<00:00, 26.96it/s]                                               35%|###4      | 9/26 [00:00<00:00, 26.96it/s] 54%|#####3    | 14/26 [00:00<00:00, 33.43it/s] 73%|#######3  | 19/26 [00:00<00:00, 37.56it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 37.56it/s] 92%|#########2| 24/26 [00:00<00:00, 37.00it/s]100%|##########| 26/26 [00:00<00:00, 30.30it/s]
Test: [   0/  26]	Loss 0.363 (0.363)	test_acc   0.88 (  0.88)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.363 (0.363)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
Test: [  10/  26]	Loss 0.392 (0.401)	test_acc   0.86 (  0.85)	test_minacc   0.02 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.392 (0.401)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.02 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  20/  26]	Loss 0.411 (0.404)	test_acc   0.84 (  0.85)	test_minacc   0.02 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.411 (0.404)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.02 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.98)
Test: [  26/  26]	Loss 0.412 (0.407)	test_acc   0.85 (  0.85)	test_minacc   0.03 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.412 (0.407)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.03 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.97it/s]
Test: [  0/  1]	Loss 1.702 (1.702)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.702 (1.702)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
Test: [  1/  1]	Loss 1.702 (1.702)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.702 (1.702)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/165/checkpoints/model_best.pth
Overall Timing[  1/  1]	epoch_time 0.0389 (0.0713)	validation_time 0.0005 (0.0036)	train_time 0.0384 (0.0649)
record: (train_acc, test_acc) (0.8479000251889229, 0.11000000685453415)
last accs (train_acc, test_acc) (0.8479000251889229, 0.11000000685453415)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.61it/s] 19%|#9        | 5/26 [00:00<00:00, 25.34it/s] 35%|###4      | 9/26 [00:00<00:00, 30.85it/s] 50%|#####     | 13/26 [00:00<00:00, 33.12it/s] 65%|######5   | 17/26 [00:00<00:00, 35.38it/s] 81%|########  | 21/26 [00:00<00:00, 35.35it/s] 96%|#########6| 25/26 [00:00<00:00, 35.79it/s]100%|##########| 26/26 [00:00<00:00, 29.87it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 52 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 53 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 54 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 55 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 56 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 57 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 58 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 59 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 60 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 61 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 62 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 63 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 64 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 65 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 66 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 67 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 68 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 69 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 70 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 71 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 72 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 73 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 74 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 75 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 76 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 77 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [2][  26/  26]	Loss 0.391 (0.406)	train_nll   0.39 (  0.41)	train_penalty   0.04 (  0.06)	weight_norm  22.14 ( 22.10)	train_acc   0.85 (  0.85)	train_minacc   0.05 (  0.00)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 6.8561 (6.8398)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.89it/s] 27%|##6       | 7/26 [00:00<00:00, 34.08it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.08it/s] 50%|#####     | 13/26 [00:00<00:00, 42.71it/s] 69%|######9   | 18/26 [00:00<00:00, 43.37it/s]                                                69%|######9   | 18/26 [00:00<00:00, 43.37it/s] 88%|########8 | 23/26 [00:00<00:00, 44.59it/s]100%|##########| 26/26 [00:00<00:00, 39.68it/s]
Test: [   0/  26]	Loss 0.366 (0.366)	test_acc   0.88 (  0.88)	test_minacc   0.07 (  0.07)	test_majacc   0.99 (  0.99)	Loss_d 0.366 (0.366)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.07 (  0.07)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.93 (  0.93)
Test: [  10/  26]	Loss 0.378 (0.390)	test_acc   0.86 (  0.85)	test_minacc   0.06 (  0.03)	test_majacc   0.99 (  0.99)	Loss_d 0.378 (0.390)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.06 (  0.03)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.94 (  0.94)
Test: [  20/  26]	Loss 0.397 (0.393)	test_acc   0.83 (  0.85)	test_minacc   0.08 (  0.04)	test_majacc   0.98 (  0.99)	Loss_d 0.397 (0.393)	test_acc_d   0.83 (  0.85)	test_minacc_d   0.08 (  0.04)	test_majacc_d   0.98 (  0.99)	test_corr_d   0.93 (  0.94)
Test: [  26/  26]	Loss 0.388 (0.396)	test_acc   0.85 (  0.85)	test_minacc   0.10 (  0.04)	test_majacc   0.99 (  0.99)	Loss_d 0.388 (0.396)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.10 (  0.04)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.94 (  0.94)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.48it/s]
Test: [  0/  1]	Loss 1.654 (1.654)	test_acc   0.12 (  0.12)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 1.654 (1.654)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.92 (  0.92)
Test: [  1/  1]	Loss 1.654 (1.654)	test_acc   0.12 (  0.12)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 1.654 (1.654)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.92 (  0.92)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/165/checkpoints/model_best.pth
Overall Timing[  2/  1]	epoch_time 0.0383 (0.0603)	validation_time 0.0003 (0.0025)	train_time 0.0379 (0.0559)
record: (train_acc, test_acc) (0.8463000220060348, 0.11700000613927841)
last accs (train_acc, test_acc) (0.8463000220060348, 0.11700000613927841)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 24.92it/s] 27%|##6       | 7/26 [00:00<00:00, 30.45it/s] 42%|####2     | 11/26 [00:00<00:00, 32.75it/s] 58%|#####7    | 15/26 [00:00<00:00, 33.89it/s] 73%|#######3  | 19/26 [00:00<00:00, 34.22it/s] 88%|########8 | 23/26 [00:00<00:00, 34.42it/s]100%|##########| 26/26 [00:00<00:00, 31.05it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 78 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 79 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 80 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 81 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 82 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 83 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 84 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 85 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 86 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 87 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 88 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 89 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 90 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 91 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 92 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 93 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 94 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 95 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 96 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 97 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 98 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 99 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 100 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 101 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 102 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 103 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [3][  26/  26]	Loss 0.371 (0.387)	train_nll   0.37 (  0.39)	train_penalty   0.02 (  0.04)	weight_norm  22.19 ( 22.17)	train_acc   0.84 (  0.85)	train_minacc   0.23 (  0.05)	train_majacc   0.95 (  0.99)	train_corr   0.00 (  0.00)	l1 6.8752 (6.9099)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.70it/s] 23%|##3       | 6/26 [00:00<00:00, 22.38it/s]                                               23%|##3       | 6/26 [00:00<00:00, 22.38it/s] 42%|####2     | 11/26 [00:00<00:00, 31.07it/s] 62%|######1   | 16/26 [00:00<00:00, 36.36it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.36it/s] 81%|########  | 21/26 [00:00<00:00, 36.21it/s]100%|##########| 26/26 [00:00<00:00, 39.58it/s]100%|##########| 26/26 [00:00<00:00, 30.87it/s]
Test: [   0/  26]	Loss 0.350 (0.350)	test_acc   0.87 (  0.87)	test_minacc   0.17 (  0.17)	test_majacc   0.97 (  0.97)	Loss_d 0.350 (0.350)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.17 (  0.17)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.91 (  0.91)
Test: [  10/  26]	Loss 0.359 (0.365)	test_acc   0.87 (  0.85)	test_minacc   0.22 (  0.14)	test_majacc   0.97 (  0.97)	Loss_d 0.359 (0.365)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.22 (  0.14)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.90 (  0.91)
Test: [  20/  26]	Loss 0.373 (0.365)	test_acc   0.84 (  0.85)	test_minacc   0.19 (  0.15)	test_majacc   0.96 (  0.97)	Loss_d 0.373 (0.365)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.19 (  0.15)	test_majacc_d   0.96 (  0.97)	test_corr_d   0.90 (  0.91)
Test: [  26/  26]	Loss 0.346 (0.366)	test_acc   0.85 (  0.85)	test_minacc   0.21 (  0.15)	test_majacc   0.97 (  0.97)	Loss_d 0.346 (0.366)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.21 (  0.15)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.89 (  0.91)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 58.43it/s]
Test: [  0/  1]	Loss 1.581 (1.581)	test_acc   0.18 (  0.18)	test_minacc   0.09 (  0.09)	test_majacc   0.99 (  0.99)	Loss_d 1.581 (1.581)	test_acc_d   0.18 (  0.18)	test_minacc_d   0.09 (  0.09)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.85 (  0.85)
Test: [  1/  1]	Loss 1.581 (1.581)	test_acc   0.18 (  0.18)	test_minacc   0.09 (  0.09)	test_majacc   0.99 (  0.99)	Loss_d 1.581 (1.581)	test_acc_d   0.18 (  0.18)	test_minacc_d   0.09 (  0.09)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.85 (  0.85)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/165/checkpoints/model_best.pth
Overall Timing[  3/  1]	epoch_time 0.0473 (0.0570)	validation_time 0.0006 (0.0020)	train_time 0.0466 (0.0536)
record: (train_acc, test_acc) (0.8491000274419784, 0.18400001525878906)
last accs (train_acc, test_acc) (0.8491000274419784, 0.18400001525878906)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.94it/s] 19%|#9        | 5/26 [00:00<00:00, 22.08it/s] 35%|###4      | 9/26 [00:00<00:00, 27.30it/s] 50%|#####     | 13/26 [00:00<00:00, 28.83it/s] 65%|######5   | 17/26 [00:00<00:00, 31.26it/s] 81%|########  | 21/26 [00:00<00:00, 32.85it/s] 96%|#########6| 25/26 [00:00<00:00, 33.67it/s]100%|##########| 26/26 [00:00<00:00, 27.98it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 104 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 105 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 106 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 107 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 108 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 109 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 110 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 111 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 112 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 113 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 114 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 115 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 116 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 117 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 118 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 119 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 120 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 121 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 122 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 123 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 124 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 125 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 126 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 127 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 128 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 129 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [4][  26/  26]	Loss 0.358 (0.373)	train_nll   0.36 (  0.37)	train_penalty   0.03 (  0.04)	weight_norm  22.26 ( 22.23)	train_acc   0.85 (  0.85)	train_minacc   0.05 (  0.08)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 6.7855 (6.9325)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 13.62it/s] 27%|##6       | 7/26 [00:00<00:00, 30.48it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.48it/s] 46%|####6     | 12/26 [00:00<00:00, 35.66it/s] 65%|######5   | 17/26 [00:00<00:00, 39.71it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.71it/s] 85%|########4 | 22/26 [00:00<00:00, 39.77it/s]100%|##########| 26/26 [00:00<00:00, 35.85it/s]
Test: [   0/  26]	Loss 0.324 (0.324)	test_acc   0.88 (  0.88)	test_minacc   0.13 (  0.13)	test_majacc   0.98 (  0.98)	Loss_d 0.324 (0.324)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.13 (  0.13)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.91 (  0.91)
Test: [  10/  26]	Loss 0.352 (0.345)	test_acc   0.87 (  0.86)	test_minacc   0.22 (  0.15)	test_majacc   0.97 (  0.98)	Loss_d 0.352 (0.345)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.22 (  0.15)	test_majacc_d   0.97 (  0.98)	test_corr_d   0.91 (  0.92)
Test: [  20/  26]	Loss 0.371 (0.347)	test_acc   0.85 (  0.86)	test_minacc   0.19 (  0.16)	test_majacc   0.98 (  0.98)	Loss_d 0.371 (0.347)	test_acc_d   0.85 (  0.86)	test_minacc_d   0.19 (  0.16)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.91 (  0.92)
Test: [  26/  26]	Loss 0.341 (0.350)	test_acc   0.85 (  0.86)	test_minacc   0.15 (  0.16)	test_majacc   0.98 (  0.98)	Loss_d 0.341 (0.350)	test_acc_d   0.85 (  0.86)	test_minacc_d   0.15 (  0.16)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.92 (  0.92)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.71it/s]
Test: [  0/  1]	Loss 1.523 (1.523)	test_acc   0.14 (  0.14)	test_minacc   0.05 (  0.05)	test_majacc   0.99 (  0.99)	Loss_d 1.523 (1.523)	test_acc_d   0.14 (  0.14)	test_minacc_d   0.05 (  0.05)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.88 (  0.88)
Test: [  1/  1]	Loss 1.523 (1.523)	test_acc   0.14 (  0.14)	test_minacc   0.05 (  0.05)	test_majacc   0.99 (  0.99)	Loss_d 1.523 (1.523)	test_acc_d   0.14 (  0.14)	test_minacc_d   0.05 (  0.05)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.88 (  0.88)
Overall Timing[  4/  1]	epoch_time 0.0436 (0.0543)	validation_time 0.0004 (0.0017)	train_time 0.0431 (0.0515)
record: (train_acc, test_acc) (0.8491000274419784, 0.18400001525878906)
last accs (train_acc, test_acc) (0.8571000213623047, 0.14400000870227814)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.46it/s] 15%|#5        | 4/26 [00:00<00:01, 18.06it/s] 31%|###       | 8/26 [00:00<00:00, 26.27it/s] 50%|#####     | 13/26 [00:00<00:00, 32.31it/s] 65%|######5   | 17/26 [00:00<00:00, 33.98it/s] 81%|########  | 21/26 [00:00<00:00, 35.73it/s]100%|##########| 26/26 [00:00<00:00, 37.05it/s]100%|##########| 26/26 [00:00<00:00, 30.70it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 130 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 131 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 132 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 133 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 134 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 135 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 136 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 137 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 138 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 139 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 140 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 141 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 142 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 143 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 144 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 145 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 146 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 147 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 148 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 149 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 150 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 151 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 152 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 153 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 154 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 155 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [5][  26/  26]	Loss 0.327 (0.348)	train_nll   0.33 (  0.35)	train_penalty   0.02 (  0.03)	weight_norm  22.34 ( 22.30)	train_acc   0.86 (  0.85)	train_minacc   0.23 (  0.18)	train_majacc   0.97 (  0.97)	train_corr   0.00 (  0.00)	l1 6.8100 (7.0304)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.69it/s] 27%|##6       | 7/26 [00:00<00:00, 32.25it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.25it/s] 46%|####6     | 12/26 [00:00<00:00, 38.06it/s] 65%|######5   | 17/26 [00:00<00:00, 40.99it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.99it/s] 85%|########4 | 22/26 [00:00<00:00, 39.94it/s]100%|##########| 26/26 [00:00<00:00, 36.55it/s]
Test: [   0/  26]	Loss 0.305 (0.305)	test_acc   0.88 (  0.88)	test_minacc   0.33 (  0.33)	test_majacc   0.96 (  0.96)	Loss_d 0.305 (0.305)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.88 (  0.88)
Test: [  10/  26]	Loss 0.323 (0.327)	test_acc   0.88 (  0.86)	test_minacc   0.37 (  0.25)	test_majacc   0.96 (  0.97)	Loss_d 0.323 (0.327)	test_acc_d   0.88 (  0.86)	test_minacc_d   0.37 (  0.25)	test_majacc_d   0.96 (  0.97)	test_corr_d   0.88 (  0.89)
Test: [  20/  26]	Loss 0.351 (0.329)	test_acc   0.84 (  0.86)	test_minacc   0.23 (  0.25)	test_majacc   0.96 (  0.97)	Loss_d 0.351 (0.329)	test_acc_d   0.84 (  0.86)	test_minacc_d   0.23 (  0.25)	test_majacc_d   0.96 (  0.97)	test_corr_d   0.89 (  0.89)
Test: [  26/  26]	Loss 0.307 (0.331)	test_acc   0.88 (  0.86)	test_minacc   0.31 (  0.25)	test_majacc   0.99 (  0.97)	Loss_d 0.307 (0.331)	test_acc_d   0.88 (  0.86)	test_minacc_d   0.31 (  0.25)	test_majacc_d   0.99 (  0.97)	test_corr_d   0.89 (  0.89)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.71it/s]
Test: [  0/  1]	Loss 1.609 (1.609)	test_acc   0.20 (  0.20)	test_minacc   0.11 (  0.11)	test_majacc   0.98 (  0.98)	Loss_d 1.609 (1.609)	test_acc_d   0.20 (  0.20)	test_minacc_d   0.11 (  0.11)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.82 (  0.82)
Test: [  1/  1]	Loss 1.609 (1.609)	test_acc   0.20 (  0.20)	test_minacc   0.11 (  0.11)	test_majacc   0.98 (  0.98)	Loss_d 1.609 (1.609)	test_acc_d   0.20 (  0.20)	test_minacc_d   0.11 (  0.11)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.82 (  0.82)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/165/checkpoints/model_best.pth
Overall Timing[  5/  1]	epoch_time 0.0412 (0.0521)	validation_time 0.0003 (0.0015)	train_time 0.0408 (0.0497)
record: (train_acc, test_acc) (0.8608000178337097, 0.19700001180171967)
last accs (train_acc, test_acc) (0.8608000178337097, 0.19700001180171967)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.79it/s] 23%|##3       | 6/26 [00:00<00:00, 26.81it/s] 38%|###8      | 10/26 [00:00<00:00, 29.17it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.19it/s] 69%|######9   | 18/26 [00:00<00:00, 32.25it/s] 85%|########4 | 22/26 [00:00<00:00, 33.62it/s]100%|##########| 26/26 [00:00<00:00, 34.29it/s]100%|##########| 26/26 [00:00<00:00, 29.74it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 156 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 157 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 158 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 159 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 160 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 161 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 162 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 163 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 164 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 165 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 166 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 167 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 168 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 169 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 170 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 171 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 172 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 173 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 174 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 175 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 176 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 177 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 178 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 179 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 180 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 181 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [6][  26/  26]	Loss 0.312 (0.337)	train_nll   0.31 (  0.34)	train_penalty   0.02 (  0.03)	weight_norm  22.42 ( 22.38)	train_acc   0.86 (  0.86)	train_minacc   0.21 (  0.21)	train_majacc   0.99 (  0.97)	train_corr   0.00 (  0.00)	l1 6.6092 (6.9800)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.44it/s] 15%|#5        | 4/26 [00:00<00:01, 18.29it/s] 38%|###8      | 10/26 [00:00<00:00, 34.00it/s]                                                38%|###8      | 10/26 [00:00<00:00, 34.00it/s] 58%|#####7    | 15/26 [00:00<00:00, 37.93it/s]                                                58%|#####7    | 15/26 [00:00<00:00, 37.93it/s] 81%|########  | 21/26 [00:00<00:00, 43.77it/s]100%|##########| 26/26 [00:00<00:00, 35.58it/s]
Test: [   0/  26]	Loss 0.302 (0.302)	test_acc   0.89 (  0.89)	test_minacc   0.30 (  0.30)	test_majacc   0.97 (  0.97)	Loss_d 0.302 (0.302)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.89 (  0.89)
Test: [  10/  26]	Loss 0.318 (0.314)	test_acc   0.89 (  0.87)	test_minacc   0.39 (  0.23)	test_majacc   0.97 (  0.98)	Loss_d 0.318 (0.314)	test_acc_d   0.89 (  0.87)	test_minacc_d   0.39 (  0.23)	test_majacc_d   0.97 (  0.98)	test_corr_d   0.88 (  0.90)
Test: [  20/  26]	Loss 0.340 (0.318)	test_acc   0.84 (  0.86)	test_minacc   0.23 (  0.23)	test_majacc   0.96 (  0.98)	Loss_d 0.340 (0.318)	test_acc_d   0.84 (  0.86)	test_minacc_d   0.23 (  0.23)	test_majacc_d   0.96 (  0.98)	test_corr_d   0.90 (  0.90)
Test: [  26/  26]	Loss 0.298 (0.319)	test_acc   0.88 (  0.86)	test_minacc   0.31 (  0.23)	test_majacc   0.99 (  0.98)	Loss_d 0.298 (0.319)	test_acc_d   0.88 (  0.86)	test_minacc_d   0.31 (  0.23)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.89 (  0.90)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.65it/s]
Test: [  0/  1]	Loss 1.571 (1.571)	test_acc   0.19 (  0.19)	test_minacc   0.10 (  0.10)	test_majacc   1.00 (  1.00)	Loss_d 1.571 (1.571)	test_acc_d   0.19 (  0.19)	test_minacc_d   0.10 (  0.10)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.82 (  0.82)
Test: [  1/  1]	Loss 1.571 (1.571)	test_acc   0.19 (  0.19)	test_minacc   0.10 (  0.10)	test_majacc   1.00 (  1.00)	Loss_d 1.571 (1.571)	test_acc_d   0.19 (  0.19)	test_minacc_d   0.10 (  0.10)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.82 (  0.82)
Overall Timing[  6/  1]	epoch_time 0.0417 (0.0507)	validation_time 0.0004 (0.0013)	train_time 0.0413 (0.0485)
record: (train_acc, test_acc) (0.8608000178337097, 0.19700001180171967)
last accs (train_acc, test_acc) (0.8622000210285187, 0.18900001049041748)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.78it/s] 19%|#9        | 5/26 [00:00<00:01, 17.74it/s] 35%|###4      | 9/26 [00:00<00:00, 23.48it/s] 50%|#####     | 13/26 [00:00<00:00, 26.64it/s] 65%|######5   | 17/26 [00:00<00:00, 29.11it/s] 81%|########  | 21/26 [00:00<00:00, 31.03it/s] 96%|#########6| 25/26 [00:00<00:00, 32.50it/s]100%|##########| 26/26 [00:00<00:00, 26.04it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 182 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 183 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 184 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 185 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 186 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 187 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 188 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 189 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 190 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 191 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 192 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 193 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 194 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 195 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 196 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 197 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 198 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 199 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 200 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 201 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 202 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 203 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 204 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 205 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 206 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 207 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [7][  26/  26]	Loss 0.001 (0.223)	train_nll   0.53 (  0.35)	train_penalty   0.00 (  0.02)	weight_norm  22.53 ( 22.48)	train_acc   0.72 (  0.85)	train_minacc   0.82 (  0.37)	train_majacc   0.70 (  0.93)	train_corr   0.00 (  0.00)	l1 6.4813 (7.2176)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.91it/s] 23%|##3       | 6/26 [00:00<00:00, 27.68it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.68it/s] 42%|####2     | 11/26 [00:00<00:00, 34.65it/s] 62%|######1   | 16/26 [00:00<00:00, 39.66it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.66it/s] 81%|########  | 21/26 [00:00<00:00, 37.77it/s]100%|##########| 26/26 [00:00<00:00, 40.63it/s]100%|##########| 26/26 [00:00<00:00, 33.41it/s]
Test: [   0/  26]	Loss 0.586 (0.586)	test_acc   0.67 (  0.67)	test_minacc   0.72 (  0.72)	test_majacc   0.66 (  0.66)	Loss_d 0.586 (0.586)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.66 (  0.66)	test_corr_d   0.33 (  0.33)
Test: [  10/  26]	Loss 0.613 (0.569)	test_acc   0.65 (  0.69)	test_minacc   0.61 (  0.74)	test_majacc   0.66 (  0.68)	Loss_d 0.613 (0.569)	test_acc_d   0.65 (  0.69)	test_minacc_d   0.61 (  0.74)	test_majacc_d   0.66 (  0.68)	test_corr_d   0.37 (  0.37)
Test: [  20/  26]	Loss 0.564 (0.561)	test_acc   0.70 (  0.69)	test_minacc   0.71 (  0.74)	test_majacc   0.70 (  0.68)	Loss_d 0.564 (0.561)	test_acc_d   0.70 (  0.69)	test_minacc_d   0.71 (  0.74)	test_majacc_d   0.70 (  0.68)	test_corr_d   0.36 (  0.37)
Test: [  26/  26]	Loss 0.519 (0.560)	test_acc   0.72 (  0.69)	test_minacc   0.82 (  0.74)	test_majacc   0.71 (  0.68)	Loss_d 0.519 (0.560)	test_acc_d   0.72 (  0.69)	test_minacc_d   0.82 (  0.74)	test_majacc_d   0.71 (  0.68)	test_corr_d   0.38 (  0.38)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.55it/s]
Test: [  0/  1]	Loss 0.945 (0.945)	test_acc   0.59 (  0.59)	test_minacc   0.57 (  0.57)	test_majacc   0.80 (  0.80)	Loss_d 0.945 (0.945)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.06 (  0.06)
Test: [  1/  1]	Loss 0.945 (0.945)	test_acc   0.59 (  0.59)	test_minacc   0.57 (  0.57)	test_majacc   0.80 (  0.80)	Loss_d 0.945 (0.945)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.06 (  0.06)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/165/checkpoints/model_best.pth
Overall Timing[  7/  1]	epoch_time 0.0410 (0.0495)	validation_time 0.0005 (0.0012)	train_time 0.0405 (0.0475)
record: (train_acc, test_acc) (0.6920000316500664, 0.5910000205039978)
last accs (train_acc, test_acc) (0.6920000316500664, 0.5910000205039978)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.69it/s] 19%|#9        | 5/26 [00:00<00:01, 20.27it/s] 35%|###4      | 9/26 [00:00<00:00, 27.41it/s] 50%|#####     | 13/26 [00:00<00:00, 30.71it/s] 65%|######5   | 17/26 [00:00<00:00, 32.89it/s] 81%|########  | 21/26 [00:00<00:00, 34.24it/s] 96%|#########6| 25/26 [00:00<00:00, 35.30it/s]100%|##########| 26/26 [00:00<00:00, 28.89it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 208 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 209 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 210 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 211 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 212 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 213 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 214 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 215 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 216 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 217 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 218 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 219 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 220 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 221 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 222 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 223 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 224 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 225 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 226 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 227 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 228 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 229 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 230 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 231 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 232 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 233 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [8][  26/  26]	Loss 0.001 (0.004)	train_nll   0.55 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  22.59 ( 22.57)	train_acc   0.67 (  0.69)	train_minacc   0.69 (  0.66)	train_majacc   0.66 (  0.70)	train_corr   0.00 (  0.00)	l1 5.3662 (5.6958)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.47it/s] 27%|##6       | 7/26 [00:00<00:00, 33.66it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.66it/s] 46%|####6     | 12/26 [00:00<00:00, 38.77it/s] 65%|######5   | 17/26 [00:00<00:00, 41.69it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.69it/s] 85%|########4 | 22/26 [00:00<00:00, 43.26it/s]100%|##########| 26/26 [00:00<00:00, 36.62it/s]
Test: [   0/  26]	Loss 0.627 (0.627)	test_acc   0.57 (  0.57)	test_minacc   0.74 (  0.74)	test_majacc   0.55 (  0.55)	Loss_d 0.627 (0.627)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.55 (  0.55)	test_corr_d   0.29 (  0.29)
Test: [  10/  26]	Loss 0.684 (0.650)	test_acc   0.53 (  0.56)	test_minacc   0.59 (  0.67)	test_majacc   0.52 (  0.54)	Loss_d 0.684 (0.650)	test_acc_d   0.53 (  0.56)	test_minacc_d   0.59 (  0.67)	test_majacc_d   0.52 (  0.54)	test_corr_d   0.42 (  0.39)
Test: [  20/  26]	Loss 0.632 (0.644)	test_acc   0.57 (  0.56)	test_minacc   0.69 (  0.68)	test_majacc   0.55 (  0.54)	Loss_d 0.632 (0.644)	test_acc_d   0.57 (  0.56)	test_minacc_d   0.69 (  0.68)	test_majacc_d   0.55 (  0.54)	test_corr_d   0.35 (  0.39)
Test: [  26/  26]	Loss 0.599 (0.643)	test_acc   0.60 (  0.56)	test_minacc   0.72 (  0.68)	test_majacc   0.58 (  0.54)	Loss_d 0.599 (0.643)	test_acc_d   0.60 (  0.56)	test_minacc_d   0.72 (  0.68)	test_majacc_d   0.58 (  0.54)	test_corr_d   0.40 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.01it/s]
Test: [  0/  1]	Loss 0.942 (0.942)	test_acc   0.60 (  0.60)	test_minacc   0.60 (  0.60)	test_majacc   0.59 (  0.59)	Loss_d 0.942 (0.942)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.17 (  0.17)
Test: [  1/  1]	Loss 0.942 (0.942)	test_acc   0.60 (  0.60)	test_minacc   0.60 (  0.60)	test_majacc   0.59 (  0.59)	Loss_d 0.942 (0.942)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.17 (  0.17)
Overall Timing[  8/  1]	epoch_time 0.0416 (0.0486)	validation_time 0.0004 (0.0011)	train_time 0.0412 (0.0468)
record: (train_acc, test_acc) (0.6920000316500664, 0.5910000205039978)
last accs (train_acc, test_acc) (0.5625000109672547, 0.5990000367164612)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.33it/s] 19%|#9        | 5/26 [00:00<00:01, 14.46it/s] 35%|###4      | 9/26 [00:00<00:00, 21.43it/s] 50%|#####     | 13/26 [00:00<00:00, 26.07it/s] 65%|######5   | 17/26 [00:00<00:00, 29.21it/s] 81%|########  | 21/26 [00:00<00:00, 31.58it/s] 96%|#########6| 25/26 [00:00<00:00, 33.02it/s]100%|##########| 26/26 [00:01<00:00, 24.66it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 234 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 235 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 236 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 237 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 238 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 239 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 240 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 241 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 242 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 243 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 244 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 245 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 246 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 247 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 248 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 249 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 250 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 251 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 252 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 253 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 254 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 255 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 256 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 257 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 258 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 259 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [9][  26/  26]	Loss 0.003 (0.003)	train_nll   0.53 (  0.56)	train_penalty   0.00 (  0.00)	weight_norm  22.60 ( 22.59)	train_acc   0.73 (  0.70)	train_minacc   0.72 (  0.62)	train_majacc   0.73 (  0.71)	train_corr   0.00 (  0.00)	l1 4.9587 (5.2140)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.12it/s] 23%|##3       | 6/26 [00:00<00:00, 31.32it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.32it/s] 42%|####2     | 11/26 [00:00<00:00, 35.82it/s] 62%|######1   | 16/26 [00:00<00:00, 40.13it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.13it/s] 81%|########  | 21/26 [00:00<00:00, 39.85it/s]100%|##########| 26/26 [00:00<00:00, 42.45it/s]100%|##########| 26/26 [00:00<00:00, 35.48it/s]
Test: [   0/  26]	Loss 0.575 (0.575)	test_acc   0.67 (  0.67)	test_minacc   0.80 (  0.80)	test_majacc   0.65 (  0.65)	Loss_d 0.575 (0.575)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.80 (  0.80)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.35 (  0.35)
Test: [  10/  26]	Loss 0.561 (0.567)	test_acc   0.70 (  0.70)	test_minacc   0.56 (  0.69)	test_majacc   0.72 (  0.70)	Loss_d 0.561 (0.567)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.56 (  0.69)	test_majacc_d   0.72 (  0.70)	test_corr_d   0.43 (  0.39)
Test: [  20/  26]	Loss 0.564 (0.563)	test_acc   0.72 (  0.70)	test_minacc   0.69 (  0.69)	test_majacc   0.72 (  0.70)	Loss_d 0.564 (0.563)	test_acc_d   0.72 (  0.70)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.72 (  0.70)	test_corr_d   0.39 (  0.39)
Test: [  26/  26]	Loss 0.541 (0.563)	test_acc   0.72 (  0.70)	test_minacc   0.74 (  0.69)	test_majacc   0.71 (  0.70)	Loss_d 0.541 (0.563)	test_acc_d   0.72 (  0.70)	test_minacc_d   0.74 (  0.69)	test_majacc_d   0.71 (  0.70)	test_corr_d   0.40 (  0.39)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.79it/s]
Test: [  0/  1]	Loss 0.785 (0.785)	test_acc   0.57 (  0.57)	test_minacc   0.55 (  0.55)	test_majacc   0.80 (  0.80)	Loss_d 0.785 (0.785)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.08 (  0.08)
Test: [  1/  1]	Loss 0.785 (0.785)	test_acc   0.57 (  0.57)	test_minacc   0.55 (  0.55)	test_majacc   0.80 (  0.80)	Loss_d 0.785 (0.785)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.08 (  0.08)
Overall Timing[  9/  1]	epoch_time 0.0482 (0.0485)	validation_time 0.0005 (0.0011)	train_time 0.0477 (0.0469)
record: (train_acc, test_acc) (0.6920000316500664, 0.5910000205039978)
last accs (train_acc, test_acc) (0.7013000341653823, 0.5730000138282776)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.62it/s] 19%|#9        | 5/26 [00:00<00:01, 18.99it/s] 35%|###4      | 9/26 [00:00<00:00, 24.93it/s] 50%|#####     | 13/26 [00:00<00:00, 28.37it/s] 65%|######5   | 17/26 [00:00<00:00, 30.78it/s] 81%|########  | 21/26 [00:00<00:00, 32.45it/s] 96%|#########6| 25/26 [00:00<00:00, 33.55it/s]100%|##########| 26/26 [00:00<00:00, 27.26it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 260 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 261 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 262 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 263 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 264 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 265 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 266 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 267 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 268 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 269 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 270 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 271 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 272 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 273 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 274 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 275 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 276 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 277 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 278 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 279 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 280 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 281 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 282 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 283 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 284 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 285 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [10][  26/  26]	Loss 0.001 (0.001)	train_nll   0.56 (  0.59)	train_penalty   0.00 (  0.00)	weight_norm  22.60 ( 22.60)	train_acc   0.68 (  0.66)	train_minacc   0.77 (  0.73)	train_majacc   0.66 (  0.65)	train_corr   0.00 (  0.00)	l1 4.8286 (4.8768)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.29it/s] 23%|##3       | 6/26 [00:00<00:00, 28.60it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.60it/s] 42%|####2     | 11/26 [00:00<00:00, 35.14it/s] 62%|######1   | 16/26 [00:00<00:00, 39.72it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.72it/s] 81%|########  | 21/26 [00:00<00:00, 38.11it/s]100%|##########| 26/26 [00:00<00:00, 40.54it/s]100%|##########| 26/26 [00:00<00:00, 33.93it/s]
Test: [   0/  26]	Loss 0.604 (0.604)	test_acc   0.63 (  0.63)	test_minacc   0.83 (  0.83)	test_majacc   0.60 (  0.60)	Loss_d 0.604 (0.604)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.83 (  0.83)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.26 (  0.26)
Test: [  10/  26]	Loss 0.591 (0.594)	test_acc   0.65 (  0.66)	test_minacc   0.57 (  0.72)	test_majacc   0.67 (  0.65)	Loss_d 0.591 (0.594)	test_acc_d   0.65 (  0.66)	test_minacc_d   0.57 (  0.72)	test_majacc_d   0.67 (  0.65)	test_corr_d   0.37 (  0.33)
Test: [  20/  26]	Loss 0.582 (0.589)	test_acc   0.68 (  0.66)	test_minacc   0.73 (  0.72)	test_majacc   0.67 (  0.65)	Loss_d 0.582 (0.589)	test_acc_d   0.68 (  0.66)	test_minacc_d   0.73 (  0.72)	test_majacc_d   0.67 (  0.65)	test_corr_d   0.33 (  0.33)
Test: [  26/  26]	Loss 0.570 (0.589)	test_acc   0.68 (  0.66)	test_minacc   0.77 (  0.72)	test_majacc   0.66 (  0.65)	Loss_d 0.570 (0.589)	test_acc_d   0.68 (  0.66)	test_minacc_d   0.77 (  0.72)	test_majacc_d   0.66 (  0.65)	test_corr_d   0.33 (  0.33)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.88it/s]
Test: [  0/  1]	Loss 0.770 (0.770)	test_acc   0.62 (  0.62)	test_minacc   0.60 (  0.60)	test_majacc   0.74 (  0.74)	Loss_d 0.770 (0.770)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.02 (  0.02)
Test: [  1/  1]	Loss 0.770 (0.770)	test_acc   0.62 (  0.62)	test_minacc   0.60 (  0.60)	test_majacc   0.74 (  0.74)	Loss_d 0.770 (0.770)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.02 (  0.02)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/165/checkpoints/model_best.pth
Overall Timing[ 10/  1]	epoch_time 0.0403 (0.0478)	validation_time 0.0003 (0.0010)	train_time 0.0399 (0.0463)
record: (train_acc, test_acc) (0.6621000280976296, 0.6160000562667847)
last accs (train_acc, test_acc) (0.6621000280976296, 0.6160000562667847)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:08,  3.05it/s] 19%|#9        | 5/26 [00:00<00:01, 13.65it/s] 35%|###4      | 9/26 [00:00<00:00, 20.64it/s] 50%|#####     | 13/26 [00:00<00:00, 25.48it/s] 65%|######5   | 17/26 [00:00<00:00, 29.07it/s] 81%|########  | 21/26 [00:00<00:00, 30.39it/s] 96%|#########6| 25/26 [00:01<00:00, 32.13it/s]100%|##########| 26/26 [00:01<00:00, 23.63it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 286 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 287 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 288 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 289 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 290 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 291 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 292 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 293 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 294 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 295 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 296 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 297 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 298 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 299 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 300 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 301 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 302 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 303 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 304 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 305 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 306 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 307 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 308 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 309 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 310 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 311 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [11][  26/  26]	Loss 0.001 (0.000)	train_nll   0.57 (  0.59)	train_penalty   0.00 (  0.00)	weight_norm  22.60 ( 22.60)	train_acc   0.67 (  0.66)	train_minacc   0.77 (  0.71)	train_majacc   0.65 (  0.65)	train_corr   0.00 (  0.00)	l1 4.7996 (4.8277)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.47it/s] 23%|##3       | 6/26 [00:00<00:00, 24.91it/s]                                               23%|##3       | 6/26 [00:00<00:00, 24.91it/s] 42%|####2     | 11/26 [00:00<00:00, 33.35it/s] 62%|######1   | 16/26 [00:00<00:00, 38.87it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.87it/s] 81%|########  | 21/26 [00:00<00:00, 41.32it/s]100%|##########| 26/26 [00:00<00:00, 34.20it/s]
Test: [   0/  26]	Loss 0.604 (0.604)	test_acc   0.63 (  0.63)	test_minacc   0.83 (  0.83)	test_majacc   0.60 (  0.60)	Loss_d 0.604 (0.604)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.83 (  0.83)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.27 (  0.27)
Test: [  10/  26]	Loss 0.592 (0.593)	test_acc   0.65 (  0.66)	test_minacc   0.56 (  0.71)	test_majacc   0.67 (  0.65)	Loss_d 0.592 (0.593)	test_acc_d   0.65 (  0.66)	test_minacc_d   0.56 (  0.71)	test_majacc_d   0.67 (  0.65)	test_corr_d   0.39 (  0.34)
Test: [  20/  26]	Loss 0.581 (0.588)	test_acc   0.67 (  0.66)	test_minacc   0.71 (  0.70)	test_majacc   0.67 (  0.65)	Loss_d 0.581 (0.588)	test_acc_d   0.67 (  0.66)	test_minacc_d   0.71 (  0.70)	test_majacc_d   0.67 (  0.65)	test_corr_d   0.34 (  0.34)
Test: [  26/  26]	Loss 0.573 (0.588)	test_acc   0.66 (  0.66)	test_minacc   0.77 (  0.70)	test_majacc   0.64 (  0.65)	Loss_d 0.573 (0.588)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.77 (  0.70)	test_majacc_d   0.64 (  0.65)	test_corr_d   0.34 (  0.34)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 55.66it/s]
Test: [  0/  1]	Loss 0.784 (0.784)	test_acc   0.60 (  0.60)	test_minacc   0.59 (  0.59)	test_majacc   0.74 (  0.74)	Loss_d 0.784 (0.784)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.05 (  0.05)
Test: [  1/  1]	Loss 0.784 (0.784)	test_acc   0.60 (  0.60)	test_minacc   0.59 (  0.59)	test_majacc   0.74 (  0.74)	Loss_d 0.784 (0.784)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.05 (  0.05)
Overall Timing[ 11/  1]	epoch_time 0.0416 (0.0473)	validation_time 0.0005 (0.0010)	train_time 0.0411 (0.0458)
record: (train_acc, test_acc) (0.6621000280976296, 0.6160000562667847)
last accs (train_acc, test_acc) (0.6600000215768814, 0.6020000576972961)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.55it/s] 12%|#1        | 3/26 [00:00<00:01, 12.65it/s] 27%|##6       | 7/26 [00:00<00:00, 21.79it/s] 42%|####2     | 11/26 [00:00<00:00, 26.67it/s] 58%|#####7    | 15/26 [00:00<00:00, 29.27it/s] 73%|#######3  | 19/26 [00:00<00:00, 30.46it/s] 88%|########8 | 23/26 [00:00<00:00, 31.75it/s]100%|##########| 26/26 [00:00<00:00, 26.30it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 312 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 313 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 314 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 315 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 316 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 317 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 318 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 319 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 320 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 321 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 322 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 323 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 324 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 325 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 326 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 327 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 328 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 329 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 330 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 331 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 332 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 333 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 334 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 335 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 336 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 337 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [12][  26/  26]	Loss 0.001 (0.000)	train_nll   0.58 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  22.60 ( 22.60)	train_acc   0.66 (  0.65)	train_minacc   0.77 (  0.72)	train_majacc   0.64 (  0.64)	train_corr   0.00 (  0.00)	l1 4.7595 (4.7873)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.75it/s] 27%|##6       | 7/26 [00:00<00:00, 34.31it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.31it/s] 46%|####6     | 12/26 [00:00<00:00, 39.18it/s] 65%|######5   | 17/26 [00:00<00:00, 39.34it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.34it/s] 85%|########4 | 22/26 [00:00<00:00, 41.82it/s]100%|##########| 26/26 [00:00<00:00, 36.65it/s]
Test: [   0/  26]	Loss 0.609 (0.609)	test_acc   0.63 (  0.63)	test_minacc   0.83 (  0.83)	test_majacc   0.60 (  0.60)	Loss_d 0.609 (0.609)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.83 (  0.83)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.26 (  0.26)
Test: [  10/  26]	Loss 0.602 (0.599)	test_acc   0.65 (  0.65)	test_minacc   0.57 (  0.72)	test_majacc   0.66 (  0.64)	Loss_d 0.602 (0.599)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.57 (  0.72)	test_majacc_d   0.66 (  0.64)	test_corr_d   0.37 (  0.33)
Test: [  20/  26]	Loss 0.587 (0.595)	test_acc   0.68 (  0.65)	test_minacc   0.74 (  0.71)	test_majacc   0.66 (  0.64)	Loss_d 0.587 (0.595)	test_acc_d   0.68 (  0.65)	test_minacc_d   0.74 (  0.71)	test_majacc_d   0.66 (  0.64)	test_corr_d   0.32 (  0.33)
Test: [  26/  26]	Loss 0.582 (0.595)	test_acc   0.65 (  0.65)	test_minacc   0.77 (  0.71)	test_majacc   0.63 (  0.64)	Loss_d 0.582 (0.595)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.77 (  0.71)	test_majacc_d   0.63 (  0.64)	test_corr_d   0.32 (  0.33)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.39it/s]
Test: [  0/  1]	Loss 0.778 (0.778)	test_acc   0.61 (  0.61)	test_minacc   0.60 (  0.60)	test_majacc   0.73 (  0.73)	Loss_d 0.778 (0.778)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.05 (  0.05)
Test: [  1/  1]	Loss 0.778 (0.778)	test_acc   0.61 (  0.61)	test_minacc   0.60 (  0.60)	test_majacc   0.73 (  0.73)	Loss_d 0.778 (0.778)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.05 (  0.05)
Overall Timing[ 12/  1]	epoch_time 0.0408 (0.0468)	validation_time 0.0003 (0.0009)	train_time 0.0404 (0.0454)
record: (train_acc, test_acc) (0.6621000280976296, 0.6160000562667847)
last accs (train_acc, test_acc) (0.6518000169992447, 0.6100000143051147)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.75it/s] 12%|#1        | 3/26 [00:00<00:02,  8.62it/s] 27%|##6       | 7/26 [00:00<00:01, 17.33it/s] 42%|####2     | 11/26 [00:00<00:00, 23.00it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.87it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.49it/s] 88%|########8 | 23/26 [00:00<00:00, 31.29it/s]100%|##########| 26/26 [00:01<00:00, 23.36it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 338 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 339 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 340 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 341 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 342 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 343 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 344 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 345 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 346 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 347 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 348 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 349 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 350 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 351 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 352 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 353 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 354 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 355 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 356 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 357 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 358 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 359 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 360 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 361 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 362 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 363 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [13][  26/  26]	Loss 0.001 (0.000)	train_nll   0.58 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  22.60 ( 22.60)	train_acc   0.64 (  0.64)	train_minacc   0.77 (  0.72)	train_majacc   0.62 (  0.63)	train_corr   0.00 (  0.00)	l1 4.7386 (4.7545)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.24it/s] 15%|#5        | 4/26 [00:00<00:01, 15.73it/s] 35%|###4      | 9/26 [00:00<00:00, 28.55it/s]                                               35%|###4      | 9/26 [00:00<00:00, 28.55it/s] 54%|#####3    | 14/26 [00:00<00:00, 34.90it/s] 73%|#######3  | 19/26 [00:00<00:00, 35.79it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 35.79it/s] 92%|#########2| 24/26 [00:00<00:00, 39.12it/s]100%|##########| 26/26 [00:00<00:00, 32.42it/s]
Test: [   0/  26]	Loss 0.612 (0.612)	test_acc   0.62 (  0.62)	test_minacc   0.83 (  0.83)	test_majacc   0.60 (  0.60)	Loss_d 0.612 (0.612)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.83 (  0.83)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.25 (  0.25)
Test: [  10/  26]	Loss 0.608 (0.604)	test_acc   0.63 (  0.64)	test_minacc   0.61 (  0.72)	test_majacc   0.63 (  0.62)	Loss_d 0.608 (0.604)	test_acc_d   0.63 (  0.64)	test_minacc_d   0.61 (  0.72)	test_majacc_d   0.63 (  0.62)	test_corr_d   0.36 (  0.32)
Test: [  20/  26]	Loss 0.591 (0.601)	test_acc   0.66 (  0.64)	test_minacc   0.76 (  0.72)	test_majacc   0.64 (  0.63)	Loss_d 0.591 (0.601)	test_acc_d   0.66 (  0.64)	test_minacc_d   0.76 (  0.72)	test_majacc_d   0.64 (  0.63)	test_corr_d   0.31 (  0.32)
Test: [  26/  26]	Loss 0.589 (0.600)	test_acc   0.64 (  0.64)	test_minacc   0.77 (  0.72)	test_majacc   0.62 (  0.63)	Loss_d 0.589 (0.600)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.77 (  0.72)	test_majacc_d   0.62 (  0.63)	test_corr_d   0.31 (  0.32)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.54it/s]
Test: [  0/  1]	Loss 0.776 (0.776)	test_acc   0.62 (  0.62)	test_minacc   0.61 (  0.61)	test_majacc   0.73 (  0.73)	Loss_d 0.776 (0.776)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.05 (  0.05)
Test: [  1/  1]	Loss 0.776 (0.776)	test_acc   0.62 (  0.62)	test_minacc   0.61 (  0.61)	test_majacc   0.73 (  0.73)	Loss_d 0.776 (0.776)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.05 (  0.05)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/165/checkpoints/model_best.pth
Overall Timing[ 13/  1]	epoch_time 0.0427 (0.0465)	validation_time 0.0004 (0.0009)	train_time 0.0423 (0.0452)
record: (train_acc, test_acc) (0.6427000114321708, 0.6180000305175781)
last accs (train_acc, test_acc) (0.6427000114321708, 0.6180000305175781)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.35it/s] 19%|#9        | 5/26 [00:00<00:00, 23.21it/s] 35%|###4      | 9/26 [00:00<00:00, 28.65it/s] 50%|#####     | 13/26 [00:00<00:00, 31.34it/s] 65%|######5   | 17/26 [00:00<00:00, 33.17it/s] 81%|########  | 21/26 [00:00<00:00, 34.13it/s] 96%|#########6| 25/26 [00:00<00:00, 34.28it/s]100%|##########| 26/26 [00:00<00:00, 29.06it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 364 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 365 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 366 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 367 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 368 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 369 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 370 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 371 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 372 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 373 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 374 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 375 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 376 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 377 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 378 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 379 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 380 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 381 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 382 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 383 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 384 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 385 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 386 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 387 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 388 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 389 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [14][  26/  26]	Loss 0.000 (0.000)	train_nll   0.59 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  22.60 ( 22.60)	train_acc   0.64 (  0.64)	train_minacc   0.79 (  0.72)	train_majacc   0.61 (  0.62)	train_corr   0.00 (  0.00)	l1 4.7217 (4.7346)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.96it/s] 19%|#9        | 5/26 [00:00<00:00, 22.25it/s]                                               19%|#9        | 5/26 [00:00<00:00, 22.25it/s] 42%|####2     | 11/26 [00:00<00:00, 35.68it/s] 62%|######1   | 16/26 [00:00<00:00, 38.92it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.92it/s] 81%|########  | 21/26 [00:00<00:00, 39.80it/s]100%|##########| 26/26 [00:00<00:00, 42.49it/s]100%|##########| 26/26 [00:00<00:00, 34.24it/s]
Test: [   0/  26]	Loss 0.613 (0.613)	test_acc   0.61 (  0.61)	test_minacc   0.83 (  0.83)	test_majacc   0.58 (  0.58)	Loss_d 0.613 (0.613)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.83 (  0.83)	test_majacc_d   0.58 (  0.58)	test_corr_d   0.25 (  0.25)
Test: [  10/  26]	Loss 0.612 (0.606)	test_acc   0.62 (  0.63)	test_minacc   0.63 (  0.73)	test_majacc   0.62 (  0.62)	Loss_d 0.612 (0.606)	test_acc_d   0.62 (  0.63)	test_minacc_d   0.63 (  0.73)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.36 (  0.32)
Test: [  20/  26]	Loss 0.593 (0.603)	test_acc   0.65 (  0.64)	test_minacc   0.76 (  0.72)	test_majacc   0.63 (  0.62)	Loss_d 0.593 (0.603)	test_acc_d   0.65 (  0.64)	test_minacc_d   0.76 (  0.72)	test_majacc_d   0.63 (  0.62)	test_corr_d   0.31 (  0.32)
Test: [  26/  26]	Loss 0.593 (0.603)	test_acc   0.63 (  0.64)	test_minacc   0.79 (  0.73)	test_majacc   0.60 (  0.62)	Loss_d 0.593 (0.603)	test_acc_d   0.63 (  0.64)	test_minacc_d   0.79 (  0.73)	test_majacc_d   0.60 (  0.62)	test_corr_d   0.30 (  0.32)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.14it/s]
Test: [  0/  1]	Loss 0.775 (0.775)	test_acc   0.62 (  0.62)	test_minacc   0.60 (  0.60)	test_majacc   0.73 (  0.73)	Loss_d 0.775 (0.775)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.05 (  0.05)
Test: [  1/  1]	Loss 0.775 (0.775)	test_acc   0.62 (  0.62)	test_minacc   0.60 (  0.60)	test_majacc   0.73 (  0.73)	Loss_d 0.775 (0.775)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.05 (  0.05)
Overall Timing[ 14/  1]	epoch_time 0.0387 (0.0460)	validation_time 0.0004 (0.0008)	train_time 0.0382 (0.0447)
record: (train_acc, test_acc) (0.6427000114321708, 0.6180000305175781)
last accs (train_acc, test_acc) (0.6356000056266785, 0.6170000433921814)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.33it/s] 19%|#9        | 5/26 [00:00<00:01, 16.66it/s] 35%|###4      | 9/26 [00:00<00:00, 23.17it/s] 50%|#####     | 13/26 [00:00<00:00, 27.05it/s] 65%|######5   | 17/26 [00:00<00:00, 29.71it/s] 81%|########  | 21/26 [00:00<00:00, 30.99it/s] 96%|#########6| 25/26 [00:00<00:00, 33.02it/s]100%|##########| 26/26 [00:01<00:00, 25.85it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 390 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 391 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 392 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 393 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 394 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 395 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 396 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 397 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 398 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 399 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 400 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 401 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 402 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 403 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 404 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 405 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 406 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 407 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 408 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 409 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 410 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 411 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 412 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 413 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 414 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 415 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [15][  26/  26]	Loss 0.000 (0.000)	train_nll   0.59 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  22.60 ( 22.60)	train_acc   0.63 (  0.63)	train_minacc   0.77 (  0.73)	train_majacc   0.60 (  0.62)	train_corr   0.00 (  0.00)	l1 4.7125 (4.7208)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.53it/s] 27%|##6       | 7/26 [00:00<00:00, 33.64it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.64it/s] 46%|####6     | 12/26 [00:00<00:00, 39.19it/s] 65%|######5   | 17/26 [00:00<00:00, 40.53it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.53it/s] 85%|########4 | 22/26 [00:00<00:00, 40.97it/s]100%|##########| 26/26 [00:00<00:00, 36.37it/s]
Test: [   0/  26]	Loss 0.612 (0.612)	test_acc   0.62 (  0.62)	test_minacc   0.83 (  0.83)	test_majacc   0.59 (  0.59)	Loss_d 0.612 (0.612)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.83 (  0.83)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.25 (  0.25)
Test: [  10/  26]	Loss 0.614 (0.607)	test_acc   0.61 (  0.63)	test_minacc   0.63 (  0.73)	test_majacc   0.61 (  0.61)	Loss_d 0.614 (0.607)	test_acc_d   0.61 (  0.63)	test_minacc_d   0.63 (  0.73)	test_majacc_d   0.61 (  0.61)	test_corr_d   0.36 (  0.32)
Test: [  20/  26]	Loss 0.594 (0.604)	test_acc   0.65 (  0.63)	test_minacc   0.76 (  0.72)	test_majacc   0.62 (  0.62)	Loss_d 0.594 (0.604)	test_acc_d   0.65 (  0.63)	test_minacc_d   0.76 (  0.72)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.31 (  0.32)
Test: [  26/  26]	Loss 0.595 (0.604)	test_acc   0.63 (  0.63)	test_minacc   0.77 (  0.73)	test_majacc   0.60 (  0.62)	Loss_d 0.595 (0.604)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.77 (  0.73)	test_majacc_d   0.60 (  0.62)	test_corr_d   0.30 (  0.32)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.88it/s]
Test: [  0/  1]	Loss 0.775 (0.775)	test_acc   0.62 (  0.62)	test_minacc   0.61 (  0.61)	test_majacc   0.74 (  0.74)	Loss_d 0.775 (0.775)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.06 (  0.06)
Test: [  1/  1]	Loss 0.775 (0.775)	test_acc   0.62 (  0.62)	test_minacc   0.61 (  0.61)	test_majacc   0.74 (  0.74)	Loss_d 0.775 (0.775)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.06 (  0.06)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/165/checkpoints/model_best.pth
Overall Timing[ 15/  1]	epoch_time 0.0449 (0.0459)	validation_time 0.0003 (0.0008)	train_time 0.0445 (0.0447)
record: (train_acc, test_acc) (0.6322000114321709, 0.6190000176429749)
last accs (train_acc, test_acc) (0.6322000114321709, 0.6190000176429749)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.06it/s] 19%|#9        | 5/26 [00:00<00:01, 18.64it/s] 35%|###4      | 9/26 [00:00<00:00, 24.82it/s] 50%|#####     | 13/26 [00:00<00:00, 28.01it/s] 65%|######5   | 17/26 [00:00<00:00, 29.91it/s] 81%|########  | 21/26 [00:00<00:00, 31.44it/s] 96%|#########6| 25/26 [00:00<00:00, 32.75it/s]100%|##########| 26/26 [00:00<00:00, 26.47it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 416 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 417 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 418 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 419 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 420 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 421 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 422 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 423 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 424 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 425 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 426 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 427 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 428 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 429 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 430 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 431 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 432 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 433 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 434 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 435 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 436 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 437 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 438 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 439 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 440 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 441 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [16][  26/  26]	Loss 0.000 (0.000)	train_nll   0.59 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm  22.60 ( 22.60)	train_acc   0.63 (  0.63)	train_minacc   0.77 (  0.73)	train_majacc   0.60 (  0.61)	train_corr   0.00 (  0.00)	l1 4.7091 (4.7146)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 27.01it/s] 31%|###       | 8/26 [00:00<00:00, 39.06it/s]                                               31%|###       | 8/26 [00:00<00:00, 39.06it/s] 50%|#####     | 13/26 [00:00<00:00, 37.77it/s] 69%|######9   | 18/26 [00:00<00:00, 41.18it/s]                                                69%|######9   | 18/26 [00:00<00:00, 41.18it/s] 88%|########8 | 23/26 [00:00<00:00, 43.16it/s]100%|##########| 26/26 [00:00<00:00, 37.04it/s]
Test: [   0/  26]	Loss 0.612 (0.612)	test_acc   0.62 (  0.62)	test_minacc   0.83 (  0.83)	test_majacc   0.59 (  0.59)	Loss_d 0.612 (0.612)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.83 (  0.83)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.25 (  0.25)
Test: [  10/  26]	Loss 0.614 (0.607)	test_acc   0.61 (  0.63)	test_minacc   0.63 (  0.73)	test_majacc   0.61 (  0.61)	Loss_d 0.614 (0.607)	test_acc_d   0.61 (  0.63)	test_minacc_d   0.63 (  0.73)	test_majacc_d   0.61 (  0.61)	test_corr_d   0.36 (  0.32)
Test: [  20/  26]	Loss 0.594 (0.605)	test_acc   0.65 (  0.63)	test_minacc   0.76 (  0.73)	test_majacc   0.63 (  0.61)	Loss_d 0.594 (0.605)	test_acc_d   0.65 (  0.63)	test_minacc_d   0.76 (  0.73)	test_majacc_d   0.63 (  0.61)	test_corr_d   0.31 (  0.32)
Test: [  26/  26]	Loss 0.596 (0.605)	test_acc   0.62 (  0.63)	test_minacc   0.77 (  0.73)	test_majacc   0.59 (  0.61)	Loss_d 0.596 (0.605)	test_acc_d   0.62 (  0.63)	test_minacc_d   0.77 (  0.73)	test_majacc_d   0.59 (  0.61)	test_corr_d   0.30 (  0.32)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.34it/s]
Test: [  0/  1]	Loss 0.776 (0.776)	test_acc   0.62 (  0.62)	test_minacc   0.61 (  0.61)	test_majacc   0.73 (  0.73)	Loss_d 0.776 (0.776)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.06 (  0.06)
Test: [  1/  1]	Loss 0.776 (0.776)	test_acc   0.62 (  0.62)	test_minacc   0.61 (  0.61)	test_majacc   0.73 (  0.73)	Loss_d 0.776 (0.776)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.06 (  0.06)
Overall Timing[ 16/  1]	epoch_time 0.0410 (0.0456)	validation_time 0.0004 (0.0008)	train_time 0.0406 (0.0445)
record: (train_acc, test_acc) (0.6322000114321709, 0.6190000176429749)
last accs (train_acc, test_acc) (0.6302000064849853, 0.6190000176429749)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.89it/s] 15%|#5        | 4/26 [00:00<00:01, 18.58it/s] 31%|###       | 8/26 [00:00<00:00, 25.87it/s] 46%|####6     | 12/26 [00:00<00:00, 29.15it/s] 62%|######1   | 16/26 [00:00<00:00, 31.21it/s] 77%|#######6  | 20/26 [00:00<00:00, 31.22it/s] 92%|#########2| 24/26 [00:00<00:00, 32.82it/s]100%|##########| 26/26 [00:00<00:00, 27.05it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 442 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 443 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 444 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 445 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 446 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 447 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 448 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 449 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 450 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 451 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 452 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 453 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 454 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 455 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 456 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 457 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 458 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 459 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 460 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 461 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 462 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 463 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 464 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 465 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 466 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 467 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [17][  26/  26]	Loss 0.000 (0.000)	train_nll   0.59 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm  22.60 ( 22.60)	train_acc   0.62 (  0.63)	train_minacc   0.77 (  0.73)	train_majacc   0.60 (  0.61)	train_corr   0.00 (  0.00)	l1 4.7093 (4.7130)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.98it/s] 27%|##6       | 7/26 [00:00<00:00, 34.18it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.18it/s] 46%|####6     | 12/26 [00:00<00:00, 40.23it/s] 65%|######5   | 17/26 [00:00<00:00, 42.29it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.29it/s] 85%|########4 | 22/26 [00:00<00:00, 42.25it/s]100%|##########| 26/26 [00:00<00:00, 37.36it/s]
Test: [   0/  26]	Loss 0.611 (0.611)	test_acc   0.62 (  0.62)	test_minacc   0.83 (  0.83)	test_majacc   0.59 (  0.59)	Loss_d 0.611 (0.611)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.83 (  0.83)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.25 (  0.25)
Test: [  10/  26]	Loss 0.615 (0.608)	test_acc   0.61 (  0.63)	test_minacc   0.63 (  0.73)	test_majacc   0.61 (  0.61)	Loss_d 0.615 (0.608)	test_acc_d   0.61 (  0.63)	test_minacc_d   0.63 (  0.73)	test_majacc_d   0.61 (  0.61)	test_corr_d   0.36 (  0.32)
Test: [  20/  26]	Loss 0.595 (0.605)	test_acc   0.64 (  0.63)	test_minacc   0.74 (  0.72)	test_majacc   0.62 (  0.61)	Loss_d 0.595 (0.605)	test_acc_d   0.64 (  0.63)	test_minacc_d   0.74 (  0.72)	test_majacc_d   0.62 (  0.61)	test_corr_d   0.31 (  0.32)
Test: [  26/  26]	Loss 0.598 (0.605)	test_acc   0.62 (  0.63)	test_minacc   0.77 (  0.73)	test_majacc   0.59 (  0.61)	Loss_d 0.598 (0.605)	test_acc_d   0.62 (  0.63)	test_minacc_d   0.77 (  0.73)	test_majacc_d   0.59 (  0.61)	test_corr_d   0.30 (  0.32)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.03it/s]
Test: [  0/  1]	Loss 0.777 (0.777)	test_acc   0.62 (  0.62)	test_minacc   0.60 (  0.60)	test_majacc   0.74 (  0.74)	Loss_d 0.777 (0.777)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.07 (  0.07)
Test: [  1/  1]	Loss 0.777 (0.777)	test_acc   0.62 (  0.62)	test_minacc   0.60 (  0.60)	test_majacc   0.74 (  0.74)	Loss_d 0.777 (0.777)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.07 (  0.07)
Overall Timing[ 17/  1]	epoch_time 0.0411 (0.0454)	validation_time 0.0003 (0.0008)	train_time 0.0408 (0.0443)
record: (train_acc, test_acc) (0.6322000114321709, 0.6190000176429749)
last accs (train_acc, test_acc) (0.6295000054836273, 0.6180000305175781)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.11it/s] 15%|#5        | 4/26 [00:00<00:01, 15.50it/s] 31%|###       | 8/26 [00:00<00:00, 23.48it/s] 46%|####6     | 12/26 [00:00<00:00, 27.94it/s] 62%|######1   | 16/26 [00:00<00:00, 30.66it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.37it/s] 92%|#########2| 24/26 [00:00<00:00, 33.57it/s]100%|##########| 26/26 [00:00<00:00, 27.07it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 468 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 469 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 470 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 471 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 472 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 473 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 474 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 475 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 476 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 477 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 478 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 479 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 480 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 481 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 482 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 483 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 484 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 485 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 486 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 487 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 488 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 489 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 490 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 491 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 492 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 493 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [18][  26/  26]	Loss 0.000 (0.000)	train_nll   0.59 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm  22.60 ( 22.60)	train_acc   0.62 (  0.63)	train_minacc   0.74 (  0.73)	train_majacc   0.59 (  0.61)	train_corr   0.00 (  0.00)	l1 4.7122 (4.7145)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.93it/s] 23%|##3       | 6/26 [00:00<00:00, 27.43it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.43it/s] 42%|####2     | 11/26 [00:00<00:00, 33.81it/s] 62%|######1   | 16/26 [00:00<00:00, 38.90it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.90it/s] 81%|########  | 21/26 [00:00<00:00, 37.60it/s]100%|##########| 26/26 [00:00<00:00, 40.57it/s]100%|##########| 26/26 [00:00<00:00, 33.03it/s]
Test: [   0/  26]	Loss 0.611 (0.611)	test_acc   0.62 (  0.62)	test_minacc   0.83 (  0.83)	test_majacc   0.60 (  0.60)	Loss_d 0.611 (0.611)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.83 (  0.83)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.26 (  0.26)
Test: [  10/  26]	Loss 0.615 (0.608)	test_acc   0.61 (  0.63)	test_minacc   0.63 (  0.73)	test_majacc   0.61 (  0.61)	Loss_d 0.615 (0.608)	test_acc_d   0.61 (  0.63)	test_minacc_d   0.63 (  0.73)	test_majacc_d   0.61 (  0.61)	test_corr_d   0.36 (  0.32)
Test: [  20/  26]	Loss 0.595 (0.606)	test_acc   0.64 (  0.63)	test_minacc   0.74 (  0.72)	test_majacc   0.62 (  0.61)	Loss_d 0.595 (0.606)	test_acc_d   0.64 (  0.63)	test_minacc_d   0.74 (  0.72)	test_majacc_d   0.62 (  0.61)	test_corr_d   0.31 (  0.32)
Test: [  26/  26]	Loss 0.599 (0.605)	test_acc   0.61 (  0.63)	test_minacc   0.74 (  0.73)	test_majacc   0.58 (  0.61)	Loss_d 0.599 (0.605)	test_acc_d   0.61 (  0.63)	test_minacc_d   0.74 (  0.73)	test_majacc_d   0.58 (  0.61)	test_corr_d   0.30 (  0.32)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.35it/s]
Test: [  0/  1]	Loss 0.779 (0.779)	test_acc   0.62 (  0.62)	test_minacc   0.60 (  0.60)	test_majacc   0.73 (  0.73)	Loss_d 0.779 (0.779)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.07 (  0.07)
Test: [  1/  1]	Loss 0.779 (0.779)	test_acc   0.62 (  0.62)	test_minacc   0.60 (  0.60)	test_majacc   0.73 (  0.73)	Loss_d 0.779 (0.779)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.07 (  0.07)
Overall Timing[ 18/  1]	epoch_time 0.0423 (0.0452)	validation_time 0.0004 (0.0008)	train_time 0.0418 (0.0441)
record: (train_acc, test_acc) (0.6322000114321709, 0.6190000176429749)
last accs (train_acc, test_acc) (0.6289000097513199, 0.6170000433921814)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.28it/s] 19%|#9        | 5/26 [00:00<00:00, 23.68it/s] 35%|###4      | 9/26 [00:00<00:00, 29.41it/s] 50%|#####     | 13/26 [00:00<00:00, 31.22it/s] 65%|######5   | 17/26 [00:00<00:00, 32.66it/s] 81%|########  | 21/26 [00:00<00:00, 33.29it/s] 96%|#########6| 25/26 [00:00<00:00, 33.86it/s]100%|##########| 26/26 [00:00<00:00, 29.10it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 494 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 495 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 496 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 497 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 498 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 499 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 500 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 501 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 502 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 503 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 504 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 505 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 506 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 507 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 508 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 509 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 510 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 511 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 512 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 513 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 514 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 515 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 516 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 517 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 518 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 519 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [19][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm  22.60 ( 22.60)	train_acc   0.61 (  0.63)	train_minacc   0.74 (  0.73)	train_majacc   0.59 (  0.61)	train_corr   0.00 (  0.00)	l1 4.7173 (4.7181)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.56it/s] 27%|##6       | 7/26 [00:00<00:00, 32.98it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.98it/s] 46%|####6     | 12/26 [00:00<00:00, 38.42it/s] 65%|######5   | 17/26 [00:00<00:00, 37.55it/s]                                                65%|######5   | 17/26 [00:00<00:00, 37.55it/s] 85%|########4 | 22/26 [00:00<00:00, 40.12it/s]100%|##########| 26/26 [00:00<00:00, 34.43it/s]
Test: [   0/  26]	Loss 0.610 (0.610)	test_acc   0.62 (  0.62)	test_minacc   0.83 (  0.83)	test_majacc   0.59 (  0.59)	Loss_d 0.610 (0.610)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.83 (  0.83)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.26 (  0.26)
Test: [  10/  26]	Loss 0.615 (0.607)	test_acc   0.61 (  0.63)	test_minacc   0.63 (  0.73)	test_majacc   0.60 (  0.61)	Loss_d 0.615 (0.607)	test_acc_d   0.61 (  0.63)	test_minacc_d   0.63 (  0.73)	test_majacc_d   0.60 (  0.61)	test_corr_d   0.36 (  0.33)
Test: [  20/  26]	Loss 0.595 (0.606)	test_acc   0.64 (  0.63)	test_minacc   0.74 (  0.73)	test_majacc   0.62 (  0.61)	Loss_d 0.595 (0.606)	test_acc_d   0.64 (  0.63)	test_minacc_d   0.74 (  0.73)	test_majacc_d   0.62 (  0.61)	test_corr_d   0.31 (  0.32)
Test: [  26/  26]	Loss 0.600 (0.605)	test_acc   0.60 (  0.63)	test_minacc   0.74 (  0.73)	test_majacc   0.58 (  0.61)	Loss_d 0.600 (0.605)	test_acc_d   0.60 (  0.63)	test_minacc_d   0.74 (  0.73)	test_majacc_d   0.58 (  0.61)	test_corr_d   0.30 (  0.32)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.36it/s]
Test: [  0/  1]	Loss 0.780 (0.780)	test_acc   0.62 (  0.62)	test_minacc   0.61 (  0.61)	test_majacc   0.73 (  0.73)	Loss_d 0.780 (0.780)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.07 (  0.07)
Test: [  1/  1]	Loss 0.780 (0.780)	test_acc   0.62 (  0.62)	test_minacc   0.61 (  0.61)	test_majacc   0.73 (  0.73)	Loss_d 0.780 (0.780)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.07 (  0.07)
Overall Timing[ 19/  1]	epoch_time 0.0444 (0.0452)	validation_time 0.0005 (0.0007)	train_time 0.0439 (0.0441)
record: (train_acc, test_acc) (0.6322000114321709, 0.6190000176429749)
last accs (train_acc, test_acc) (0.6281000061035156, 0.6180000305175781)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.53it/s] 19%|#9        | 5/26 [00:00<00:00, 21.21it/s] 35%|###4      | 9/26 [00:00<00:00, 26.00it/s] 50%|#####     | 13/26 [00:00<00:00, 29.00it/s] 65%|######5   | 17/26 [00:00<00:00, 29.64it/s] 81%|########  | 21/26 [00:00<00:00, 30.60it/s] 96%|#########6| 25/26 [00:00<00:00, 31.53it/s]100%|##########| 26/26 [00:00<00:00, 26.78it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 520 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 521 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 522 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 523 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 524 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 525 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 526 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 527 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 528 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 529 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 530 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 531 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 532 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 533 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 534 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 535 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 536 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 537 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 538 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 539 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 540 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 541 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 542 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 543 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 544 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 545 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [20][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm  22.60 ( 22.60)	train_acc   0.61 (  0.63)	train_minacc   0.74 (  0.73)	train_majacc   0.59 (  0.61)	train_corr   0.00 (  0.00)	l1 4.7237 (4.7234)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.57it/s] 35%|###4      | 9/26 [00:00<00:00, 39.55it/s]                                               35%|###4      | 9/26 [00:00<00:00, 39.55it/s] 54%|#####3    | 14/26 [00:00<00:00, 38.71it/s] 73%|#######3  | 19/26 [00:00<00:00, 41.33it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 41.33it/s] 92%|#########2| 24/26 [00:00<00:00, 43.20it/s]100%|##########| 26/26 [00:00<00:00, 37.52it/s]
Test: [   0/  26]	Loss 0.610 (0.610)	test_acc   0.62 (  0.62)	test_minacc   0.83 (  0.83)	test_majacc   0.60 (  0.60)	Loss_d 0.610 (0.610)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.83 (  0.83)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.26 (  0.26)
Test: [  10/  26]	Loss 0.615 (0.607)	test_acc   0.61 (  0.63)	test_minacc   0.63 (  0.73)	test_majacc   0.60 (  0.61)	Loss_d 0.615 (0.607)	test_acc_d   0.61 (  0.63)	test_minacc_d   0.63 (  0.73)	test_majacc_d   0.60 (  0.61)	test_corr_d   0.36 (  0.33)
Test: [  20/  26]	Loss 0.595 (0.605)	test_acc   0.64 (  0.63)	test_minacc   0.74 (  0.72)	test_majacc   0.62 (  0.61)	Loss_d 0.595 (0.605)	test_acc_d   0.64 (  0.63)	test_minacc_d   0.74 (  0.72)	test_majacc_d   0.62 (  0.61)	test_corr_d   0.31 (  0.33)
Test: [  26/  26]	Loss 0.601 (0.605)	test_acc   0.60 (  0.63)	test_minacc   0.74 (  0.73)	test_majacc   0.58 (  0.61)	Loss_d 0.601 (0.605)	test_acc_d   0.60 (  0.63)	test_minacc_d   0.74 (  0.73)	test_majacc_d   0.58 (  0.61)	test_corr_d   0.30 (  0.32)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.69it/s]
Test: [  0/  1]	Loss 0.781 (0.781)	test_acc   0.62 (  0.62)	test_minacc   0.60 (  0.60)	test_majacc   0.72 (  0.72)	Loss_d 0.781 (0.781)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.72 (  0.72)	test_corr_d   0.08 (  0.08)
Test: [  1/  1]	Loss 0.781 (0.781)	test_acc   0.62 (  0.62)	test_minacc   0.60 (  0.60)	test_majacc   0.72 (  0.72)	Loss_d 0.781 (0.781)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.72 (  0.72)	test_corr_d   0.08 (  0.08)
Overall Timing[ 20/  1]	epoch_time 0.0428 (0.0451)	validation_time 0.0003 (0.0007)	train_time 0.0425 (0.0440)
record: (train_acc, test_acc) (0.6322000114321709, 0.6190000176429749)
last accs (train_acc, test_acc) (0.6291000083684921, 0.6150000095367432)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.74it/s] 19%|#9        | 5/26 [00:00<00:01, 17.73it/s] 35%|###4      | 9/26 [00:00<00:00, 24.14it/s] 50%|#####     | 13/26 [00:00<00:00, 27.86it/s] 65%|######5   | 17/26 [00:00<00:00, 30.57it/s] 81%|########  | 21/26 [00:00<00:00, 32.24it/s] 96%|#########6| 25/26 [00:00<00:00, 32.93it/s]100%|##########| 26/26 [00:00<00:00, 26.52it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 546 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 547 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 548 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 549 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 550 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 551 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 552 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 553 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 554 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 555 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 556 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 557 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 558 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 559 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 560 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 561 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 562 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 563 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 564 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 565 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 566 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 567 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 568 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 569 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 570 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 571 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [21][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm  22.60 ( 22.60)	train_acc   0.60 (  0.63)	train_minacc   0.74 (  0.73)	train_majacc   0.58 (  0.61)	train_corr   0.00 (  0.00)	l1 4.7313 (4.7300)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.18it/s] 23%|##3       | 6/26 [00:00<00:00, 31.63it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.63it/s] 42%|####2     | 11/26 [00:00<00:00, 37.44it/s] 62%|######1   | 16/26 [00:00<00:00, 40.45it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.45it/s] 81%|########  | 21/26 [00:00<00:00, 39.04it/s]100%|##########| 26/26 [00:00<00:00, 41.86it/s]100%|##########| 26/26 [00:00<00:00, 35.38it/s]
Test: [   0/  26]	Loss 0.609 (0.609)	test_acc   0.62 (  0.62)	test_minacc   0.83 (  0.83)	test_majacc   0.59 (  0.59)	Loss_d 0.609 (0.609)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.83 (  0.83)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.26 (  0.26)
Test: [  10/  26]	Loss 0.615 (0.607)	test_acc   0.61 (  0.63)	test_minacc   0.63 (  0.73)	test_majacc   0.60 (  0.61)	Loss_d 0.615 (0.607)	test_acc_d   0.61 (  0.63)	test_minacc_d   0.63 (  0.73)	test_majacc_d   0.60 (  0.61)	test_corr_d   0.36 (  0.33)
Test: [  20/  26]	Loss 0.594 (0.605)	test_acc   0.65 (  0.63)	test_minacc   0.76 (  0.72)	test_majacc   0.63 (  0.62)	Loss_d 0.594 (0.605)	test_acc_d   0.65 (  0.63)	test_minacc_d   0.76 (  0.72)	test_majacc_d   0.63 (  0.62)	test_corr_d   0.31 (  0.33)
Test: [  26/  26]	Loss 0.601 (0.605)	test_acc   0.60 (  0.63)	test_minacc   0.74 (  0.73)	test_majacc   0.58 (  0.61)	Loss_d 0.601 (0.605)	test_acc_d   0.60 (  0.63)	test_minacc_d   0.74 (  0.73)	test_majacc_d   0.58 (  0.61)	test_corr_d   0.30 (  0.32)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.76it/s]
Test: [  0/  1]	Loss 0.782 (0.782)	test_acc   0.61 (  0.61)	test_minacc   0.60 (  0.60)	test_majacc   0.72 (  0.72)	Loss_d 0.782 (0.782)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.72 (  0.72)	test_corr_d   0.08 (  0.08)
Test: [  1/  1]	Loss 0.782 (0.782)	test_acc   0.61 (  0.61)	test_minacc   0.60 (  0.60)	test_majacc   0.72 (  0.72)	Loss_d 0.782 (0.782)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.72 (  0.72)	test_corr_d   0.08 (  0.08)
Overall Timing[ 21/  1]	epoch_time 0.0430 (0.0450)	validation_time 0.0004 (0.0007)	train_time 0.0425 (0.0440)
record: (train_acc, test_acc) (0.6322000114321709, 0.6190000176429749)
last accs (train_acc, test_acc) (0.6304000094532967, 0.612000048160553)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.88it/s] 19%|#9        | 5/26 [00:00<00:00, 22.74it/s] 35%|###4      | 9/26 [00:00<00:00, 28.26it/s] 50%|#####     | 13/26 [00:00<00:00, 30.70it/s] 65%|######5   | 17/26 [00:00<00:00, 32.63it/s] 81%|########  | 21/26 [00:00<00:00, 33.46it/s] 96%|#########6| 25/26 [00:00<00:00, 33.86it/s]100%|##########| 26/26 [00:00<00:00, 28.71it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 572 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 573 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 574 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 575 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 576 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 577 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 578 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 579 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 580 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 581 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 582 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 583 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 584 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 585 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 586 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 587 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 588 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 589 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 590 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 591 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 592 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 593 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 594 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 595 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 596 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 597 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [22][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm  22.60 ( 22.60)	train_acc   0.61 (  0.63)	train_minacc   0.74 (  0.73)	train_majacc   0.58 (  0.61)	train_corr   0.00 (  0.00)	l1 4.7398 (4.7375)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.22it/s] 23%|##3       | 6/26 [00:00<00:00, 23.74it/s]                                               23%|##3       | 6/26 [00:00<00:00, 23.74it/s] 42%|####2     | 11/26 [00:00<00:00, 31.81it/s] 62%|######1   | 16/26 [00:00<00:00, 37.04it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.04it/s] 81%|########  | 21/26 [00:00<00:00, 36.73it/s]100%|##########| 26/26 [00:00<00:00, 39.95it/s]100%|##########| 26/26 [00:00<00:00, 31.58it/s]
Test: [   0/  26]	Loss 0.609 (0.609)	test_acc   0.61 (  0.61)	test_minacc   0.80 (  0.80)	test_majacc   0.59 (  0.59)	Loss_d 0.609 (0.609)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.80 (  0.80)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.27 (  0.27)
Test: [  10/  26]	Loss 0.615 (0.606)	test_acc   0.61 (  0.63)	test_minacc   0.63 (  0.72)	test_majacc   0.61 (  0.62)	Loss_d 0.615 (0.606)	test_acc_d   0.61 (  0.63)	test_minacc_d   0.63 (  0.72)	test_majacc_d   0.61 (  0.62)	test_corr_d   0.36 (  0.33)
Test: [  20/  26]	Loss 0.594 (0.605)	test_acc   0.65 (  0.63)	test_minacc   0.76 (  0.72)	test_majacc   0.62 (  0.62)	Loss_d 0.594 (0.605)	test_acc_d   0.65 (  0.63)	test_minacc_d   0.76 (  0.72)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.31 (  0.33)
Test: [  26/  26]	Loss 0.602 (0.605)	test_acc   0.60 (  0.63)	test_minacc   0.74 (  0.72)	test_majacc   0.58 (  0.61)	Loss_d 0.602 (0.605)	test_acc_d   0.60 (  0.63)	test_minacc_d   0.74 (  0.72)	test_majacc_d   0.58 (  0.61)	test_corr_d   0.30 (  0.33)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.60it/s]
Test: [  0/  1]	Loss 0.783 (0.783)	test_acc   0.61 (  0.61)	test_minacc   0.60 (  0.60)	test_majacc   0.72 (  0.72)	Loss_d 0.783 (0.783)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.72 (  0.72)	test_corr_d   0.08 (  0.08)
Test: [  1/  1]	Loss 0.783 (0.783)	test_acc   0.61 (  0.61)	test_minacc   0.60 (  0.60)	test_majacc   0.72 (  0.72)	Loss_d 0.783 (0.783)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.72 (  0.72)	test_corr_d   0.08 (  0.08)
Overall Timing[ 22/  1]	epoch_time 0.0427 (0.0449)	validation_time 0.0003 (0.0007)	train_time 0.0424 (0.0439)
record: (train_acc, test_acc) (0.6322000114321709, 0.6190000176429749)
last accs (train_acc, test_acc) (0.6309000059366227, 0.6130000352859497)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.08it/s] 19%|#9        | 5/26 [00:00<00:01, 20.25it/s] 31%|###       | 8/26 [00:00<00:00, 21.93it/s] 46%|####6     | 12/26 [00:00<00:00, 25.99it/s] 58%|#####7    | 15/26 [00:00<00:00, 25.99it/s] 69%|######9   | 18/26 [00:00<00:00, 26.79it/s] 85%|########4 | 22/26 [00:00<00:00, 29.28it/s]100%|##########| 26/26 [00:00<00:00, 30.34it/s]100%|##########| 26/26 [00:01<00:00, 24.60it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 598 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 599 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 600 200
penalty weights 10000.0
l1 at pgd_anneal_iters 4.744843482971191
set z to 4.6973950481414795
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 601 200
penalty weights 10000.0
args.step pgd_anneal_iters 601 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 602 200
penalty weights 10000.0
args.step pgd_anneal_iters 602 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 603 200
penalty weights 10000.0
args.step pgd_anneal_iters 603 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 604 200
penalty weights 10000.0
args.step pgd_anneal_iters 604 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 605 200
penalty weights 10000.0
args.step pgd_anneal_iters 605 600
dim_v 512
rho, theta 395 tensor(-0.0077, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 606 200
penalty weights 10000.0
args.step pgd_anneal_iters 606 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 607 200
penalty weights 10000.0
args.step pgd_anneal_iters 607 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 608 200
penalty weights 10000.0
args.step pgd_anneal_iters 608 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 609 200
penalty weights 10000.0
args.step pgd_anneal_iters 609 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 610 200
penalty weights 10000.0
args.step pgd_anneal_iters 610 600
dim_v 512
rho, theta 279 tensor(-0.0102, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 611 200
penalty weights 10000.0
args.step pgd_anneal_iters 611 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 612 200
penalty weights 10000.0
args.step pgd_anneal_iters 612 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 613 200
penalty weights 10000.0
args.step pgd_anneal_iters 613 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 614 200
penalty weights 10000.0
args.step pgd_anneal_iters 614 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 615 200
penalty weights 10000.0
args.step pgd_anneal_iters 615 600
dim_v 512
rho, theta 215 tensor(0.0132, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 616 200
penalty weights 10000.0
args.step pgd_anneal_iters 616 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 617 200
penalty weights 10000.0
args.step pgd_anneal_iters 617 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 618 200
penalty weights 10000.0
args.step pgd_anneal_iters 618 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 619 200
penalty weights 10000.0
args.step pgd_anneal_iters 619 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 620 200
penalty weights 10000.0
args.step pgd_anneal_iters 620 600
dim_v 512
rho, theta 193 tensor(0.0071, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 621 200
penalty weights 10000.0
args.step pgd_anneal_iters 621 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 622 200
penalty weights 10000.0
args.step pgd_anneal_iters 622 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 623 200
penalty weights 10000.0
args.step pgd_anneal_iters 623 600
final projection at end of training
dim_v 512
rho, theta 185 tensor(0.0023, device='cuda:0')
Epoch: [23][  26/  26]	Loss 0.001 (0.232)	train_nll   0.66 (  0.77)	train_penalty   0.00 (  0.23)	weight_norm  29.16 ( 24.51)	train_acc   0.51 (  0.58)	train_minacc   0.49 (  0.57)	train_majacc   0.51 (  0.58)	train_corr   0.00 (  0.00)	l1 5.4431 (5.7216)	zero_count 0.0000 (37.5180)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.37it/s] 27%|##6       | 7/26 [00:00<00:00, 32.58it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.58it/s] 46%|####6     | 12/26 [00:00<00:00, 37.90it/s] 65%|######5   | 17/26 [00:00<00:00, 40.83it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.83it/s] 85%|########4 | 22/26 [00:00<00:00, 41.65it/s]100%|##########| 26/26 [00:00<00:00, 36.80it/s]
Test: [   0/  26]	Loss 0.730 (0.730)	test_acc   0.46 (  0.46)	test_minacc   0.52 (  0.52)	test_majacc   0.45 (  0.45)	Loss_d 0.730 (0.730)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.44 (  0.44)
Test: [  10/  26]	Loss 0.653 (0.676)	test_acc   0.54 (  0.51)	test_minacc   0.59 (  0.50)	test_majacc   0.53 (  0.52)	Loss_d 0.653 (0.676)	test_acc_d   0.54 (  0.51)	test_minacc_d   0.59 (  0.50)	test_majacc_d   0.53 (  0.52)	test_corr_d   0.44 (  0.42)
Test: [  20/  26]	Loss 0.662 (0.671)	test_acc   0.46 (  0.51)	test_minacc   0.47 (  0.51)	test_majacc   0.46 (  0.51)	Loss_d 0.662 (0.671)	test_acc_d   0.46 (  0.51)	test_minacc_d   0.47 (  0.51)	test_majacc_d   0.46 (  0.51)	test_corr_d   0.43 (  0.43)
Test: [  26/  26]	Loss 0.664 (0.672)	test_acc   0.48 (  0.51)	test_minacc   0.44 (  0.50)	test_majacc   0.49 (  0.51)	Loss_d 0.664 (0.672)	test_acc_d   0.48 (  0.51)	test_minacc_d   0.44 (  0.50)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.43 (  0.43)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 56.81it/s]
Test: [  0/  1]	Loss 0.847 (0.847)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.51 (  0.51)	Loss_d 0.847 (0.847)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.37 (  0.37)
Test: [  1/  1]	Loss 0.847 (0.847)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.51 (  0.51)	Loss_d 0.847 (0.847)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.37 (  0.37)
Overall Timing[ 23/  1]	epoch_time 0.0429 (0.0448)	validation_time 0.0006 (0.0007)	train_time 0.0422 (0.0438)
record: (train_acc, test_acc) (0.6322000114321709, 0.6190000176429749)
last accs (train_acc, test_acc) (0.5093000140488148, 0.49800002574920654)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.10it/s] 15%|#5        | 4/26 [00:00<00:01, 18.57it/s] 27%|##6       | 7/26 [00:00<00:00, 22.31it/s] 42%|####2     | 11/26 [00:00<00:00, 26.83it/s] 54%|#####3    | 14/26 [00:00<00:00, 27.77it/s] 65%|######5   | 17/26 [00:00<00:00, 28.22it/s] 81%|########  | 21/26 [00:00<00:00, 30.25it/s] 96%|#########6| 25/26 [00:00<00:00, 30.33it/s]100%|##########| 26/26 [00:01<00:00, 25.85it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 624 200
penalty weights 10000.0
args.step pgd_anneal_iters 624 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 625 200
penalty weights 10000.0
args.step pgd_anneal_iters 625 600
dim_v 512
rho, theta 179 tensor(0.0011, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 626 200
penalty weights 10000.0
args.step pgd_anneal_iters 626 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 627 200
penalty weights 10000.0
args.step pgd_anneal_iters 627 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 628 200
penalty weights 10000.0
args.step pgd_anneal_iters 628 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 629 200
penalty weights 10000.0
args.step pgd_anneal_iters 629 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 630 200
penalty weights 10000.0
args.step pgd_anneal_iters 630 600
dim_v 512
rho, theta 168 tensor(0.0020, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 631 200
penalty weights 10000.0
args.step pgd_anneal_iters 631 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 632 200
penalty weights 10000.0
args.step pgd_anneal_iters 632 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 633 200
penalty weights 10000.0
args.step pgd_anneal_iters 633 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 634 200
penalty weights 10000.0
args.step pgd_anneal_iters 634 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 635 200
penalty weights 10000.0
args.step pgd_anneal_iters 635 600
dim_v 512
rho, theta 166 tensor(0.0012, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 636 200
penalty weights 10000.0
args.step pgd_anneal_iters 636 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 637 200
penalty weights 10000.0
args.step pgd_anneal_iters 637 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 638 200
penalty weights 10000.0
args.step pgd_anneal_iters 638 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 639 200
penalty weights 10000.0
args.step pgd_anneal_iters 639 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 640 200
penalty weights 10000.0
args.step pgd_anneal_iters 640 600
dim_v 512
rho, theta 165 tensor(0.0007, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 641 200
penalty weights 10000.0
args.step pgd_anneal_iters 641 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 642 200
penalty weights 10000.0
args.step pgd_anneal_iters 642 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 643 200
penalty weights 10000.0
args.step pgd_anneal_iters 643 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 644 200
penalty weights 10000.0
args.step pgd_anneal_iters 644 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 645 200
penalty weights 10000.0
args.step pgd_anneal_iters 645 600
dim_v 512
rho, theta 163 tensor(0.0004, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 646 200
penalty weights 10000.0
args.step pgd_anneal_iters 646 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 647 200
penalty weights 10000.0
args.step pgd_anneal_iters 647 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 648 200
penalty weights 10000.0
args.step pgd_anneal_iters 648 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 649 200
penalty weights 10000.0
args.step pgd_anneal_iters 649 600
final projection at end of training
dim_v 512
rho, theta 163 tensor(0.0002, device='cuda:0')
Epoch: [24][  26/  26]	Loss 0.000 (0.001)	train_nll   0.69 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm  32.86 ( 31.75)	train_acc   0.47 (  0.51)	train_minacc   0.44 (  0.50)	train_majacc   0.48 (  0.51)	train_corr   0.00 (  0.00)	l1 4.7953 (4.8990)	zero_count 0.0000 (79.5600)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.03it/s] 23%|##3       | 6/26 [00:00<00:00, 25.61it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.61it/s] 42%|####2     | 11/26 [00:00<00:00, 33.52it/s] 62%|######1   | 16/26 [00:00<00:00, 35.44it/s]                                                62%|######1   | 16/26 [00:00<00:00, 35.44it/s] 81%|########  | 21/26 [00:00<00:00, 38.65it/s]100%|##########| 26/26 [00:00<00:00, 41.04it/s]100%|##########| 26/26 [00:00<00:00, 32.78it/s]
Test: [   0/  26]	Loss 0.691 (0.691)	test_acc   0.45 (  0.45)	test_minacc   0.52 (  0.52)	test_majacc   0.44 (  0.44)	Loss_d 0.691 (0.691)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.20 (  0.20)
Test: [  10/  26]	Loss 0.685 (0.689)	test_acc   0.53 (  0.50)	test_minacc   0.61 (  0.51)	test_majacc   0.52 (  0.50)	Loss_d 0.685 (0.689)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.61 (  0.51)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.14 (  0.16)
Test: [  20/  26]	Loss 0.686 (0.687)	test_acc   0.46 (  0.50)	test_minacc   0.47 (  0.51)	test_majacc   0.46 (  0.50)	Loss_d 0.686 (0.687)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.47 (  0.51)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.20 (  0.17)
Test: [  26/  26]	Loss 0.685 (0.686)	test_acc   0.47 (  0.50)	test_minacc   0.44 (  0.50)	test_majacc   0.48 (  0.50)	Loss_d 0.685 (0.686)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.44 (  0.50)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.18 (  0.17)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.37it/s]
Test: [  0/  1]	Loss 0.732 (0.732)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.732 (0.732)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.16 (  0.16)
Test: [  1/  1]	Loss 0.732 (0.732)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.732 (0.732)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.16 (  0.16)
Overall Timing[ 24/  1]	epoch_time 0.0422 (0.0447)	validation_time 0.0004 (0.0007)	train_time 0.0418 (0.0438)
record: (train_acc, test_acc) (0.6322000114321709, 0.6190000176429749)
last accs (train_acc, test_acc) (0.5002000088989734, 0.5010000467300415)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.88it/s] 19%|#9        | 5/26 [00:00<00:01, 18.86it/s] 35%|###4      | 9/26 [00:00<00:00, 24.19it/s] 50%|#####     | 13/26 [00:00<00:00, 26.82it/s] 62%|######1   | 16/26 [00:00<00:00, 27.38it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.39it/s] 88%|########8 | 23/26 [00:00<00:00, 29.38it/s]100%|##########| 26/26 [00:01<00:00, 24.88it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 650 200
penalty weights 10000.0
args.step pgd_anneal_iters 650 600
dim_v 512
rho, theta 162 tensor(3.6038e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 651 200
penalty weights 10000.0
args.step pgd_anneal_iters 651 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 652 200
penalty weights 10000.0
args.step pgd_anneal_iters 652 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 653 200
penalty weights 10000.0
args.step pgd_anneal_iters 653 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 654 200
penalty weights 10000.0
args.step pgd_anneal_iters 654 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 655 200
penalty weights 10000.0
args.step pgd_anneal_iters 655 600
dim_v 512
rho, theta 162 tensor(0.0001, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 656 200
penalty weights 10000.0
args.step pgd_anneal_iters 656 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 657 200
penalty weights 10000.0
args.step pgd_anneal_iters 657 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 658 200
penalty weights 10000.0
args.step pgd_anneal_iters 658 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 659 200
penalty weights 10000.0
args.step pgd_anneal_iters 659 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 660 200
penalty weights 10000.0
args.step pgd_anneal_iters 660 600
dim_v 512
rho, theta 163 tensor(5.6278e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 661 200
penalty weights 10000.0
args.step pgd_anneal_iters 661 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 662 200
penalty weights 10000.0
args.step pgd_anneal_iters 662 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 663 200
penalty weights 10000.0
args.step pgd_anneal_iters 663 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 664 200
penalty weights 10000.0
args.step pgd_anneal_iters 664 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 665 200
penalty weights 10000.0
args.step pgd_anneal_iters 665 600
dim_v 512
rho, theta 164 tensor(2.4746e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 666 200
penalty weights 10000.0
args.step pgd_anneal_iters 666 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 667 200
penalty weights 10000.0
args.step pgd_anneal_iters 667 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 668 200
penalty weights 10000.0
args.step pgd_anneal_iters 668 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 669 200
penalty weights 10000.0
args.step pgd_anneal_iters 669 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 670 200
penalty weights 10000.0
args.step pgd_anneal_iters 670 600
dim_v 512
rho, theta 164 tensor(1.1918e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 671 200
penalty weights 10000.0
args.step pgd_anneal_iters 671 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 672 200
penalty weights 10000.0
args.step pgd_anneal_iters 672 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 673 200
penalty weights 10000.0
args.step pgd_anneal_iters 673 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 674 200
penalty weights 10000.0
args.step pgd_anneal_iters 674 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 675 200
penalty weights 10000.0
args.step pgd_anneal_iters 675 600
dim_v 512
rho, theta 169 tensor(1.6942e-06, device='cuda:0')
final projection at end of training
dim_v 512
rho, theta 169 tensor(8.4148e-09, device='cuda:0')
Epoch: [25][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  33.15 ( 33.07)	train_acc   0.47 (  0.50)	train_minacc   0.44 (  0.50)	train_majacc   0.48 (  0.50)	train_corr   0.00 (  0.00)	l1 4.7264 (4.7266)	zero_count 0.0000 (81.4320)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.19it/s] 27%|##6       | 7/26 [00:00<00:00, 27.79it/s]                                               27%|##6       | 7/26 [00:00<00:00, 27.79it/s] 46%|####6     | 12/26 [00:00<00:00, 34.79it/s] 65%|######5   | 17/26 [00:00<00:00, 35.83it/s]                                                65%|######5   | 17/26 [00:00<00:00, 35.83it/s] 85%|########4 | 22/26 [00:00<00:00, 39.04it/s]100%|##########| 26/26 [00:00<00:00, 32.30it/s]
Test: [   0/  26]	Loss 0.690 (0.690)	test_acc   0.45 (  0.45)	test_minacc   0.52 (  0.52)	test_majacc   0.44 (  0.44)	Loss_d 0.690 (0.690)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.18 (  0.18)
Test: [  10/  26]	Loss 0.686 (0.689)	test_acc   0.53 (  0.50)	test_minacc   0.61 (  0.51)	test_majacc   0.52 (  0.50)	Loss_d 0.686 (0.689)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.61 (  0.51)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.13 (  0.14)
Test: [  20/  26]	Loss 0.688 (0.687)	test_acc   0.46 (  0.50)	test_minacc   0.47 (  0.51)	test_majacc   0.46 (  0.50)	Loss_d 0.688 (0.687)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.47 (  0.51)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.18 (  0.15)
Test: [  26/  26]	Loss 0.687 (0.687)	test_acc   0.47 (  0.50)	test_minacc   0.44 (  0.50)	test_majacc   0.48 (  0.50)	Loss_d 0.687 (0.687)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.44 (  0.50)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.16 (  0.15)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.26it/s]
Test: [  0/  1]	Loss 0.716 (0.716)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.716 (0.716)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.14 (  0.14)
Test: [  1/  1]	Loss 0.716 (0.716)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.716 (0.716)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.14 (  0.14)
Overall Timing[ 25/  1]	epoch_time 0.0427 (0.0446)	validation_time 0.0004 (0.0007)	train_time 0.0423 (0.0437)
record: (train_acc, test_acc) (0.6322000114321709, 0.6190000176429749)
last accs (train_acc, test_acc) (0.5000000089108944, 0.49800002574920654)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.13it/s] 19%|#9        | 5/26 [00:00<00:00, 21.68it/s] 35%|###4      | 9/26 [00:00<00:00, 26.40it/s] 46%|####6     | 12/26 [00:00<00:00, 27.36it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.37it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.66it/s] 85%|########4 | 22/26 [00:00<00:00, 29.00it/s] 96%|#########6| 25/26 [00:00<00:00, 28.76it/s]100%|##########| 26/26 [00:01<00:00, 25.66it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 676 200
penalty weights 10000.0
args.step pgd_anneal_iters 676 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 677 200
penalty weights 10000.0
args.step pgd_anneal_iters 677 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 678 200
penalty weights 10000.0
args.step pgd_anneal_iters 678 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 679 200
penalty weights 10000.0
args.step pgd_anneal_iters 679 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 680 200
penalty weights 10000.0
args.step pgd_anneal_iters 680 600
dim_v 512
rho, theta 190 tensor(-9.2397e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 681 200
penalty weights 10000.0
args.step pgd_anneal_iters 681 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 682 200
penalty weights 10000.0
args.step pgd_anneal_iters 682 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 683 200
penalty weights 10000.0
args.step pgd_anneal_iters 683 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 684 200
penalty weights 10000.0
args.step pgd_anneal_iters 684 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 685 200
penalty weights 10000.0
args.step pgd_anneal_iters 685 600
dim_v 512
rho, theta 205 tensor(-1.3243e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 686 200
penalty weights 10000.0
args.step pgd_anneal_iters 686 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 687 200
penalty weights 10000.0
args.step pgd_anneal_iters 687 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 688 200
penalty weights 10000.0
args.step pgd_anneal_iters 688 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 689 200
penalty weights 10000.0
args.step pgd_anneal_iters 689 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 690 200
penalty weights 10000.0
args.step pgd_anneal_iters 690 600
dim_v 512
rho, theta 208 tensor(-1.0678e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 691 200
penalty weights 10000.0
args.step pgd_anneal_iters 691 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 692 200
penalty weights 10000.0
args.step pgd_anneal_iters 692 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 693 200
penalty weights 10000.0
args.step pgd_anneal_iters 693 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 694 200
penalty weights 10000.0
args.step pgd_anneal_iters 694 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 695 200
penalty weights 10000.0
args.step pgd_anneal_iters 695 600
dim_v 512
rho, theta 209 tensor(-8.3310e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 696 200
penalty weights 10000.0
args.step pgd_anneal_iters 696 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 697 200
penalty weights 10000.0
args.step pgd_anneal_iters 697 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 698 200
penalty weights 10000.0
args.step pgd_anneal_iters 698 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 699 200
penalty weights 10000.0
args.step pgd_anneal_iters 699 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 700 200
penalty weights 10000.0
args.step pgd_anneal_iters 700 600
dim_v 512
rho, theta 209 tensor(-7.3932e-06, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 701 200
penalty weights 10000.0
args.step pgd_anneal_iters 701 600
final projection at end of training
dim_v 512
rho, theta 209 tensor(-1.5123e-06, device='cuda:0')
Epoch: [26][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  33.17 ( 33.17)	train_acc   0.47 (  0.50)	train_minacc   0.44 (  0.50)	train_majacc   0.48 (  0.50)	train_corr   0.00 (  0.00)	l1 4.6974 (4.7099)	zero_count 302.0000 (68.9360)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.62it/s] 15%|#5        | 4/26 [00:00<00:01, 19.41it/s] 35%|###4      | 9/26 [00:00<00:00, 30.51it/s]                                               35%|###4      | 9/26 [00:00<00:00, 30.51it/s] 54%|#####3    | 14/26 [00:00<00:00, 33.30it/s] 73%|#######3  | 19/26 [00:00<00:00, 37.67it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 37.67it/s] 88%|########8 | 23/26 [00:00<00:00, 38.38it/s]100%|##########| 26/26 [00:00<00:00, 32.80it/s]
Test: [   0/  26]	Loss 0.691 (0.691)	test_acc   0.45 (  0.45)	test_minacc   0.52 (  0.52)	test_majacc   0.44 (  0.44)	Loss_d 0.691 (0.691)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.17 (  0.17)
Test: [  10/  26]	Loss 0.687 (0.689)	test_acc   0.53 (  0.50)	test_minacc   0.61 (  0.51)	test_majacc   0.51 (  0.50)	Loss_d 0.687 (0.689)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.61 (  0.51)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.12 (  0.13)
Test: [  20/  26]	Loss 0.689 (0.689)	test_acc   0.46 (  0.50)	test_minacc   0.47 (  0.51)	test_majacc   0.46 (  0.50)	Loss_d 0.689 (0.689)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.47 (  0.51)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.16 (  0.13)
Test: [  26/  26]	Loss 0.689 (0.688)	test_acc   0.47 (  0.50)	test_minacc   0.44 (  0.50)	test_majacc   0.48 (  0.50)	Loss_d 0.689 (0.688)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.44 (  0.50)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.14 (  0.13)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.65it/s]
Test: [  0/  1]	Loss 0.711 (0.711)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.711 (0.711)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 0.711 (0.711)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.711 (0.711)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.13 (  0.13)
Overall Timing[ 26/  1]	epoch_time 0.0475 (0.0447)	validation_time 0.0004 (0.0007)	train_time 0.0470 (0.0438)
record: (train_acc, test_acc) (0.6322000114321709, 0.6190000176429749)
last accs (train_acc, test_acc) (0.49970001125335695, 0.49800002574920654)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 23.07it/s] 23%|##3       | 6/26 [00:00<00:00, 25.69it/s] 35%|###4      | 9/26 [00:00<00:00, 26.30it/s] 50%|#####     | 13/26 [00:00<00:00, 28.25it/s] 62%|######1   | 16/26 [00:00<00:00, 28.76it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.32it/s] 88%|########8 | 23/26 [00:00<00:00, 30.53it/s]100%|##########| 26/26 [00:00<00:00, 27.21it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 702 200
penalty weights 10000.0
args.step pgd_anneal_iters 702 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 703 200
penalty weights 10000.0
args.step pgd_anneal_iters 703 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 704 200
penalty weights 10000.0
args.step pgd_anneal_iters 704 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 705 200
penalty weights 10000.0
args.step pgd_anneal_iters 705 600
dim_v 512
rho, theta 211 tensor(-8.6865e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 706 200
penalty weights 10000.0
args.step pgd_anneal_iters 706 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 707 200
penalty weights 10000.0
args.step pgd_anneal_iters 707 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 708 200
penalty weights 10000.0
args.step pgd_anneal_iters 708 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 709 200
penalty weights 10000.0
args.step pgd_anneal_iters 709 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 710 200
penalty weights 10000.0
args.step pgd_anneal_iters 710 600
dim_v 512
rho, theta 211 tensor(-1.2445e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 711 200
penalty weights 10000.0
args.step pgd_anneal_iters 711 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 712 200
penalty weights 10000.0
args.step pgd_anneal_iters 712 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 713 200
penalty weights 10000.0
args.step pgd_anneal_iters 713 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 714 200
penalty weights 10000.0
args.step pgd_anneal_iters 714 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 715 200
penalty weights 10000.0
args.step pgd_anneal_iters 715 600
dim_v 512
rho, theta 211 tensor(-1.0011e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 716 200
penalty weights 10000.0
args.step pgd_anneal_iters 716 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 717 200
penalty weights 10000.0
args.step pgd_anneal_iters 717 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 718 200
penalty weights 10000.0
args.step pgd_anneal_iters 718 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 719 200
penalty weights 10000.0
args.step pgd_anneal_iters 719 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 720 200
penalty weights 10000.0
args.step pgd_anneal_iters 720 600
dim_v 512
rho, theta 211 tensor(-8.8777e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 721 200
penalty weights 10000.0
args.step pgd_anneal_iters 721 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 722 200
penalty weights 10000.0
args.step pgd_anneal_iters 722 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 723 200
penalty weights 10000.0
args.step pgd_anneal_iters 723 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 724 200
penalty weights 10000.0
args.step pgd_anneal_iters 724 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 725 200
penalty weights 10000.0
args.step pgd_anneal_iters 725 600
dim_v 512
rho, theta 211 tensor(-6.6217e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 726 200
penalty weights 10000.0
args.step pgd_anneal_iters 726 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 727 200
penalty weights 10000.0
args.step pgd_anneal_iters 727 600
final projection at end of training
dim_v 512
rho, theta 212 tensor(-2.5543e-06, device='cuda:0')
Epoch: [27][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  33.18 ( 33.17)	train_acc   0.47 (  0.50)	train_minacc   0.44 (  0.50)	train_majacc   0.48 (  0.50)	train_corr   0.00 (  0.00)	l1 4.7007 (4.7061)	zero_count 0.0000 (70.2780)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 20.19it/s] 31%|###       | 8/26 [00:00<00:00, 32.73it/s]                                               31%|###       | 8/26 [00:00<00:00, 32.73it/s] 50%|#####     | 13/26 [00:00<00:00, 38.46it/s] 69%|######9   | 18/26 [00:00<00:00, 41.74it/s]                                                69%|######9   | 18/26 [00:00<00:00, 41.74it/s] 88%|########8 | 23/26 [00:00<00:00, 38.43it/s]100%|##########| 26/26 [00:00<00:00, 35.62it/s]
Test: [   0/  26]	Loss 0.692 (0.692)	test_acc   0.45 (  0.45)	test_minacc   0.52 (  0.52)	test_majacc   0.44 (  0.44)	Loss_d 0.692 (0.692)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.16 (  0.16)
Test: [  10/  26]	Loss 0.688 (0.690)	test_acc   0.53 (  0.50)	test_minacc   0.61 (  0.51)	test_majacc   0.51 (  0.50)	Loss_d 0.688 (0.690)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.61 (  0.51)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.11 (  0.12)
Test: [  20/  26]	Loss 0.690 (0.689)	test_acc   0.46 (  0.50)	test_minacc   0.47 (  0.51)	test_majacc   0.46 (  0.50)	Loss_d 0.690 (0.689)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.47 (  0.51)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.14 (  0.12)
Test: [  26/  26]	Loss 0.689 (0.689)	test_acc   0.47 (  0.50)	test_minacc   0.44 (  0.50)	test_majacc   0.48 (  0.50)	Loss_d 0.689 (0.689)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.44 (  0.50)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.13 (  0.12)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.07it/s]
Test: [  0/  1]	Loss 0.708 (0.708)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.708 (0.708)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.12 (  0.12)
Test: [  1/  1]	Loss 0.708 (0.708)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.708 (0.708)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.12 (  0.12)
Overall Timing[ 27/  1]	epoch_time 0.0482 (0.0448)	validation_time 0.0008 (0.0007)	train_time 0.0474 (0.0440)
record: (train_acc, test_acc) (0.6322000114321709, 0.6190000176429749)
last accs (train_acc, test_acc) (0.4996000089347363, 0.49800002574920654)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.11it/s] 15%|#5        | 4/26 [00:00<00:01, 18.20it/s] 31%|###       | 8/26 [00:00<00:00, 24.41it/s] 46%|####6     | 12/26 [00:00<00:00, 28.23it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.41it/s] 69%|######9   | 18/26 [00:00<00:00, 28.21it/s] 85%|########4 | 22/26 [00:00<00:00, 30.36it/s]100%|##########| 26/26 [00:00<00:00, 30.67it/s]100%|##########| 26/26 [00:01<00:00, 25.91it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 728 200
penalty weights 10000.0
args.step pgd_anneal_iters 728 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 729 200
penalty weights 10000.0
args.step pgd_anneal_iters 729 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 730 200
penalty weights 10000.0
args.step pgd_anneal_iters 730 600
dim_v 512
rho, theta 212 tensor(-5.3012e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 731 200
penalty weights 10000.0
args.step pgd_anneal_iters 731 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 732 200
penalty weights 10000.0
args.step pgd_anneal_iters 732 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 733 200
penalty weights 10000.0
args.step pgd_anneal_iters 733 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 734 200
penalty weights 10000.0
args.step pgd_anneal_iters 734 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 735 200
penalty weights 10000.0
args.step pgd_anneal_iters 735 600
dim_v 512
rho, theta 211 tensor(-9.7234e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 736 200
penalty weights 10000.0
args.step pgd_anneal_iters 736 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 737 200
penalty weights 10000.0
args.step pgd_anneal_iters 737 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 738 200
penalty weights 10000.0
args.step pgd_anneal_iters 738 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 739 200
penalty weights 10000.0
args.step pgd_anneal_iters 739 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 740 200
penalty weights 10000.0
args.step pgd_anneal_iters 740 600
dim_v 512
rho, theta 210 tensor(-8.4995e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 741 200
penalty weights 10000.0
args.step pgd_anneal_iters 741 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 742 200
penalty weights 10000.0
args.step pgd_anneal_iters 742 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 743 200
penalty weights 10000.0
args.step pgd_anneal_iters 743 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 744 200
penalty weights 10000.0
args.step pgd_anneal_iters 744 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 745 200
penalty weights 10000.0
args.step pgd_anneal_iters 745 600
dim_v 512
rho, theta 210 tensor(-7.2520e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 746 200
penalty weights 10000.0
args.step pgd_anneal_iters 746 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 747 200
penalty weights 10000.0
args.step pgd_anneal_iters 747 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 748 200
penalty weights 10000.0
args.step pgd_anneal_iters 748 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 749 200
penalty weights 10000.0
args.step pgd_anneal_iters 749 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 750 200
penalty weights 10000.0
args.step pgd_anneal_iters 750 600
dim_v 512
rho, theta 210 tensor(-5.2091e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 751 200
penalty weights 10000.0
args.step pgd_anneal_iters 751 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 752 200
penalty weights 10000.0
args.step pgd_anneal_iters 752 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 753 200
penalty weights 10000.0
args.step pgd_anneal_iters 753 600
final projection at end of training
dim_v 512
rho, theta 211 tensor(-3.0612e-06, device='cuda:0')
Epoch: [28][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  33.18 ( 33.18)	train_acc   0.47 (  0.50)	train_minacc   0.44 (  0.51)	train_majacc   0.48 (  0.50)	train_corr   0.00 (  0.00)	l1 4.7028 (4.7041)	zero_count 0.0000 (70.2390)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.30it/s] 23%|##3       | 6/26 [00:00<00:00, 30.28it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.28it/s] 42%|####2     | 11/26 [00:00<00:00, 37.11it/s] 62%|######1   | 16/26 [00:00<00:00, 40.93it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.93it/s] 81%|########  | 21/26 [00:00<00:00, 39.13it/s]100%|##########| 26/26 [00:00<00:00, 42.14it/s]100%|##########| 26/26 [00:00<00:00, 35.12it/s]
Test: [   0/  26]	Loss 0.692 (0.692)	test_acc   0.45 (  0.45)	test_minacc   0.52 (  0.52)	test_majacc   0.44 (  0.44)	Loss_d 0.692 (0.692)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.16 (  0.16)
Test: [  10/  26]	Loss 0.688 (0.690)	test_acc   0.53 (  0.50)	test_minacc   0.61 (  0.51)	test_majacc   0.51 (  0.50)	Loss_d 0.688 (0.690)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.61 (  0.51)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.10 (  0.11)
Test: [  20/  26]	Loss 0.691 (0.690)	test_acc   0.46 (  0.50)	test_minacc   0.47 (  0.51)	test_majacc   0.46 (  0.50)	Loss_d 0.691 (0.690)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.47 (  0.51)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.13 (  0.11)
Test: [  26/  26]	Loss 0.690 (0.690)	test_acc   0.47 (  0.50)	test_minacc   0.44 (  0.51)	test_majacc   0.48 (  0.50)	Loss_d 0.690 (0.690)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.44 (  0.51)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.12 (  0.11)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.74it/s]
Test: [  0/  1]	Loss 0.705 (0.705)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.705 (0.705)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 0.705 (0.705)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.705 (0.705)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.11 (  0.11)
Overall Timing[ 28/  1]	epoch_time 0.0493 (0.0450)	validation_time 0.0005 (0.0007)	train_time 0.0488 (0.0441)
record: (train_acc, test_acc) (0.6322000114321709, 0.6190000176429749)
last accs (train_acc, test_acc) (0.49970001009106635, 0.49800002574920654)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.82it/s] 15%|#5        | 4/26 [00:00<00:01, 16.22it/s] 27%|##6       | 7/26 [00:00<00:00, 19.95it/s] 42%|####2     | 11/26 [00:00<00:00, 25.64it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.88it/s] 65%|######5   | 17/26 [00:00<00:00, 27.48it/s] 81%|########  | 21/26 [00:00<00:00, 29.74it/s] 96%|#########6| 25/26 [00:00<00:00, 30.17it/s]100%|##########| 26/26 [00:01<00:00, 24.78it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 754 200
penalty weights 10000.0
args.step pgd_anneal_iters 754 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 755 200
penalty weights 10000.0
args.step pgd_anneal_iters 755 600
dim_v 512
rho, theta 211 tensor(-2.4044e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 756 200
penalty weights 10000.0
args.step pgd_anneal_iters 756 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 757 200
penalty weights 10000.0
args.step pgd_anneal_iters 757 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 758 200
penalty weights 10000.0
args.step pgd_anneal_iters 758 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 759 200
penalty weights 10000.0
args.step pgd_anneal_iters 759 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 760 200
penalty weights 10000.0
args.step pgd_anneal_iters 760 600
dim_v 512
rho, theta 210 tensor(-7.5096e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 761 200
penalty weights 10000.0
args.step pgd_anneal_iters 761 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 762 200
penalty weights 10000.0
args.step pgd_anneal_iters 762 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 763 200
penalty weights 10000.0
args.step pgd_anneal_iters 763 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 764 200
penalty weights 10000.0
args.step pgd_anneal_iters 764 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 765 200
penalty weights 10000.0
args.step pgd_anneal_iters 765 600
dim_v 512
rho, theta 209 tensor(-6.7575e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 766 200
penalty weights 10000.0
args.step pgd_anneal_iters 766 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 767 200
penalty weights 10000.0
args.step pgd_anneal_iters 767 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 768 200
penalty weights 10000.0
args.step pgd_anneal_iters 768 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 769 200
penalty weights 10000.0
args.step pgd_anneal_iters 769 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 770 200
penalty weights 10000.0
args.step pgd_anneal_iters 770 600
dim_v 512
rho, theta 209 tensor(-5.6744e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 771 200
penalty weights 10000.0
args.step pgd_anneal_iters 771 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 772 200
penalty weights 10000.0
args.step pgd_anneal_iters 772 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 773 200
penalty weights 10000.0
args.step pgd_anneal_iters 773 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 774 200
penalty weights 10000.0
args.step pgd_anneal_iters 774 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 775 200
penalty weights 10000.0
args.step pgd_anneal_iters 775 600
dim_v 512
rho, theta 209 tensor(-3.9805e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 776 200
penalty weights 10000.0
args.step pgd_anneal_iters 776 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 777 200
penalty weights 10000.0
args.step pgd_anneal_iters 777 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 778 200
penalty weights 10000.0
args.step pgd_anneal_iters 778 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 779 200
penalty weights 10000.0
args.step pgd_anneal_iters 779 600
final projection at end of training
dim_v 512
rho, theta 210 tensor(-3.4237e-06, device='cuda:0')
Epoch: [29][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  33.18 ( 33.18)	train_acc   0.47 (  0.50)	train_minacc   0.44 (  0.51)	train_majacc   0.48 (  0.50)	train_corr   0.00 (  0.00)	l1 4.7039 (4.7029)	zero_count 0.0000 (70.4730)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.57it/s] 23%|##3       | 6/26 [00:00<00:00, 22.05it/s]                                               23%|##3       | 6/26 [00:00<00:00, 22.05it/s] 42%|####2     | 11/26 [00:00<00:00, 28.50it/s] 62%|######1   | 16/26 [00:00<00:00, 34.52it/s]                                                62%|######1   | 16/26 [00:00<00:00, 34.52it/s] 81%|########  | 21/26 [00:00<00:00, 37.02it/s]100%|##########| 26/26 [00:00<00:00, 40.40it/s]100%|##########| 26/26 [00:00<00:00, 30.76it/s]
Test: [   0/  26]	Loss 0.692 (0.692)	test_acc   0.45 (  0.45)	test_minacc   0.52 (  0.52)	test_majacc   0.44 (  0.44)	Loss_d 0.692 (0.692)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.15 (  0.15)
Test: [  10/  26]	Loss 0.688 (0.691)	test_acc   0.53 (  0.50)	test_minacc   0.63 (  0.52)	test_majacc   0.51 (  0.50)	Loss_d 0.688 (0.691)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.63 (  0.52)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.10 (  0.10)
Test: [  20/  26]	Loss 0.692 (0.690)	test_acc   0.46 (  0.50)	test_minacc   0.47 (  0.51)	test_majacc   0.46 (  0.50)	Loss_d 0.692 (0.690)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.47 (  0.51)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.12 (  0.10)
Test: [  26/  26]	Loss 0.691 (0.690)	test_acc   0.47 (  0.50)	test_minacc   0.44 (  0.51)	test_majacc   0.48 (  0.50)	Loss_d 0.691 (0.690)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.44 (  0.51)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.11 (  0.10)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.76it/s]
Test: [  0/  1]	Loss 0.703 (0.703)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.703 (0.703)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Test: [  1/  1]	Loss 0.703 (0.703)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.703 (0.703)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Overall Timing[ 29/  1]	epoch_time 0.0427 (0.0449)	validation_time 0.0003 (0.0006)	train_time 0.0424 (0.0441)
record: (train_acc, test_acc) (0.6322000114321709, 0.6190000176429749)
last accs (train_acc, test_acc) (0.49970001125335695, 0.49800002574920654)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.90it/s] 19%|#9        | 5/26 [00:00<00:00, 21.17it/s] 31%|###       | 8/26 [00:00<00:00, 24.12it/s] 42%|####2     | 11/26 [00:00<00:00, 26.03it/s] 58%|#####7    | 15/26 [00:00<00:00, 29.49it/s] 73%|#######3  | 19/26 [00:00<00:00, 30.35it/s] 88%|########8 | 23/26 [00:00<00:00, 30.37it/s]100%|##########| 26/26 [00:00<00:00, 26.13it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 780 200
penalty weights 10000.0
args.step pgd_anneal_iters 780 600
dim_v 512
rho, theta 212 tensor(-8.3726e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 781 200
penalty weights 10000.0
args.step pgd_anneal_iters 781 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 782 200
penalty weights 10000.0
args.step pgd_anneal_iters 782 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 783 200
penalty weights 10000.0
args.step pgd_anneal_iters 783 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 784 200
penalty weights 10000.0
args.step pgd_anneal_iters 784 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 785 200
penalty weights 10000.0
args.step pgd_anneal_iters 785 600
dim_v 512
rho, theta 210 tensor(-5.7492e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 786 200
penalty weights 10000.0
args.step pgd_anneal_iters 786 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 787 200
penalty weights 10000.0
args.step pgd_anneal_iters 787 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 788 200
penalty weights 10000.0
args.step pgd_anneal_iters 788 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 789 200
penalty weights 10000.0
args.step pgd_anneal_iters 789 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 790 200
penalty weights 10000.0
args.step pgd_anneal_iters 790 600
dim_v 512
rho, theta 209 tensor(-5.5813e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 791 200
penalty weights 10000.0
args.step pgd_anneal_iters 791 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 792 200
penalty weights 10000.0
args.step pgd_anneal_iters 792 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 793 200
penalty weights 10000.0
args.step pgd_anneal_iters 793 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 794 200
penalty weights 10000.0
args.step pgd_anneal_iters 794 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 795 200
penalty weights 10000.0
args.step pgd_anneal_iters 795 600
dim_v 512
rho, theta 209 tensor(-4.8092e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 796 200
penalty weights 10000.0
args.step pgd_anneal_iters 796 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 797 200
penalty weights 10000.0
args.step pgd_anneal_iters 797 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 798 200
penalty weights 10000.0
args.step pgd_anneal_iters 798 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 799 200
penalty weights 10000.0
args.step pgd_anneal_iters 799 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 800 200
penalty weights 10000.0
args.step pgd_anneal_iters 800 600
dim_v 512
rho, theta 209 tensor(-3.5808e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 801 200
penalty weights 10000.0
args.step pgd_anneal_iters 801 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 802 200
penalty weights 10000.0
args.step pgd_anneal_iters 802 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 803 200
penalty weights 10000.0
args.step pgd_anneal_iters 803 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 804 200
penalty weights 10000.0
args.step pgd_anneal_iters 804 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 805 200
penalty weights 10000.0
args.step pgd_anneal_iters 805 600
dim_v 512
rho, theta 210 tensor(-3.4260e-06, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [30][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  33.18 ( 33.18)	train_acc   0.47 (  0.50)	train_minacc   0.44 (  0.51)	train_majacc   0.48 (  0.50)	train_corr   0.00 (  0.00)	l1 4.7042 (4.7022)	zero_count 0.0000 (70.4730)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.39it/s] 27%|##6       | 7/26 [00:00<00:00, 34.24it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.24it/s] 46%|####6     | 12/26 [00:00<00:00, 39.66it/s] 65%|######5   | 17/26 [00:00<00:00, 38.58it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.58it/s] 85%|########4 | 22/26 [00:00<00:00, 40.94it/s]100%|##########| 26/26 [00:00<00:00, 36.14it/s]
Test: [   0/  26]	Loss 0.692 (0.692)	test_acc   0.45 (  0.45)	test_minacc   0.52 (  0.52)	test_majacc   0.44 (  0.44)	Loss_d 0.692 (0.692)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.15 (  0.15)
Test: [  10/  26]	Loss 0.689 (0.691)	test_acc   0.53 (  0.50)	test_minacc   0.63 (  0.52)	test_majacc   0.51 (  0.50)	Loss_d 0.689 (0.691)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.63 (  0.52)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.10 (  0.10)
Test: [  20/  26]	Loss 0.692 (0.691)	test_acc   0.46 (  0.50)	test_minacc   0.47 (  0.51)	test_majacc   0.46 (  0.50)	Loss_d 0.692 (0.691)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.47 (  0.51)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.11 (  0.10)
Test: [  26/  26]	Loss 0.691 (0.690)	test_acc   0.47 (  0.50)	test_minacc   0.44 (  0.51)	test_majacc   0.48 (  0.50)	Loss_d 0.691 (0.690)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.44 (  0.51)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.10 (  0.10)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.41it/s]
Test: [  0/  1]	Loss 0.701 (0.701)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.701 (0.701)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Test: [  1/  1]	Loss 0.701 (0.701)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.701 (0.701)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Overall Timing[ 30/  1]	epoch_time 0.0418 (0.0448)	validation_time 0.0004 (0.0006)	train_time 0.0413 (0.0440)
record: (train_acc, test_acc) (0.6322000114321709, 0.6190000176429749)
last accs (train_acc, test_acc) (0.4997000124156475, 0.49800002574920654)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.56it/s] 19%|#9        | 5/26 [00:00<00:01, 14.00it/s] 35%|###4      | 9/26 [00:00<00:00, 20.84it/s] 50%|#####     | 13/26 [00:00<00:00, 24.43it/s] 65%|######5   | 17/26 [00:00<00:00, 26.85it/s] 81%|########  | 21/26 [00:00<00:00, 28.63it/s] 96%|#########6| 25/26 [00:01<00:00, 29.35it/s]100%|##########| 26/26 [00:01<00:00, 23.13it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 806 200
penalty weights 10000.0
args.step pgd_anneal_iters 806 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 807 200
penalty weights 10000.0
args.step pgd_anneal_iters 807 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 808 200
penalty weights 10000.0
args.step pgd_anneal_iters 808 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 809 200
penalty weights 10000.0
args.step pgd_anneal_iters 809 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 810 200
penalty weights 10000.0
args.step pgd_anneal_iters 810 600
dim_v 512
rho, theta 210 tensor(-4.4203e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 811 200
penalty weights 10000.0
args.step pgd_anneal_iters 811 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 812 200
penalty weights 10000.0
args.step pgd_anneal_iters 812 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 813 200
penalty weights 10000.0
args.step pgd_anneal_iters 813 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 814 200
penalty weights 10000.0
args.step pgd_anneal_iters 814 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 815 200
penalty weights 10000.0
args.step pgd_anneal_iters 815 600
dim_v 512
rho, theta 210 tensor(-5.2384e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 816 200
penalty weights 10000.0
args.step pgd_anneal_iters 816 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 817 200
penalty weights 10000.0
args.step pgd_anneal_iters 817 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 818 200
penalty weights 10000.0
args.step pgd_anneal_iters 818 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 819 200
penalty weights 10000.0
args.step pgd_anneal_iters 819 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 820 200
penalty weights 10000.0
args.step pgd_anneal_iters 820 600
dim_v 512
rho, theta 209 tensor(-4.3914e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 821 200
penalty weights 10000.0
args.step pgd_anneal_iters 821 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 822 200
penalty weights 10000.0
args.step pgd_anneal_iters 822 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 823 200
penalty weights 10000.0
args.step pgd_anneal_iters 823 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 824 200
penalty weights 10000.0
args.step pgd_anneal_iters 824 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 825 200
penalty weights 10000.0
args.step pgd_anneal_iters 825 600
dim_v 512
rho, theta 209 tensor(-3.5286e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 826 200
penalty weights 10000.0
args.step pgd_anneal_iters 826 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 827 200
penalty weights 10000.0
args.step pgd_anneal_iters 827 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 828 200
penalty weights 10000.0
args.step pgd_anneal_iters 828 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 829 200
penalty weights 10000.0
args.step pgd_anneal_iters 829 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 830 200
penalty weights 10000.0
args.step pgd_anneal_iters 830 600
dim_v 512
rho, theta 211 tensor(-3.2052e-06, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 831 200
penalty weights 10000.0
args.step pgd_anneal_iters 831 600
final projection at end of training
dim_v 512
rho, theta 212 tensor(-6.1787e-07, device='cuda:0')
Epoch: [31][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  33.18 ( 33.18)	train_acc   0.47 (  0.50)	train_minacc   0.44 (  0.51)	train_majacc   0.48 (  0.50)	train_corr   0.00 (  0.00)	l1 4.6974 (4.7017)	zero_count 300.0000 (66.2730)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.83it/s] 23%|##3       | 6/26 [00:00<00:00, 31.43it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.43it/s] 42%|####2     | 11/26 [00:00<00:00, 37.66it/s] 62%|######1   | 16/26 [00:00<00:00, 38.39it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.39it/s] 81%|########  | 21/26 [00:00<00:00, 40.58it/s]100%|##########| 26/26 [00:00<00:00, 42.90it/s]100%|##########| 26/26 [00:00<00:00, 35.50it/s]
Test: [   0/  26]	Loss 0.693 (0.693)	test_acc   0.45 (  0.45)	test_minacc   0.52 (  0.52)	test_majacc   0.44 (  0.44)	Loss_d 0.693 (0.693)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.14 (  0.14)
Test: [  10/  26]	Loss 0.689 (0.691)	test_acc   0.52 (  0.50)	test_minacc   0.63 (  0.52)	test_majacc   0.50 (  0.50)	Loss_d 0.689 (0.691)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.63 (  0.52)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.09 (  0.10)
Test: [  20/  26]	Loss 0.692 (0.691)	test_acc   0.46 (  0.50)	test_minacc   0.47 (  0.51)	test_majacc   0.46 (  0.50)	Loss_d 0.692 (0.691)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.47 (  0.51)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.11 (  0.09)
Test: [  26/  26]	Loss 0.692 (0.691)	test_acc   0.47 (  0.50)	test_minacc   0.44 (  0.51)	test_majacc   0.48 (  0.50)	Loss_d 0.692 (0.691)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.44 (  0.51)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.10 (  0.09)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.03it/s]
Test: [  0/  1]	Loss 0.700 (0.700)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.700 (0.700)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 0.700 (0.700)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.700 (0.700)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.09 (  0.09)
Overall Timing[ 31/  1]	epoch_time 0.0434 (0.0448)	validation_time 0.0003 (0.0006)	train_time 0.0430 (0.0439)
record: (train_acc, test_acc) (0.6322000114321709, 0.6190000176429749)
last accs (train_acc, test_acc) (0.49940001127123834, 0.49800002574920654)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.83it/s] 15%|#5        | 4/26 [00:00<00:01, 16.79it/s] 31%|###       | 8/26 [00:00<00:00, 24.24it/s] 42%|####2     | 11/26 [00:00<00:00, 26.06it/s] 54%|#####3    | 14/26 [00:00<00:00, 25.43it/s] 69%|######9   | 18/26 [00:00<00:00, 28.70it/s] 81%|########  | 21/26 [00:00<00:00, 29.05it/s] 96%|#########6| 25/26 [00:00<00:00, 29.65it/s]100%|##########| 26/26 [00:01<00:00, 25.08it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 832 200
penalty weights 10000.0
args.step pgd_anneal_iters 832 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 833 200
penalty weights 10000.0
args.step pgd_anneal_iters 833 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 834 200
penalty weights 10000.0
args.step pgd_anneal_iters 834 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 835 200
penalty weights 10000.0
args.step pgd_anneal_iters 835 600
dim_v 512
rho, theta 211 tensor(-3.1737e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 836 200
penalty weights 10000.0
args.step pgd_anneal_iters 836 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 837 200
penalty weights 10000.0
args.step pgd_anneal_iters 837 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 838 200
penalty weights 10000.0
args.step pgd_anneal_iters 838 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 839 200
penalty weights 10000.0
args.step pgd_anneal_iters 839 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 840 200
penalty weights 10000.0
args.step pgd_anneal_iters 840 600
dim_v 512
rho, theta 209 tensor(-4.6321e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 841 200
penalty weights 10000.0
args.step pgd_anneal_iters 841 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 842 200
penalty weights 10000.0
args.step pgd_anneal_iters 842 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 843 200
penalty weights 10000.0
args.step pgd_anneal_iters 843 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 844 200
penalty weights 10000.0
args.step pgd_anneal_iters 844 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 845 200
penalty weights 10000.0
args.step pgd_anneal_iters 845 600
dim_v 512
rho, theta 208 tensor(-4.0292e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 846 200
penalty weights 10000.0
args.step pgd_anneal_iters 846 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 847 200
penalty weights 10000.0
args.step pgd_anneal_iters 847 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 848 200
penalty weights 10000.0
args.step pgd_anneal_iters 848 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 849 200
penalty weights 10000.0
args.step pgd_anneal_iters 849 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 850 200
penalty weights 10000.0
args.step pgd_anneal_iters 850 600
dim_v 512
rho, theta 208 tensor(-3.6390e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 851 200
penalty weights 10000.0
args.step pgd_anneal_iters 851 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 852 200
penalty weights 10000.0
args.step pgd_anneal_iters 852 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 853 200
penalty weights 10000.0
args.step pgd_anneal_iters 853 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 854 200
penalty weights 10000.0
args.step pgd_anneal_iters 854 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 855 200
penalty weights 10000.0
args.step pgd_anneal_iters 855 600
dim_v 512
rho, theta 208 tensor(-3.0002e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 856 200
penalty weights 10000.0
args.step pgd_anneal_iters 856 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 857 200
penalty weights 10000.0
args.step pgd_anneal_iters 857 600
final projection at end of training
dim_v 512
rho, theta 210 tensor(-1.1480e-06, device='cuda:0')
Epoch: [32][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  33.18 ( 33.18)	train_acc   0.47 (  0.50)	train_minacc   0.44 (  0.51)	train_majacc   0.48 (  0.50)	train_corr   0.00 (  0.00)	l1 4.6989 (4.7012)	zero_count 0.0000 (70.5510)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.02it/s]  8%|7         | 2/26 [00:00<00:03,  7.28it/s] 31%|###       | 8/26 [00:00<00:00, 27.06it/s]                                               31%|###       | 8/26 [00:00<00:00, 27.06it/s] 50%|#####     | 13/26 [00:00<00:00, 34.16it/s] 69%|######9   | 18/26 [00:00<00:00, 37.84it/s]                                                69%|######9   | 18/26 [00:00<00:00, 37.84it/s] 92%|#########2| 24/26 [00:00<00:00, 43.37it/s]100%|##########| 26/26 [00:00<00:00, 32.44it/s]
Test: [   0/  26]	Loss 0.693 (0.693)	test_acc   0.45 (  0.45)	test_minacc   0.52 (  0.52)	test_majacc   0.44 (  0.44)	Loss_d 0.693 (0.693)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.14 (  0.14)
Test: [  10/  26]	Loss 0.689 (0.691)	test_acc   0.53 (  0.50)	test_minacc   0.65 (  0.52)	test_majacc   0.51 (  0.50)	Loss_d 0.689 (0.691)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.65 (  0.52)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.09 (  0.09)
Test: [  20/  26]	Loss 0.693 (0.691)	test_acc   0.46 (  0.50)	test_minacc   0.47 (  0.52)	test_majacc   0.46 (  0.50)	Loss_d 0.693 (0.691)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.47 (  0.52)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.10 (  0.09)
Test: [  26/  26]	Loss 0.692 (0.691)	test_acc   0.47 (  0.50)	test_minacc   0.44 (  0.51)	test_majacc   0.48 (  0.50)	Loss_d 0.692 (0.691)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.44 (  0.51)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.09 (  0.09)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.94it/s]
Test: [  0/  1]	Loss 0.700 (0.700)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.700 (0.700)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 0.700 (0.700)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.700 (0.700)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.09 (  0.09)
Overall Timing[ 32/  1]	epoch_time 0.0405 (0.0446)	validation_time 0.0004 (0.0006)	train_time 0.0401 (0.0438)
record: (train_acc, test_acc) (0.6322000114321709, 0.6190000176429749)
last accs (train_acc, test_acc) (0.4995000101029873, 0.49800002574920654)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.03it/s] 19%|#9        | 5/26 [00:00<00:00, 21.29it/s] 31%|###       | 8/26 [00:00<00:00, 24.73it/s] 46%|####6     | 12/26 [00:00<00:00, 29.12it/s] 62%|######1   | 16/26 [00:00<00:00, 30.06it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.66it/s] 92%|#########2| 24/26 [00:00<00:00, 31.09it/s]100%|##########| 26/26 [00:00<00:00, 27.34it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 858 200
penalty weights 10000.0
args.step pgd_anneal_iters 858 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 859 200
penalty weights 10000.0
args.step pgd_anneal_iters 859 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 860 200
penalty weights 10000.0
args.step pgd_anneal_iters 860 600
dim_v 512
rho, theta 211 tensor(-2.0805e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 861 200
penalty weights 10000.0
args.step pgd_anneal_iters 861 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 862 200
penalty weights 10000.0
args.step pgd_anneal_iters 862 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 863 200
penalty weights 10000.0
args.step pgd_anneal_iters 863 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 864 200
penalty weights 10000.0
args.step pgd_anneal_iters 864 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 865 200
penalty weights 10000.0
args.step pgd_anneal_iters 865 600
dim_v 512
rho, theta 209 tensor(-4.1417e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 866 200
penalty weights 10000.0
args.step pgd_anneal_iters 866 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 867 200
penalty weights 10000.0
args.step pgd_anneal_iters 867 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 868 200
penalty weights 10000.0
args.step pgd_anneal_iters 868 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 869 200
penalty weights 10000.0
args.step pgd_anneal_iters 869 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 870 200
penalty weights 10000.0
args.step pgd_anneal_iters 870 600
dim_v 512
rho, theta 207 tensor(-4.0210e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 871 200
penalty weights 10000.0
args.step pgd_anneal_iters 871 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 872 200
penalty weights 10000.0
args.step pgd_anneal_iters 872 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 873 200
penalty weights 10000.0
args.step pgd_anneal_iters 873 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 874 200
penalty weights 10000.0
args.step pgd_anneal_iters 874 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 875 200
penalty weights 10000.0
args.step pgd_anneal_iters 875 600
dim_v 512
rho, theta 207 tensor(-3.3975e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 876 200
penalty weights 10000.0
args.step pgd_anneal_iters 876 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 877 200
penalty weights 10000.0
args.step pgd_anneal_iters 877 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 878 200
penalty weights 10000.0
args.step pgd_anneal_iters 878 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 879 200
penalty weights 10000.0
args.step pgd_anneal_iters 879 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 880 200
penalty weights 10000.0
args.step pgd_anneal_iters 880 600
dim_v 512
rho, theta 207 tensor(-2.7441e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 881 200
penalty weights 10000.0
args.step pgd_anneal_iters 881 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 882 200
penalty weights 10000.0
args.step pgd_anneal_iters 882 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 883 200
penalty weights 10000.0
args.step pgd_anneal_iters 883 600
final projection at end of training
dim_v 512
rho, theta 208 tensor(-1.4556e-06, device='cuda:0')
Epoch: [33][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  33.19 ( 33.18)	train_acc   0.47 (  0.50)	train_minacc   0.44 (  0.51)	train_majacc   0.48 (  0.50)	train_corr   0.00 (  0.00)	l1 4.7003 (4.7008)	zero_count 0.0000 (70.7850)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.21it/s] 23%|##3       | 6/26 [00:00<00:00, 26.33it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.33it/s] 42%|####2     | 11/26 [00:00<00:00, 34.55it/s] 62%|######1   | 16/26 [00:00<00:00, 38.96it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.96it/s] 81%|########  | 21/26 [00:00<00:00, 41.50it/s]100%|##########| 26/26 [00:00<00:00, 42.88it/s]100%|##########| 26/26 [00:00<00:00, 34.11it/s]
Test: [   0/  26]	Loss 0.693 (0.693)	test_acc   0.45 (  0.45)	test_minacc   0.52 (  0.52)	test_majacc   0.44 (  0.44)	Loss_d 0.693 (0.693)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.14 (  0.14)
Test: [  10/  26]	Loss 0.689 (0.691)	test_acc   0.53 (  0.50)	test_minacc   0.67 (  0.52)	test_majacc   0.50 (  0.50)	Loss_d 0.689 (0.691)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.67 (  0.52)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.09 (  0.09)
Test: [  20/  26]	Loss 0.693 (0.691)	test_acc   0.46 (  0.50)	test_minacc   0.47 (  0.52)	test_majacc   0.46 (  0.50)	Loss_d 0.693 (0.691)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.47 (  0.52)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.10 (  0.09)
Test: [  26/  26]	Loss 0.692 (0.691)	test_acc   0.47 (  0.50)	test_minacc   0.44 (  0.51)	test_majacc   0.48 (  0.50)	Loss_d 0.692 (0.691)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.44 (  0.51)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.09 (  0.09)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.32it/s]
Test: [  0/  1]	Loss 0.699 (0.699)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.699 (0.699)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.08 (  0.08)
Test: [  1/  1]	Loss 0.699 (0.699)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.699 (0.699)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.08 (  0.08)
Overall Timing[ 33/  1]	epoch_time 0.0422 (0.0446)	validation_time 0.0004 (0.0006)	train_time 0.0417 (0.0438)
record: (train_acc, test_acc) (0.6322000114321709, 0.6190000176429749)
last accs (train_acc, test_acc) (0.4996000100970268, 0.49900001287460327)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.39it/s] 15%|#5        | 4/26 [00:00<00:01, 16.92it/s] 27%|##6       | 7/26 [00:00<00:00, 20.96it/s] 42%|####2     | 11/26 [00:00<00:00, 27.44it/s] 58%|#####7    | 15/26 [00:00<00:00, 29.28it/s] 73%|#######3  | 19/26 [00:00<00:00, 30.33it/s] 88%|########8 | 23/26 [00:00<00:00, 30.91it/s]100%|##########| 26/26 [00:00<00:00, 26.23it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 884 200
penalty weights 10000.0
args.step pgd_anneal_iters 884 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 885 200
penalty weights 10000.0
args.step pgd_anneal_iters 885 600
dim_v 512
rho, theta 213 tensor(-1.0673e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 886 200
penalty weights 10000.0
args.step pgd_anneal_iters 886 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 887 200
penalty weights 10000.0
args.step pgd_anneal_iters 887 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 888 200
penalty weights 10000.0
args.step pgd_anneal_iters 888 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 889 200
penalty weights 10000.0
args.step pgd_anneal_iters 889 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 890 200
penalty weights 10000.0
args.step pgd_anneal_iters 890 600
dim_v 512
rho, theta 208 tensor(-3.8877e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 891 200
penalty weights 10000.0
args.step pgd_anneal_iters 891 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 892 200
penalty weights 10000.0
args.step pgd_anneal_iters 892 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 893 200
penalty weights 10000.0
args.step pgd_anneal_iters 893 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 894 200
penalty weights 10000.0
args.step pgd_anneal_iters 894 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 895 200
penalty weights 10000.0
args.step pgd_anneal_iters 895 600
dim_v 512
rho, theta 207 tensor(-3.7964e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 896 200
penalty weights 10000.0
args.step pgd_anneal_iters 896 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 897 200
penalty weights 10000.0
args.step pgd_anneal_iters 897 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 898 200
penalty weights 10000.0
args.step pgd_anneal_iters 898 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 899 200
penalty weights 10000.0
args.step pgd_anneal_iters 899 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 900 200
penalty weights 10000.0
args.step pgd_anneal_iters 900 600
dim_v 512
rho, theta 207 tensor(-3.1797e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 901 200
penalty weights 10000.0
args.step pgd_anneal_iters 901 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 902 200
penalty weights 10000.0
args.step pgd_anneal_iters 902 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 903 200
penalty weights 10000.0
args.step pgd_anneal_iters 903 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 904 200
penalty weights 10000.0
args.step pgd_anneal_iters 904 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 905 200
penalty weights 10000.0
args.step pgd_anneal_iters 905 600
dim_v 512
rho, theta 207 tensor(-2.5286e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 906 200
penalty weights 10000.0
args.step pgd_anneal_iters 906 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 907 200
penalty weights 10000.0
args.step pgd_anneal_iters 907 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 908 200
penalty weights 10000.0
args.step pgd_anneal_iters 908 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 909 200
penalty weights 10000.0
args.step pgd_anneal_iters 909 600
final projection at end of training
dim_v 512
rho, theta 209 tensor(-1.9777e-06, device='cuda:0')
Epoch: [34][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  33.19 ( 33.19)	train_acc   0.47 (  0.50)	train_minacc   0.44 (  0.51)	train_majacc   0.48 (  0.50)	train_corr   0.00 (  0.00)	l1 4.7010 (4.7008)	zero_count 0.0000 (70.7850)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02, 11.98it/s] 15%|#5        | 4/26 [00:00<00:01, 14.54it/s] 38%|###8      | 10/26 [00:00<00:00, 30.76it/s]                                                38%|###8      | 10/26 [00:00<00:00, 30.76it/s] 58%|#####7    | 15/26 [00:00<00:00, 33.47it/s] 77%|#######6  | 20/26 [00:00<00:00, 37.03it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 37.03it/s] 96%|#########6| 25/26 [00:00<00:00, 39.12it/s]100%|##########| 26/26 [00:00<00:00, 31.33it/s]
Test: [   0/  26]	Loss 0.693 (0.693)	test_acc   0.45 (  0.45)	test_minacc   0.52 (  0.52)	test_majacc   0.44 (  0.44)	Loss_d 0.693 (0.693)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.14 (  0.14)
Test: [  10/  26]	Loss 0.689 (0.691)	test_acc   0.52 (  0.50)	test_minacc   0.67 (  0.52)	test_majacc   0.50 (  0.50)	Loss_d 0.689 (0.691)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.67 (  0.52)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.09 (  0.09)
Test: [  20/  26]	Loss 0.693 (0.691)	test_acc   0.46 (  0.50)	test_minacc   0.47 (  0.52)	test_majacc   0.46 (  0.50)	Loss_d 0.693 (0.691)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.47 (  0.52)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.09 (  0.08)
Test: [  26/  26]	Loss 0.692 (0.691)	test_acc   0.47 (  0.50)	test_minacc   0.44 (  0.51)	test_majacc   0.48 (  0.50)	Loss_d 0.692 (0.691)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.44 (  0.51)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.08 (  0.08)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.19it/s]
Test: [  0/  1]	Loss 0.698 (0.698)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.698 (0.698)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.08 (  0.08)
Test: [  1/  1]	Loss 0.698 (0.698)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.698 (0.698)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.08 (  0.08)
Overall Timing[ 34/  1]	epoch_time 0.0441 (0.0445)	validation_time 0.0004 (0.0006)	train_time 0.0437 (0.0438)
record: (train_acc, test_acc) (0.6322000114321709, 0.6190000176429749)
last accs (train_acc, test_acc) (0.4995000112652779, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.92it/s] 15%|#5        | 4/26 [00:00<00:01, 20.46it/s] 27%|##6       | 7/26 [00:00<00:00, 23.71it/s] 42%|####2     | 11/26 [00:00<00:00, 26.40it/s] 58%|#####7    | 15/26 [00:00<00:00, 29.01it/s] 69%|######9   | 18/26 [00:00<00:00, 29.26it/s] 85%|########4 | 22/26 [00:00<00:00, 30.54it/s]100%|##########| 26/26 [00:00<00:00, 30.58it/s]100%|##########| 26/26 [00:00<00:00, 26.41it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 910 200
penalty weights 10000.0
args.step pgd_anneal_iters 910 600
dim_v 512
rho, theta 216 tensor(-4.6365e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 911 200
penalty weights 10000.0
args.step pgd_anneal_iters 911 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 912 200
penalty weights 10000.0
args.step pgd_anneal_iters 912 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 913 200
penalty weights 10000.0
args.step pgd_anneal_iters 913 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 914 200
penalty weights 10000.0
args.step pgd_anneal_iters 914 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 915 200
penalty weights 10000.0
args.step pgd_anneal_iters 915 600
dim_v 512
rho, theta 210 tensor(-3.4531e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 916 200
penalty weights 10000.0
args.step pgd_anneal_iters 916 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 917 200
penalty weights 10000.0
args.step pgd_anneal_iters 917 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 918 200
penalty weights 10000.0
args.step pgd_anneal_iters 918 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 919 200
penalty weights 10000.0
args.step pgd_anneal_iters 919 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 920 200
penalty weights 10000.0
args.step pgd_anneal_iters 920 600
dim_v 512
rho, theta 208 tensor(-3.4611e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 921 200
penalty weights 10000.0
args.step pgd_anneal_iters 921 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 922 200
penalty weights 10000.0
args.step pgd_anneal_iters 922 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 923 200
penalty weights 10000.0
args.step pgd_anneal_iters 923 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 924 200
penalty weights 10000.0
args.step pgd_anneal_iters 924 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 925 200
penalty weights 10000.0
args.step pgd_anneal_iters 925 600
dim_v 512
rho, theta 207 tensor(-3.2874e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 926 200
penalty weights 10000.0
args.step pgd_anneal_iters 926 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 927 200
penalty weights 10000.0
args.step pgd_anneal_iters 927 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 928 200
penalty weights 10000.0
args.step pgd_anneal_iters 928 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 929 200
penalty weights 10000.0
args.step pgd_anneal_iters 929 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 930 200
penalty weights 10000.0
args.step pgd_anneal_iters 930 600
dim_v 512
rho, theta 207 tensor(-2.5126e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 931 200
penalty weights 10000.0
args.step pgd_anneal_iters 931 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 932 200
penalty weights 10000.0
args.step pgd_anneal_iters 932 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 933 200
penalty weights 10000.0
args.step pgd_anneal_iters 933 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 934 200
penalty weights 10000.0
args.step pgd_anneal_iters 934 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 935 200
penalty weights 10000.0
args.step pgd_anneal_iters 935 600
dim_v 512
rho, theta 210 tensor(-2.2667e-06, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [35][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  33.19 ( 33.19)	train_acc   0.47 (  0.50)	train_minacc   0.44 (  0.51)	train_majacc   0.48 (  0.50)	train_corr   0.00 (  0.00)	l1 4.7015 (4.7006)	zero_count 0.0000 (70.5510)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.75it/s] 23%|##3       | 6/26 [00:00<00:00, 27.76it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.76it/s] 42%|####2     | 11/26 [00:00<00:00, 35.40it/s] 62%|######1   | 16/26 [00:00<00:00, 39.94it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.94it/s] 81%|########  | 21/26 [00:00<00:00, 38.44it/s]100%|##########| 26/26 [00:00<00:00, 41.02it/s]100%|##########| 26/26 [00:00<00:00, 33.53it/s]
Test: [   0/  26]	Loss 0.693 (0.693)	test_acc   0.45 (  0.45)	test_minacc   0.52 (  0.52)	test_majacc   0.44 (  0.44)	Loss_d 0.693 (0.693)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.13 (  0.13)
Test: [  10/  26]	Loss 0.689 (0.691)	test_acc   0.52 (  0.50)	test_minacc   0.67 (  0.52)	test_majacc   0.49 (  0.50)	Loss_d 0.689 (0.691)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.67 (  0.52)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.08 (  0.08)
Test: [  20/  26]	Loss 0.693 (0.691)	test_acc   0.46 (  0.50)	test_minacc   0.47 (  0.52)	test_majacc   0.46 (  0.49)	Loss_d 0.693 (0.691)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.47 (  0.52)	test_majacc_d   0.46 (  0.49)	test_corr_d   0.09 (  0.08)
Test: [  26/  26]	Loss 0.692 (0.691)	test_acc   0.47 (  0.50)	test_minacc   0.44 (  0.51)	test_majacc   0.48 (  0.50)	Loss_d 0.692 (0.691)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.44 (  0.51)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.08 (  0.08)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.32it/s]
Test: [  0/  1]	Loss 0.698 (0.698)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.698 (0.698)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.08 (  0.08)
Test: [  1/  1]	Loss 0.698 (0.698)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.698 (0.698)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.08 (  0.08)
Overall Timing[ 35/  1]	epoch_time 0.0427 (0.0445)	validation_time 0.0003 (0.0006)	train_time 0.0424 (0.0437)
record: (train_acc, test_acc) (0.6322000114321709, 0.6190000176429749)
last accs (train_acc, test_acc) (0.49880001014471054, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.49it/s] 15%|#5        | 4/26 [00:00<00:01, 18.71it/s] 27%|##6       | 7/26 [00:00<00:00, 23.07it/s] 38%|###8      | 10/26 [00:00<00:00, 25.38it/s] 54%|#####3    | 14/26 [00:00<00:00, 28.60it/s] 65%|######5   | 17/26 [00:00<00:00, 28.39it/s] 77%|#######6  | 20/26 [00:00<00:00, 28.76it/s] 92%|#########2| 24/26 [00:00<00:00, 30.71it/s]100%|##########| 26/26 [00:01<00:00, 25.58it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 936 200
penalty weights 10000.0
args.step pgd_anneal_iters 936 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 937 200
penalty weights 10000.0
args.step pgd_anneal_iters 937 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 938 200
penalty weights 10000.0
args.step pgd_anneal_iters 938 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 939 200
penalty weights 10000.0
args.step pgd_anneal_iters 939 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 940 200
penalty weights 10000.0
args.step pgd_anneal_iters 940 600
dim_v 512
rho, theta 210 tensor(-2.9130e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 941 200
penalty weights 10000.0
args.step pgd_anneal_iters 941 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 942 200
penalty weights 10000.0
args.step pgd_anneal_iters 942 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 943 200
penalty weights 10000.0
args.step pgd_anneal_iters 943 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 944 200
penalty weights 10000.0
args.step pgd_anneal_iters 944 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 945 200
penalty weights 10000.0
args.step pgd_anneal_iters 945 600
dim_v 512
rho, theta 208 tensor(-3.4679e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 946 200
penalty weights 10000.0
args.step pgd_anneal_iters 946 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 947 200
penalty weights 10000.0
args.step pgd_anneal_iters 947 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 948 200
penalty weights 10000.0
args.step pgd_anneal_iters 948 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 949 200
penalty weights 10000.0
args.step pgd_anneal_iters 949 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 950 200
penalty weights 10000.0
args.step pgd_anneal_iters 950 600
dim_v 512
rho, theta 207 tensor(-3.1751e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 951 200
penalty weights 10000.0
args.step pgd_anneal_iters 951 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 952 200
penalty weights 10000.0
args.step pgd_anneal_iters 952 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 953 200
penalty weights 10000.0
args.step pgd_anneal_iters 953 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 954 200
penalty weights 10000.0
args.step pgd_anneal_iters 954 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 955 200
penalty weights 10000.0
args.step pgd_anneal_iters 955 600
dim_v 512
rho, theta 207 tensor(-2.5378e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 956 200
penalty weights 10000.0
args.step pgd_anneal_iters 956 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 957 200
penalty weights 10000.0
args.step pgd_anneal_iters 957 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 958 200
penalty weights 10000.0
args.step pgd_anneal_iters 958 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 959 200
penalty weights 10000.0
args.step pgd_anneal_iters 959 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 960 200
penalty weights 10000.0
args.step pgd_anneal_iters 960 600
dim_v 512
rho, theta 211 tensor(-2.2425e-06, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 961 200
penalty weights 10000.0
args.step pgd_anneal_iters 961 600
final projection at end of training
dim_v 512
rho, theta 212 tensor(-4.4326e-07, device='cuda:0')
Epoch: [36][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  33.19 ( 33.19)	train_acc   0.47 (  0.50)	train_minacc   0.44 (  0.51)	train_majacc   0.48 (  0.50)	train_corr   0.00 (  0.00)	l1 4.6974 (4.7003)	zero_count 300.0000 (66.5070)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 15%|#5        | 4/26 [00:00<00:00, 26.71it/s] 35%|###4      | 9/26 [00:00<00:00, 36.92it/s]                                               35%|###4      | 9/26 [00:00<00:00, 36.92it/s] 54%|#####3    | 14/26 [00:00<00:00, 41.30it/s] 73%|#######3  | 19/26 [00:00<00:00, 44.21it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 44.21it/s] 92%|#########2| 24/26 [00:00<00:00, 43.27it/s]100%|##########| 26/26 [00:00<00:00, 37.78it/s]
Test: [   0/  26]	Loss 0.693 (0.693)	test_acc   0.45 (  0.45)	test_minacc   0.52 (  0.52)	test_majacc   0.44 (  0.44)	Loss_d 0.693 (0.693)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.13 (  0.13)
Test: [  10/  26]	Loss 0.690 (0.691)	test_acc   0.51 (  0.50)	test_minacc   0.67 (  0.53)	test_majacc   0.49 (  0.50)	Loss_d 0.690 (0.691)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.67 (  0.53)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.08 (  0.08)
Test: [  20/  26]	Loss 0.693 (0.691)	test_acc   0.46 (  0.50)	test_minacc   0.47 (  0.52)	test_majacc   0.46 (  0.49)	Loss_d 0.693 (0.691)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.47 (  0.52)	test_majacc_d   0.46 (  0.49)	test_corr_d   0.08 (  0.08)
Test: [  26/  26]	Loss 0.692 (0.691)	test_acc   0.47 (  0.50)	test_minacc   0.44 (  0.51)	test_majacc   0.48 (  0.50)	Loss_d 0.692 (0.691)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.44 (  0.51)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.08 (  0.08)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.22it/s]
Test: [  0/  1]	Loss 0.697 (0.697)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.697 (0.697)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.07 (  0.07)
Test: [  1/  1]	Loss 0.697 (0.697)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.697 (0.697)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.07 (  0.07)
Overall Timing[ 36/  1]	epoch_time 0.0436 (0.0445)	validation_time 0.0005 (0.0006)	train_time 0.0431 (0.0437)
record: (train_acc, test_acc) (0.6322000114321709, 0.6190000176429749)
last accs (train_acc, test_acc) (0.49890001130104067, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.80it/s] 15%|#5        | 4/26 [00:00<00:01, 16.19it/s] 31%|###       | 8/26 [00:00<00:00, 24.29it/s] 42%|####2     | 11/26 [00:00<00:00, 26.19it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.32it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.61it/s] 88%|########8 | 23/26 [00:00<00:00, 31.60it/s]100%|##########| 26/26 [00:01<00:00, 25.72it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 962 200
penalty weights 10000.0
args.step pgd_anneal_iters 962 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 963 200
penalty weights 10000.0
args.step pgd_anneal_iters 963 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 964 200
penalty weights 10000.0
args.step pgd_anneal_iters 964 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 965 200
penalty weights 10000.0
args.step pgd_anneal_iters 965 600
dim_v 512
rho, theta 210 tensor(-2.1763e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 966 200
penalty weights 10000.0
args.step pgd_anneal_iters 966 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 967 200
penalty weights 10000.0
args.step pgd_anneal_iters 967 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 968 200
penalty weights 10000.0
args.step pgd_anneal_iters 968 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 969 200
penalty weights 10000.0
args.step pgd_anneal_iters 969 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 970 200
penalty weights 10000.0
args.step pgd_anneal_iters 970 600
dim_v 512
rho, theta 208 tensor(-3.2557e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 971 200
penalty weights 10000.0
args.step pgd_anneal_iters 971 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 972 200
penalty weights 10000.0
args.step pgd_anneal_iters 972 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 973 200
penalty weights 10000.0
args.step pgd_anneal_iters 973 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 974 200
penalty weights 10000.0
args.step pgd_anneal_iters 974 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 975 200
penalty weights 10000.0
args.step pgd_anneal_iters 975 600
dim_v 512
rho, theta 207 tensor(-2.9871e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 976 200
penalty weights 10000.0
args.step pgd_anneal_iters 976 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 977 200
penalty weights 10000.0
args.step pgd_anneal_iters 977 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 978 200
penalty weights 10000.0
args.step pgd_anneal_iters 978 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 979 200
penalty weights 10000.0
args.step pgd_anneal_iters 979 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 980 200
penalty weights 10000.0
args.step pgd_anneal_iters 980 600
dim_v 512
rho, theta 207 tensor(-2.6341e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 981 200
penalty weights 10000.0
args.step pgd_anneal_iters 981 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 982 200
penalty weights 10000.0
args.step pgd_anneal_iters 982 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 983 200
penalty weights 10000.0
args.step pgd_anneal_iters 983 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 984 200
penalty weights 10000.0
args.step pgd_anneal_iters 984 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 985 200
penalty weights 10000.0
args.step pgd_anneal_iters 985 600
dim_v 512
rho, theta 212 tensor(-2.2140e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 986 200
penalty weights 10000.0
args.step pgd_anneal_iters 986 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 987 200
penalty weights 10000.0
args.step pgd_anneal_iters 987 600
final projection at end of training
dim_v 512
rho, theta 211 tensor(-8.9295e-07, device='cuda:0')
Epoch: [37][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  33.19 ( 33.19)	train_acc   0.47 (  0.50)	train_minacc   0.44 (  0.51)	train_majacc   0.48 (  0.50)	train_corr   0.00 (  0.00)	l1 4.6985 (4.7001)	zero_count 0.0000 (70.5900)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.59it/s] 23%|##3       | 6/26 [00:00<00:00, 29.13it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.13it/s] 42%|####2     | 11/26 [00:00<00:00, 35.27it/s] 62%|######1   | 16/26 [00:00<00:00, 39.97it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.97it/s] 81%|########  | 21/26 [00:00<00:00, 38.75it/s]100%|##########| 26/26 [00:00<00:00, 41.84it/s]100%|##########| 26/26 [00:00<00:00, 34.52it/s]
Test: [   0/  26]	Loss 0.693 (0.693)	test_acc   0.45 (  0.45)	test_minacc   0.52 (  0.52)	test_majacc   0.44 (  0.44)	Loss_d 0.693 (0.693)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.13 (  0.13)
Test: [  10/  26]	Loss 0.690 (0.692)	test_acc   0.52 (  0.50)	test_minacc   0.67 (  0.53)	test_majacc   0.49 (  0.50)	Loss_d 0.690 (0.692)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.67 (  0.53)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.08 (  0.08)
Test: [  20/  26]	Loss 0.693 (0.692)	test_acc   0.46 (  0.50)	test_minacc   0.47 (  0.52)	test_majacc   0.46 (  0.49)	Loss_d 0.693 (0.692)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.47 (  0.52)	test_majacc_d   0.46 (  0.49)	test_corr_d   0.08 (  0.07)
Test: [  26/  26]	Loss 0.692 (0.692)	test_acc   0.47 (  0.50)	test_minacc   0.44 (  0.51)	test_majacc   0.48 (  0.50)	Loss_d 0.692 (0.692)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.44 (  0.51)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.07 (  0.07)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.17it/s]
Test: [  0/  1]	Loss 0.697 (0.697)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.697 (0.697)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.07 (  0.07)
Test: [  1/  1]	Loss 0.697 (0.697)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.697 (0.697)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.07 (  0.07)
Overall Timing[ 37/  1]	epoch_time 0.0413 (0.0444)	validation_time 0.0004 (0.0006)	train_time 0.0410 (0.0436)
record: (train_acc, test_acc) (0.6322000114321709, 0.6190000176429749)
last accs (train_acc, test_acc) (0.4992000101208687, 0.5020000338554382)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.65it/s] 19%|#9        | 5/26 [00:00<00:00, 22.85it/s] 35%|###4      | 9/26 [00:00<00:00, 27.20it/s] 50%|#####     | 13/26 [00:00<00:00, 28.95it/s] 62%|######1   | 16/26 [00:00<00:00, 29.20it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.05it/s] 88%|########8 | 23/26 [00:00<00:00, 29.87it/s]100%|##########| 26/26 [00:00<00:00, 27.15it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 988 200
penalty weights 10000.0
args.step pgd_anneal_iters 988 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 989 200
penalty weights 10000.0
args.step pgd_anneal_iters 989 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 990 200
penalty weights 10000.0
args.step pgd_anneal_iters 990 600
dim_v 512
rho, theta 214 tensor(-1.4349e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 991 200
penalty weights 10000.0
args.step pgd_anneal_iters 991 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 992 200
penalty weights 10000.0
args.step pgd_anneal_iters 992 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 993 200
penalty weights 10000.0
args.step pgd_anneal_iters 993 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 994 200
penalty weights 10000.0
args.step pgd_anneal_iters 994 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 995 200
penalty weights 10000.0
args.step pgd_anneal_iters 995 600
dim_v 512
rho, theta 209 tensor(-3.0904e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 996 200
penalty weights 10000.0
args.step pgd_anneal_iters 996 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 997 200
penalty weights 10000.0
args.step pgd_anneal_iters 997 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 998 200
penalty weights 10000.0
args.step pgd_anneal_iters 998 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 999 200
penalty weights 10000.0
args.step pgd_anneal_iters 999 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1000 200
penalty weights 10000.0
args.step pgd_anneal_iters 1000 600
dim_v 512
rho, theta 208 tensor(-2.8907e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1001 200
penalty weights 10000.0
args.step pgd_anneal_iters 1001 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1002 200
penalty weights 10000.0
args.step pgd_anneal_iters 1002 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1003 200
penalty weights 10000.0
args.step pgd_anneal_iters 1003 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1004 200
penalty weights 10000.0
args.step pgd_anneal_iters 1004 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1005 200
penalty weights 10000.0
args.step pgd_anneal_iters 1005 600
dim_v 512
rho, theta 207 tensor(-2.5722e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1006 200
penalty weights 10000.0
args.step pgd_anneal_iters 1006 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1007 200
penalty weights 10000.0
args.step pgd_anneal_iters 1007 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1008 200
penalty weights 10000.0
args.step pgd_anneal_iters 1008 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1009 200
penalty weights 10000.0
args.step pgd_anneal_iters 1009 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1010 200
penalty weights 10000.0
args.step pgd_anneal_iters 1010 600
dim_v 512
rho, theta 210 tensor(-2.1808e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1011 200
penalty weights 10000.0
args.step pgd_anneal_iters 1011 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1012 200
penalty weights 10000.0
args.step pgd_anneal_iters 1012 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1013 200
penalty weights 10000.0
args.step pgd_anneal_iters 1013 600
final projection at end of training
dim_v 512
rho, theta 211 tensor(-1.3158e-06, device='cuda:0')
Epoch: [38][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  33.19 ( 33.19)	train_acc   0.47 (  0.50)	train_minacc   0.44 (  0.51)	train_majacc   0.48 (  0.50)	train_corr   0.00 (  0.00)	l1 4.6995 (4.7000)	zero_count 0.0000 (70.4730)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.35it/s] 23%|##3       | 6/26 [00:00<00:01, 17.10it/s]                                               23%|##3       | 6/26 [00:00<00:01, 17.10it/s] 42%|####2     | 11/26 [00:00<00:00, 26.14it/s] 62%|######1   | 16/26 [00:00<00:00, 32.67it/s]                                                62%|######1   | 16/26 [00:00<00:00, 32.67it/s] 81%|########  | 21/26 [00:00<00:00, 35.93it/s]100%|##########| 26/26 [00:00<00:00, 39.62it/s]100%|##########| 26/26 [00:00<00:00, 28.33it/s]
Test: [   0/  26]	Loss 0.693 (0.693)	test_acc   0.45 (  0.45)	test_minacc   0.52 (  0.52)	test_majacc   0.44 (  0.44)	Loss_d 0.693 (0.693)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.13 (  0.13)
Test: [  10/  26]	Loss 0.690 (0.692)	test_acc   0.51 (  0.50)	test_minacc   0.67 (  0.53)	test_majacc   0.49 (  0.50)	Loss_d 0.690 (0.692)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.67 (  0.53)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.08 (  0.07)
Test: [  20/  26]	Loss 0.693 (0.692)	test_acc   0.46 (  0.50)	test_minacc   0.47 (  0.52)	test_majacc   0.46 (  0.49)	Loss_d 0.693 (0.692)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.47 (  0.52)	test_majacc_d   0.46 (  0.49)	test_corr_d   0.08 (  0.07)
Test: [  26/  26]	Loss 0.693 (0.692)	test_acc   0.47 (  0.50)	test_minacc   0.44 (  0.51)	test_majacc   0.48 (  0.50)	Loss_d 0.693 (0.692)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.44 (  0.51)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.07 (  0.07)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.43it/s]
Test: [  0/  1]	Loss 0.697 (0.697)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.697 (0.697)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.07 (  0.07)
Test: [  1/  1]	Loss 0.697 (0.697)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.697 (0.697)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.07 (  0.07)
Overall Timing[ 38/  1]	epoch_time 0.0416 (0.0443)	validation_time 0.0006 (0.0006)	train_time 0.0409 (0.0436)
record: (train_acc, test_acc) (0.6322000114321709, 0.6190000176429749)
last accs (train_acc, test_acc) (0.4988000136315823, 0.503000020980835)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.95it/s] 23%|##3       | 6/26 [00:00<00:00, 28.71it/s] 38%|###8      | 10/26 [00:00<00:00, 30.23it/s] 50%|#####     | 13/26 [00:00<00:00, 30.06it/s] 65%|######5   | 17/26 [00:00<00:00, 30.69it/s] 81%|########  | 21/26 [00:00<00:00, 32.27it/s] 96%|#########6| 25/26 [00:00<00:00, 31.86it/s]100%|##########| 26/26 [00:00<00:00, 28.92it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1014 200
penalty weights 10000.0
args.step pgd_anneal_iters 1014 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1015 200
penalty weights 10000.0
args.step pgd_anneal_iters 1015 600
dim_v 512
rho, theta 218 tensor(-7.1199e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1016 200
penalty weights 10000.0
args.step pgd_anneal_iters 1016 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1017 200
penalty weights 10000.0
args.step pgd_anneal_iters 1017 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1018 200
penalty weights 10000.0
args.step pgd_anneal_iters 1018 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1019 200
penalty weights 10000.0
args.step pgd_anneal_iters 1019 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1020 200
penalty weights 10000.0
args.step pgd_anneal_iters 1020 600
dim_v 512
rho, theta 208 tensor(-3.0139e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1021 200
penalty weights 10000.0
args.step pgd_anneal_iters 1021 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1022 200
penalty weights 10000.0
args.step pgd_anneal_iters 1022 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1023 200
penalty weights 10000.0
args.step pgd_anneal_iters 1023 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1024 200
penalty weights 10000.0
args.step pgd_anneal_iters 1024 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1025 200
penalty weights 10000.0
args.step pgd_anneal_iters 1025 600
dim_v 512
rho, theta 207 tensor(-2.8496e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1026 200
penalty weights 10000.0
args.step pgd_anneal_iters 1026 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1027 200
penalty weights 10000.0
args.step pgd_anneal_iters 1027 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1028 200
penalty weights 10000.0
args.step pgd_anneal_iters 1028 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1029 200
penalty weights 10000.0
args.step pgd_anneal_iters 1029 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1030 200
penalty weights 10000.0
args.step pgd_anneal_iters 1030 600
dim_v 512
rho, theta 206 tensor(-2.6468e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1031 200
penalty weights 10000.0
args.step pgd_anneal_iters 1031 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1032 200
penalty weights 10000.0
args.step pgd_anneal_iters 1032 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1033 200
penalty weights 10000.0
args.step pgd_anneal_iters 1033 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1034 200
penalty weights 10000.0
args.step pgd_anneal_iters 1034 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1035 200
penalty weights 10000.0
args.step pgd_anneal_iters 1035 600
dim_v 512
rho, theta 206 tensor(-2.1170e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1036 200
penalty weights 10000.0
args.step pgd_anneal_iters 1036 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1037 200
penalty weights 10000.0
args.step pgd_anneal_iters 1037 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1038 200
penalty weights 10000.0
args.step pgd_anneal_iters 1038 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1039 200
penalty weights 10000.0
args.step pgd_anneal_iters 1039 600
final projection at end of training
dim_v 512
rho, theta 212 tensor(-1.5313e-06, device='cuda:0')
Epoch: [39][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  33.19 ( 33.19)	train_acc   0.47 (  0.50)	train_minacc   0.44 (  0.51)	train_majacc   0.48 (  0.50)	train_corr   0.00 (  0.00)	l1 4.6999 (4.7001)	zero_count 0.0000 (70.5900)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.78it/s] 27%|##6       | 7/26 [00:00<00:00, 28.26it/s]                                               27%|##6       | 7/26 [00:00<00:00, 28.26it/s] 50%|#####     | 13/26 [00:00<00:00, 37.89it/s] 73%|#######3  | 19/26 [00:00<00:00, 43.66it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 43.66it/s] 96%|#########6| 25/26 [00:00<00:00, 44.06it/s]100%|##########| 26/26 [00:00<00:00, 35.56it/s]
Test: [   0/  26]	Loss 0.693 (0.693)	test_acc   0.45 (  0.45)	test_minacc   0.52 (  0.52)	test_majacc   0.44 (  0.44)	Loss_d 0.693 (0.693)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.13 (  0.13)
Test: [  10/  26]	Loss 0.690 (0.692)	test_acc   0.51 (  0.50)	test_minacc   0.69 (  0.53)	test_majacc   0.48 (  0.50)	Loss_d 0.690 (0.692)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.69 (  0.53)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.08 (  0.07)
Test: [  20/  26]	Loss 0.693 (0.692)	test_acc   0.46 (  0.50)	test_minacc   0.47 (  0.52)	test_majacc   0.46 (  0.49)	Loss_d 0.693 (0.692)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.47 (  0.52)	test_majacc_d   0.46 (  0.49)	test_corr_d   0.07 (  0.07)
Test: [  26/  26]	Loss 0.693 (0.692)	test_acc   0.47 (  0.50)	test_minacc   0.44 (  0.52)	test_majacc   0.48 (  0.50)	Loss_d 0.693 (0.692)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.44 (  0.52)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.07 (  0.07)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.35it/s]
Test: [  0/  1]	Loss 0.696 (0.696)	test_acc   0.50 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.696 (0.696)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.06 (  0.06)
Test: [  1/  1]	Loss 0.696 (0.696)	test_acc   0.50 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.696 (0.696)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.06 (  0.06)
Overall Timing[ 39/  1]	epoch_time 0.0431 (0.0443)	validation_time 0.0003 (0.0006)	train_time 0.0427 (0.0435)
record: (train_acc, test_acc) (0.6322000114321709, 0.6190000176429749)
last accs (train_acc, test_acc) (0.4989000124633312, 0.5049999952316284)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.26it/s] 19%|#9        | 5/26 [00:00<00:01, 20.11it/s] 35%|###4      | 9/26 [00:00<00:00, 25.12it/s] 50%|#####     | 13/26 [00:00<00:00, 27.74it/s] 62%|######1   | 16/26 [00:00<00:00, 28.42it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.63it/s] 92%|#########2| 24/26 [00:00<00:00, 30.55it/s]100%|##########| 26/26 [00:01<00:00, 25.98it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1040 200
penalty weights 10000.0
args.step pgd_anneal_iters 1040 600
dim_v 512
rho, theta 220 tensor(-3.3012e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1041 200
penalty weights 10000.0
args.step pgd_anneal_iters 1041 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1042 200
penalty weights 10000.0
args.step pgd_anneal_iters 1042 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1043 200
penalty weights 10000.0
args.step pgd_anneal_iters 1043 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1044 200
penalty weights 10000.0
args.step pgd_anneal_iters 1044 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1045 200
penalty weights 10000.0
args.step pgd_anneal_iters 1045 600
dim_v 512
rho, theta 210 tensor(-2.6983e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1046 200
penalty weights 10000.0
args.step pgd_anneal_iters 1046 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1047 200
penalty weights 10000.0
args.step pgd_anneal_iters 1047 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1048 200
penalty weights 10000.0
args.step pgd_anneal_iters 1048 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1049 200
penalty weights 10000.0
args.step pgd_anneal_iters 1049 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1050 200
penalty weights 10000.0
args.step pgd_anneal_iters 1050 600
dim_v 512
rho, theta 207 tensor(-2.8060e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1051 200
penalty weights 10000.0
args.step pgd_anneal_iters 1051 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1052 200
penalty weights 10000.0
args.step pgd_anneal_iters 1052 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1053 200
penalty weights 10000.0
args.step pgd_anneal_iters 1053 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1054 200
penalty weights 10000.0
args.step pgd_anneal_iters 1054 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1055 200
penalty weights 10000.0
args.step pgd_anneal_iters 1055 600
dim_v 512
rho, theta 206 tensor(-2.6491e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1056 200
penalty weights 10000.0
args.step pgd_anneal_iters 1056 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1057 200
penalty weights 10000.0
args.step pgd_anneal_iters 1057 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1058 200
penalty weights 10000.0
args.step pgd_anneal_iters 1058 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1059 200
penalty weights 10000.0
args.step pgd_anneal_iters 1059 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1060 200
penalty weights 10000.0
args.step pgd_anneal_iters 1060 600
dim_v 512
rho, theta 206 tensor(-2.1239e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1061 200
penalty weights 10000.0
args.step pgd_anneal_iters 1061 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1062 200
penalty weights 10000.0
args.step pgd_anneal_iters 1062 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1063 200
penalty weights 10000.0
args.step pgd_anneal_iters 1063 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1064 200
penalty weights 10000.0
args.step pgd_anneal_iters 1064 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1065 200
penalty weights 10000.0
args.step pgd_anneal_iters 1065 600
dim_v 512
rho, theta 212 tensor(-1.8379e-06, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [40][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  33.19 ( 33.19)	train_acc   0.47 (  0.50)	train_minacc   0.44 (  0.52)	train_majacc   0.48 (  0.50)	train_corr   0.00 (  0.00)	l1 4.7004 (4.7000)	zero_count 0.0000 (70.3950)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.24it/s] 23%|##3       | 6/26 [00:00<00:00, 30.23it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.23it/s] 42%|####2     | 11/26 [00:00<00:00, 37.28it/s] 62%|######1   | 16/26 [00:00<00:00, 41.60it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.60it/s] 81%|########  | 21/26 [00:00<00:00, 41.00it/s]100%|##########| 26/26 [00:00<00:00, 37.08it/s]
Test: [   0/  26]	Loss 0.693 (0.693)	test_acc   0.45 (  0.45)	test_minacc   0.52 (  0.52)	test_majacc   0.44 (  0.44)	Loss_d 0.693 (0.693)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.12 (  0.12)
Test: [  10/  26]	Loss 0.690 (0.692)	test_acc   0.51 (  0.50)	test_minacc   0.69 (  0.53)	test_majacc   0.48 (  0.49)	Loss_d 0.690 (0.692)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.69 (  0.53)	test_majacc_d   0.48 (  0.49)	test_corr_d   0.08 (  0.07)
Test: [  20/  26]	Loss 0.693 (0.692)	test_acc   0.46 (  0.50)	test_minacc   0.47 (  0.52)	test_majacc   0.46 (  0.49)	Loss_d 0.693 (0.692)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.47 (  0.52)	test_majacc_d   0.46 (  0.49)	test_corr_d   0.07 (  0.07)
Test: [  26/  26]	Loss 0.693 (0.692)	test_acc   0.47 (  0.50)	test_minacc   0.44 (  0.52)	test_majacc   0.48 (  0.50)	Loss_d 0.693 (0.692)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.44 (  0.52)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.07 (  0.06)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.60it/s]
Test: [  0/  1]	Loss 0.696 (0.696)	test_acc   0.50 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.696 (0.696)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.06 (  0.06)
Test: [  1/  1]	Loss 0.696 (0.696)	test_acc   0.50 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.696 (0.696)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.06 (  0.06)
Overall Timing[ 40/  1]	epoch_time 0.0405 (0.0442)	validation_time 0.0004 (0.0006)	train_time 0.0401 (0.0435)
record: (train_acc, test_acc) (0.6322000114321709, 0.6190000176429749)
last accs (train_acc, test_acc) (0.4984000101685524, 0.5049999952316284)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.31it/s] 19%|#9        | 5/26 [00:00<00:01, 19.97it/s] 35%|###4      | 9/26 [00:00<00:00, 26.22it/s] 50%|#####     | 13/26 [00:00<00:00, 29.30it/s] 65%|######5   | 17/26 [00:00<00:00, 29.86it/s] 81%|########  | 21/26 [00:00<00:00, 30.32it/s] 96%|#########6| 25/26 [00:00<00:00, 31.49it/s]100%|##########| 26/26 [00:00<00:00, 27.69it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1066 200
penalty weights 10000.0
args.step pgd_anneal_iters 1066 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1067 200
penalty weights 10000.0
args.step pgd_anneal_iters 1067 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1068 200
penalty weights 10000.0
args.step pgd_anneal_iters 1068 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1069 200
penalty weights 10000.0
args.step pgd_anneal_iters 1069 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1070 200
penalty weights 10000.0
args.step pgd_anneal_iters 1070 600
dim_v 512
rho, theta 211 tensor(-2.3504e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1071 200
penalty weights 10000.0
args.step pgd_anneal_iters 1071 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1072 200
penalty weights 10000.0
args.step pgd_anneal_iters 1072 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1073 200
penalty weights 10000.0
args.step pgd_anneal_iters 1073 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1074 200
penalty weights 10000.0
args.step pgd_anneal_iters 1074 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1075 200
penalty weights 10000.0
args.step pgd_anneal_iters 1075 600
dim_v 512
rho, theta 206 tensor(-3.0061e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1076 200
penalty weights 10000.0
args.step pgd_anneal_iters 1076 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1077 200
penalty weights 10000.0
args.step pgd_anneal_iters 1077 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1078 200
penalty weights 10000.0
args.step pgd_anneal_iters 1078 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1079 200
penalty weights 10000.0
args.step pgd_anneal_iters 1079 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1080 200
penalty weights 10000.0
args.step pgd_anneal_iters 1080 600
dim_v 512
rho, theta 207 tensor(-2.3750e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1081 200
penalty weights 10000.0
args.step pgd_anneal_iters 1081 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1082 200
penalty weights 10000.0
args.step pgd_anneal_iters 1082 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1083 200
penalty weights 10000.0
args.step pgd_anneal_iters 1083 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1084 200
penalty weights 10000.0
args.step pgd_anneal_iters 1084 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1085 200
penalty weights 10000.0
args.step pgd_anneal_iters 1085 600
dim_v 512
rho, theta 206 tensor(-2.2990e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1086 200
penalty weights 10000.0
args.step pgd_anneal_iters 1086 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1087 200
penalty weights 10000.0
args.step pgd_anneal_iters 1087 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1088 200
penalty weights 10000.0
args.step pgd_anneal_iters 1088 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1089 200
penalty weights 10000.0
args.step pgd_anneal_iters 1089 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1090 200
penalty weights 10000.0
args.step pgd_anneal_iters 1090 600
dim_v 512
rho, theta 213 tensor(-1.8383e-06, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1091 200
penalty weights 10000.0
args.step pgd_anneal_iters 1091 600
final projection at end of training
dim_v 512
rho, theta 213 tensor(-3.7657e-07, device='cuda:0')
Epoch: [41][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  33.19 ( 33.19)	train_acc   0.47 (  0.50)	train_minacc   0.44 (  0.52)	train_majacc   0.48 (  0.50)	train_corr   0.00 (  0.00)	l1 4.6974 (4.6998)	zero_count 298.0000 (66.3790)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.24it/s] 27%|##6       | 7/26 [00:00<00:00, 31.41it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.41it/s] 46%|####6     | 12/26 [00:00<00:00, 36.62it/s] 65%|######5   | 17/26 [00:00<00:00, 39.29it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.29it/s] 85%|########4 | 22/26 [00:00<00:00, 40.04it/s]100%|##########| 26/26 [00:00<00:00, 35.04it/s]
Test: [   0/  26]	Loss 0.693 (0.693)	test_acc   0.45 (  0.45)	test_minacc   0.52 (  0.52)	test_majacc   0.44 (  0.44)	Loss_d 0.693 (0.693)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.12 (  0.12)
Test: [  10/  26]	Loss 0.690 (0.692)	test_acc   0.51 (  0.50)	test_minacc   0.69 (  0.53)	test_majacc   0.48 (  0.49)	Loss_d 0.690 (0.692)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.69 (  0.53)	test_majacc_d   0.48 (  0.49)	test_corr_d   0.07 (  0.07)
Test: [  20/  26]	Loss 0.693 (0.692)	test_acc   0.46 (  0.50)	test_minacc   0.47 (  0.52)	test_majacc   0.46 (  0.49)	Loss_d 0.693 (0.692)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.47 (  0.52)	test_majacc_d   0.46 (  0.49)	test_corr_d   0.07 (  0.06)
Test: [  26/  26]	Loss 0.693 (0.692)	test_acc   0.47 (  0.50)	test_minacc   0.44 (  0.52)	test_majacc   0.48 (  0.49)	Loss_d 0.693 (0.692)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.44 (  0.52)	test_majacc_d   0.48 (  0.49)	test_corr_d   0.07 (  0.06)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.84it/s]
Test: [  0/  1]	Loss 0.696 (0.696)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.51 (  0.51)	Loss_d 0.696 (0.696)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.06 (  0.06)
Test: [  1/  1]	Loss 0.696 (0.696)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.51 (  0.51)	Loss_d 0.696 (0.696)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.06 (  0.06)
Overall Timing[ 41/  1]	epoch_time 0.0400 (0.0441)	validation_time 0.0004 (0.0006)	train_time 0.0396 (0.0434)
record: (train_acc, test_acc) (0.6322000114321709, 0.6190000176429749)
last accs (train_acc, test_acc) (0.4971000079214573, 0.5080000162124634)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.87it/s] 15%|#5        | 4/26 [00:00<00:01, 19.18it/s] 31%|###       | 8/26 [00:00<00:00, 26.41it/s] 42%|####2     | 11/26 [00:00<00:00, 27.67it/s] 58%|#####7    | 15/26 [00:00<00:00, 29.24it/s] 73%|#######3  | 19/26 [00:00<00:00, 30.32it/s] 88%|########8 | 23/26 [00:00<00:00, 32.04it/s]100%|##########| 26/26 [00:00<00:00, 26.99it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1092 200
penalty weights 10000.0
args.step pgd_anneal_iters 1092 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1093 200
penalty weights 10000.0
args.step pgd_anneal_iters 1093 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1094 200
penalty weights 10000.0
args.step pgd_anneal_iters 1094 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1095 200
penalty weights 10000.0
args.step pgd_anneal_iters 1095 600
dim_v 512
rho, theta 212 tensor(-1.7842e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1096 200
penalty weights 10000.0
args.step pgd_anneal_iters 1096 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1097 200
penalty weights 10000.0
args.step pgd_anneal_iters 1097 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1098 200
penalty weights 10000.0
args.step pgd_anneal_iters 1098 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1099 200
penalty weights 10000.0
args.step pgd_anneal_iters 1099 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1100 200
penalty weights 10000.0
args.step pgd_anneal_iters 1100 600
dim_v 512
rho, theta 206 tensor(-2.9140e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1101 200
penalty weights 10000.0
args.step pgd_anneal_iters 1101 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1102 200
penalty weights 10000.0
args.step pgd_anneal_iters 1102 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1103 200
penalty weights 10000.0
args.step pgd_anneal_iters 1103 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1104 200
penalty weights 10000.0
args.step pgd_anneal_iters 1104 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1105 200
penalty weights 10000.0
args.step pgd_anneal_iters 1105 600
dim_v 512
rho, theta 208 tensor(-2.3294e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1106 200
penalty weights 10000.0
args.step pgd_anneal_iters 1106 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1107 200
penalty weights 10000.0
args.step pgd_anneal_iters 1107 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1108 200
penalty weights 10000.0
args.step pgd_anneal_iters 1108 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1109 200
penalty weights 10000.0
args.step pgd_anneal_iters 1109 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1110 200
penalty weights 10000.0
args.step pgd_anneal_iters 1110 600
dim_v 512
rho, theta 206 tensor(-2.3519e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1111 200
penalty weights 10000.0
args.step pgd_anneal_iters 1111 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1112 200
penalty weights 10000.0
args.step pgd_anneal_iters 1112 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1113 200
penalty weights 10000.0
args.step pgd_anneal_iters 1113 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1114 200
penalty weights 10000.0
args.step pgd_anneal_iters 1114 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1115 200
penalty weights 10000.0
args.step pgd_anneal_iters 1115 600
dim_v 512
rho, theta 214 tensor(-1.8075e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1116 200
penalty weights 10000.0
args.step pgd_anneal_iters 1116 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1117 200
penalty weights 10000.0
args.step pgd_anneal_iters 1117 600
final projection at end of training
dim_v 512
rho, theta 212 tensor(-7.8801e-07, device='cuda:0')
Epoch: [42][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  33.19 ( 33.19)	train_acc   0.47 (  0.50)	train_minacc   0.44 (  0.52)	train_majacc   0.48 (  0.49)	train_corr   0.00 (  0.00)	l1 4.6984 (4.6997)	zero_count 0.0000 (70.3950)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.45it/s] 27%|##6       | 7/26 [00:00<00:00, 32.74it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.74it/s] 46%|####6     | 12/26 [00:00<00:00, 38.87it/s] 65%|######5   | 17/26 [00:00<00:00, 41.49it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.49it/s] 85%|########4 | 22/26 [00:00<00:00, 39.96it/s]100%|##########| 26/26 [00:00<00:00, 36.93it/s]
Test: [   0/  26]	Loss 0.693 (0.693)	test_acc   0.45 (  0.45)	test_minacc   0.52 (  0.52)	test_majacc   0.44 (  0.44)	Loss_d 0.693 (0.693)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.12 (  0.12)
Test: [  10/  26]	Loss 0.690 (0.692)	test_acc   0.50 (  0.49)	test_minacc   0.69 (  0.53)	test_majacc   0.47 (  0.49)	Loss_d 0.690 (0.692)	test_acc_d   0.50 (  0.49)	test_minacc_d   0.69 (  0.53)	test_majacc_d   0.47 (  0.49)	test_corr_d   0.07 (  0.07)
Test: [  20/  26]	Loss 0.693 (0.692)	test_acc   0.46 (  0.50)	test_minacc   0.47 (  0.52)	test_majacc   0.46 (  0.49)	Loss_d 0.693 (0.692)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.47 (  0.52)	test_majacc_d   0.46 (  0.49)	test_corr_d   0.07 (  0.06)
Test: [  26/  26]	Loss 0.693 (0.692)	test_acc   0.47 (  0.50)	test_minacc   0.44 (  0.52)	test_majacc   0.48 (  0.49)	Loss_d 0.693 (0.692)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.44 (  0.52)	test_majacc_d   0.48 (  0.49)	test_corr_d   0.06 (  0.06)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.83it/s]
Test: [  0/  1]	Loss 0.696 (0.696)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.51 (  0.51)	Loss_d 0.696 (0.696)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.06 (  0.06)
Test: [  1/  1]	Loss 0.696 (0.696)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.51 (  0.51)	Loss_d 0.696 (0.696)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.06 (  0.06)
Overall Timing[ 42/  1]	epoch_time 0.0386 (0.0440)	validation_time 0.0003 (0.0006)	train_time 0.0383 (0.0432)
record: (train_acc, test_acc) (0.6322000114321709, 0.6190000176429749)
last accs (train_acc, test_acc) (0.4966000114381313, 0.5080000162124634)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.67it/s] 19%|#9        | 5/26 [00:00<00:00, 22.64it/s] 35%|###4      | 9/26 [00:00<00:00, 26.30it/s] 50%|#####     | 13/26 [00:00<00:00, 27.54it/s] 65%|######5   | 17/26 [00:00<00:00, 29.46it/s] 77%|#######6  | 20/26 [00:00<00:00, 28.92it/s] 88%|########8 | 23/26 [00:00<00:00, 28.81it/s]100%|##########| 26/26 [00:00<00:00, 26.07it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1118 200
penalty weights 10000.0
args.step pgd_anneal_iters 1118 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1119 200
penalty weights 10000.0
args.step pgd_anneal_iters 1119 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1120 200
penalty weights 10000.0
args.step pgd_anneal_iters 1120 600
dim_v 512
rho, theta 214 tensor(-1.1666e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1121 200
penalty weights 10000.0
args.step pgd_anneal_iters 1121 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1122 200
penalty weights 10000.0
args.step pgd_anneal_iters 1122 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1123 200
penalty weights 10000.0
args.step pgd_anneal_iters 1123 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1124 200
penalty weights 10000.0
args.step pgd_anneal_iters 1124 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1125 200
penalty weights 10000.0
args.step pgd_anneal_iters 1125 600
dim_v 512
rho, theta 208 tensor(-2.7082e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1126 200
penalty weights 10000.0
args.step pgd_anneal_iters 1126 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1127 200
penalty weights 10000.0
args.step pgd_anneal_iters 1127 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1128 200
penalty weights 10000.0
args.step pgd_anneal_iters 1128 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1129 200
penalty weights 10000.0
args.step pgd_anneal_iters 1129 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1130 200
penalty weights 10000.0
args.step pgd_anneal_iters 1130 600
dim_v 512
rho, theta 208 tensor(-2.5485e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1131 200
penalty weights 10000.0
args.step pgd_anneal_iters 1131 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1132 200
penalty weights 10000.0
args.step pgd_anneal_iters 1132 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1133 200
penalty weights 10000.0
args.step pgd_anneal_iters 1133 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1134 200
penalty weights 10000.0
args.step pgd_anneal_iters 1134 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1135 200
penalty weights 10000.0
args.step pgd_anneal_iters 1135 600
dim_v 512
rho, theta 206 tensor(-2.1630e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1136 200
penalty weights 10000.0
args.step pgd_anneal_iters 1136 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1137 200
penalty weights 10000.0
args.step pgd_anneal_iters 1137 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1138 200
penalty weights 10000.0
args.step pgd_anneal_iters 1138 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1139 200
penalty weights 10000.0
args.step pgd_anneal_iters 1139 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1140 200
penalty weights 10000.0
args.step pgd_anneal_iters 1140 600
dim_v 512
rho, theta 211 tensor(-1.8871e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1141 200
penalty weights 10000.0
args.step pgd_anneal_iters 1141 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1142 200
penalty weights 10000.0
args.step pgd_anneal_iters 1142 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1143 200
penalty weights 10000.0
args.step pgd_anneal_iters 1143 600
final projection at end of training
dim_v 512
rho, theta 210 tensor(-1.1345e-06, device='cuda:0')
Epoch: [43][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  33.19 ( 33.19)	train_acc   0.47 (  0.50)	train_minacc   0.44 (  0.52)	train_majacc   0.48 (  0.49)	train_corr   0.00 (  0.00)	l1 4.6992 (4.6997)	zero_count 0.0000 (70.4730)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.26it/s] 27%|##6       | 7/26 [00:00<00:00, 20.24it/s]                                               27%|##6       | 7/26 [00:00<00:00, 20.24it/s] 46%|####6     | 12/26 [00:00<00:00, 27.33it/s] 65%|######5   | 17/26 [00:00<00:00, 31.81it/s]                                                65%|######5   | 17/26 [00:00<00:00, 31.81it/s] 85%|########4 | 22/26 [00:00<00:00, 36.03it/s]100%|##########| 26/26 [00:00<00:00, 28.03it/s]
Test: [   0/  26]	Loss 0.693 (0.693)	test_acc   0.45 (  0.45)	test_minacc   0.52 (  0.52)	test_majacc   0.44 (  0.44)	Loss_d 0.693 (0.693)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.12 (  0.12)
Test: [  10/  26]	Loss 0.690 (0.692)	test_acc   0.49 (  0.49)	test_minacc   0.67 (  0.53)	test_majacc   0.47 (  0.49)	Loss_d 0.690 (0.692)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.67 (  0.53)	test_majacc_d   0.47 (  0.49)	test_corr_d   0.07 (  0.07)
Test: [  20/  26]	Loss 0.693 (0.692)	test_acc   0.46 (  0.50)	test_minacc   0.47 (  0.52)	test_majacc   0.46 (  0.49)	Loss_d 0.693 (0.692)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.47 (  0.52)	test_majacc_d   0.46 (  0.49)	test_corr_d   0.06 (  0.06)
Test: [  26/  26]	Loss 0.693 (0.692)	test_acc   0.47 (  0.50)	test_minacc   0.44 (  0.52)	test_majacc   0.48 (  0.49)	Loss_d 0.693 (0.692)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.44 (  0.52)	test_majacc_d   0.48 (  0.49)	test_corr_d   0.06 (  0.06)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.01it/s]
Test: [  0/  1]	Loss 0.695 (0.695)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.51 (  0.51)	Loss_d 0.695 (0.695)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.06 (  0.06)
Test: [  1/  1]	Loss 0.695 (0.695)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.51 (  0.51)	Loss_d 0.695 (0.695)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.06 (  0.06)
Overall Timing[ 43/  1]	epoch_time 0.0412 (0.0439)	validation_time 0.0004 (0.0006)	train_time 0.0408 (0.0432)
record: (train_acc, test_acc) (0.6322000114321709, 0.6190000176429749)
last accs (train_acc, test_acc) (0.4962000126242638, 0.5110000371932983)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.02it/s] 19%|#9        | 5/26 [00:00<00:00, 22.03it/s] 35%|###4      | 9/26 [00:00<00:00, 26.70it/s] 46%|####6     | 12/26 [00:00<00:00, 27.02it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.83it/s] 69%|######9   | 18/26 [00:00<00:00, 27.99it/s] 85%|########4 | 22/26 [00:00<00:00, 29.00it/s]100%|##########| 26/26 [00:00<00:00, 30.70it/s]100%|##########| 26/26 [00:00<00:00, 26.08it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1144 200
penalty weights 10000.0
args.step pgd_anneal_iters 1144 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1145 200
penalty weights 10000.0
args.step pgd_anneal_iters 1145 600
dim_v 512
rho, theta 218 tensor(-5.6393e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1146 200
penalty weights 10000.0
args.step pgd_anneal_iters 1146 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1147 200
penalty weights 10000.0
args.step pgd_anneal_iters 1147 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1148 200
penalty weights 10000.0
args.step pgd_anneal_iters 1148 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1149 200
penalty weights 10000.0
args.step pgd_anneal_iters 1149 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1150 200
penalty weights 10000.0
args.step pgd_anneal_iters 1150 600
dim_v 512
rho, theta 207 tensor(-2.5905e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1151 200
penalty weights 10000.0
args.step pgd_anneal_iters 1151 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1152 200
penalty weights 10000.0
args.step pgd_anneal_iters 1152 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1153 200
penalty weights 10000.0
args.step pgd_anneal_iters 1153 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1154 200
penalty weights 10000.0
args.step pgd_anneal_iters 1154 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1155 200
penalty weights 10000.0
args.step pgd_anneal_iters 1155 600
dim_v 512
rho, theta 207 tensor(-2.4553e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1156 200
penalty weights 10000.0
args.step pgd_anneal_iters 1156 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1157 200
penalty weights 10000.0
args.step pgd_anneal_iters 1157 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1158 200
penalty weights 10000.0
args.step pgd_anneal_iters 1158 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1159 200
penalty weights 10000.0
args.step pgd_anneal_iters 1159 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1160 200
penalty weights 10000.0
args.step pgd_anneal_iters 1160 600
dim_v 512
rho, theta 205 tensor(-2.2222e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1161 200
penalty weights 10000.0
args.step pgd_anneal_iters 1161 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1162 200
penalty weights 10000.0
args.step pgd_anneal_iters 1162 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1163 200
penalty weights 10000.0
args.step pgd_anneal_iters 1163 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1164 200
penalty weights 10000.0
args.step pgd_anneal_iters 1164 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1165 200
penalty weights 10000.0
args.step pgd_anneal_iters 1165 600
dim_v 512
rho, theta 205 tensor(-1.8726e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1166 200
penalty weights 10000.0
args.step pgd_anneal_iters 1166 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1167 200
penalty weights 10000.0
args.step pgd_anneal_iters 1167 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1168 200
penalty weights 10000.0
args.step pgd_anneal_iters 1168 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1169 200
penalty weights 10000.0
args.step pgd_anneal_iters 1169 600
final projection at end of training
dim_v 512
rho, theta 213 tensor(-1.3258e-06, device='cuda:0')
Epoch: [44][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  33.19 ( 33.19)	train_acc   0.47 (  0.50)	train_minacc   0.44 (  0.52)	train_majacc   0.48 (  0.49)	train_corr   0.00 (  0.00)	l1 4.6995 (4.6999)	zero_count 0.0000 (70.7460)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.61it/s] 23%|##3       | 6/26 [00:00<00:00, 24.11it/s]                                               23%|##3       | 6/26 [00:00<00:00, 24.11it/s] 42%|####2     | 11/26 [00:00<00:00, 33.12it/s] 65%|######5   | 17/26 [00:00<00:00, 39.30it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.30it/s] 88%|########8 | 23/26 [00:00<00:00, 43.75it/s]100%|##########| 26/26 [00:00<00:00, 34.27it/s]
Test: [   0/  26]	Loss 0.693 (0.693)	test_acc   0.45 (  0.45)	test_minacc   0.52 (  0.52)	test_majacc   0.44 (  0.44)	Loss_d 0.693 (0.693)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.12 (  0.12)
Test: [  10/  26]	Loss 0.690 (0.692)	test_acc   0.48 (  0.49)	test_minacc   0.67 (  0.53)	test_majacc   0.45 (  0.49)	Loss_d 0.690 (0.692)	test_acc_d   0.48 (  0.49)	test_minacc_d   0.67 (  0.53)	test_majacc_d   0.45 (  0.49)	test_corr_d   0.07 (  0.06)
Test: [  20/  26]	Loss 0.693 (0.692)	test_acc   0.46 (  0.49)	test_minacc   0.47 (  0.52)	test_majacc   0.46 (  0.49)	Loss_d 0.693 (0.692)	test_acc_d   0.46 (  0.49)	test_minacc_d   0.47 (  0.52)	test_majacc_d   0.46 (  0.49)	test_corr_d   0.06 (  0.06)
Test: [  26/  26]	Loss 0.693 (0.692)	test_acc   0.47 (  0.50)	test_minacc   0.44 (  0.52)	test_majacc   0.48 (  0.49)	Loss_d 0.693 (0.692)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.44 (  0.52)	test_majacc_d   0.48 (  0.49)	test_corr_d   0.06 (  0.06)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.20it/s]
Test: [  0/  1]	Loss 0.695 (0.695)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.51 (  0.51)	Loss_d 0.695 (0.695)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.05 (  0.05)
Test: [  1/  1]	Loss 0.695 (0.695)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.51 (  0.51)	Loss_d 0.695 (0.695)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.05 (  0.05)
Overall Timing[ 44/  1]	epoch_time 0.0424 (0.0439)	validation_time 0.0004 (0.0006)	train_time 0.0420 (0.0432)
record: (train_acc, test_acc) (0.6322000114321709, 0.6190000176429749)
last accs (train_acc, test_acc) (0.49520001035928723, 0.5160000324249268)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.34it/s] 19%|#9        | 5/26 [00:00<00:00, 24.72it/s] 35%|###4      | 9/26 [00:00<00:00, 27.72it/s] 46%|####6     | 12/26 [00:00<00:00, 28.52it/s] 62%|######1   | 16/26 [00:00<00:00, 29.48it/s] 77%|#######6  | 20/26 [00:00<00:00, 31.34it/s] 92%|#########2| 24/26 [00:00<00:00, 31.01it/s]100%|##########| 26/26 [00:00<00:00, 27.21it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1170 200
penalty weights 10000.0
args.step pgd_anneal_iters 1170 600
dim_v 512
rho, theta 219 tensor(-2.7743e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1171 200
penalty weights 10000.0
args.step pgd_anneal_iters 1171 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1172 200
penalty weights 10000.0
args.step pgd_anneal_iters 1172 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1173 200
penalty weights 10000.0
args.step pgd_anneal_iters 1173 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1174 200
penalty weights 10000.0
args.step pgd_anneal_iters 1174 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1175 200
penalty weights 10000.0
args.step pgd_anneal_iters 1175 600
dim_v 512
rho, theta 209 tensor(-2.3229e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1176 200
penalty weights 10000.0
args.step pgd_anneal_iters 1176 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1177 200
penalty weights 10000.0
args.step pgd_anneal_iters 1177 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1178 200
penalty weights 10000.0
args.step pgd_anneal_iters 1178 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1179 200
penalty weights 10000.0
args.step pgd_anneal_iters 1179 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1180 200
penalty weights 10000.0
args.step pgd_anneal_iters 1180 600
dim_v 512
rho, theta 206 tensor(-2.4717e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1181 200
penalty weights 10000.0
args.step pgd_anneal_iters 1181 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1182 200
penalty weights 10000.0
args.step pgd_anneal_iters 1182 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1183 200
penalty weights 10000.0
args.step pgd_anneal_iters 1183 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1184 200
penalty weights 10000.0
args.step pgd_anneal_iters 1184 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1185 200
penalty weights 10000.0
args.step pgd_anneal_iters 1185 600
dim_v 512
rho, theta 205 tensor(-2.2430e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1186 200
penalty weights 10000.0
args.step pgd_anneal_iters 1186 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1187 200
penalty weights 10000.0
args.step pgd_anneal_iters 1187 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1188 200
penalty weights 10000.0
args.step pgd_anneal_iters 1188 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1189 200
penalty weights 10000.0
args.step pgd_anneal_iters 1189 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1190 200
penalty weights 10000.0
args.step pgd_anneal_iters 1190 600
dim_v 512
rho, theta 205 tensor(-1.8819e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1191 200
penalty weights 10000.0
args.step pgd_anneal_iters 1191 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1192 200
penalty weights 10000.0
args.step pgd_anneal_iters 1192 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1193 200
penalty weights 10000.0
args.step pgd_anneal_iters 1193 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1194 200
penalty weights 10000.0
args.step pgd_anneal_iters 1194 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1195 200
penalty weights 10000.0
args.step pgd_anneal_iters 1195 600
dim_v 512
rho, theta 213 tensor(-1.6132e-06, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [45][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  33.19 ( 33.19)	train_acc   0.47 (  0.50)	train_minacc   0.44 (  0.52)	train_majacc   0.48 (  0.49)	train_corr   0.00 (  0.00)	l1 4.6999 (4.6998)	zero_count 0.0000 (70.4730)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.23it/s] 23%|##3       | 6/26 [00:00<00:00, 29.99it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.99it/s] 42%|####2     | 11/26 [00:00<00:00, 36.84it/s] 62%|######1   | 16/26 [00:00<00:00, 40.35it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.35it/s] 81%|########  | 21/26 [00:00<00:00, 37.73it/s]100%|##########| 26/26 [00:00<00:00, 40.56it/s]100%|##########| 26/26 [00:00<00:00, 34.40it/s]
Test: [   0/  26]	Loss 0.693 (0.693)	test_acc   0.45 (  0.45)	test_minacc   0.52 (  0.52)	test_majacc   0.44 (  0.44)	Loss_d 0.693 (0.693)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.12 (  0.12)
Test: [  10/  26]	Loss 0.691 (0.692)	test_acc   0.48 (  0.49)	test_minacc   0.67 (  0.54)	test_majacc   0.45 (  0.49)	Loss_d 0.691 (0.692)	test_acc_d   0.48 (  0.49)	test_minacc_d   0.67 (  0.54)	test_majacc_d   0.45 (  0.49)	test_corr_d   0.07 (  0.06)
Test: [  20/  26]	Loss 0.693 (0.692)	test_acc   0.46 (  0.49)	test_minacc   0.47 (  0.53)	test_majacc   0.46 (  0.49)	Loss_d 0.693 (0.692)	test_acc_d   0.46 (  0.49)	test_minacc_d   0.47 (  0.53)	test_majacc_d   0.46 (  0.49)	test_corr_d   0.06 (  0.06)
Test: [  26/  26]	Loss 0.693 (0.692)	test_acc   0.47 (  0.49)	test_minacc   0.44 (  0.52)	test_majacc   0.48 (  0.49)	Loss_d 0.693 (0.692)	test_acc_d   0.47 (  0.49)	test_minacc_d   0.44 (  0.52)	test_majacc_d   0.48 (  0.49)	test_corr_d   0.06 (  0.06)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.99it/s]
Test: [  0/  1]	Loss 0.695 (0.695)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.51 (  0.51)	Loss_d 0.695 (0.695)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.05 (  0.05)
Test: [  1/  1]	Loss 0.695 (0.695)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.51 (  0.51)	Loss_d 0.695 (0.695)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.05 (  0.05)
Overall Timing[ 45/  1]	epoch_time 0.0444 (0.0439)	validation_time 0.0004 (0.0006)	train_time 0.0440 (0.0432)
record: (train_acc, test_acc) (0.6322000114321709, 0.6190000176429749)
last accs (train_acc, test_acc) (0.4948000103831291, 0.5200000405311584)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.95it/s] 19%|#9        | 5/26 [00:00<00:01, 19.80it/s] 35%|###4      | 9/26 [00:00<00:00, 25.16it/s] 46%|####6     | 12/26 [00:00<00:00, 26.56it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.17it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.70it/s] 85%|########4 | 22/26 [00:00<00:00, 29.47it/s]100%|##########| 26/26 [00:00<00:00, 30.87it/s]100%|##########| 26/26 [00:01<00:00, 25.89it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1196 200
penalty weights 10000.0
args.step pgd_anneal_iters 1196 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1197 200
penalty weights 10000.0
args.step pgd_anneal_iters 1197 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1198 200
penalty weights 10000.0
args.step pgd_anneal_iters 1198 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1199 200
penalty weights 10000.0
args.step pgd_anneal_iters 1199 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1200 200
penalty weights 10000.0
args.step pgd_anneal_iters 1200 600
dim_v 512
rho, theta 209 tensor(-2.0663e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1201 200
penalty weights 10000.0
args.step pgd_anneal_iters 1201 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1202 200
penalty weights 10000.0
args.step pgd_anneal_iters 1202 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1203 200
penalty weights 10000.0
args.step pgd_anneal_iters 1203 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1204 200
penalty weights 10000.0
args.step pgd_anneal_iters 1204 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1205 200
penalty weights 10000.0
args.step pgd_anneal_iters 1205 600
dim_v 512
rho, theta 205 tensor(-2.6064e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1206 200
penalty weights 10000.0
args.step pgd_anneal_iters 1206 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1207 200
penalty weights 10000.0
args.step pgd_anneal_iters 1207 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1208 200
penalty weights 10000.0
args.step pgd_anneal_iters 1208 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1209 200
penalty weights 10000.0
args.step pgd_anneal_iters 1209 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1210 200
penalty weights 10000.0
args.step pgd_anneal_iters 1210 600
dim_v 512
rho, theta 206 tensor(-2.1055e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1211 200
penalty weights 10000.0
args.step pgd_anneal_iters 1211 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1212 200
penalty weights 10000.0
args.step pgd_anneal_iters 1212 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1213 200
penalty weights 10000.0
args.step pgd_anneal_iters 1213 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1214 200
penalty weights 10000.0
args.step pgd_anneal_iters 1214 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1215 200
penalty weights 10000.0
args.step pgd_anneal_iters 1215 600
dim_v 512
rho, theta 206 tensor(-1.8866e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1216 200
penalty weights 10000.0
args.step pgd_anneal_iters 1216 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1217 200
penalty weights 10000.0
args.step pgd_anneal_iters 1217 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1218 200
penalty weights 10000.0
args.step pgd_anneal_iters 1218 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1219 200
penalty weights 10000.0
args.step pgd_anneal_iters 1219 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1220 200
penalty weights 10000.0
args.step pgd_anneal_iters 1220 600
dim_v 512
rho, theta 213 tensor(-1.7224e-06, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1221 200
penalty weights 10000.0
args.step pgd_anneal_iters 1221 600
final projection at end of training
dim_v 512
rho, theta 213 tensor(-3.2978e-07, device='cuda:0')
Epoch: [46][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  33.19 ( 33.19)	train_acc   0.47 (  0.49)	train_minacc   0.44 (  0.52)	train_majacc   0.48 (  0.49)	train_corr   0.00 (  0.00)	l1 4.6974 (4.6996)	zero_count 298.0000 (66.5740)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.21it/s] 27%|##6       | 7/26 [00:00<00:00, 30.57it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.57it/s] 46%|####6     | 12/26 [00:00<00:00, 35.68it/s] 65%|######5   | 17/26 [00:00<00:00, 39.26it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.26it/s] 85%|########4 | 22/26 [00:00<00:00, 39.88it/s]100%|##########| 26/26 [00:00<00:00, 34.46it/s]
Test: [   0/  26]	Loss 0.693 (0.693)	test_acc   0.45 (  0.45)	test_minacc   0.52 (  0.52)	test_majacc   0.44 (  0.44)	Loss_d 0.693 (0.693)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.12 (  0.12)
Test: [  10/  26]	Loss 0.691 (0.692)	test_acc   0.48 (  0.49)	test_minacc   0.69 (  0.54)	test_majacc   0.44 (  0.48)	Loss_d 0.691 (0.692)	test_acc_d   0.48 (  0.49)	test_minacc_d   0.69 (  0.54)	test_majacc_d   0.44 (  0.48)	test_corr_d   0.07 (  0.06)
Test: [  20/  26]	Loss 0.693 (0.692)	test_acc   0.46 (  0.49)	test_minacc   0.47 (  0.53)	test_majacc   0.46 (  0.49)	Loss_d 0.693 (0.692)	test_acc_d   0.46 (  0.49)	test_minacc_d   0.47 (  0.53)	test_majacc_d   0.46 (  0.49)	test_corr_d   0.06 (  0.05)
Test: [  26/  26]	Loss 0.693 (0.692)	test_acc   0.47 (  0.49)	test_minacc   0.44 (  0.52)	test_majacc   0.48 (  0.49)	Loss_d 0.693 (0.692)	test_acc_d   0.47 (  0.49)	test_minacc_d   0.44 (  0.52)	test_majacc_d   0.48 (  0.49)	test_corr_d   0.06 (  0.05)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.49it/s]
Test: [  0/  1]	Loss 0.695 (0.695)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.51 (  0.51)	Loss_d 0.695 (0.695)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.05 (  0.05)
Test: [  1/  1]	Loss 0.695 (0.695)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.51 (  0.51)	Loss_d 0.695 (0.695)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.05 (  0.05)
Overall Timing[ 46/  1]	epoch_time 0.0499 (0.0440)	validation_time 0.0007 (0.0006)	train_time 0.0492 (0.0433)
record: (train_acc, test_acc) (0.6322000114321709, 0.6190000176429749)
last accs (train_acc, test_acc) (0.49420000925660135, 0.5210000276565552)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 13.07it/s] 19%|#9        | 5/26 [00:00<00:00, 21.12it/s] 35%|###4      | 9/26 [00:00<00:00, 25.96it/s] 50%|#####     | 13/26 [00:00<00:00, 29.14it/s] 62%|######1   | 16/26 [00:00<00:00, 28.86it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.75it/s] 88%|########8 | 23/26 [00:00<00:00, 30.78it/s]100%|##########| 26/26 [00:00<00:00, 26.48it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1222 200
penalty weights 10000.0
args.step pgd_anneal_iters 1222 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1223 200
penalty weights 10000.0
args.step pgd_anneal_iters 1223 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1224 200
penalty weights 10000.0
args.step pgd_anneal_iters 1224 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1225 200
penalty weights 10000.0
args.step pgd_anneal_iters 1225 600
dim_v 512
rho, theta 213 tensor(-1.5709e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1226 200
penalty weights 10000.0
args.step pgd_anneal_iters 1226 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1227 200
penalty weights 10000.0
args.step pgd_anneal_iters 1227 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1228 200
penalty weights 10000.0
args.step pgd_anneal_iters 1228 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1229 200
penalty weights 10000.0
args.step pgd_anneal_iters 1229 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1230 200
penalty weights 10000.0
args.step pgd_anneal_iters 1230 600
dim_v 512
rho, theta 205 tensor(-2.5485e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1231 200
penalty weights 10000.0
args.step pgd_anneal_iters 1231 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1232 200
penalty weights 10000.0
args.step pgd_anneal_iters 1232 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1233 200
penalty weights 10000.0
args.step pgd_anneal_iters 1233 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1234 200
penalty weights 10000.0
args.step pgd_anneal_iters 1234 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1235 200
penalty weights 10000.0
args.step pgd_anneal_iters 1235 600
dim_v 512
rho, theta 207 tensor(-2.0862e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1236 200
penalty weights 10000.0
args.step pgd_anneal_iters 1236 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1237 200
penalty weights 10000.0
args.step pgd_anneal_iters 1237 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1238 200
penalty weights 10000.0
args.step pgd_anneal_iters 1238 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1239 200
penalty weights 10000.0
args.step pgd_anneal_iters 1239 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1240 200
penalty weights 10000.0
args.step pgd_anneal_iters 1240 600
dim_v 512
rho, theta 206 tensor(-1.9050e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1241 200
penalty weights 10000.0
args.step pgd_anneal_iters 1241 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1242 200
penalty weights 10000.0
args.step pgd_anneal_iters 1242 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1243 200
penalty weights 10000.0
args.step pgd_anneal_iters 1243 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1244 200
penalty weights 10000.0
args.step pgd_anneal_iters 1244 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1245 200
penalty weights 10000.0
args.step pgd_anneal_iters 1245 600
dim_v 512
rho, theta 213 tensor(-1.6823e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1246 200
penalty weights 10000.0
args.step pgd_anneal_iters 1246 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1247 200
penalty weights 10000.0
args.step pgd_anneal_iters 1247 600
final projection at end of training
dim_v 512
rho, theta 213 tensor(-7.0634e-07, device='cuda:0')
Epoch: [47][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  33.19 ( 33.19)	train_acc   0.47 (  0.49)	train_minacc   0.44 (  0.52)	train_majacc   0.48 (  0.49)	train_corr   0.00 (  0.00)	l1 4.6983 (4.6995)	zero_count 0.0000 (70.5510)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.99it/s]  8%|7         | 2/26 [00:00<00:03,  6.70it/s] 35%|###4      | 9/26 [00:00<00:00, 27.82it/s]                                               35%|###4      | 9/26 [00:00<00:00, 27.82it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.98it/s] 77%|#######6  | 20/26 [00:00<00:00, 40.41it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 40.41it/s]100%|##########| 26/26 [00:00<00:00, 45.57it/s]100%|##########| 26/26 [00:00<00:00, 31.83it/s]
Test: [   0/  26]	Loss 0.693 (0.693)	test_acc   0.44 (  0.44)	test_minacc   0.52 (  0.52)	test_majacc   0.43 (  0.43)	Loss_d 0.693 (0.693)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.11 (  0.11)
Test: [  10/  26]	Loss 0.691 (0.692)	test_acc   0.47 (  0.49)	test_minacc   0.69 (  0.54)	test_majacc   0.44 (  0.48)	Loss_d 0.691 (0.692)	test_acc_d   0.47 (  0.49)	test_minacc_d   0.69 (  0.54)	test_majacc_d   0.44 (  0.48)	test_corr_d   0.07 (  0.06)
Test: [  20/  26]	Loss 0.693 (0.692)	test_acc   0.46 (  0.49)	test_minacc   0.47 (  0.53)	test_majacc   0.46 (  0.49)	Loss_d 0.693 (0.692)	test_acc_d   0.46 (  0.49)	test_minacc_d   0.47 (  0.53)	test_majacc_d   0.46 (  0.49)	test_corr_d   0.06 (  0.05)
Test: [  26/  26]	Loss 0.693 (0.692)	test_acc   0.47 (  0.49)	test_minacc   0.44 (  0.52)	test_majacc   0.48 (  0.49)	Loss_d 0.693 (0.692)	test_acc_d   0.47 (  0.49)	test_minacc_d   0.44 (  0.52)	test_majacc_d   0.48 (  0.49)	test_corr_d   0.06 (  0.05)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.41it/s]
Test: [  0/  1]	Loss 0.695 (0.695)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.51 (  0.51)	Loss_d 0.695 (0.695)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.05 (  0.05)
Test: [  1/  1]	Loss 0.695 (0.695)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.51 (  0.51)	Loss_d 0.695 (0.695)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.05 (  0.05)
Overall Timing[ 47/  1]	epoch_time 0.0419 (0.0440)	validation_time 0.0004 (0.0006)	train_time 0.0415 (0.0433)
record: (train_acc, test_acc) (0.6322000114321709, 0.6190000176429749)
last accs (train_acc, test_acc) (0.4932000128030777, 0.5220000147819519)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.42it/s] 19%|#9        | 5/26 [00:00<00:00, 22.37it/s] 31%|###       | 8/26 [00:00<00:00, 25.02it/s] 46%|####6     | 12/26 [00:00<00:00, 28.56it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.77it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.79it/s] 88%|########8 | 23/26 [00:00<00:00, 31.03it/s]100%|##########| 26/26 [00:00<00:00, 27.81it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1248 200
penalty weights 10000.0
args.step pgd_anneal_iters 1248 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1249 200
penalty weights 10000.0
args.step pgd_anneal_iters 1249 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1250 200
penalty weights 10000.0
args.step pgd_anneal_iters 1250 600
dim_v 512
rho, theta 214 tensor(-9.8916e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1251 200
penalty weights 10000.0
args.step pgd_anneal_iters 1251 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1252 200
penalty weights 10000.0
args.step pgd_anneal_iters 1252 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1253 200
penalty weights 10000.0
args.step pgd_anneal_iters 1253 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1254 200
penalty weights 10000.0
args.step pgd_anneal_iters 1254 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1255 200
penalty weights 10000.0
args.step pgd_anneal_iters 1255 600
dim_v 512
rho, theta 207 tensor(-2.4369e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1256 200
penalty weights 10000.0
args.step pgd_anneal_iters 1256 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1257 200
penalty weights 10000.0
args.step pgd_anneal_iters 1257 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1258 200
penalty weights 10000.0
args.step pgd_anneal_iters 1258 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1259 200
penalty weights 10000.0
args.step pgd_anneal_iters 1259 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1260 200
penalty weights 10000.0
args.step pgd_anneal_iters 1260 600
dim_v 512
rho, theta 207 tensor(-2.2650e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1261 200
penalty weights 10000.0
args.step pgd_anneal_iters 1261 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1262 200
penalty weights 10000.0
args.step pgd_anneal_iters 1262 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1263 200
penalty weights 10000.0
args.step pgd_anneal_iters 1263 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1264 200
penalty weights 10000.0
args.step pgd_anneal_iters 1264 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1265 200
penalty weights 10000.0
args.step pgd_anneal_iters 1265 600
dim_v 512
rho, theta 206 tensor(-1.8544e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1266 200
penalty weights 10000.0
args.step pgd_anneal_iters 1266 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1267 200
penalty weights 10000.0
args.step pgd_anneal_iters 1267 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1268 200
penalty weights 10000.0
args.step pgd_anneal_iters 1268 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1269 200
penalty weights 10000.0
args.step pgd_anneal_iters 1269 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1270 200
penalty weights 10000.0
args.step pgd_anneal_iters 1270 600
dim_v 512
rho, theta 212 tensor(-1.7014e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1271 200
penalty weights 10000.0
args.step pgd_anneal_iters 1271 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1272 200
penalty weights 10000.0
args.step pgd_anneal_iters 1272 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1273 200
penalty weights 10000.0
args.step pgd_anneal_iters 1273 600
final projection at end of training
dim_v 512
rho, theta 213 tensor(-1.0294e-06, device='cuda:0')
Epoch: [48][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  33.20 ( 33.20)	train_acc   0.47 (  0.49)	train_minacc   0.44 (  0.52)	train_majacc   0.48 (  0.49)	train_corr   0.00 (  0.00)	l1 4.6990 (4.6996)	zero_count 0.0000 (70.4340)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.30it/s] 27%|##6       | 7/26 [00:00<00:00, 31.12it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.12it/s] 46%|####6     | 12/26 [00:00<00:00, 37.14it/s] 65%|######5   | 17/26 [00:00<00:00, 40.29it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.29it/s] 85%|########4 | 22/26 [00:00<00:00, 42.35it/s]100%|##########| 26/26 [00:00<00:00, 35.84it/s]
Test: [   0/  26]	Loss 0.693 (0.693)	test_acc   0.44 (  0.44)	test_minacc   0.52 (  0.52)	test_majacc   0.43 (  0.43)	Loss_d 0.693 (0.693)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.11 (  0.11)
Test: [  10/  26]	Loss 0.691 (0.692)	test_acc   0.46 (  0.49)	test_minacc   0.67 (  0.54)	test_majacc   0.43 (  0.48)	Loss_d 0.691 (0.692)	test_acc_d   0.46 (  0.49)	test_minacc_d   0.67 (  0.54)	test_majacc_d   0.43 (  0.48)	test_corr_d   0.07 (  0.06)
Test: [  20/  26]	Loss 0.694 (0.692)	test_acc   0.46 (  0.49)	test_minacc   0.47 (  0.53)	test_majacc   0.46 (  0.48)	Loss_d 0.694 (0.692)	test_acc_d   0.46 (  0.49)	test_minacc_d   0.47 (  0.53)	test_majacc_d   0.46 (  0.48)	test_corr_d   0.05 (  0.05)
Test: [  26/  26]	Loss 0.693 (0.692)	test_acc   0.47 (  0.49)	test_minacc   0.44 (  0.52)	test_majacc   0.48 (  0.49)	Loss_d 0.693 (0.692)	test_acc_d   0.47 (  0.49)	test_minacc_d   0.44 (  0.52)	test_majacc_d   0.48 (  0.49)	test_corr_d   0.05 (  0.05)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 58.42it/s]
Test: [  0/  1]	Loss 0.695 (0.695)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.51 (  0.51)	Loss_d 0.695 (0.695)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.05 (  0.05)
Test: [  1/  1]	Loss 0.695 (0.695)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.51 (  0.51)	Loss_d 0.695 (0.695)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.05 (  0.05)
Overall Timing[ 48/  1]	epoch_time 0.0459 (0.0440)	validation_time 0.0007 (0.0006)	train_time 0.0452 (0.0433)
record: (train_acc, test_acc) (0.6322000114321709, 0.6190000176429749)
last accs (train_acc, test_acc) (0.4919000117182732, 0.5220000147819519)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.86it/s]  8%|7         | 2/26 [00:00<00:02,  8.56it/s] 23%|##3       | 6/26 [00:00<00:00, 20.40it/s] 35%|###4      | 9/26 [00:00<00:00, 23.83it/s] 50%|#####     | 13/26 [00:00<00:00, 26.87it/s] 65%|######5   | 17/26 [00:00<00:00, 28.16it/s] 81%|########  | 21/26 [00:00<00:00, 29.98it/s] 92%|#########2| 24/26 [00:00<00:00, 29.92it/s]100%|##########| 26/26 [00:01<00:00, 24.72it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1274 200
penalty weights 10000.0
args.step pgd_anneal_iters 1274 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1275 200
penalty weights 10000.0
args.step pgd_anneal_iters 1275 600
dim_v 512
rho, theta 219 tensor(-4.7467e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1276 200
penalty weights 10000.0
args.step pgd_anneal_iters 1276 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1277 200
penalty weights 10000.0
args.step pgd_anneal_iters 1277 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1278 200
penalty weights 10000.0
args.step pgd_anneal_iters 1278 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1279 200
penalty weights 10000.0
args.step pgd_anneal_iters 1279 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1280 200
penalty weights 10000.0
args.step pgd_anneal_iters 1280 600
dim_v 512
rho, theta 207 tensor(-2.3956e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1281 200
penalty weights 10000.0
args.step pgd_anneal_iters 1281 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1282 200
penalty weights 10000.0
args.step pgd_anneal_iters 1282 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1283 200
penalty weights 10000.0
args.step pgd_anneal_iters 1283 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1284 200
penalty weights 10000.0
args.step pgd_anneal_iters 1284 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1285 200
penalty weights 10000.0
args.step pgd_anneal_iters 1285 600
dim_v 512
rho, theta 207 tensor(-2.2902e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1286 200
penalty weights 10000.0
args.step pgd_anneal_iters 1286 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1287 200
penalty weights 10000.0
args.step pgd_anneal_iters 1287 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1288 200
penalty weights 10000.0
args.step pgd_anneal_iters 1288 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1289 200
penalty weights 10000.0
args.step pgd_anneal_iters 1289 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1290 200
penalty weights 10000.0
args.step pgd_anneal_iters 1290 600
dim_v 512
rho, theta 205 tensor(-1.9629e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1291 200
penalty weights 10000.0
args.step pgd_anneal_iters 1291 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1292 200
penalty weights 10000.0
args.step pgd_anneal_iters 1292 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1293 200
penalty weights 10000.0
args.step pgd_anneal_iters 1293 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1294 200
penalty weights 10000.0
args.step pgd_anneal_iters 1294 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1295 200
penalty weights 10000.0
args.step pgd_anneal_iters 1295 600
dim_v 512
rho, theta 207 tensor(-1.6300e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1296 200
penalty weights 10000.0
args.step pgd_anneal_iters 1296 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1297 200
penalty weights 10000.0
args.step pgd_anneal_iters 1297 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1298 200
penalty weights 10000.0
args.step pgd_anneal_iters 1298 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1299 200
penalty weights 10000.0
args.step pgd_anneal_iters 1299 600
final projection at end of training
dim_v 512
rho, theta 215 tensor(-1.2473e-06, device='cuda:0')
Epoch: [49][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  33.20 ( 33.20)	train_acc   0.47 (  0.49)	train_minacc   0.44 (  0.52)	train_majacc   0.48 (  0.49)	train_corr   0.00 (  0.00)	l1 4.6991 (4.6997)	zero_count 0.0000 (70.5120)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.25it/s] 23%|##3       | 6/26 [00:00<00:00, 27.66it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.66it/s] 42%|####2     | 11/26 [00:00<00:00, 33.52it/s] 62%|######1   | 16/26 [00:00<00:00, 36.97it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.97it/s] 81%|########  | 21/26 [00:00<00:00, 39.50it/s]100%|##########| 26/26 [00:00<00:00, 41.95it/s]100%|##########| 26/26 [00:00<00:00, 34.57it/s]
Test: [   0/  26]	Loss 0.693 (0.693)	test_acc   0.44 (  0.44)	test_minacc   0.52 (  0.52)	test_majacc   0.43 (  0.43)	Loss_d 0.693 (0.693)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.11 (  0.11)
Test: [  10/  26]	Loss 0.691 (0.692)	test_acc   0.47 (  0.49)	test_minacc   0.70 (  0.55)	test_majacc   0.43 (  0.48)	Loss_d 0.691 (0.692)	test_acc_d   0.47 (  0.49)	test_minacc_d   0.70 (  0.55)	test_majacc_d   0.43 (  0.48)	test_corr_d   0.07 (  0.06)
Test: [  20/  26]	Loss 0.694 (0.692)	test_acc   0.46 (  0.49)	test_minacc   0.47 (  0.53)	test_majacc   0.46 (  0.48)	Loss_d 0.694 (0.692)	test_acc_d   0.46 (  0.49)	test_minacc_d   0.47 (  0.53)	test_majacc_d   0.46 (  0.48)	test_corr_d   0.05 (  0.05)
Test: [  26/  26]	Loss 0.693 (0.692)	test_acc   0.47 (  0.49)	test_minacc   0.44 (  0.52)	test_majacc   0.48 (  0.49)	Loss_d 0.693 (0.692)	test_acc_d   0.47 (  0.49)	test_minacc_d   0.44 (  0.52)	test_majacc_d   0.48 (  0.49)	test_corr_d   0.05 (  0.05)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 58.44it/s]
Test: [  0/  1]	Loss 0.695 (0.695)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.51 (  0.51)	Loss_d 0.695 (0.695)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.05 (  0.05)
Test: [  1/  1]	Loss 0.695 (0.695)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.51 (  0.51)	Loss_d 0.695 (0.695)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.05 (  0.05)
Overall Timing[ 49/  1]	epoch_time 0.0432 (0.0440)	validation_time 0.0004 (0.0006)	train_time 0.0428 (0.0433)
record: (train_acc, test_acc) (0.6322000114321709, 0.6190000176429749)
last accs (train_acc, test_acc) (0.4913000105917454, 0.5210000276565552)
done saving aggregate.csv to ./aggregate.csv
wandb: - 0.161 MB of 0.161 MB uploadedwandb: \ 0.161 MB of 0.161 MB uploadedwandb: | 0.161 MB of 0.161 MB uploadedThread SenderThread:
Traceback (most recent call last):
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/internal_util.py", line 48, in run
    self._run()
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/internal_util.py", line 99, in _run
    self._process(record)
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/internal.py", line 327, in _process
    self._sm.send(record)
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/sender.py", line 398, in send
    send_handler(record)
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/sender.py", line 420, in send_request
    send_handler(record)
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/sender.py", line 654, in send_request_defer
    self._flush_job()
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/sender.py", line 1706, in _flush_job
    artifact = self._job_builder.build(api=self._api)
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/job_builder.py", line 552, in build
    artifact.add_file(
  File "/home/zd16/scratch/mypython3/wandb/sdk/artifacts/artifact.py", line 1196, in add_file
    return self._add_local_file(
  File "/home/zd16/scratch/mypython3/wandb/sdk/artifacts/artifact.py", line 1459, in _add_local_file
    with tempfile.NamedTemporaryFile(dir=get_staging_dir(), delete=False) as f:
  File "/usr/local/python/3.9.16/lib/python3.9/tempfile.py", line 545, in NamedTemporaryFile
    (fd, name) = _mkstemp_inner(dir, prefix, suffix, flags, output_type)
  File "/usr/local/python/3.9.16/lib/python3.9/tempfile.py", line 255, in _mkstemp_inner
    fd = _os.open(file, flags, 0o600)
OSError: [Errno 122] Disk quota exceeded: '/home/zd16/.local/share/wandb/artifacts/staging/tmpspcibpso'
wandb: ERROR Internal wandb error: file data was not synced
wandb: Currently logged in as: janezdu (janezdu-uiuc). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.17.9 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.7
wandb: Run data is saved locally in /scratch/users/zd16/sparseIRM-resnet-ver/wandb/run-20240907_205658-xjb3jjx8
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run name_random
wandb: ⭐️ View project at https://wandb.ai/janezdu-uiuc/irm
wandb: 🚀 View run at https://wandb.ai/janezdu-uiuc/irm/runs/xjb3jjx8
=> Reading YAML config from configs/smallscale/resnet18/resnet18-usc-unsigned.yaml
Namespace(data='dataset/', optimizer='adam', weight_opt='adam', set='mnistcifar', arch='ResNet18', config='configs/smallscale/resnet18/resnet18-usc-unsigned.yaml', log_dir=None, workers=4, epochs=50, start_epoch=None, batch_size=390, lr=0.006, warmup_length=0, momentum=0.9, weight_decay=0.0, print_freq=10, num_classes=1, resume='', resume_train_weights='', evaluate=False, pretrained=None, pretrained_distill=None, alpha_distill=0.95, T_distill=2, seed=0, multigpu=[0], lr_policy='cosine_lr', lr_adjust=30, lr_gamma=0.1, name='baseline', save_every=-1, prune_rate=1.0, param_prune_rate=0.0, pr_start=1.0, low_data=1, width_mult=1.0, nesterov=False, threetimes=False, random_subnet=False, one_batch=False, conv_type='DenseConv', freeze_weights=False, st=False, mode='fan_in', nonlinearity='relu', bn_type='LearnedBatchNorm', init='kaiming_normal', no_bn_decay=False, scale_fan=False, first_layer_dense=False, last_layer_dense=True, approx=False, zero=False, flip=False, bs=False, gumbel_sample=False, multiply_prob=False, no_multiply=False, multiply_cont=False, multiply_prob_bs=False, indiv=False, label_smoothing=None, first_layer_type=None, trainer='default', score_init_constant=1.0, K=1, update_freq=20, D=0.01, T=1, TA=True, TA2=False, TA_grow=False, center=False, straight_through=False, PLA_factor=0.1, PLA_patience=10, gradient_loss_para=0, abs_loss_para=0, thres=0.9, runs_name='name_random', resume_compare_loss1='', resume_compare_loss2='', init_weights='', trained_mask='', weight_rescaling=False, constrain_by_layer=False, weight_rescaling_data=False, use_running_stats=False, not_clipping=False, rescaling_para=False, lasso_para=0, dont_freeze_weights=False, iterative=True, prob_by_weight=False, rescale_at_fix_subnet=False, train_weights_at_the_same_time=False, sample_from_training_set=False, load_true_para=False, distill=False, finetune=False, stablize=False, prev_best=0, weight_opt_lr=0.0006, n=500, ts=0.28, te=0.6, d=20000, s=80, c=0.75, init_prob=False, thres_before=0.001, wide_ratio=0.001, noise=1, cal_p_q=False, just_finetune=False, snip=False, envs_num=2, l2_regularizer_weight=0.001, data_num=50000, env_type='linear', irm_type='irmv1', hidden_dim=390, penalty_anneal_iters=200, penalty_weight=10000.0, grayscale_model=0, weight_lr_schedule=False, fix_subnet=False, freeze_weight=False, step='ours', prior_sd_coef=0, dim_inv=2, variance_gamma=1.0, dim_spu=10, image_scale=32, cons_ratio='0.999_0.7_0.1', noise_ratio=0.2, step_gamma=0.1, step_round=3, inner_steps=1, use_pgd=True, z=15.0, pgd_anneal_iters=600, pgd_skip_steps=5, fraction_z=0.99)
=> Creating model 'ResNet18'
Here!!!!!!!!
==> Conv Type: DenseConv
==> BN Type: LearnedBatchNorm
<class 'torch.nn.modules.conv.Conv2d'>
<class 'torch.nn.modules.batchnorm.BatchNorm2d'>
==> Building first layer with <class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): Linear(in_features=512, out_features=1, bias=True)
)
=> Parallelizing on [0] gpus
<DEBUG> gradient to module.conv1.weight
<DEBUG> gradient to module.bn1.weight
<DEBUG> gradient to module.bn1.bias
<DEBUG> gradient to module.layer1.0.conv1.weight
<DEBUG> gradient to module.layer1.0.bn1.weight
<DEBUG> gradient to module.layer1.0.bn1.bias
<DEBUG> gradient to module.layer1.0.conv2.weight
<DEBUG> gradient to module.layer1.0.bn2.weight
<DEBUG> gradient to module.layer1.0.bn2.bias
<DEBUG> gradient to module.layer1.1.conv1.weight
<DEBUG> gradient to module.layer1.1.bn1.weight
<DEBUG> gradient to module.layer1.1.bn1.bias
<DEBUG> gradient to module.layer1.1.conv2.weight
<DEBUG> gradient to module.layer1.1.bn2.weight
<DEBUG> gradient to module.layer1.1.bn2.bias
<DEBUG> gradient to module.layer2.0.conv1.weight
<DEBUG> gradient to module.layer2.0.bn1.weight
<DEBUG> gradient to module.layer2.0.bn1.bias
<DEBUG> gradient to module.layer2.0.conv2.weight
<DEBUG> gradient to module.layer2.0.bn2.weight
<DEBUG> gradient to module.layer2.0.bn2.bias
<DEBUG> gradient to module.layer2.0.downsample.0.weight
<DEBUG> gradient to module.layer2.0.downsample.1.weight
<DEBUG> gradient to module.layer2.0.downsample.1.bias
<DEBUG> gradient to module.layer2.1.conv1.weight
<DEBUG> gradient to module.layer2.1.bn1.weight
<DEBUG> gradient to module.layer2.1.bn1.bias
<DEBUG> gradient to module.layer2.1.conv2.weight
<DEBUG> gradient to module.layer2.1.bn2.weight
<DEBUG> gradient to module.layer2.1.bn2.bias
<DEBUG> gradient to module.layer3.0.conv1.weight
<DEBUG> gradient to module.layer3.0.bn1.weight
<DEBUG> gradient to module.layer3.0.bn1.bias
<DEBUG> gradient to module.layer3.0.conv2.weight
<DEBUG> gradient to module.layer3.0.bn2.weight
<DEBUG> gradient to module.layer3.0.bn2.bias
<DEBUG> gradient to module.layer3.0.downsample.0.weight
<DEBUG> gradient to module.layer3.0.downsample.1.weight
<DEBUG> gradient to module.layer3.0.downsample.1.bias
<DEBUG> gradient to module.layer3.1.conv1.weight
<DEBUG> gradient to module.layer3.1.bn1.weight
<DEBUG> gradient to module.layer3.1.bn1.bias
<DEBUG> gradient to module.layer3.1.conv2.weight
<DEBUG> gradient to module.layer3.1.bn2.weight
<DEBUG> gradient to module.layer3.1.bn2.bias
<DEBUG> gradient to module.layer4.0.conv1.weight
<DEBUG> gradient to module.layer4.0.bn1.weight
<DEBUG> gradient to module.layer4.0.bn1.bias
<DEBUG> gradient to module.layer4.0.conv2.weight
<DEBUG> gradient to module.layer4.0.bn2.weight
<DEBUG> gradient to module.layer4.0.bn2.bias
<DEBUG> gradient to module.layer4.0.downsample.0.weight
<DEBUG> gradient to module.layer4.0.downsample.1.weight
<DEBUG> gradient to module.layer4.0.downsample.1.bias
<DEBUG> gradient to module.layer4.1.conv1.weight
<DEBUG> gradient to module.layer4.1.bn1.weight
<DEBUG> gradient to module.layer4.1.bn1.bias
<DEBUG> gradient to module.layer4.1.conv2.weight
<DEBUG> gradient to module.layer4.1.bn2.weight
<DEBUG> gradient to module.layer4.1.bn2.bias
<DEBUG> gradient to module.fc.weight
<DEBUG> gradient to module.fc.bias
Files already downloaded and verified
Files already downloaded and verified
Adding Noise to Label, len(Y)=12000, Label_noise=1247
Xmp (7877, 3, 32, 32) (6903, 3, 32, 32)
Xcp (6001, 3, 32, 32) (5999, 3, 32, 32)
env=0 2497 2497 3 3
xn 2500 xp 2500
env=1 1750 1750 750 750
xn 2500 xp 2500
env=2 50 50 450 450
xn 500 xp 500
=> Creating model 'EBD'
EBD(
  (embedings): Embedding(2, 1)
)
=> Parallelizing on [0] gpus
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:01<00:36,  1.47s/it] 19%|#9        | 5/26 [00:01<00:05,  4.09it/s] 38%|###8      | 10/26 [00:01<00:01,  8.94it/s] 54%|#####3    | 14/26 [00:01<00:00, 12.89it/s] 69%|######9   | 18/26 [00:01<00:00, 16.85it/s] 85%|########4 | 22/26 [00:02<00:00, 20.42it/s]100%|##########| 26/26 [00:02<00:00, 14.52it/s]100%|##########| 26/26 [00:02<00:00, 10.27it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 0 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 2 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 3 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 4 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 5 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 6 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 7 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 8 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 9 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 10 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 11 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 12 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 13 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 14 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 15 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 16 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 17 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 18 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 19 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 20 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 21 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 22 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 23 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 24 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 25 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [0][  26/  26]	Loss 0.410 (0.553)	train_nll   0.41 (  0.55)	train_penalty   0.04 (  0.25)	weight_norm  20.90 ( 18.15)	train_acc   0.86 (  0.80)	train_minacc   0.03 (  0.08)	train_majacc   0.99 (  0.93)	train_corr   0.00 (  0.00)	l1 7.0532 (7.6439)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.07it/s] 23%|##3       | 6/26 [00:00<00:00, 32.14it/s]                                               23%|##3       | 6/26 [00:00<00:00, 32.14it/s] 42%|####2     | 11/26 [00:00<00:00, 37.93it/s] 62%|######1   | 16/26 [00:00<00:00, 42.25it/s]                                                62%|######1   | 16/26 [00:00<00:00, 42.25it/s] 81%|########  | 21/26 [00:00<00:00, 39.74it/s]100%|##########| 26/26 [00:01<00:00,  8.56it/s]100%|##########| 26/26 [00:02<00:00, 12.72it/s]
Test: [   0/  26]	Loss 0.399 (0.399)	test_acc   0.86 (  0.86)	test_minacc   0.02 (  0.02)	test_majacc   0.99 (  0.99)	Loss_d 0.399 (0.399)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.02 (  0.02)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.97)
Test: [  10/  26]	Loss 0.390 (0.401)	test_acc   0.86 (  0.85)	test_minacc   0.02 (  0.02)	test_majacc   0.99 (  0.99)	Loss_d 0.390 (0.401)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.02 (  0.02)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.97)
Test: [  20/  26]	Loss 0.441 (0.408)	test_acc   0.82 (  0.85)	test_minacc   0.01 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 0.441 (0.408)	test_acc_d   0.82 (  0.85)	test_minacc_d   0.01 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.98 (  0.97)
Test: [  26/  26]	Loss 0.388 (0.412)	test_acc   0.87 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  0.99)	Loss_d 0.388 (0.412)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.97 (  0.97)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00,  2.50it/s]100%|##########| 1/1 [00:00<00:00,  2.50it/s]
Test: [  0/  1]	Loss 1.501 (1.501)	test_acc   0.10 (  0.10)	test_minacc   0.01 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 1.501 (1.501)	test_acc_d   0.10 (  0.10)	test_minacc_d   0.01 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.97)
Test: [  1/  1]	Loss 1.501 (1.501)	test_acc   0.10 (  0.10)	test_minacc   0.01 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 1.501 (1.501)	test_acc_d   0.10 (  0.10)	test_minacc_d   0.01 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.97)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/167/checkpoints/model_best.pth
Overall Timing[  0/  1]	epoch_time 0.1003 (0.1003)	validation_time 0.0068 (0.0068)	train_time 0.0901 (0.0901)
record: (train_acc, test_acc) (0.8462000271677971, 0.10400000214576721)
last accs (train_acc, test_acc) (0.8462000271677971, 0.10400000214576721)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.79it/s] 19%|#9        | 5/26 [00:00<00:01, 20.32it/s] 35%|###4      | 9/26 [00:00<00:00, 26.52it/s] 50%|#####     | 13/26 [00:00<00:00, 30.27it/s] 65%|######5   | 17/26 [00:00<00:00, 32.51it/s] 81%|########  | 21/26 [00:00<00:00, 34.25it/s] 96%|#########6| 25/26 [00:00<00:00, 35.73it/s]100%|##########| 26/26 [00:00<00:00, 28.83it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 26 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 27 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 28 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 29 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 30 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 31 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 32 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 33 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 34 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 35 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 36 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 37 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 38 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 39 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 40 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 41 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 42 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 43 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 44 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 45 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 46 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 47 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 48 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 49 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 50 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 51 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [1][  26/  26]	Loss 0.369 (0.405)	train_nll   0.37 (  0.41)	train_penalty   0.04 (  0.06)	weight_norm  22.00 ( 21.66)	train_acc   0.87 (  0.85)	train_minacc   0.03 (  0.02)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 7.0630 (7.1619)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.40it/s] 27%|##6       | 7/26 [00:00<00:00, 34.69it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.69it/s] 46%|####6     | 12/26 [00:00<00:00, 39.91it/s] 65%|######5   | 17/26 [00:00<00:00, 38.40it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.40it/s] 85%|########4 | 22/26 [00:00<00:00, 41.08it/s]100%|##########| 26/26 [00:00<00:00, 35.88it/s]
Test: [   0/  26]	Loss 0.374 (0.374)	test_acc   0.86 (  0.86)	test_minacc   0.02 (  0.02)	test_majacc   0.99 (  0.99)	Loss_d 0.374 (0.374)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.02 (  0.02)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.96)
Test: [  10/  26]	Loss 0.368 (0.379)	test_acc   0.87 (  0.86)	test_minacc   0.02 (  0.02)	test_majacc   0.99 (  1.00)	Loss_d 0.368 (0.379)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.02 (  0.02)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.97 (  0.97)
Test: [  20/  26]	Loss 0.426 (0.388)	test_acc   0.83 (  0.85)	test_minacc   0.00 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 0.426 (0.388)	test_acc_d   0.83 (  0.85)	test_minacc_d   0.00 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
Test: [  26/  26]	Loss 0.353 (0.392)	test_acc   0.87 (  0.85)	test_minacc   0.00 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 0.353 (0.392)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.00 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.13it/s]
Test: [  0/  1]	Loss 1.649 (1.649)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.649 (1.649)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.96 (  0.96)
Test: [  1/  1]	Loss 1.649 (1.649)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.649 (1.649)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.96 (  0.96)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/167/checkpoints/model_best.pth
Overall Timing[  1/  1]	epoch_time 0.0419 (0.0711)	validation_time 0.0004 (0.0036)	train_time 0.0414 (0.0657)
record: (train_acc, test_acc) (0.848700025856495, 0.10900000482797623)
last accs (train_acc, test_acc) (0.848700025856495, 0.10900000482797623)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.90it/s] 19%|#9        | 5/26 [00:00<00:00, 24.91it/s] 35%|###4      | 9/26 [00:00<00:00, 30.43it/s] 50%|#####     | 13/26 [00:00<00:00, 33.19it/s] 65%|######5   | 17/26 [00:00<00:00, 34.72it/s] 81%|########  | 21/26 [00:00<00:00, 35.84it/s] 96%|#########6| 25/26 [00:00<00:00, 36.37it/s]100%|##########| 26/26 [00:00<00:00, 30.78it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 52 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 53 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 54 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 55 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 56 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 57 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 58 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 59 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 60 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 61 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 62 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 63 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 64 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 65 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 66 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 67 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 68 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 69 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 70 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 71 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 72 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 73 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 74 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 75 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 76 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 77 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [2][  26/  26]	Loss 0.339 (0.389)	train_nll   0.34 (  0.39)	train_penalty   0.03 (  0.05)	weight_norm  22.14 ( 22.09)	train_acc   0.89 (  0.85)	train_minacc   0.25 (  0.06)	train_majacc   0.98 (  0.99)	train_corr   0.00 (  0.00)	l1 7.0189 (7.1167)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.89it/s] 27%|##6       | 7/26 [00:00<00:00, 36.48it/s]                                               27%|##6       | 7/26 [00:00<00:00, 36.48it/s] 46%|####6     | 12/26 [00:00<00:00, 37.35it/s] 65%|######5   | 17/26 [00:00<00:00, 40.16it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.16it/s] 85%|########4 | 22/26 [00:00<00:00, 42.53it/s]100%|##########| 26/26 [00:00<00:00, 36.78it/s]
Test: [   0/  26]	Loss 0.372 (0.372)	test_acc   0.86 (  0.86)	test_minacc   0.11 (  0.11)	test_majacc   0.98 (  0.98)	Loss_d 0.372 (0.372)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.11 (  0.11)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.93 (  0.93)
Test: [  10/  26]	Loss 0.342 (0.363)	test_acc   0.88 (  0.86)	test_minacc   0.10 (  0.08)	test_majacc   0.99 (  0.99)	Loss_d 0.342 (0.363)	test_acc_d   0.88 (  0.86)	test_minacc_d   0.10 (  0.08)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.95 (  0.95)
Test: [  20/  26]	Loss 0.413 (0.374)	test_acc   0.84 (  0.85)	test_minacc   0.06 (  0.07)	test_majacc   1.00 (  0.99)	Loss_d 0.413 (0.374)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.06 (  0.07)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.95 (  0.95)
Test: [  26/  26]	Loss 0.310 (0.373)	test_acc   0.88 (  0.85)	test_minacc   0.12 (  0.08)	test_majacc   0.99 (  0.99)	Loss_d 0.310 (0.373)	test_acc_d   0.88 (  0.85)	test_minacc_d   0.12 (  0.08)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.95 (  0.95)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.49it/s]
Test: [  0/  1]	Loss 1.715 (1.715)	test_acc   0.14 (  0.14)	test_minacc   0.04 (  0.04)	test_majacc   0.99 (  0.99)	Loss_d 1.715 (1.715)	test_acc_d   0.14 (  0.14)	test_minacc_d   0.04 (  0.04)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.92 (  0.92)
Test: [  1/  1]	Loss 1.715 (1.715)	test_acc   0.14 (  0.14)	test_minacc   0.04 (  0.04)	test_majacc   0.99 (  0.99)	Loss_d 1.715 (1.715)	test_acc_d   0.14 (  0.14)	test_minacc_d   0.04 (  0.04)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.92 (  0.92)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/167/checkpoints/model_best.pth
Overall Timing[  2/  1]	epoch_time 0.0382 (0.0601)	validation_time 0.0004 (0.0026)	train_time 0.0377 (0.0564)
record: (train_acc, test_acc) (0.8526000262498855, 0.13600000739097595)
last accs (train_acc, test_acc) (0.8526000262498855, 0.13600000739097595)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.74it/s] 19%|#9        | 5/26 [00:00<00:00, 21.30it/s] 35%|###4      | 9/26 [00:00<00:00, 26.60it/s] 50%|#####     | 13/26 [00:00<00:00, 29.51it/s] 65%|######5   | 17/26 [00:00<00:00, 31.66it/s] 81%|########  | 21/26 [00:00<00:00, 33.36it/s] 96%|#########6| 25/26 [00:00<00:00, 34.72it/s]100%|##########| 26/26 [00:00<00:00, 28.41it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 78 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 79 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 80 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 81 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 82 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 83 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 84 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 85 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 86 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 87 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 88 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 89 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 90 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 91 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 92 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 93 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 94 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 95 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 96 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 97 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 98 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 99 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 100 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 101 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 102 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 103 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [3][  26/  26]	Loss 0.299 (0.364)	train_nll   0.30 (  0.36)	train_penalty   0.01 (  0.04)	weight_norm  22.22 ( 22.18)	train_acc   0.87 (  0.85)	train_minacc   0.34 (  0.12)	train_majacc   0.95 (  0.98)	train_corr   0.00 (  0.00)	l1 7.0485 (7.0429)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.69it/s] 23%|##3       | 6/26 [00:00<00:00, 22.71it/s]                                               23%|##3       | 6/26 [00:00<00:00, 22.71it/s] 46%|####6     | 12/26 [00:00<00:00, 34.10it/s] 65%|######5   | 17/26 [00:00<00:00, 38.34it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.34it/s] 88%|########8 | 23/26 [00:00<00:00, 43.72it/s]100%|##########| 26/26 [00:00<00:00, 33.68it/s]
Test: [   0/  26]	Loss 0.327 (0.327)	test_acc   0.86 (  0.86)	test_minacc   0.26 (  0.26)	test_majacc   0.96 (  0.96)	Loss_d 0.327 (0.327)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.26 (  0.26)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.87 (  0.87)
Test: [  10/  26]	Loss 0.310 (0.330)	test_acc   0.87 (  0.87)	test_minacc   0.30 (  0.30)	test_majacc   0.96 (  0.96)	Loss_d 0.310 (0.330)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.90 (  0.88)
Test: [  20/  26]	Loss 0.370 (0.342)	test_acc   0.85 (  0.86)	test_minacc   0.28 (  0.29)	test_majacc   0.96 (  0.96)	Loss_d 0.370 (0.342)	test_acc_d   0.85 (  0.86)	test_minacc_d   0.28 (  0.29)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.88 (  0.88)
Test: [  26/  26]	Loss 0.284 (0.340)	test_acc   0.89 (  0.86)	test_minacc   0.31 (  0.29)	test_majacc   0.97 (  0.96)	Loss_d 0.284 (0.340)	test_acc_d   0.89 (  0.86)	test_minacc_d   0.31 (  0.29)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.89 (  0.88)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.12it/s]
Test: [  0/  1]	Loss 1.615 (1.615)	test_acc   0.28 (  0.28)	test_minacc   0.20 (  0.20)	test_majacc   0.97 (  0.97)	Loss_d 1.615 (1.615)	test_acc_d   0.28 (  0.28)	test_minacc_d   0.20 (  0.20)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.72 (  0.72)
Test: [  1/  1]	Loss 1.615 (1.615)	test_acc   0.28 (  0.28)	test_minacc   0.20 (  0.20)	test_majacc   0.97 (  0.97)	Loss_d 1.615 (1.615)	test_acc_d   0.28 (  0.28)	test_minacc_d   0.20 (  0.20)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.72 (  0.72)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/167/checkpoints/model_best.pth
Overall Timing[  3/  1]	epoch_time 0.0454 (0.0564)	validation_time 0.0003 (0.0020)	train_time 0.0450 (0.0535)
record: (train_acc, test_acc) (0.8608000215291977, 0.2760000228881836)
last accs (train_acc, test_acc) (0.8608000215291977, 0.2760000228881836)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02, 11.28it/s] 23%|##3       | 6/26 [00:00<00:00, 21.88it/s] 38%|###8      | 10/26 [00:00<00:00, 26.59it/s] 54%|#####3    | 14/26 [00:00<00:00, 29.44it/s] 69%|######9   | 18/26 [00:00<00:00, 31.13it/s] 85%|########4 | 22/26 [00:00<00:00, 32.49it/s]100%|##########| 26/26 [00:00<00:00, 33.78it/s]100%|##########| 26/26 [00:00<00:00, 27.55it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 104 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 105 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 106 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 107 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 108 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 109 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 110 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 111 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 112 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 113 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 114 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 115 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 116 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 117 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 118 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 119 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 120 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 121 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 122 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 123 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 124 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 125 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 126 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 127 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 128 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 129 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [4][  26/  26]	Loss 0.263 (0.335)	train_nll   0.26 (  0.34)	train_penalty   0.01 (  0.03)	weight_norm  22.30 ( 22.26)	train_acc   0.89 (  0.86)	train_minacc   0.47 (  0.23)	train_majacc   0.95 (  0.97)	train_corr   0.00 (  0.00)	l1 7.1554 (7.0637)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.75it/s] 23%|##3       | 6/26 [00:00<00:00, 29.29it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.29it/s] 42%|####2     | 11/26 [00:00<00:00, 36.74it/s] 62%|######1   | 16/26 [00:00<00:00, 40.64it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.64it/s] 81%|########  | 21/26 [00:00<00:00, 39.73it/s]100%|##########| 26/26 [00:00<00:00, 42.50it/s]100%|##########| 26/26 [00:00<00:00, 34.66it/s]
Test: [   0/  26]	Loss 0.294 (0.294)	test_acc   0.85 (  0.85)	test_minacc   0.41 (  0.41)	test_majacc   0.93 (  0.93)	Loss_d 0.294 (0.294)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.83 (  0.83)
Test: [  10/  26]	Loss 0.281 (0.308)	test_acc   0.89 (  0.88)	test_minacc   0.48 (  0.46)	test_majacc   0.95 (  0.94)	Loss_d 0.281 (0.308)	test_acc_d   0.89 (  0.88)	test_minacc_d   0.48 (  0.46)	test_majacc_d   0.95 (  0.94)	test_corr_d   0.86 (  0.84)
Test: [  20/  26]	Loss 0.330 (0.317)	test_acc   0.85 (  0.87)	test_minacc   0.45 (  0.45)	test_majacc   0.94 (  0.94)	Loss_d 0.330 (0.317)	test_acc_d   0.85 (  0.87)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.82 (  0.83)
Test: [  26/  26]	Loss 0.240 (0.313)	test_acc   0.90 (  0.87)	test_minacc   0.50 (  0.45)	test_majacc   0.96 (  0.94)	Loss_d 0.240 (0.313)	test_acc_d   0.90 (  0.87)	test_minacc_d   0.50 (  0.45)	test_majacc_d   0.96 (  0.94)	test_corr_d   0.85 (  0.84)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.72it/s]
Test: [  0/  1]	Loss 1.541 (1.541)	test_acc   0.39 (  0.39)	test_minacc   0.33 (  0.33)	test_majacc   0.94 (  0.94)	Loss_d 1.541 (1.541)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.53 (  0.53)
Test: [  1/  1]	Loss 1.541 (1.541)	test_acc   0.39 (  0.39)	test_minacc   0.33 (  0.33)	test_majacc   0.94 (  0.94)	Loss_d 1.541 (1.541)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.53 (  0.53)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/167/checkpoints/model_best.pth
Overall Timing[  4/  1]	epoch_time 0.0431 (0.0537)	validation_time 0.0004 (0.0017)	train_time 0.0426 (0.0514)
record: (train_acc, test_acc) (0.8697000238299369, 0.3890000283718109)
last accs (train_acc, test_acc) (0.8697000238299369, 0.3890000283718109)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.55it/s] 19%|#9        | 5/26 [00:00<00:01, 20.27it/s] 35%|###4      | 9/26 [00:00<00:00, 26.25it/s] 50%|#####     | 13/26 [00:00<00:00, 30.18it/s] 65%|######5   | 17/26 [00:00<00:00, 32.45it/s] 81%|########  | 21/26 [00:00<00:00, 34.57it/s] 96%|#########6| 25/26 [00:00<00:00, 35.75it/s]100%|##########| 26/26 [00:00<00:00, 28.63it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 130 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 131 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 132 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 133 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 134 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 135 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 136 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 137 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 138 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 139 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 140 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 141 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 142 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 143 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 144 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 145 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 146 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 147 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 148 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 149 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 150 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 151 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 152 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 153 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 154 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 155 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [5][  26/  26]	Loss 0.244 (0.317)	train_nll   0.24 (  0.32)	train_penalty   0.01 (  0.02)	weight_norm  22.40 ( 22.35)	train_acc   0.92 (  0.87)	train_minacc   0.59 (  0.32)	train_majacc   0.96 (  0.96)	train_corr   0.00 (  0.00)	l1 7.3634 (7.1428)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.04it/s] 23%|##3       | 6/26 [00:00<00:00, 25.43it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.43it/s] 42%|####2     | 11/26 [00:00<00:00, 34.41it/s] 62%|######1   | 16/26 [00:00<00:00, 39.07it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.07it/s] 81%|########  | 21/26 [00:00<00:00, 37.17it/s]100%|##########| 26/26 [00:00<00:00, 40.84it/s]100%|##########| 26/26 [00:00<00:00, 32.67it/s]
Test: [   0/  26]	Loss 0.273 (0.273)	test_acc   0.87 (  0.87)	test_minacc   0.50 (  0.50)	test_majacc   0.93 (  0.93)	Loss_d 0.273 (0.273)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.83 (  0.83)
Test: [  10/  26]	Loss 0.267 (0.292)	test_acc   0.91 (  0.89)	test_minacc   0.54 (  0.51)	test_majacc   0.96 (  0.95)	Loss_d 0.267 (0.292)	test_acc_d   0.91 (  0.89)	test_minacc_d   0.54 (  0.51)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.86 (  0.83)
Test: [  20/  26]	Loss 0.315 (0.302)	test_acc   0.86 (  0.88)	test_minacc   0.52 (  0.50)	test_majacc   0.93 (  0.94)	Loss_d 0.315 (0.302)	test_acc_d   0.86 (  0.88)	test_minacc_d   0.52 (  0.50)	test_majacc_d   0.93 (  0.94)	test_corr_d   0.80 (  0.83)
Test: [  26/  26]	Loss 0.223 (0.295)	test_acc   0.91 (  0.88)	test_minacc   0.59 (  0.51)	test_majacc   0.96 (  0.95)	Loss_d 0.223 (0.295)	test_acc_d   0.91 (  0.88)	test_minacc_d   0.59 (  0.51)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.84 (  0.83)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.78it/s]
Test: [  0/  1]	Loss 1.647 (1.647)	test_acc   0.41 (  0.41)	test_minacc   0.35 (  0.35)	test_majacc   0.93 (  0.93)	Loss_d 1.647 (1.647)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.48 (  0.48)
Test: [  1/  1]	Loss 1.647 (1.647)	test_acc   0.41 (  0.41)	test_minacc   0.35 (  0.35)	test_majacc   0.93 (  0.93)	Loss_d 1.647 (1.647)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.48 (  0.48)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/167/checkpoints/model_best.pth
Overall Timing[  5/  1]	epoch_time 0.0416 (0.0517)	validation_time 0.0004 (0.0015)	train_time 0.0412 (0.0497)
record: (train_acc, test_acc) (0.8805000212788582, 0.4050000309944153)
last accs (train_acc, test_acc) (0.8805000212788582, 0.4050000309944153)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02, 11.91it/s] 19%|#9        | 5/26 [00:00<00:01, 20.12it/s] 35%|###4      | 9/26 [00:00<00:00, 25.50it/s] 50%|#####     | 13/26 [00:00<00:00, 27.98it/s] 65%|######5   | 17/26 [00:00<00:00, 29.49it/s] 81%|########  | 21/26 [00:00<00:00, 32.07it/s] 96%|#########6| 25/26 [00:00<00:00, 32.67it/s]100%|##########| 26/26 [00:00<00:00, 27.18it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 156 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 157 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 158 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 159 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 160 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 161 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 162 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 163 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 164 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 165 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 166 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 167 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 168 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 169 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 170 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 171 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 172 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 173 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 174 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 175 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 176 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 177 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 178 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 179 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 180 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 181 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [6][  26/  26]	Loss 0.245 (0.301)	train_nll   0.24 (  0.30)	train_penalty   0.01 (  0.02)	weight_norm  22.53 ( 22.46)	train_acc   0.89 (  0.87)	train_minacc   0.47 (  0.38)	train_majacc   0.95 (  0.96)	train_corr   0.00 (  0.00)	l1 7.2967 (7.1668)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 24.40it/s] 35%|###4      | 9/26 [00:00<00:00, 39.95it/s]                                               35%|###4      | 9/26 [00:00<00:00, 39.95it/s] 54%|#####3    | 14/26 [00:00<00:00, 43.49it/s] 73%|#######3  | 19/26 [00:00<00:00, 43.17it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 43.17it/s] 92%|#########2| 24/26 [00:00<00:00, 45.00it/s]100%|##########| 26/26 [00:00<00:00, 37.88it/s]
Test: [   0/  26]	Loss 0.279 (0.279)	test_acc   0.87 (  0.87)	test_minacc   0.46 (  0.46)	test_majacc   0.94 (  0.94)	Loss_d 0.279 (0.279)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.46 (  0.46)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.84 (  0.84)
Test: [  10/  26]	Loss 0.266 (0.296)	test_acc   0.90 (  0.88)	test_minacc   0.52 (  0.47)	test_majacc   0.96 (  0.95)	Loss_d 0.266 (0.296)	test_acc_d   0.90 (  0.88)	test_minacc_d   0.52 (  0.47)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.86 (  0.84)
Test: [  20/  26]	Loss 0.299 (0.295)	test_acc   0.87 (  0.88)	test_minacc   0.48 (  0.48)	test_majacc   0.95 (  0.95)	Loss_d 0.299 (0.295)	test_acc_d   0.87 (  0.88)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.82 (  0.84)
Test: [  26/  26]	Loss 0.216 (0.287)	test_acc   0.91 (  0.88)	test_minacc   0.53 (  0.49)	test_majacc   0.96 (  0.95)	Loss_d 0.216 (0.287)	test_acc_d   0.91 (  0.88)	test_minacc_d   0.53 (  0.49)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.86 (  0.84)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.00it/s]
Test: [  0/  1]	Loss 1.745 (1.745)	test_acc   0.40 (  0.40)	test_minacc   0.34 (  0.34)	test_majacc   0.96 (  0.96)	Loss_d 1.745 (1.745)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.52 (  0.52)
Test: [  1/  1]	Loss 1.745 (1.745)	test_acc   0.40 (  0.40)	test_minacc   0.34 (  0.34)	test_majacc   0.96 (  0.96)	Loss_d 1.745 (1.745)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.52 (  0.52)
Overall Timing[  6/  1]	epoch_time 0.0467 (0.0510)	validation_time 0.0005 (0.0013)	train_time 0.0462 (0.0492)
record: (train_acc, test_acc) (0.8805000212788582, 0.4050000309944153)
last accs (train_acc, test_acc) (0.8802000234127044, 0.4010000228881836)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.36it/s] 19%|#9        | 5/26 [00:00<00:01, 19.27it/s] 35%|###4      | 9/26 [00:00<00:00, 25.69it/s] 50%|#####     | 13/26 [00:00<00:00, 29.97it/s] 65%|######5   | 17/26 [00:00<00:00, 32.03it/s] 81%|########  | 21/26 [00:00<00:00, 33.48it/s] 96%|#########6| 25/26 [00:00<00:00, 33.26it/s]100%|##########| 26/26 [00:00<00:00, 26.76it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 182 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 183 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 184 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 185 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 186 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 187 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 188 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 189 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 190 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 191 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 192 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 193 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 194 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 195 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 196 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 197 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 198 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 199 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 200 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 201 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 202 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 203 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 204 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 205 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 206 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 207 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [7][  26/  26]	Loss 0.008 (0.212)	train_nll   0.33 (  0.32)	train_penalty   0.01 (  0.02)	weight_norm  22.66 ( 22.59)	train_acc   0.85 (  0.86)	train_minacc   0.50 (  0.44)	train_majacc   0.90 (  0.93)	train_corr   0.00 (  0.00)	l1 6.5788 (7.0808)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.97it/s] 27%|##6       | 7/26 [00:00<00:00, 28.56it/s]                                               27%|##6       | 7/26 [00:00<00:00, 28.56it/s] 50%|#####     | 13/26 [00:00<00:00, 37.31it/s] 73%|#######3  | 19/26 [00:00<00:00, 43.55it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 43.55it/s] 92%|#########2| 24/26 [00:00<00:00, 45.52it/s]100%|##########| 26/26 [00:00<00:00, 35.65it/s]
Test: [   0/  26]	Loss 0.338 (0.338)	test_acc   0.86 (  0.86)	test_minacc   0.59 (  0.59)	test_majacc   0.90 (  0.90)	Loss_d 0.338 (0.338)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.72 (  0.72)
Test: [  10/  26]	Loss 0.348 (0.370)	test_acc   0.87 (  0.85)	test_minacc   0.62 (  0.56)	test_majacc   0.91 (  0.89)	Loss_d 0.348 (0.370)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.62 (  0.56)	test_majacc_d   0.91 (  0.89)	test_corr_d   0.76 (  0.73)
Test: [  20/  26]	Loss 0.383 (0.369)	test_acc   0.82 (  0.84)	test_minacc   0.51 (  0.57)	test_majacc   0.89 (  0.89)	Loss_d 0.383 (0.369)	test_acc_d   0.82 (  0.84)	test_minacc_d   0.51 (  0.57)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.71 (  0.72)
Test: [  26/  26]	Loss 0.352 (0.369)	test_acc   0.84 (  0.84)	test_minacc   0.53 (  0.57)	test_majacc   0.88 (  0.89)	Loss_d 0.352 (0.369)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.53 (  0.57)	test_majacc_d   0.88 (  0.89)	test_corr_d   0.73 (  0.72)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.00it/s]
Test: [  0/  1]	Loss 1.056 (1.056)	test_acc   0.46 (  0.46)	test_minacc   0.41 (  0.41)	test_majacc   0.92 (  0.92)	Loss_d 1.056 (1.056)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.29 (  0.29)
Test: [  1/  1]	Loss 1.056 (1.056)	test_acc   0.46 (  0.46)	test_minacc   0.41 (  0.41)	test_majacc   0.92 (  0.92)	Loss_d 1.056 (1.056)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.29 (  0.29)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/167/checkpoints/model_best.pth
Overall Timing[  7/  1]	epoch_time 0.0412 (0.0498)	validation_time 0.0003 (0.0012)	train_time 0.0408 (0.0481)
record: (train_acc, test_acc) (0.8443000259399414, 0.46400001645088196)
last accs (train_acc, test_acc) (0.8443000259399414, 0.46400001645088196)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 19.36it/s] 27%|##6       | 7/26 [00:00<00:00, 28.05it/s] 42%|####2     | 11/26 [00:00<00:00, 31.44it/s] 58%|#####7    | 15/26 [00:00<00:00, 31.06it/s] 73%|#######3  | 19/26 [00:00<00:00, 31.82it/s] 88%|########8 | 23/26 [00:00<00:00, 32.37it/s]100%|##########| 26/26 [00:00<00:00, 28.00it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 208 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 209 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 210 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 211 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 212 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 213 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 214 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 215 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 216 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 217 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 218 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 219 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 220 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 221 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 222 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 223 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 224 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 225 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 226 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 227 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 228 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 229 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 230 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 231 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 232 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 233 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [8][  26/  26]	Loss 0.005 (0.004)	train_nll   0.52 (  0.50)	train_penalty   0.00 (  0.00)	weight_norm  22.74 ( 22.71)	train_acc   0.72 (  0.75)	train_minacc   0.84 (  0.69)	train_majacc   0.70 (  0.76)	train_corr   0.00 (  0.00)	l1 5.6277 (5.9690)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 27.14it/s] 31%|###       | 8/26 [00:00<00:00, 36.22it/s]                                               31%|###       | 8/26 [00:00<00:00, 36.22it/s] 50%|#####     | 13/26 [00:00<00:00, 39.73it/s] 69%|######9   | 18/26 [00:00<00:00, 42.82it/s]                                                69%|######9   | 18/26 [00:00<00:00, 42.82it/s] 88%|########8 | 23/26 [00:00<00:00, 42.82it/s]100%|##########| 26/26 [00:00<00:00, 37.47it/s]
Test: [   0/  26]	Loss 0.516 (0.516)	test_acc   0.74 (  0.74)	test_minacc   0.78 (  0.78)	test_majacc   0.73 (  0.73)	Loss_d 0.516 (0.516)	test_acc_d   0.74 (  0.74)	test_minacc_d   0.78 (  0.78)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.43 (  0.43)
Test: [  10/  26]	Loss 0.519 (0.522)	test_acc   0.72 (  0.72)	test_minacc   0.76 (  0.76)	test_majacc   0.71 (  0.71)	Loss_d 0.519 (0.522)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.76 (  0.76)	test_majacc_d   0.71 (  0.71)	test_corr_d   0.45 (  0.42)
Test: [  20/  26]	Loss 0.512 (0.525)	test_acc   0.76 (  0.72)	test_minacc   0.81 (  0.78)	test_majacc   0.75 (  0.71)	Loss_d 0.512 (0.525)	test_acc_d   0.76 (  0.72)	test_minacc_d   0.81 (  0.78)	test_majacc_d   0.75 (  0.71)	test_corr_d   0.42 (  0.40)
Test: [  26/  26]	Loss 0.528 (0.525)	test_acc   0.72 (  0.72)	test_minacc   0.84 (  0.79)	test_majacc   0.70 (  0.71)	Loss_d 0.528 (0.525)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.84 (  0.79)	test_majacc_d   0.70 (  0.71)	test_corr_d   0.40 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.62it/s]
Test: [  0/  1]	Loss 0.642 (0.642)	test_acc   0.69 (  0.69)	test_minacc   0.69 (  0.69)	test_majacc   0.72 (  0.72)	Loss_d 0.642 (0.642)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.72 (  0.72)	test_corr_d  -0.23 ( -0.23)
Test: [  1/  1]	Loss 0.642 (0.642)	test_acc   0.69 (  0.69)	test_minacc   0.69 (  0.69)	test_majacc   0.72 (  0.72)	Loss_d 0.642 (0.642)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.72 (  0.72)	test_corr_d  -0.23 ( -0.23)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/167/checkpoints/model_best.pth
Overall Timing[  8/  1]	epoch_time 0.0463 (0.0494)	validation_time 0.0004 (0.0011)	train_time 0.0458 (0.0479)
record: (train_acc, test_acc) (0.7194000356197358, 0.6920000314712524)
last accs (train_acc, test_acc) (0.7194000356197358, 0.6920000314712524)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.68it/s] 19%|#9        | 5/26 [00:00<00:00, 21.62it/s] 35%|###4      | 9/26 [00:00<00:00, 27.62it/s] 50%|#####     | 13/26 [00:00<00:00, 31.61it/s] 65%|######5   | 17/26 [00:00<00:00, 33.72it/s] 81%|########  | 21/26 [00:00<00:00, 33.89it/s] 96%|#########6| 25/26 [00:00<00:00, 34.74it/s]100%|##########| 26/26 [00:00<00:00, 28.87it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 234 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 235 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 236 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 237 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 238 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 239 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 240 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 241 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 242 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 243 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 244 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 245 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 246 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 247 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 248 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 249 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 250 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 251 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 252 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 253 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 254 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 255 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 256 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 257 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 258 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 259 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [9][  26/  26]	Loss 0.002 (0.001)	train_nll   0.57 (  0.55)	train_penalty   0.00 (  0.00)	weight_norm  22.75 ( 22.75)	train_acc   0.65 (  0.69)	train_minacc   0.75 (  0.75)	train_majacc   0.64 (  0.68)	train_corr   0.00 (  0.00)	l1 5.6059 (5.6595)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.92it/s] 19%|#9        | 5/26 [00:00<00:00, 24.77it/s] 38%|###8      | 10/26 [00:00<00:00, 34.88it/s]                                                38%|###8      | 10/26 [00:00<00:00, 34.88it/s] 58%|#####7    | 15/26 [00:00<00:00, 36.24it/s]                                                58%|#####7    | 15/26 [00:00<00:00, 36.24it/s] 81%|########  | 21/26 [00:00<00:00, 42.05it/s]100%|##########| 26/26 [00:00<00:00, 35.80it/s]
Test: [   0/  26]	Loss 0.542 (0.542)	test_acc   0.69 (  0.69)	test_minacc   0.69 (  0.69)	test_majacc   0.69 (  0.69)	Loss_d 0.542 (0.542)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.69 (  0.69)	test_corr_d   0.41 (  0.41)
Test: [  10/  26]	Loss 0.557 (0.555)	test_acc   0.67 (  0.68)	test_minacc   0.70 (  0.70)	test_majacc   0.66 (  0.68)	Loss_d 0.557 (0.555)	test_acc_d   0.67 (  0.68)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.66 (  0.68)	test_corr_d   0.42 (  0.40)
Test: [  20/  26]	Loss 0.539 (0.554)	test_acc   0.72 (  0.68)	test_minacc   0.70 (  0.73)	test_majacc   0.72 (  0.68)	Loss_d 0.539 (0.554)	test_acc_d   0.72 (  0.68)	test_minacc_d   0.70 (  0.73)	test_majacc_d   0.72 (  0.68)	test_corr_d   0.43 (  0.38)
Test: [  26/  26]	Loss 0.572 (0.556)	test_acc   0.66 (  0.68)	test_minacc   0.75 (  0.73)	test_majacc   0.64 (  0.68)	Loss_d 0.572 (0.556)	test_acc_d   0.66 (  0.68)	test_minacc_d   0.75 (  0.73)	test_majacc_d   0.64 (  0.68)	test_corr_d   0.36 (  0.38)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.93it/s]
Test: [  0/  1]	Loss 0.698 (0.698)	test_acc   0.67 (  0.67)	test_minacc   0.66 (  0.66)	test_majacc   0.73 (  0.73)	Loss_d 0.698 (0.698)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.73 (  0.73)	test_corr_d  -0.17 ( -0.17)
Test: [  1/  1]	Loss 0.698 (0.698)	test_acc   0.67 (  0.67)	test_minacc   0.66 (  0.66)	test_majacc   0.73 (  0.73)	Loss_d 0.698 (0.698)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.73 (  0.73)	test_corr_d  -0.17 ( -0.17)
Overall Timing[  9/  1]	epoch_time 0.0401 (0.0485)	validation_time 0.0003 (0.0010)	train_time 0.0397 (0.0471)
record: (train_acc, test_acc) (0.7194000356197358, 0.6920000314712524)
last accs (train_acc, test_acc) (0.6836000373959541, 0.6700000166893005)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.21it/s] 15%|#5        | 4/26 [00:00<00:01, 16.63it/s] 31%|###       | 8/26 [00:00<00:00, 24.69it/s] 46%|####6     | 12/26 [00:00<00:00, 28.05it/s] 62%|######1   | 16/26 [00:00<00:00, 30.22it/s] 77%|#######6  | 20/26 [00:00<00:00, 31.54it/s] 92%|#########2| 24/26 [00:00<00:00, 33.10it/s]100%|##########| 26/26 [00:00<00:00, 27.06it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 260 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 261 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 262 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 263 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 264 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 265 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 266 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 267 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 268 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 269 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 270 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 271 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 272 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 273 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 274 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 275 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 276 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 277 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 278 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 279 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 280 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 281 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 282 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 283 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 284 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 285 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [10][  26/  26]	Loss 0.001 (0.001)	train_nll   0.59 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  22.75 ( 22.75)	train_acc   0.64 (  0.68)	train_minacc   0.75 (  0.73)	train_majacc   0.63 (  0.67)	train_corr   0.00 (  0.00)	l1 5.5792 (5.6043)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.64it/s] 27%|##6       | 7/26 [00:00<00:00, 34.46it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.46it/s] 46%|####6     | 12/26 [00:00<00:00, 39.26it/s] 65%|######5   | 17/26 [00:00<00:00, 36.77it/s]                                                65%|######5   | 17/26 [00:00<00:00, 36.77it/s] 85%|########4 | 22/26 [00:00<00:00, 40.14it/s]100%|##########| 26/26 [00:00<00:00, 35.09it/s]
Test: [   0/  26]	Loss 0.562 (0.562)	test_acc   0.69 (  0.69)	test_minacc   0.70 (  0.70)	test_majacc   0.69 (  0.69)	Loss_d 0.562 (0.562)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.69 (  0.69)	test_corr_d   0.38 (  0.38)
Test: [  10/  26]	Loss 0.575 (0.574)	test_acc   0.65 (  0.66)	test_minacc   0.68 (  0.71)	test_majacc   0.64 (  0.65)	Loss_d 0.575 (0.574)	test_acc_d   0.65 (  0.66)	test_minacc_d   0.68 (  0.71)	test_majacc_d   0.64 (  0.65)	test_corr_d   0.39 (  0.37)
Test: [  20/  26]	Loss 0.565 (0.572)	test_acc   0.70 (  0.67)	test_minacc   0.70 (  0.73)	test_majacc   0.70 (  0.65)	Loss_d 0.565 (0.572)	test_acc_d   0.70 (  0.67)	test_minacc_d   0.70 (  0.73)	test_majacc_d   0.70 (  0.65)	test_corr_d   0.39 (  0.36)
Test: [  26/  26]	Loss 0.589 (0.574)	test_acc   0.64 (  0.66)	test_minacc   0.75 (  0.73)	test_majacc   0.63 (  0.65)	Loss_d 0.589 (0.574)	test_acc_d   0.64 (  0.66)	test_minacc_d   0.75 (  0.73)	test_majacc_d   0.63 (  0.65)	test_corr_d   0.33 (  0.35)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.46it/s]
Test: [  0/  1]	Loss 0.698 (0.698)	test_acc   0.67 (  0.67)	test_minacc   0.67 (  0.67)	test_majacc   0.69 (  0.69)	Loss_d 0.698 (0.698)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.69 (  0.69)	test_corr_d  -0.17 ( -0.17)
Test: [  1/  1]	Loss 0.698 (0.698)	test_acc   0.67 (  0.67)	test_minacc   0.67 (  0.67)	test_majacc   0.69 (  0.69)	Loss_d 0.698 (0.698)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.69 (  0.69)	test_corr_d  -0.17 ( -0.17)
Overall Timing[ 10/  1]	epoch_time 0.0407 (0.0478)	validation_time 0.0007 (0.0010)	train_time 0.0400 (0.0464)
record: (train_acc, test_acc) (0.7194000356197358, 0.6920000314712524)
last accs (train_acc, test_acc) (0.6640000312924385, 0.6700000166893005)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.66it/s] 23%|##3       | 6/26 [00:00<00:00, 28.94it/s] 38%|###8      | 10/26 [00:00<00:00, 31.61it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.73it/s] 69%|######9   | 18/26 [00:00<00:00, 32.87it/s] 85%|########4 | 22/26 [00:00<00:00, 33.81it/s]100%|##########| 26/26 [00:00<00:00, 34.06it/s]100%|##########| 26/26 [00:00<00:00, 30.20it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 286 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 287 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 288 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 289 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 290 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 291 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 292 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 293 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 294 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 295 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 296 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 297 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 298 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 299 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 300 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 301 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 302 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 303 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 304 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 305 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 306 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 307 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 308 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 309 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 310 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 311 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [11][  26/  26]	Loss 0.001 (0.000)	train_nll   0.60 (  0.58)	train_penalty   0.00 (  0.00)	weight_norm  22.76 ( 22.75)	train_acc   0.64 (  0.66)	train_minacc   0.75 (  0.73)	train_majacc   0.62 (  0.64)	train_corr   0.00 (  0.00)	l1 5.5713 (5.5878)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  4.03it/s] 23%|##3       | 6/26 [00:00<00:01, 19.49it/s]                                               23%|##3       | 6/26 [00:00<00:01, 19.49it/s] 42%|####2     | 11/26 [00:00<00:00, 28.89it/s] 58%|#####7    | 15/26 [00:00<00:00, 32.36it/s] 77%|#######6  | 20/26 [00:00<00:00, 37.17it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 37.17it/s] 96%|#########6| 25/26 [00:00<00:00, 39.97it/s]100%|##########| 26/26 [00:00<00:00, 30.05it/s]
Test: [   0/  26]	Loss 0.572 (0.572)	test_acc   0.69 (  0.69)	test_minacc   0.70 (  0.70)	test_majacc   0.68 (  0.68)	Loss_d 0.572 (0.572)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.68 (  0.68)	test_corr_d   0.37 (  0.37)
Test: [  10/  26]	Loss 0.582 (0.583)	test_acc   0.65 (  0.65)	test_minacc   0.68 (  0.71)	test_majacc   0.64 (  0.64)	Loss_d 0.582 (0.583)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.68 (  0.71)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.39 (  0.36)
Test: [  20/  26]	Loss 0.580 (0.581)	test_acc   0.67 (  0.66)	test_minacc   0.69 (  0.72)	test_majacc   0.67 (  0.64)	Loss_d 0.580 (0.581)	test_acc_d   0.67 (  0.66)	test_minacc_d   0.69 (  0.72)	test_majacc_d   0.67 (  0.64)	test_corr_d   0.37 (  0.35)
Test: [  26/  26]	Loss 0.597 (0.582)	test_acc   0.64 (  0.66)	test_minacc   0.75 (  0.73)	test_majacc   0.62 (  0.64)	Loss_d 0.597 (0.582)	test_acc_d   0.64 (  0.66)	test_minacc_d   0.75 (  0.73)	test_majacc_d   0.62 (  0.64)	test_corr_d   0.33 (  0.34)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.10it/s]
Test: [  0/  1]	Loss 0.708 (0.708)	test_acc   0.67 (  0.67)	test_minacc   0.66 (  0.66)	test_majacc   0.67 (  0.67)	Loss_d 0.708 (0.708)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.67 (  0.67)	test_corr_d  -0.15 ( -0.15)
Test: [  1/  1]	Loss 0.708 (0.708)	test_acc   0.67 (  0.67)	test_minacc   0.66 (  0.66)	test_majacc   0.67 (  0.67)	Loss_d 0.708 (0.708)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.67 (  0.67)	test_corr_d  -0.15 ( -0.15)
Overall Timing[ 11/  1]	epoch_time 0.0416 (0.0472)	validation_time 0.0012 (0.0010)	train_time 0.0404 (0.0459)
record: (train_acc, test_acc) (0.7194000356197358, 0.6920000314712524)
last accs (train_acc, test_acc) (0.655800018787384, 0.6650000214576721)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.14it/s] 23%|##3       | 6/26 [00:00<00:00, 28.31it/s] 38%|###8      | 10/26 [00:00<00:00, 31.47it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.98it/s] 69%|######9   | 18/26 [00:00<00:00, 34.00it/s] 85%|########4 | 22/26 [00:00<00:00, 34.71it/s]100%|##########| 26/26 [00:00<00:00, 35.30it/s]100%|##########| 26/26 [00:00<00:00, 30.93it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 312 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 313 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 314 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 315 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 316 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 317 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 318 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 319 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 320 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 321 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 322 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 323 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 324 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 325 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 326 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 327 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 328 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 329 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 330 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 331 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 332 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 333 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 334 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 335 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 336 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 337 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [12][  26/  26]	Loss 0.001 (0.000)	train_nll   0.60 (  0.59)	train_penalty   0.00 (  0.00)	weight_norm  22.76 ( 22.76)	train_acc   0.63 (  0.65)	train_minacc   0.72 (  0.73)	train_majacc   0.61 (  0.63)	train_corr   0.00 (  0.00)	l1 5.5708 (5.5875)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.74it/s] 23%|##3       | 6/26 [00:00<00:00, 28.71it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.71it/s] 42%|####2     | 11/26 [00:00<00:00, 36.03it/s] 62%|######1   | 16/26 [00:00<00:00, 36.35it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.35it/s] 81%|########  | 21/26 [00:00<00:00, 39.92it/s]100%|##########| 26/26 [00:00<00:00, 42.16it/s]100%|##########| 26/26 [00:00<00:00, 33.80it/s]
Test: [   0/  26]	Loss 0.580 (0.580)	test_acc   0.69 (  0.69)	test_minacc   0.70 (  0.70)	test_majacc   0.69 (  0.69)	Loss_d 0.580 (0.580)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.69 (  0.69)	test_corr_d   0.36 (  0.36)
Test: [  10/  26]	Loss 0.585 (0.589)	test_acc   0.64 (  0.65)	test_minacc   0.68 (  0.71)	test_majacc   0.64 (  0.64)	Loss_d 0.585 (0.589)	test_acc_d   0.64 (  0.65)	test_minacc_d   0.68 (  0.71)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.38 (  0.35)
Test: [  20/  26]	Loss 0.589 (0.586)	test_acc   0.67 (  0.65)	test_minacc   0.70 (  0.73)	test_majacc   0.66 (  0.64)	Loss_d 0.589 (0.586)	test_acc_d   0.67 (  0.65)	test_minacc_d   0.70 (  0.73)	test_majacc_d   0.66 (  0.64)	test_corr_d   0.35 (  0.34)
Test: [  26/  26]	Loss 0.601 (0.588)	test_acc   0.63 (  0.65)	test_minacc   0.69 (  0.73)	test_majacc   0.62 (  0.64)	Loss_d 0.601 (0.588)	test_acc_d   0.63 (  0.65)	test_minacc_d   0.69 (  0.73)	test_majacc_d   0.62 (  0.64)	test_corr_d   0.33 (  0.34)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.11it/s]
Test: [  0/  1]	Loss 0.716 (0.716)	test_acc   0.66 (  0.66)	test_minacc   0.66 (  0.66)	test_majacc   0.64 (  0.64)	Loss_d 0.716 (0.716)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.64 (  0.64)	test_corr_d  -0.13 ( -0.13)
Test: [  1/  1]	Loss 0.716 (0.716)	test_acc   0.66 (  0.66)	test_minacc   0.66 (  0.66)	test_majacc   0.64 (  0.64)	Loss_d 0.716 (0.716)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.64 (  0.64)	test_corr_d  -0.13 ( -0.13)
Overall Timing[ 12/  1]	epoch_time 0.0423 (0.0469)	validation_time 0.0006 (0.0010)	train_time 0.0417 (0.0456)
record: (train_acc, test_acc) (0.7194000356197358, 0.6920000314712524)
last accs (train_acc, test_acc) (0.652600011587143, 0.6600000262260437)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.28it/s] 19%|#9        | 5/26 [00:00<00:00, 21.06it/s] 35%|###4      | 9/26 [00:00<00:00, 26.21it/s] 50%|#####     | 13/26 [00:00<00:00, 28.89it/s] 65%|######5   | 17/26 [00:00<00:00, 30.68it/s] 81%|########  | 21/26 [00:00<00:00, 32.05it/s] 96%|#########6| 25/26 [00:00<00:00, 33.27it/s]100%|##########| 26/26 [00:00<00:00, 28.03it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 338 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 339 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 340 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 341 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 342 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 343 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 344 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 345 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 346 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 347 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 348 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 349 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 350 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 351 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 352 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 353 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 354 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 355 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 356 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 357 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 358 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 359 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 360 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 361 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 362 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 363 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [13][  26/  26]	Loss 0.000 (0.000)	train_nll   0.61 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  22.76 ( 22.76)	train_acc   0.61 (  0.64)	train_minacc   0.69 (  0.73)	train_majacc   0.60 (  0.63)	train_corr   0.00 (  0.00)	l1 5.5709 (5.5896)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.26it/s] 23%|##3       | 6/26 [00:00<00:00, 26.41it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.41it/s] 42%|####2     | 11/26 [00:00<00:00, 34.34it/s] 62%|######1   | 16/26 [00:00<00:00, 39.13it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.13it/s] 81%|########  | 21/26 [00:00<00:00, 36.45it/s]100%|##########| 26/26 [00:00<00:00, 33.66it/s]
Test: [   0/  26]	Loss 0.585 (0.585)	test_acc   0.67 (  0.67)	test_minacc   0.72 (  0.72)	test_majacc   0.67 (  0.67)	Loss_d 0.585 (0.585)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.67 (  0.67)	test_corr_d   0.35 (  0.35)
Test: [  10/  26]	Loss 0.588 (0.593)	test_acc   0.65 (  0.65)	test_minacc   0.72 (  0.71)	test_majacc   0.64 (  0.64)	Loss_d 0.588 (0.593)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.72 (  0.71)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.38 (  0.35)
Test: [  20/  26]	Loss 0.595 (0.590)	test_acc   0.67 (  0.65)	test_minacc   0.72 (  0.73)	test_majacc   0.66 (  0.63)	Loss_d 0.595 (0.590)	test_acc_d   0.67 (  0.65)	test_minacc_d   0.72 (  0.73)	test_majacc_d   0.66 (  0.63)	test_corr_d   0.35 (  0.34)
Test: [  26/  26]	Loss 0.605 (0.592)	test_acc   0.62 (  0.65)	test_minacc   0.72 (  0.73)	test_majacc   0.61 (  0.63)	Loss_d 0.605 (0.592)	test_acc_d   0.62 (  0.65)	test_minacc_d   0.72 (  0.73)	test_majacc_d   0.61 (  0.63)	test_corr_d   0.33 (  0.34)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 57.91it/s]
Test: [  0/  1]	Loss 0.723 (0.723)	test_acc   0.66 (  0.66)	test_minacc   0.67 (  0.67)	test_majacc   0.61 (  0.61)	Loss_d 0.723 (0.723)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.61 (  0.61)	test_corr_d  -0.11 ( -0.11)
Test: [  1/  1]	Loss 0.723 (0.723)	test_acc   0.66 (  0.66)	test_minacc   0.67 (  0.67)	test_majacc   0.61 (  0.61)	Loss_d 0.723 (0.723)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.61 (  0.61)	test_corr_d  -0.11 ( -0.11)
Overall Timing[ 13/  1]	epoch_time 0.0437 (0.0466)	validation_time 0.0004 (0.0010)	train_time 0.0432 (0.0454)
record: (train_acc, test_acc) (0.7194000356197358, 0.6920000314712524)
last accs (train_acc, test_acc) (0.6485000181794166, 0.6610000133514404)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.65it/s] 19%|#9        | 5/26 [00:00<00:00, 23.32it/s] 35%|###4      | 9/26 [00:00<00:00, 28.12it/s] 50%|#####     | 13/26 [00:00<00:00, 30.32it/s] 65%|######5   | 17/26 [00:00<00:00, 30.39it/s] 81%|########  | 21/26 [00:00<00:00, 31.65it/s] 96%|#########6| 25/26 [00:00<00:00, 32.53it/s]100%|##########| 26/26 [00:00<00:00, 27.94it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 364 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 365 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 366 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 367 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 368 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 369 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 370 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 371 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 372 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 373 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 374 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 375 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 376 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 377 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 378 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 379 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 380 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 381 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 382 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 383 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 384 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 385 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 386 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 387 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 388 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 389 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [14][  26/  26]	Loss 0.000 (0.000)	train_nll   0.61 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  22.76 ( 22.76)	train_acc   0.60 (  0.64)	train_minacc   0.69 (  0.74)	train_majacc   0.59 (  0.62)	train_corr   0.00 (  0.00)	l1 5.5713 (5.5917)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.74it/s] 27%|##6       | 7/26 [00:00<00:00, 34.16it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.16it/s] 46%|####6     | 12/26 [00:00<00:00, 39.84it/s] 65%|######5   | 17/26 [00:00<00:00, 39.02it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.02it/s] 85%|########4 | 22/26 [00:00<00:00, 42.06it/s]100%|##########| 26/26 [00:00<00:00, 36.62it/s]
Test: [   0/  26]	Loss 0.590 (0.590)	test_acc   0.67 (  0.67)	test_minacc   0.70 (  0.70)	test_majacc   0.66 (  0.66)	Loss_d 0.590 (0.590)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.66 (  0.66)	test_corr_d   0.35 (  0.35)
Test: [  10/  26]	Loss 0.589 (0.595)	test_acc   0.65 (  0.65)	test_minacc   0.72 (  0.71)	test_majacc   0.64 (  0.63)	Loss_d 0.589 (0.595)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.72 (  0.71)	test_majacc_d   0.64 (  0.63)	test_corr_d   0.38 (  0.35)
Test: [  20/  26]	Loss 0.599 (0.592)	test_acc   0.66 (  0.65)	test_minacc   0.70 (  0.73)	test_majacc   0.65 (  0.63)	Loss_d 0.599 (0.592)	test_acc_d   0.66 (  0.65)	test_minacc_d   0.70 (  0.73)	test_majacc_d   0.65 (  0.63)	test_corr_d   0.34 (  0.34)
Test: [  26/  26]	Loss 0.607 (0.594)	test_acc   0.61 (  0.65)	test_minacc   0.69 (  0.73)	test_majacc   0.60 (  0.63)	Loss_d 0.607 (0.594)	test_acc_d   0.61 (  0.65)	test_minacc_d   0.69 (  0.73)	test_majacc_d   0.60 (  0.63)	test_corr_d   0.32 (  0.33)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.25it/s]
Test: [  0/  1]	Loss 0.728 (0.728)	test_acc   0.66 (  0.66)	test_minacc   0.67 (  0.67)	test_majacc   0.61 (  0.61)	Loss_d 0.728 (0.728)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.61 (  0.61)	test_corr_d  -0.10 ( -0.10)
Test: [  1/  1]	Loss 0.728 (0.728)	test_acc   0.66 (  0.66)	test_minacc   0.67 (  0.67)	test_majacc   0.61 (  0.61)	Loss_d 0.728 (0.728)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.61 (  0.61)	test_corr_d  -0.10 ( -0.10)
Overall Timing[ 14/  1]	epoch_time 0.0402 (0.0462)	validation_time 0.0004 (0.0009)	train_time 0.0398 (0.0450)
record: (train_acc, test_acc) (0.7194000356197358, 0.6920000314712524)
last accs (train_acc, test_acc) (0.6466000098586082, 0.6630000472068787)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.89it/s] 19%|#9        | 5/26 [00:00<00:01, 19.24it/s] 35%|###4      | 9/26 [00:00<00:00, 24.49it/s] 50%|#####     | 13/26 [00:00<00:00, 28.08it/s] 65%|######5   | 17/26 [00:00<00:00, 30.06it/s] 81%|########  | 21/26 [00:00<00:00, 31.83it/s] 96%|#########6| 25/26 [00:00<00:00, 32.97it/s]100%|##########| 26/26 [00:00<00:00, 27.00it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 390 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 391 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 392 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 393 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 394 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 395 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 396 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 397 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 398 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 399 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 400 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 401 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 402 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 403 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 404 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 405 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 406 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 407 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 408 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 409 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 410 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 411 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 412 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 413 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 414 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 415 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [15][  26/  26]	Loss 0.000 (0.000)	train_nll   0.61 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  22.76 ( 22.76)	train_acc   0.61 (  0.63)	train_minacc   0.72 (  0.74)	train_majacc   0.60 (  0.61)	train_corr   0.00 (  0.00)	l1 5.5726 (5.5952)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 24.23it/s] 31%|###       | 8/26 [00:00<00:00, 36.36it/s]                                               31%|###       | 8/26 [00:00<00:00, 36.36it/s] 50%|#####     | 13/26 [00:00<00:00, 37.89it/s] 69%|######9   | 18/26 [00:00<00:00, 41.68it/s]                                                69%|######9   | 18/26 [00:00<00:00, 41.68it/s] 88%|########8 | 23/26 [00:00<00:00, 41.56it/s]100%|##########| 26/26 [00:00<00:00, 36.62it/s]
Test: [   0/  26]	Loss 0.592 (0.592)	test_acc   0.66 (  0.66)	test_minacc   0.69 (  0.69)	test_majacc   0.65 (  0.65)	Loss_d 0.592 (0.592)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.35 (  0.35)
Test: [  10/  26]	Loss 0.589 (0.596)	test_acc   0.64 (  0.64)	test_minacc   0.70 (  0.70)	test_majacc   0.63 (  0.63)	Loss_d 0.589 (0.596)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.38 (  0.35)
Test: [  20/  26]	Loss 0.599 (0.593)	test_acc   0.66 (  0.65)	test_minacc   0.70 (  0.72)	test_majacc   0.66 (  0.63)	Loss_d 0.599 (0.593)	test_acc_d   0.66 (  0.65)	test_minacc_d   0.70 (  0.72)	test_majacc_d   0.66 (  0.63)	test_corr_d   0.34 (  0.34)
Test: [  26/  26]	Loss 0.608 (0.594)	test_acc   0.61 (  0.65)	test_minacc   0.72 (  0.73)	test_majacc   0.60 (  0.63)	Loss_d 0.608 (0.594)	test_acc_d   0.61 (  0.65)	test_minacc_d   0.72 (  0.73)	test_majacc_d   0.60 (  0.63)	test_corr_d   0.32 (  0.33)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.22it/s]
Test: [  0/  1]	Loss 0.732 (0.732)	test_acc   0.66 (  0.66)	test_minacc   0.66 (  0.66)	test_majacc   0.63 (  0.63)	Loss_d 0.732 (0.732)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.63 (  0.63)	test_corr_d  -0.08 ( -0.08)
Test: [  1/  1]	Loss 0.732 (0.732)	test_acc   0.66 (  0.66)	test_minacc   0.66 (  0.66)	test_majacc   0.63 (  0.63)	Loss_d 0.732 (0.732)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.63 (  0.63)	test_corr_d  -0.08 ( -0.08)
Overall Timing[ 15/  1]	epoch_time 0.0419 (0.0459)	validation_time 0.0004 (0.0009)	train_time 0.0415 (0.0448)
record: (train_acc, test_acc) (0.7194000356197358, 0.6920000314712524)
last accs (train_acc, test_acc) (0.6472000204920769, 0.6610000133514404)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.63it/s] 23%|##3       | 6/26 [00:00<00:00, 28.46it/s] 38%|###8      | 10/26 [00:00<00:00, 31.30it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.61it/s] 69%|######9   | 18/26 [00:00<00:00, 33.55it/s] 85%|########4 | 22/26 [00:00<00:00, 34.37it/s]100%|##########| 26/26 [00:00<00:00, 34.93it/s]100%|##########| 26/26 [00:00<00:00, 30.52it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 416 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 417 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 418 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 419 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 420 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 421 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 422 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 423 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 424 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 425 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 426 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 427 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 428 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 429 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 430 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 431 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 432 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 433 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 434 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 435 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 436 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 437 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 438 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 439 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 440 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 441 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [16][  26/  26]	Loss 0.000 (0.000)	train_nll   0.61 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm  22.76 ( 22.76)	train_acc   0.62 (  0.63)	train_minacc   0.72 (  0.74)	train_majacc   0.61 (  0.61)	train_corr   0.00 (  0.00)	l1 5.5718 (5.5999)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.25it/s] 27%|##6       | 7/26 [00:00<00:00, 24.70it/s]                                               27%|##6       | 7/26 [00:00<00:00, 24.70it/s] 46%|####6     | 12/26 [00:00<00:00, 32.51it/s] 65%|######5   | 17/26 [00:00<00:00, 35.51it/s]                                                65%|######5   | 17/26 [00:00<00:00, 35.51it/s] 88%|########8 | 23/26 [00:00<00:00, 40.91it/s]100%|##########| 26/26 [00:00<00:00, 31.93it/s]
Test: [   0/  26]	Loss 0.593 (0.593)	test_acc   0.66 (  0.66)	test_minacc   0.69 (  0.69)	test_majacc   0.65 (  0.65)	Loss_d 0.593 (0.593)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.35 (  0.35)
Test: [  10/  26]	Loss 0.587 (0.594)	test_acc   0.65 (  0.65)	test_minacc   0.70 (  0.71)	test_majacc   0.64 (  0.64)	Loss_d 0.587 (0.594)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.70 (  0.71)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.38 (  0.35)
Test: [  20/  26]	Loss 0.597 (0.591)	test_acc   0.67 (  0.65)	test_minacc   0.72 (  0.73)	test_majacc   0.66 (  0.64)	Loss_d 0.597 (0.591)	test_acc_d   0.67 (  0.65)	test_minacc_d   0.72 (  0.73)	test_majacc_d   0.66 (  0.64)	test_corr_d   0.35 (  0.34)
Test: [  26/  26]	Loss 0.607 (0.593)	test_acc   0.62 (  0.65)	test_minacc   0.72 (  0.73)	test_majacc   0.61 (  0.64)	Loss_d 0.607 (0.593)	test_acc_d   0.62 (  0.65)	test_minacc_d   0.72 (  0.73)	test_majacc_d   0.61 (  0.64)	test_corr_d   0.33 (  0.34)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.37it/s]
Test: [  0/  1]	Loss 0.734 (0.734)	test_acc   0.65 (  0.65)	test_minacc   0.65 (  0.65)	test_majacc   0.65 (  0.65)	Loss_d 0.734 (0.734)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.65 (  0.65)	test_corr_d  -0.07 ( -0.07)
Test: [  1/  1]	Loss 0.734 (0.734)	test_acc   0.65 (  0.65)	test_minacc   0.65 (  0.65)	test_majacc   0.65 (  0.65)	Loss_d 0.734 (0.734)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.65 (  0.65)	test_corr_d  -0.07 ( -0.07)
Overall Timing[ 16/  1]	epoch_time 0.0416 (0.0457)	validation_time 0.0004 (0.0009)	train_time 0.0412 (0.0446)
record: (train_acc, test_acc) (0.7194000356197358, 0.6920000314712524)
last accs (train_acc, test_acc) (0.6511000193953514, 0.6530000567436218)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.93it/s] 15%|#5        | 4/26 [00:00<00:01, 16.45it/s] 31%|###       | 8/26 [00:00<00:00, 23.13it/s] 46%|####6     | 12/26 [00:00<00:00, 27.38it/s] 62%|######1   | 16/26 [00:00<00:00, 30.11it/s] 77%|#######6  | 20/26 [00:00<00:00, 31.82it/s] 92%|#########2| 24/26 [00:00<00:00, 32.54it/s]100%|##########| 26/26 [00:00<00:00, 26.83it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 442 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 443 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 444 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 445 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 446 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 447 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 448 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 449 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 450 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 451 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 452 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 453 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 454 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 455 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 456 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 457 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 458 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 459 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 460 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 461 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 462 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 463 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 464 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 465 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 466 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 467 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [17][  26/  26]	Loss 0.000 (0.000)	train_nll   0.61 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm  22.76 ( 22.76)	train_acc   0.63 (  0.63)	train_minacc   0.72 (  0.74)	train_majacc   0.62 (  0.61)	train_corr   0.00 (  0.00)	l1 5.5636 (5.6016)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.71it/s] 23%|##3       | 6/26 [00:00<00:00, 31.40it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.40it/s] 42%|####2     | 11/26 [00:00<00:00, 34.05it/s] 62%|######1   | 16/26 [00:00<00:00, 38.80it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.80it/s] 81%|########  | 21/26 [00:00<00:00, 40.27it/s]100%|##########| 26/26 [00:00<00:00, 43.17it/s]100%|##########| 26/26 [00:00<00:00, 35.07it/s]
Test: [   0/  26]	Loss 0.593 (0.593)	test_acc   0.67 (  0.67)	test_minacc   0.70 (  0.70)	test_majacc   0.66 (  0.66)	Loss_d 0.593 (0.593)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.66 (  0.66)	test_corr_d   0.35 (  0.35)
Test: [  10/  26]	Loss 0.583 (0.591)	test_acc   0.66 (  0.66)	test_minacc   0.72 (  0.71)	test_majacc   0.66 (  0.65)	Loss_d 0.583 (0.591)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.72 (  0.71)	test_majacc_d   0.66 (  0.65)	test_corr_d   0.39 (  0.36)
Test: [  20/  26]	Loss 0.592 (0.588)	test_acc   0.68 (  0.66)	test_minacc   0.73 (  0.72)	test_majacc   0.67 (  0.65)	Loss_d 0.592 (0.588)	test_acc_d   0.68 (  0.66)	test_minacc_d   0.73 (  0.72)	test_majacc_d   0.67 (  0.65)	test_corr_d   0.35 (  0.35)
Test: [  26/  26]	Loss 0.606 (0.590)	test_acc   0.63 (  0.66)	test_minacc   0.72 (  0.72)	test_majacc   0.62 (  0.65)	Loss_d 0.606 (0.590)	test_acc_d   0.63 (  0.66)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.62 (  0.65)	test_corr_d   0.33 (  0.34)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.23it/s]
Test: [  0/  1]	Loss 0.735 (0.735)	test_acc   0.65 (  0.65)	test_minacc   0.65 (  0.65)	test_majacc   0.66 (  0.66)	Loss_d 0.735 (0.735)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.66 (  0.66)	test_corr_d  -0.06 ( -0.06)
Test: [  1/  1]	Loss 0.735 (0.735)	test_acc   0.65 (  0.65)	test_minacc   0.65 (  0.65)	test_majacc   0.66 (  0.66)	Loss_d 0.735 (0.735)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.66 (  0.66)	test_corr_d  -0.06 ( -0.06)
Overall Timing[ 17/  1]	epoch_time 0.0407 (0.0454)	validation_time 0.0004 (0.0008)	train_time 0.0402 (0.0444)
record: (train_acc, test_acc) (0.7194000356197358, 0.6920000314712524)
last accs (train_acc, test_acc) (0.6601000308990479, 0.6490000486373901)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.98it/s] 12%|#1        | 3/26 [00:00<00:01, 13.89it/s] 23%|##3       | 6/26 [00:00<00:01, 19.54it/s] 38%|###8      | 10/26 [00:00<00:00, 24.39it/s] 54%|#####3    | 14/26 [00:00<00:00, 27.08it/s] 69%|######9   | 18/26 [00:00<00:00, 29.20it/s] 85%|########4 | 22/26 [00:00<00:00, 31.24it/s]100%|##########| 26/26 [00:00<00:00, 32.43it/s]100%|##########| 26/26 [00:01<00:00, 25.68it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 468 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 469 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 470 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 471 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 472 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 473 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 474 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 475 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 476 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 477 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 478 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 479 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 480 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 481 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 482 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 483 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 484 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 485 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 486 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 487 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 488 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 489 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 490 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 491 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 492 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 493 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [18][  26/  26]	Loss 0.000 (0.000)	train_nll   0.61 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm  22.76 ( 22.76)	train_acc   0.62 (  0.64)	train_minacc   0.72 (  0.73)	train_majacc   0.61 (  0.62)	train_corr   0.00 (  0.00)	l1 5.5549 (5.5902)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.54it/s] 23%|##3       | 6/26 [00:00<00:00, 25.16it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.16it/s] 42%|####2     | 11/26 [00:00<00:00, 33.53it/s] 65%|######5   | 17/26 [00:00<00:00, 39.36it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.36it/s] 88%|########8 | 23/26 [00:00<00:00, 44.46it/s]100%|##########| 26/26 [00:00<00:00, 34.51it/s]
Test: [   0/  26]	Loss 0.597 (0.597)	test_acc   0.65 (  0.65)	test_minacc   0.70 (  0.70)	test_majacc   0.65 (  0.65)	Loss_d 0.597 (0.597)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.34 (  0.34)
Test: [  10/  26]	Loss 0.586 (0.593)	test_acc   0.66 (  0.66)	test_minacc   0.70 (  0.71)	test_majacc   0.66 (  0.65)	Loss_d 0.586 (0.593)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.70 (  0.71)	test_majacc_d   0.66 (  0.65)	test_corr_d   0.38 (  0.35)
Test: [  20/  26]	Loss 0.593 (0.590)	test_acc   0.68 (  0.66)	test_minacc   0.73 (  0.72)	test_majacc   0.67 (  0.65)	Loss_d 0.593 (0.590)	test_acc_d   0.68 (  0.66)	test_minacc_d   0.73 (  0.72)	test_majacc_d   0.67 (  0.65)	test_corr_d   0.35 (  0.34)
Test: [  26/  26]	Loss 0.611 (0.593)	test_acc   0.62 (  0.66)	test_minacc   0.72 (  0.72)	test_majacc   0.61 (  0.64)	Loss_d 0.611 (0.593)	test_acc_d   0.62 (  0.66)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.61 (  0.64)	test_corr_d   0.32 (  0.34)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.27it/s]
Test: [  0/  1]	Loss 0.735 (0.735)	test_acc   0.65 (  0.65)	test_minacc   0.65 (  0.65)	test_majacc   0.65 (  0.65)	Loss_d 0.735 (0.735)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.65 (  0.65)	test_corr_d  -0.07 ( -0.07)
Test: [  1/  1]	Loss 0.735 (0.735)	test_acc   0.65 (  0.65)	test_minacc   0.65 (  0.65)	test_majacc   0.65 (  0.65)	Loss_d 0.735 (0.735)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.65 (  0.65)	test_corr_d  -0.07 ( -0.07)
Overall Timing[ 18/  1]	epoch_time 0.0417 (0.0452)	validation_time 0.0004 (0.0008)	train_time 0.0413 (0.0442)
record: (train_acc, test_acc) (0.7194000356197358, 0.6920000314712524)
last accs (train_acc, test_acc) (0.6563000167608262, 0.6490000486373901)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.54it/s] 23%|##3       | 6/26 [00:00<00:00, 26.95it/s] 38%|###8      | 10/26 [00:00<00:00, 29.78it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.78it/s] 69%|######9   | 18/26 [00:00<00:00, 32.24it/s] 85%|########4 | 22/26 [00:00<00:00, 33.36it/s]100%|##########| 26/26 [00:00<00:00, 34.03it/s]100%|##########| 26/26 [00:00<00:00, 29.60it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 494 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 495 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 496 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 497 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 498 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 499 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 500 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 501 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 502 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 503 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 504 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 505 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 506 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 507 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 508 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 509 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 510 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 511 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 512 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 513 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 514 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 515 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 516 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 517 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 518 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 519 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [19][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm  22.76 ( 22.76)	train_acc   0.64 (  0.64)	train_minacc   0.69 (  0.73)	train_majacc   0.64 (  0.62)	train_corr   0.00 (  0.00)	l1 5.5293 (5.5792)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.48it/s] 23%|##3       | 6/26 [00:00<00:00, 21.86it/s]                                               23%|##3       | 6/26 [00:00<00:00, 21.86it/s] 42%|####2     | 11/26 [00:00<00:00, 30.77it/s] 62%|######1   | 16/26 [00:00<00:00, 36.61it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.61it/s] 81%|########  | 21/26 [00:00<00:00, 36.67it/s]100%|##########| 26/26 [00:00<00:00, 40.19it/s]100%|##########| 26/26 [00:00<00:00, 31.09it/s]
Test: [   0/  26]	Loss 0.594 (0.594)	test_acc   0.67 (  0.67)	test_minacc   0.69 (  0.69)	test_majacc   0.67 (  0.67)	Loss_d 0.594 (0.594)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.67 (  0.67)	test_corr_d   0.35 (  0.35)
Test: [  10/  26]	Loss 0.579 (0.587)	test_acc   0.69 (  0.67)	test_minacc   0.70 (  0.69)	test_majacc   0.69 (  0.66)	Loss_d 0.579 (0.587)	test_acc_d   0.69 (  0.67)	test_minacc_d   0.70 (  0.69)	test_majacc_d   0.69 (  0.66)	test_corr_d   0.39 (  0.36)
Test: [  20/  26]	Loss 0.586 (0.585)	test_acc   0.70 (  0.67)	test_minacc   0.73 (  0.71)	test_majacc   0.69 (  0.66)	Loss_d 0.586 (0.585)	test_acc_d   0.70 (  0.67)	test_minacc_d   0.73 (  0.71)	test_majacc_d   0.69 (  0.66)	test_corr_d   0.36 (  0.36)
Test: [  26/  26]	Loss 0.605 (0.587)	test_acc   0.66 (  0.67)	test_minacc   0.69 (  0.71)	test_majacc   0.66 (  0.66)	Loss_d 0.605 (0.587)	test_acc_d   0.66 (  0.67)	test_minacc_d   0.69 (  0.71)	test_majacc_d   0.66 (  0.66)	test_corr_d   0.34 (  0.35)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.39it/s]
Test: [  0/  1]	Loss 0.735 (0.735)	test_acc   0.64 (  0.64)	test_minacc   0.64 (  0.64)	test_majacc   0.67 (  0.67)	Loss_d 0.735 (0.735)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.67 (  0.67)	test_corr_d  -0.05 ( -0.05)
Test: [  1/  1]	Loss 0.735 (0.735)	test_acc   0.64 (  0.64)	test_minacc   0.64 (  0.64)	test_majacc   0.67 (  0.67)	Loss_d 0.735 (0.735)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.67 (  0.67)	test_corr_d  -0.05 ( -0.05)
Overall Timing[ 19/  1]	epoch_time 0.0412 (0.0450)	validation_time 0.0003 (0.0008)	train_time 0.0408 (0.0440)
record: (train_acc, test_acc) (0.7194000356197358, 0.6920000314712524)
last accs (train_acc, test_acc) (0.6688000257015229, 0.6390000581741333)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.09it/s] 15%|#5        | 4/26 [00:00<00:01, 16.84it/s] 31%|###       | 8/26 [00:00<00:00, 24.64it/s] 46%|####6     | 12/26 [00:00<00:00, 28.84it/s] 62%|######1   | 16/26 [00:00<00:00, 31.28it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.73it/s] 92%|#########2| 24/26 [00:00<00:00, 31.88it/s]100%|##########| 26/26 [00:00<00:00, 26.99it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 520 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 521 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 522 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 523 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 524 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 525 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 526 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 527 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 528 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 529 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 530 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 531 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 532 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 533 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 534 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 535 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 536 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 537 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 538 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 539 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 540 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 541 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 542 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 543 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 544 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 545 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [20][  26/  26]	Loss 0.000 (0.000)	train_nll   0.61 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  22.76 ( 22.76)	train_acc   0.63 (  0.64)	train_minacc   0.72 (  0.73)	train_majacc   0.62 (  0.63)	train_corr   0.00 (  0.00)	l1 5.5230 (5.5576)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.56it/s] 27%|##6       | 7/26 [00:00<00:00, 32.77it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.77it/s] 46%|####6     | 12/26 [00:00<00:00, 36.15it/s] 65%|######5   | 17/26 [00:00<00:00, 38.33it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.33it/s] 85%|########4 | 22/26 [00:00<00:00, 40.65it/s]100%|##########| 26/26 [00:00<00:00, 34.42it/s]
Test: [   0/  26]	Loss 0.595 (0.595)	test_acc   0.67 (  0.67)	test_minacc   0.70 (  0.70)	test_majacc   0.66 (  0.66)	Loss_d 0.595 (0.595)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.66 (  0.66)	test_corr_d   0.35 (  0.35)
Test: [  10/  26]	Loss 0.583 (0.589)	test_acc   0.65 (  0.66)	test_minacc   0.70 (  0.71)	test_majacc   0.65 (  0.65)	Loss_d 0.583 (0.589)	test_acc_d   0.65 (  0.66)	test_minacc_d   0.70 (  0.71)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.39 (  0.36)
Test: [  20/  26]	Loss 0.588 (0.586)	test_acc   0.68 (  0.66)	test_minacc   0.72 (  0.72)	test_majacc   0.68 (  0.65)	Loss_d 0.588 (0.586)	test_acc_d   0.68 (  0.66)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.68 (  0.65)	test_corr_d   0.36 (  0.36)
Test: [  26/  26]	Loss 0.611 (0.589)	test_acc   0.63 (  0.66)	test_minacc   0.72 (  0.72)	test_majacc   0.62 (  0.65)	Loss_d 0.611 (0.589)	test_acc_d   0.63 (  0.66)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.62 (  0.65)	test_corr_d   0.33 (  0.35)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.98it/s]
Test: [  0/  1]	Loss 0.742 (0.742)	test_acc   0.64 (  0.64)	test_minacc   0.64 (  0.64)	test_majacc   0.67 (  0.67)	Loss_d 0.742 (0.742)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.67 (  0.67)	test_corr_d  -0.05 ( -0.05)
Test: [  1/  1]	Loss 0.742 (0.742)	test_acc   0.64 (  0.64)	test_minacc   0.64 (  0.64)	test_majacc   0.67 (  0.67)	Loss_d 0.742 (0.742)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.67 (  0.67)	test_corr_d  -0.05 ( -0.05)
Overall Timing[ 20/  1]	epoch_time 0.0397 (0.0448)	validation_time 0.0004 (0.0008)	train_time 0.0392 (0.0438)
record: (train_acc, test_acc) (0.7194000356197358, 0.6920000314712524)
last accs (train_acc, test_acc) (0.6603000215888023, 0.6430000066757202)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.36it/s] 19%|#9        | 5/26 [00:00<00:00, 22.95it/s] 35%|###4      | 9/26 [00:00<00:00, 27.83it/s] 50%|#####     | 13/26 [00:00<00:00, 30.46it/s] 65%|######5   | 17/26 [00:00<00:00, 31.84it/s] 81%|########  | 21/26 [00:00<00:00, 31.99it/s] 96%|#########6| 25/26 [00:00<00:00, 32.87it/s]100%|##########| 26/26 [00:00<00:00, 28.04it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 546 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 547 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 548 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 549 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 550 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 551 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 552 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 553 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 554 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 555 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 556 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 557 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 558 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 559 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 560 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 561 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 562 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 563 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 564 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 565 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 566 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 567 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 568 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 569 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 570 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 571 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [21][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  22.76 ( 22.76)	train_acc   0.66 (  0.64)	train_minacc   0.69 (  0.73)	train_majacc   0.66 (  0.63)	train_corr   0.00 (  0.00)	l1 5.4795 (5.5498)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 15%|#5        | 4/26 [00:00<00:00, 33.83it/s] 35%|###4      | 9/26 [00:00<00:00, 40.67it/s]                                               35%|###4      | 9/26 [00:00<00:00, 40.67it/s] 54%|#####3    | 14/26 [00:00<00:00, 42.78it/s] 73%|#######3  | 19/26 [00:00<00:00, 40.21it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 40.21it/s] 92%|#########2| 24/26 [00:00<00:00, 42.52it/s]100%|##########| 26/26 [00:00<00:00, 38.53it/s]
Test: [   0/  26]	Loss 0.597 (0.597)	test_acc   0.67 (  0.67)	test_minacc   0.69 (  0.69)	test_majacc   0.67 (  0.67)	Loss_d 0.597 (0.597)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.67 (  0.67)	test_corr_d   0.36 (  0.36)
Test: [  10/  26]	Loss 0.575 (0.584)	test_acc   0.69 (  0.68)	test_minacc   0.64 (  0.67)	test_majacc   0.70 (  0.68)	Loss_d 0.575 (0.584)	test_acc_d   0.69 (  0.68)	test_minacc_d   0.64 (  0.67)	test_majacc_d   0.70 (  0.68)	test_corr_d   0.40 (  0.37)
Test: [  20/  26]	Loss 0.580 (0.582)	test_acc   0.72 (  0.68)	test_minacc   0.69 (  0.67)	test_majacc   0.72 (  0.68)	Loss_d 0.580 (0.582)	test_acc_d   0.72 (  0.68)	test_minacc_d   0.69 (  0.67)	test_majacc_d   0.72 (  0.68)	test_corr_d   0.37 (  0.37)
Test: [  26/  26]	Loss 0.602 (0.585)	test_acc   0.66 (  0.68)	test_minacc   0.69 (  0.67)	test_majacc   0.66 (  0.68)	Loss_d 0.602 (0.585)	test_acc_d   0.66 (  0.68)	test_minacc_d   0.69 (  0.67)	test_majacc_d   0.66 (  0.68)	test_corr_d   0.34 (  0.36)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.60it/s]
Test: [  0/  1]	Loss 0.735 (0.735)	test_acc   0.62 (  0.62)	test_minacc   0.61 (  0.61)	test_majacc   0.67 (  0.67)	Loss_d 0.735 (0.735)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.67 (  0.67)	test_corr_d  -0.04 ( -0.04)
Test: [  1/  1]	Loss 0.735 (0.735)	test_acc   0.62 (  0.62)	test_minacc   0.61 (  0.61)	test_majacc   0.67 (  0.67)	Loss_d 0.735 (0.735)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.67 (  0.67)	test_corr_d  -0.04 ( -0.04)
Overall Timing[ 21/  1]	epoch_time 0.0440 (0.0447)	validation_time 0.0003 (0.0007)	train_time 0.0436 (0.0438)
record: (train_acc, test_acc) (0.7194000356197358, 0.6920000314712524)
last accs (train_acc, test_acc) (0.6792000334262848, 0.6150000095367432)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:08,  2.84it/s] 19%|#9        | 5/26 [00:00<00:01, 12.96it/s] 35%|###4      | 9/26 [00:00<00:00, 19.90it/s] 50%|#####     | 13/26 [00:00<00:00, 24.12it/s] 65%|######5   | 17/26 [00:00<00:00, 27.13it/s] 81%|########  | 21/26 [00:00<00:00, 29.54it/s] 96%|#########6| 25/26 [00:01<00:00, 30.85it/s]100%|##########| 26/26 [00:01<00:00, 22.69it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 572 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 573 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 574 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 575 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 576 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 577 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 578 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 579 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 580 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 581 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 582 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 583 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 584 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 585 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 586 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 587 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 588 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 589 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 590 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 591 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 592 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 593 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 594 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 595 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 596 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 597 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [22][  26/  26]	Loss 0.000 (0.000)	train_nll   0.61 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  22.76 ( 22.76)	train_acc   0.65 (  0.65)	train_minacc   0.69 (  0.71)	train_majacc   0.65 (  0.64)	train_corr   0.00 (  0.00)	l1 5.4361 (5.4871)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.82it/s] 23%|##3       | 6/26 [00:00<00:00, 29.57it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.57it/s] 42%|####2     | 11/26 [00:00<00:00, 36.72it/s] 62%|######1   | 16/26 [00:00<00:00, 40.36it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.36it/s] 81%|########  | 21/26 [00:00<00:00, 38.45it/s]100%|##########| 26/26 [00:00<00:00, 41.53it/s]100%|##########| 26/26 [00:00<00:00, 34.39it/s]
Test: [   0/  26]	Loss 0.583 (0.583)	test_acc   0.66 (  0.66)	test_minacc   0.67 (  0.67)	test_majacc   0.66 (  0.66)	Loss_d 0.583 (0.583)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.66 (  0.66)	test_corr_d   0.39 (  0.39)
Test: [  10/  26]	Loss 0.572 (0.578)	test_acc   0.68 (  0.68)	test_minacc   0.68 (  0.69)	test_majacc   0.68 (  0.67)	Loss_d 0.572 (0.578)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.68 (  0.69)	test_majacc_d   0.68 (  0.67)	test_corr_d   0.42 (  0.40)
Test: [  20/  26]	Loss 0.576 (0.576)	test_acc   0.69 (  0.68)	test_minacc   0.70 (  0.71)	test_majacc   0.69 (  0.67)	Loss_d 0.576 (0.576)	test_acc_d   0.69 (  0.68)	test_minacc_d   0.70 (  0.71)	test_majacc_d   0.69 (  0.67)	test_corr_d   0.40 (  0.39)
Test: [  26/  26]	Loss 0.599 (0.579)	test_acc   0.66 (  0.68)	test_minacc   0.69 (  0.71)	test_majacc   0.65 (  0.67)	Loss_d 0.599 (0.579)	test_acc_d   0.66 (  0.68)	test_minacc_d   0.69 (  0.71)	test_majacc_d   0.65 (  0.67)	test_corr_d   0.38 (  0.39)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.13it/s]
Test: [  0/  1]	Loss 0.745 (0.745)	test_acc   0.62 (  0.62)	test_minacc   0.62 (  0.62)	test_majacc   0.67 (  0.67)	Loss_d 0.745 (0.745)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.67 (  0.67)	test_corr_d  -0.01 ( -0.01)
Test: [  1/  1]	Loss 0.745 (0.745)	test_acc   0.62 (  0.62)	test_minacc   0.62 (  0.62)	test_majacc   0.67 (  0.67)	Loss_d 0.745 (0.745)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.67 (  0.67)	test_corr_d  -0.01 ( -0.01)
Overall Timing[ 22/  1]	epoch_time 0.0436 (0.0447)	validation_time 0.0007 (0.0007)	train_time 0.0428 (0.0438)
record: (train_acc, test_acc) (0.7194000356197358, 0.6920000314712524)
last accs (train_acc, test_acc) (0.6770000308156013, 0.6210000514984131)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.31it/s] 23%|##3       | 6/26 [00:00<00:00, 24.35it/s] 35%|###4      | 9/26 [00:00<00:00, 23.81it/s] 50%|#####     | 13/26 [00:00<00:00, 25.79it/s] 65%|######5   | 17/26 [00:00<00:00, 28.55it/s] 77%|#######6  | 20/26 [00:00<00:00, 28.17it/s] 88%|########8 | 23/26 [00:00<00:00, 27.93it/s]100%|##########| 26/26 [00:01<00:00, 25.61it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 598 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 599 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 600 200
penalty weights 10000.0
l1 at pgd_anneal_iters 5.418513298034668
set z to 5.364328165054321
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 601 200
penalty weights 10000.0
args.step pgd_anneal_iters 601 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 602 200
penalty weights 10000.0
args.step pgd_anneal_iters 602 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 603 200
penalty weights 10000.0
args.step pgd_anneal_iters 603 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 604 200
penalty weights 10000.0
args.step pgd_anneal_iters 604 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 605 200
penalty weights 10000.0
args.step pgd_anneal_iters 605 600
dim_v 512
rho, theta 378 tensor(-0.0064, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 606 200
penalty weights 10000.0
args.step pgd_anneal_iters 606 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 607 200
penalty weights 10000.0
args.step pgd_anneal_iters 607 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 608 200
penalty weights 10000.0
args.step pgd_anneal_iters 608 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 609 200
penalty weights 10000.0
args.step pgd_anneal_iters 609 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 610 200
penalty weights 10000.0
args.step pgd_anneal_iters 610 600
dim_v 512
rho, theta 351 tensor(-0.0041, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 611 200
penalty weights 10000.0
args.step pgd_anneal_iters 611 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 612 200
penalty weights 10000.0
args.step pgd_anneal_iters 612 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 613 200
penalty weights 10000.0
args.step pgd_anneal_iters 613 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 614 200
penalty weights 10000.0
args.step pgd_anneal_iters 614 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 615 200
penalty weights 10000.0
args.step pgd_anneal_iters 615 600
dim_v 512
rho, theta 283 tensor(0.0082, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 616 200
penalty weights 10000.0
args.step pgd_anneal_iters 616 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 617 200
penalty weights 10000.0
args.step pgd_anneal_iters 617 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 618 200
penalty weights 10000.0
args.step pgd_anneal_iters 618 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 619 200
penalty weights 10000.0
args.step pgd_anneal_iters 619 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 620 200
penalty weights 10000.0
args.step pgd_anneal_iters 620 600
dim_v 512
rho, theta 248 tensor(0.0044, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 621 200
penalty weights 10000.0
args.step pgd_anneal_iters 621 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 622 200
penalty weights 10000.0
args.step pgd_anneal_iters 622 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 623 200
penalty weights 10000.0
args.step pgd_anneal_iters 623 600
final projection at end of training
dim_v 512
rho, theta 242 tensor(0.0016, device='cuda:0')
Epoch: [23][  26/  26]	Loss 0.000 (0.412)	train_nll   0.65 (  0.81)	train_penalty   0.00 (  0.41)	weight_norm  32.34 ( 25.45)	train_acc   0.48 (  0.57)	train_minacc   0.56 (  0.57)	train_majacc   0.47 (  0.57)	train_corr   0.00 (  0.00)	l1 6.0979 (6.0305)	zero_count 0.0000 (30.5760)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.10it/s]  8%|7         | 2/26 [00:00<00:04,  5.70it/s] 23%|##3       | 6/26 [00:00<00:01, 16.58it/s]                                               23%|##3       | 6/26 [00:00<00:01, 16.58it/s] 42%|####2     | 11/26 [00:00<00:00, 24.42it/s] 62%|######1   | 16/26 [00:00<00:00, 30.71it/s]                                                62%|######1   | 16/26 [00:00<00:00, 30.71it/s] 81%|########  | 21/26 [00:00<00:00, 35.08it/s]100%|##########| 26/26 [00:00<00:00, 38.96it/s]100%|##########| 26/26 [00:00<00:00, 26.34it/s]
Test: [   0/  26]	Loss 0.719 (0.719)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.52 (  0.52)	Loss_d 0.719 (0.719)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.29 (  0.29)
Test: [  10/  26]	Loss 0.687 (0.666)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.48)	test_majacc   0.48 (  0.50)	Loss_d 0.687 (0.666)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.48)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.36 (  0.35)
Test: [  20/  26]	Loss 0.645 (0.666)	test_acc   0.51 (  0.50)	test_minacc   0.42 (  0.50)	test_majacc   0.52 (  0.50)	Loss_d 0.645 (0.666)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.42 (  0.50)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.35 (  0.34)
Test: [  26/  26]	Loss 0.655 (0.665)	test_acc   0.48 (  0.50)	test_minacc   0.56 (  0.50)	test_majacc   0.47 (  0.50)	Loss_d 0.655 (0.665)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.56 (  0.50)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.31 (  0.34)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.81it/s]
Test: [  0/  1]	Loss 0.945 (0.945)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.945 (0.945)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.07 (  0.07)
Test: [  1/  1]	Loss 0.945 (0.945)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.945 (0.945)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.07 (  0.07)
Overall Timing[ 23/  1]	epoch_time 0.0450 (0.0447)	validation_time 0.0005 (0.0007)	train_time 0.0445 (0.0438)
record: (train_acc, test_acc) (0.7194000356197358, 0.6920000314712524)
last accs (train_acc, test_acc) (0.500000006467104, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 23.10it/s] 27%|##6       | 7/26 [00:00<00:00, 27.10it/s] 42%|####2     | 11/26 [00:00<00:00, 29.88it/s] 58%|#####7    | 15/26 [00:00<00:00, 30.12it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.05it/s] 85%|########4 | 22/26 [00:00<00:00, 28.90it/s]100%|##########| 26/26 [00:00<00:00, 30.69it/s]100%|##########| 26/26 [00:00<00:00, 27.44it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 624 200
penalty weights 10000.0
args.step pgd_anneal_iters 624 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 625 200
penalty weights 10000.0
args.step pgd_anneal_iters 625 600
dim_v 512
rho, theta 233 tensor(0.0007, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 626 200
penalty weights 10000.0
args.step pgd_anneal_iters 626 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 627 200
penalty weights 10000.0
args.step pgd_anneal_iters 627 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 628 200
penalty weights 10000.0
args.step pgd_anneal_iters 628 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 629 200
penalty weights 10000.0
args.step pgd_anneal_iters 629 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 630 200
penalty weights 10000.0
args.step pgd_anneal_iters 630 600
dim_v 512
rho, theta 224 tensor(0.0013, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 631 200
penalty weights 10000.0
args.step pgd_anneal_iters 631 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 632 200
penalty weights 10000.0
args.step pgd_anneal_iters 632 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 633 200
penalty weights 10000.0
args.step pgd_anneal_iters 633 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 634 200
penalty weights 10000.0
args.step pgd_anneal_iters 634 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 635 200
penalty weights 10000.0
args.step pgd_anneal_iters 635 600
dim_v 512
rho, theta 218 tensor(0.0007, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 636 200
penalty weights 10000.0
args.step pgd_anneal_iters 636 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 637 200
penalty weights 10000.0
args.step pgd_anneal_iters 637 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 638 200
penalty weights 10000.0
args.step pgd_anneal_iters 638 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 639 200
penalty weights 10000.0
args.step pgd_anneal_iters 639 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 640 200
penalty weights 10000.0
args.step pgd_anneal_iters 640 600
dim_v 512
rho, theta 214 tensor(0.0004, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 641 200
penalty weights 10000.0
args.step pgd_anneal_iters 641 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 642 200
penalty weights 10000.0
args.step pgd_anneal_iters 642 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 643 200
penalty weights 10000.0
args.step pgd_anneal_iters 643 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 644 200
penalty weights 10000.0
args.step pgd_anneal_iters 644 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 645 200
penalty weights 10000.0
args.step pgd_anneal_iters 645 600
dim_v 512
rho, theta 218 tensor(0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 646 200
penalty weights 10000.0
args.step pgd_anneal_iters 646 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 647 200
penalty weights 10000.0
args.step pgd_anneal_iters 647 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 648 200
penalty weights 10000.0
args.step pgd_anneal_iters 648 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 649 200
penalty weights 10000.0
args.step pgd_anneal_iters 649 600
final projection at end of training
dim_v 512
rho, theta 225 tensor(3.2830e-06, device='cuda:0')
Epoch: [24][  26/  26]	Loss 0.002 (0.002)	train_nll   0.67 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm  38.14 ( 36.39)	train_acc   0.48 (  0.53)	train_minacc   0.56 (  0.49)	train_majacc   0.47 (  0.54)	train_corr   0.00 (  0.00)	l1 5.4670 (5.5695)	zero_count 0.0000 (66.9630)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.14it/s] 19%|#9        | 5/26 [00:00<00:00, 22.66it/s] 38%|###8      | 10/26 [00:00<00:00, 32.36it/s]                                                38%|###8      | 10/26 [00:00<00:00, 32.36it/s] 58%|#####7    | 15/26 [00:00<00:00, 33.85it/s] 77%|#######6  | 20/26 [00:00<00:00, 38.00it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 38.00it/s] 96%|#########6| 25/26 [00:00<00:00, 40.24it/s]100%|##########| 26/26 [00:00<00:00, 32.33it/s]
Test: [   0/  26]	Loss 0.643 (0.643)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.52 (  0.52)	Loss_d 0.643 (0.643)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.37 (  0.37)
Test: [  10/  26]	Loss 0.645 (0.648)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.48)	test_majacc   0.48 (  0.50)	Loss_d 0.645 (0.648)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.48)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.38 (  0.40)
Test: [  20/  26]	Loss 0.657 (0.647)	test_acc   0.51 (  0.50)	test_minacc   0.42 (  0.50)	test_majacc   0.52 (  0.50)	Loss_d 0.657 (0.647)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.42 (  0.50)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.42 (  0.40)
Test: [  26/  26]	Loss 0.662 (0.649)	test_acc   0.48 (  0.50)	test_minacc   0.56 (  0.50)	test_majacc   0.47 (  0.50)	Loss_d 0.662 (0.649)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.56 (  0.50)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.42 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.22it/s]
Test: [  0/  1]	Loss 0.911 (0.911)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.911 (0.911)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.30 (  0.30)
Test: [  1/  1]	Loss 0.911 (0.911)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.911 (0.911)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.30 (  0.30)
Overall Timing[ 24/  1]	epoch_time 0.0427 (0.0446)	validation_time 0.0003 (0.0007)	train_time 0.0423 (0.0437)
record: (train_acc, test_acc) (0.7194000356197358, 0.6920000314712524)
last accs (train_acc, test_acc) (0.500000006467104, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.22it/s] 19%|#9        | 5/26 [00:00<00:01, 18.03it/s] 31%|###       | 8/26 [00:00<00:00, 21.84it/s] 42%|####2     | 11/26 [00:00<00:00, 23.87it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.42it/s] 69%|######9   | 18/26 [00:00<00:00, 28.00it/s] 81%|########  | 21/26 [00:00<00:00, 28.04it/s] 96%|#########6| 25/26 [00:00<00:00, 30.22it/s]100%|##########| 26/26 [00:01<00:00, 24.01it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 650 200
penalty weights 10000.0
args.step pgd_anneal_iters 650 600
dim_v 512
rho, theta 238 tensor(-7.5456e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 651 200
penalty weights 10000.0
args.step pgd_anneal_iters 651 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 652 200
penalty weights 10000.0
args.step pgd_anneal_iters 652 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 653 200
penalty weights 10000.0
args.step pgd_anneal_iters 653 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 654 200
penalty weights 10000.0
args.step pgd_anneal_iters 654 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 655 200
penalty weights 10000.0
args.step pgd_anneal_iters 655 600
dim_v 512
rho, theta 243 tensor(-5.7447e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 656 200
penalty weights 10000.0
args.step pgd_anneal_iters 656 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 657 200
penalty weights 10000.0
args.step pgd_anneal_iters 657 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 658 200
penalty weights 10000.0
args.step pgd_anneal_iters 658 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 659 200
penalty weights 10000.0
args.step pgd_anneal_iters 659 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 660 200
penalty weights 10000.0
args.step pgd_anneal_iters 660 600
dim_v 512
rho, theta 261 tensor(-5.2057e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 661 200
penalty weights 10000.0
args.step pgd_anneal_iters 661 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 662 200
penalty weights 10000.0
args.step pgd_anneal_iters 662 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 663 200
penalty weights 10000.0
args.step pgd_anneal_iters 663 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 664 200
penalty weights 10000.0
args.step pgd_anneal_iters 664 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 665 200
penalty weights 10000.0
args.step pgd_anneal_iters 665 600
dim_v 512
rho, theta 273 tensor(-2.1929e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 666 200
penalty weights 10000.0
args.step pgd_anneal_iters 666 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 667 200
penalty weights 10000.0
args.step pgd_anneal_iters 667 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 668 200
penalty weights 10000.0
args.step pgd_anneal_iters 668 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 669 200
penalty weights 10000.0
args.step pgd_anneal_iters 669 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 670 200
penalty weights 10000.0
args.step pgd_anneal_iters 670 600
dim_v 512
rho, theta 287 tensor(-3.0723e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 671 200
penalty weights 10000.0
args.step pgd_anneal_iters 671 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 672 200
penalty weights 10000.0
args.step pgd_anneal_iters 672 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 673 200
penalty weights 10000.0
args.step pgd_anneal_iters 673 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 674 200
penalty weights 10000.0
args.step pgd_anneal_iters 674 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 675 200
penalty weights 10000.0
args.step pgd_anneal_iters 675 600
dim_v 512
rho, theta 308 tensor(-5.9541e-05, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [25][  26/  26]	Loss 0.000 (0.001)	train_nll   0.65 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm  38.59 ( 38.46)	train_acc   0.48 (  0.50)	train_minacc   0.56 (  0.50)	train_majacc   0.47 (  0.50)	train_corr   0.00 (  0.00)	l1 5.3857 (5.3835)	zero_count 0.0000 (60.0210)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.04it/s] 19%|#9        | 5/26 [00:00<00:00, 23.72it/s] 38%|###8      | 10/26 [00:00<00:00, 34.20it/s]                                                38%|###8      | 10/26 [00:00<00:00, 34.20it/s] 62%|######1   | 16/26 [00:00<00:00, 38.99it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.99it/s] 85%|########4 | 22/26 [00:00<00:00, 41.76it/s]100%|##########| 26/26 [00:00<00:00, 35.46it/s]
Test: [   0/  26]	Loss 0.651 (0.651)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.52 (  0.52)	Loss_d 0.651 (0.651)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.33 (  0.33)
Test: [  10/  26]	Loss 0.657 (0.655)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.48)	test_majacc   0.48 (  0.50)	Loss_d 0.657 (0.655)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.48)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.32 (  0.34)
Test: [  20/  26]	Loss 0.660 (0.653)	test_acc   0.51 (  0.50)	test_minacc   0.42 (  0.50)	test_majacc   0.52 (  0.50)	Loss_d 0.660 (0.653)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.42 (  0.50)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.35 (  0.34)
Test: [  26/  26]	Loss 0.653 (0.654)	test_acc   0.48 (  0.50)	test_minacc   0.56 (  0.50)	test_majacc   0.47 (  0.50)	Loss_d 0.653 (0.654)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.56 (  0.50)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.36 (  0.34)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.29it/s]
Test: [  0/  1]	Loss 0.876 (0.876)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.876 (0.876)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.26 (  0.26)
Test: [  1/  1]	Loss 0.876 (0.876)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.876 (0.876)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.26 (  0.26)
Overall Timing[ 25/  1]	epoch_time 0.0413 (0.0445)	validation_time 0.0005 (0.0007)	train_time 0.0408 (0.0436)
record: (train_acc, test_acc) (0.7194000356197358, 0.6920000314712524)
last accs (train_acc, test_acc) (0.500000006467104, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.83it/s] 19%|#9        | 5/26 [00:00<00:00, 21.28it/s] 35%|###4      | 9/26 [00:00<00:00, 27.09it/s] 46%|####6     | 12/26 [00:00<00:00, 27.82it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.54it/s] 73%|#######3  | 19/26 [00:00<00:00, 30.55it/s] 88%|########8 | 23/26 [00:00<00:00, 30.34it/s]100%|##########| 26/26 [00:00<00:00, 26.98it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 676 200
penalty weights 10000.0
args.step pgd_anneal_iters 676 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 677 200
penalty weights 10000.0
args.step pgd_anneal_iters 677 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 678 200
penalty weights 10000.0
args.step pgd_anneal_iters 678 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 679 200
penalty weights 10000.0
args.step pgd_anneal_iters 679 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 680 200
penalty weights 10000.0
args.step pgd_anneal_iters 680 600
dim_v 512
rho, theta 311 tensor(-5.4427e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 681 200
penalty weights 10000.0
args.step pgd_anneal_iters 681 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 682 200
penalty weights 10000.0
args.step pgd_anneal_iters 682 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 683 200
penalty weights 10000.0
args.step pgd_anneal_iters 683 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 684 200
penalty weights 10000.0
args.step pgd_anneal_iters 684 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 685 200
penalty weights 10000.0
args.step pgd_anneal_iters 685 600
dim_v 512
rho, theta 328 tensor(-5.2262e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 686 200
penalty weights 10000.0
args.step pgd_anneal_iters 686 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 687 200
penalty weights 10000.0
args.step pgd_anneal_iters 687 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 688 200
penalty weights 10000.0
args.step pgd_anneal_iters 688 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 689 200
penalty weights 10000.0
args.step pgd_anneal_iters 689 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 690 200
penalty weights 10000.0
args.step pgd_anneal_iters 690 600
dim_v 512
rho, theta 375 tensor(-2.4042e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 691 200
penalty weights 10000.0
args.step pgd_anneal_iters 691 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 692 200
penalty weights 10000.0
args.step pgd_anneal_iters 692 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 693 200
penalty weights 10000.0
args.step pgd_anneal_iters 693 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 694 200
penalty weights 10000.0
args.step pgd_anneal_iters 694 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 695 200
penalty weights 10000.0
args.step pgd_anneal_iters 695 600
dim_v 512
rho, theta 423 tensor(-1.1887e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 696 200
penalty weights 10000.0
args.step pgd_anneal_iters 696 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 697 200
penalty weights 10000.0
args.step pgd_anneal_iters 697 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 698 200
penalty weights 10000.0
args.step pgd_anneal_iters 698 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 699 200
penalty weights 10000.0
args.step pgd_anneal_iters 699 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 700 200
penalty weights 10000.0
args.step pgd_anneal_iters 700 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 701 200
penalty weights 10000.0
args.step pgd_anneal_iters 701 600
final projection at end of training
dim_v 512
rho, theta 381 tensor(-3.4820e-05, device='cuda:0')
Epoch: [26][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm  38.62 ( 38.61)	train_acc   0.48 (  0.50)	train_minacc   0.56 (  0.50)	train_majacc   0.47 (  0.50)	train_corr   0.00 (  0.00)	l1 5.3636 (5.3681)	zero_count 0.0000 (31.5900)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.72it/s] 23%|##3       | 6/26 [00:00<00:00, 26.70it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.70it/s] 42%|####2     | 11/26 [00:00<00:00, 33.99it/s] 62%|######1   | 16/26 [00:00<00:00, 38.00it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.00it/s] 81%|########  | 21/26 [00:00<00:00, 40.81it/s]100%|##########| 26/26 [00:00<00:00, 43.12it/s]100%|##########| 26/26 [00:00<00:00, 33.72it/s]
Test: [   0/  26]	Loss 0.654 (0.654)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.52 (  0.52)	Loss_d 0.654 (0.654)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.30 (  0.30)
Test: [  10/  26]	Loss 0.662 (0.659)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.48)	test_majacc   0.48 (  0.50)	Loss_d 0.662 (0.659)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.48)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.30 (  0.32)
Test: [  20/  26]	Loss 0.660 (0.657)	test_acc   0.51 (  0.50)	test_minacc   0.42 (  0.50)	test_majacc   0.52 (  0.50)	Loss_d 0.660 (0.657)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.42 (  0.50)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.32 (  0.32)
Test: [  26/  26]	Loss 0.660 (0.658)	test_acc   0.48 (  0.50)	test_minacc   0.56 (  0.50)	test_majacc   0.47 (  0.50)	Loss_d 0.660 (0.658)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.56 (  0.50)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.34 (  0.32)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.15it/s]
Test: [  0/  1]	Loss 0.832 (0.832)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.832 (0.832)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.24 (  0.24)
Test: [  1/  1]	Loss 0.832 (0.832)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.832 (0.832)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.24 (  0.24)
Overall Timing[ 26/  1]	epoch_time 0.0432 (0.0444)	validation_time 0.0005 (0.0007)	train_time 0.0427 (0.0436)
record: (train_acc, test_acc) (0.7194000356197358, 0.6920000314712524)
last accs (train_acc, test_acc) (0.500000006467104, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.93it/s] 15%|#5        | 4/26 [00:00<00:01, 19.23it/s] 31%|###       | 8/26 [00:00<00:00, 26.20it/s] 42%|####2     | 11/26 [00:00<00:00, 25.82it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.18it/s] 69%|######9   | 18/26 [00:00<00:00, 29.07it/s] 81%|########  | 21/26 [00:00<00:00, 27.89it/s] 96%|#########6| 25/26 [00:00<00:00, 30.25it/s]100%|##########| 26/26 [00:01<00:00, 25.70it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 702 200
penalty weights 10000.0
args.step pgd_anneal_iters 702 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 703 200
penalty weights 10000.0
args.step pgd_anneal_iters 703 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 704 200
penalty weights 10000.0
args.step pgd_anneal_iters 704 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 705 200
penalty weights 10000.0
args.step pgd_anneal_iters 705 600
dim_v 512
rho, theta 361 tensor(-2.3850e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 706 200
penalty weights 10000.0
args.step pgd_anneal_iters 706 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 707 200
penalty weights 10000.0
args.step pgd_anneal_iters 707 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 708 200
penalty weights 10000.0
args.step pgd_anneal_iters 708 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 709 200
penalty weights 10000.0
args.step pgd_anneal_iters 709 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 710 200
penalty weights 10000.0
args.step pgd_anneal_iters 710 600
dim_v 512
rho, theta 346 tensor(-3.7336e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 711 200
penalty weights 10000.0
args.step pgd_anneal_iters 711 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 712 200
penalty weights 10000.0
args.step pgd_anneal_iters 712 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 713 200
penalty weights 10000.0
args.step pgd_anneal_iters 713 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 714 200
penalty weights 10000.0
args.step pgd_anneal_iters 714 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 715 200
penalty weights 10000.0
args.step pgd_anneal_iters 715 600
dim_v 512
rho, theta 353 tensor(-1.8541e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 716 200
penalty weights 10000.0
args.step pgd_anneal_iters 716 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 717 200
penalty weights 10000.0
args.step pgd_anneal_iters 717 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 718 200
penalty weights 10000.0
args.step pgd_anneal_iters 718 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 719 200
penalty weights 10000.0
args.step pgd_anneal_iters 719 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 720 200
penalty weights 10000.0
args.step pgd_anneal_iters 720 600
dim_v 512
rho, theta 431 tensor(5.7993e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 721 200
penalty weights 10000.0
args.step pgd_anneal_iters 721 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 722 200
penalty weights 10000.0
args.step pgd_anneal_iters 722 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 723 200
penalty weights 10000.0
args.step pgd_anneal_iters 723 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 724 200
penalty weights 10000.0
args.step pgd_anneal_iters 724 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 725 200
penalty weights 10000.0
args.step pgd_anneal_iters 725 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 726 200
penalty weights 10000.0
args.step pgd_anneal_iters 726 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 727 200
penalty weights 10000.0
args.step pgd_anneal_iters 727 600
final projection at end of training
dim_v 512
Epoch: [27][  26/  26]	Loss 0.000 (0.000)	train_nll   0.67 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  38.63 ( 38.62)	train_acc   0.48 (  0.50)	train_minacc   0.56 (  0.50)	train_majacc   0.47 (  0.50)	train_corr   0.00 (  0.00)	l1 5.3633 (5.3662)	zero_count 0.0000 (26.6370)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 28.09it/s] 31%|###       | 8/26 [00:00<00:00, 39.91it/s]                                               31%|###       | 8/26 [00:00<00:00, 39.91it/s] 50%|#####     | 13/26 [00:00<00:00, 42.38it/s] 69%|######9   | 18/26 [00:00<00:00, 41.57it/s]                                                69%|######9   | 18/26 [00:00<00:00, 41.57it/s] 88%|########8 | 23/26 [00:00<00:00, 42.30it/s]100%|##########| 26/26 [00:00<00:00, 38.00it/s]
Test: [   0/  26]	Loss 0.657 (0.657)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.52 (  0.52)	Loss_d 0.657 (0.657)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.29 (  0.29)
Test: [  10/  26]	Loss 0.664 (0.660)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.48)	test_majacc   0.48 (  0.50)	Loss_d 0.664 (0.660)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.48)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.29 (  0.30)
Test: [  20/  26]	Loss 0.659 (0.658)	test_acc   0.51 (  0.50)	test_minacc   0.42 (  0.50)	test_majacc   0.52 (  0.50)	Loss_d 0.659 (0.658)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.42 (  0.50)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.31 (  0.30)
Test: [  26/  26]	Loss 0.661 (0.659)	test_acc   0.48 (  0.50)	test_minacc   0.56 (  0.50)	test_majacc   0.47 (  0.50)	Loss_d 0.661 (0.659)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.56 (  0.50)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.32 (  0.30)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.76it/s]
Test: [  0/  1]	Loss 0.812 (0.812)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.812 (0.812)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.22 (  0.22)
Test: [  1/  1]	Loss 0.812 (0.812)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.812 (0.812)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.22 (  0.22)
Overall Timing[ 27/  1]	epoch_time 0.0434 (0.0444)	validation_time 0.0005 (0.0007)	train_time 0.0429 (0.0436)
record: (train_acc, test_acc) (0.7194000356197358, 0.6920000314712524)
last accs (train_acc, test_acc) (0.500000006467104, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.55it/s] 15%|#5        | 4/26 [00:00<00:01, 17.02it/s] 27%|##6       | 7/26 [00:00<00:00, 21.70it/s] 38%|###8      | 10/26 [00:00<00:00, 23.88it/s] 50%|#####     | 13/26 [00:00<00:00, 24.64it/s] 65%|######5   | 17/26 [00:00<00:00, 27.40it/s] 77%|#######6  | 20/26 [00:00<00:00, 26.45it/s] 92%|#########2| 24/26 [00:00<00:00, 28.63it/s]100%|##########| 26/26 [00:01<00:00, 23.94it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 728 200
penalty weights 10000.0
args.step pgd_anneal_iters 728 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 729 200
penalty weights 10000.0
args.step pgd_anneal_iters 729 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 730 200
penalty weights 10000.0
args.step pgd_anneal_iters 730 600
dim_v 512
rho, theta 373 tensor(-3.2647e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 731 200
penalty weights 10000.0
args.step pgd_anneal_iters 731 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 732 200
penalty weights 10000.0
args.step pgd_anneal_iters 732 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 733 200
penalty weights 10000.0
args.step pgd_anneal_iters 733 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 734 200
penalty weights 10000.0
args.step pgd_anneal_iters 734 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 735 200
penalty weights 10000.0
args.step pgd_anneal_iters 735 600
dim_v 512
rho, theta 353 tensor(-2.2199e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 736 200
penalty weights 10000.0
args.step pgd_anneal_iters 736 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 737 200
penalty weights 10000.0
args.step pgd_anneal_iters 737 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 738 200
penalty weights 10000.0
args.step pgd_anneal_iters 738 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 739 200
penalty weights 10000.0
args.step pgd_anneal_iters 739 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 740 200
penalty weights 10000.0
args.step pgd_anneal_iters 740 600
dim_v 512
rho, theta 351 tensor(-1.2709e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 741 200
penalty weights 10000.0
args.step pgd_anneal_iters 741 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 742 200
penalty weights 10000.0
args.step pgd_anneal_iters 742 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 743 200
penalty weights 10000.0
args.step pgd_anneal_iters 743 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 744 200
penalty weights 10000.0
args.step pgd_anneal_iters 744 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 745 200
penalty weights 10000.0
args.step pgd_anneal_iters 745 600
dim_v 512
rho, theta 435 tensor(6.1267e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 746 200
penalty weights 10000.0
args.step pgd_anneal_iters 746 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 747 200
penalty weights 10000.0
args.step pgd_anneal_iters 747 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 748 200
penalty weights 10000.0
args.step pgd_anneal_iters 748 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 749 200
penalty weights 10000.0
args.step pgd_anneal_iters 749 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 750 200
penalty weights 10000.0
args.step pgd_anneal_iters 750 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 751 200
penalty weights 10000.0
args.step pgd_anneal_iters 751 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 752 200
penalty weights 10000.0
args.step pgd_anneal_iters 752 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 753 200
penalty weights 10000.0
args.step pgd_anneal_iters 753 600
final projection at end of training
dim_v 512
rho, theta 372 tensor(-2.1472e-05, device='cuda:0')
Epoch: [28][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  38.63 ( 38.63)	train_acc   0.48 (  0.50)	train_minacc   0.56 (  0.50)	train_majacc   0.47 (  0.50)	train_corr   0.00 (  0.00)	l1 5.3650 (5.3655)	zero_count 0.0000 (20.7480)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.76it/s] 15%|#5        | 4/26 [00:00<00:01, 17.07it/s] 35%|###4      | 9/26 [00:00<00:00, 28.84it/s]                                               35%|###4      | 9/26 [00:00<00:00, 28.84it/s] 54%|#####3    | 14/26 [00:00<00:00, 34.55it/s] 73%|#######3  | 19/26 [00:00<00:00, 38.46it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 38.46it/s] 92%|#########2| 24/26 [00:00<00:00, 38.42it/s]100%|##########| 26/26 [00:00<00:00, 31.46it/s]
Test: [   0/  26]	Loss 0.659 (0.659)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.52 (  0.52)	Loss_d 0.659 (0.659)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.28 (  0.28)
Test: [  10/  26]	Loss 0.665 (0.661)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.48)	test_majacc   0.48 (  0.50)	Loss_d 0.665 (0.661)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.48)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.28 (  0.29)
Test: [  20/  26]	Loss 0.659 (0.660)	test_acc   0.51 (  0.50)	test_minacc   0.42 (  0.50)	test_majacc   0.52 (  0.50)	Loss_d 0.659 (0.660)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.42 (  0.50)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.29 (  0.29)
Test: [  26/  26]	Loss 0.661 (0.660)	test_acc   0.48 (  0.50)	test_minacc   0.56 (  0.50)	test_majacc   0.47 (  0.50)	Loss_d 0.661 (0.660)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.56 (  0.50)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.31 (  0.29)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.13it/s]
Test: [  0/  1]	Loss 0.802 (0.802)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.802 (0.802)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.18 (  0.18)
Test: [  1/  1]	Loss 0.802 (0.802)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.802 (0.802)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.18 (  0.18)
Overall Timing[ 28/  1]	epoch_time 0.0459 (0.0444)	validation_time 0.0003 (0.0007)	train_time 0.0455 (0.0436)
record: (train_acc, test_acc) (0.7194000356197358, 0.6920000314712524)
last accs (train_acc, test_acc) (0.500000006467104, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 13.31it/s] 23%|##3       | 6/26 [00:00<00:00, 23.67it/s] 35%|###4      | 9/26 [00:00<00:00, 24.16it/s] 46%|####6     | 12/26 [00:00<00:00, 25.22it/s] 62%|######1   | 16/26 [00:00<00:00, 28.09it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.25it/s] 85%|########4 | 22/26 [00:00<00:00, 27.57it/s]100%|##########| 26/26 [00:00<00:00, 29.27it/s]100%|##########| 26/26 [00:01<00:00, 25.05it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 754 200
penalty weights 10000.0
args.step pgd_anneal_iters 754 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 755 200
penalty weights 10000.0
args.step pgd_anneal_iters 755 600
dim_v 512
rho, theta 361 tensor(-5.8683e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 756 200
penalty weights 10000.0
args.step pgd_anneal_iters 756 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 757 200
penalty weights 10000.0
args.step pgd_anneal_iters 757 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 758 200
penalty weights 10000.0
args.step pgd_anneal_iters 758 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 759 200
penalty weights 10000.0
args.step pgd_anneal_iters 759 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 760 200
penalty weights 10000.0
args.step pgd_anneal_iters 760 600
dim_v 512
rho, theta 349 tensor(-1.3584e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 761 200
penalty weights 10000.0
args.step pgd_anneal_iters 761 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 762 200
penalty weights 10000.0
args.step pgd_anneal_iters 762 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 763 200
penalty weights 10000.0
args.step pgd_anneal_iters 763 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 764 200
penalty weights 10000.0
args.step pgd_anneal_iters 764 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 765 200
penalty weights 10000.0
args.step pgd_anneal_iters 765 600
dim_v 512
rho, theta 347 tensor(-1.0482e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 766 200
penalty weights 10000.0
args.step pgd_anneal_iters 766 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 767 200
penalty weights 10000.0
args.step pgd_anneal_iters 767 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 768 200
penalty weights 10000.0
args.step pgd_anneal_iters 768 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 769 200
penalty weights 10000.0
args.step pgd_anneal_iters 769 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 770 200
penalty weights 10000.0
args.step pgd_anneal_iters 770 600
dim_v 512
rho, theta 435 tensor(5.6663e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 771 200
penalty weights 10000.0
args.step pgd_anneal_iters 771 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 772 200
penalty weights 10000.0
args.step pgd_anneal_iters 772 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 773 200
penalty weights 10000.0
args.step pgd_anneal_iters 773 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 774 200
penalty weights 10000.0
args.step pgd_anneal_iters 774 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 775 200
penalty weights 10000.0
args.step pgd_anneal_iters 775 600
dim_v 512
rho, theta 430 tensor(1.0920e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 776 200
penalty weights 10000.0
args.step pgd_anneal_iters 776 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 777 200
penalty weights 10000.0
args.step pgd_anneal_iters 777 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 778 200
penalty weights 10000.0
args.step pgd_anneal_iters 778 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 779 200
penalty weights 10000.0
args.step pgd_anneal_iters 779 600
final projection at end of training
dim_v 512
Epoch: [29][  26/  26]	Loss 0.000 (0.000)	train_nll   0.67 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  38.63 ( 38.63)	train_acc   0.48 (  0.50)	train_minacc   0.56 (  0.50)	train_majacc   0.47 (  0.50)	train_corr   0.00 (  0.00)	l1 5.3629 (5.3657)	zero_count 0.0000 (30.1080)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.85it/s] 23%|##3       | 6/26 [00:00<00:00, 31.20it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.20it/s] 42%|####2     | 11/26 [00:00<00:00, 37.67it/s] 62%|######1   | 16/26 [00:00<00:00, 41.54it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.54it/s] 81%|########  | 21/26 [00:00<00:00, 40.74it/s]100%|##########| 26/26 [00:00<00:00, 43.41it/s]100%|##########| 26/26 [00:00<00:00, 35.86it/s]
Test: [   0/  26]	Loss 0.663 (0.663)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.52 (  0.52)	Loss_d 0.663 (0.663)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.26 (  0.26)
Test: [  10/  26]	Loss 0.669 (0.665)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.48)	test_majacc   0.48 (  0.50)	Loss_d 0.669 (0.665)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.48)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.26 (  0.27)
Test: [  20/  26]	Loss 0.663 (0.665)	test_acc   0.51 (  0.50)	test_minacc   0.42 (  0.50)	test_majacc   0.52 (  0.50)	Loss_d 0.663 (0.665)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.42 (  0.50)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.27 (  0.27)
Test: [  26/  26]	Loss 0.666 (0.665)	test_acc   0.48 (  0.50)	test_minacc   0.56 (  0.50)	test_majacc   0.47 (  0.50)	Loss_d 0.666 (0.665)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.56 (  0.50)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.29 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.99it/s]
Test: [  0/  1]	Loss 0.795 (0.795)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.795 (0.795)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.20)
Test: [  1/  1]	Loss 0.795 (0.795)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.795 (0.795)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.20)
Overall Timing[ 29/  1]	epoch_time 0.0463 (0.0445)	validation_time 0.0004 (0.0007)	train_time 0.0459 (0.0437)
record: (train_acc, test_acc) (0.7194000356197358, 0.6920000314712524)
last accs (train_acc, test_acc) (0.500000006467104, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.87it/s] 15%|#5        | 4/26 [00:00<00:01, 12.26it/s] 27%|##6       | 7/26 [00:00<00:01, 16.49it/s] 38%|###8      | 10/26 [00:00<00:00, 20.44it/s] 50%|#####     | 13/26 [00:00<00:00, 21.98it/s] 62%|######1   | 16/26 [00:00<00:00, 23.54it/s] 77%|#######6  | 20/26 [00:00<00:00, 26.63it/s] 88%|########8 | 23/26 [00:01<00:00, 26.42it/s]100%|##########| 26/26 [00:01<00:00, 26.59it/s]100%|##########| 26/26 [00:01<00:00, 20.81it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 780 200
penalty weights 10000.0
args.step pgd_anneal_iters 780 600
dim_v 512
rho, theta 388 tensor(-1.6592e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 781 200
penalty weights 10000.0
args.step pgd_anneal_iters 781 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 782 200
penalty weights 10000.0
args.step pgd_anneal_iters 782 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 783 200
penalty weights 10000.0
args.step pgd_anneal_iters 783 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 784 200
penalty weights 10000.0
args.step pgd_anneal_iters 784 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 785 200
penalty weights 10000.0
args.step pgd_anneal_iters 785 600
dim_v 512
rho, theta 355 tensor(-1.4246e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 786 200
penalty weights 10000.0
args.step pgd_anneal_iters 786 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 787 200
penalty weights 10000.0
args.step pgd_anneal_iters 787 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 788 200
penalty weights 10000.0
args.step pgd_anneal_iters 788 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 789 200
penalty weights 10000.0
args.step pgd_anneal_iters 789 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 790 200
penalty weights 10000.0
args.step pgd_anneal_iters 790 600
dim_v 512
rho, theta 349 tensor(-1.1482e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 791 200
penalty weights 10000.0
args.step pgd_anneal_iters 791 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 792 200
penalty weights 10000.0
args.step pgd_anneal_iters 792 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 793 200
penalty weights 10000.0
args.step pgd_anneal_iters 793 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 794 200
penalty weights 10000.0
args.step pgd_anneal_iters 794 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 795 200
penalty weights 10000.0
args.step pgd_anneal_iters 795 600
dim_v 512
rho, theta 353 tensor(-5.3247e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 796 200
penalty weights 10000.0
args.step pgd_anneal_iters 796 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 797 200
penalty weights 10000.0
args.step pgd_anneal_iters 797 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 798 200
penalty weights 10000.0
args.step pgd_anneal_iters 798 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 799 200
penalty weights 10000.0
args.step pgd_anneal_iters 799 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 800 200
penalty weights 10000.0
args.step pgd_anneal_iters 800 600
dim_v 512
rho, theta 434 tensor(3.7226e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 801 200
penalty weights 10000.0
args.step pgd_anneal_iters 801 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 802 200
penalty weights 10000.0
args.step pgd_anneal_iters 802 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 803 200
penalty weights 10000.0
args.step pgd_anneal_iters 803 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 804 200
penalty weights 10000.0
args.step pgd_anneal_iters 804 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 805 200
penalty weights 10000.0
args.step pgd_anneal_iters 805 600
dim_v 512
rho, theta 388 tensor(-7.3254e-06, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [30][  26/  26]	Loss 0.000 (0.000)	train_nll   0.67 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  38.63 ( 38.63)	train_acc   0.48 (  0.50)	train_minacc   0.56 (  0.50)	train_majacc   0.47 (  0.50)	train_corr   0.00 (  0.00)	l1 5.3645 (5.3658)	zero_count 0.0000 (26.3640)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.20it/s] 15%|#5        | 4/26 [00:00<00:01, 13.37it/s] 35%|###4      | 9/26 [00:00<00:00, 24.96it/s]                                               35%|###4      | 9/26 [00:00<00:00, 24.96it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.32it/s] 73%|#######3  | 19/26 [00:00<00:00, 36.51it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 36.51it/s] 92%|#########2| 24/26 [00:00<00:00, 36.78it/s]100%|##########| 26/26 [00:00<00:00, 29.98it/s]
Test: [   0/  26]	Loss 0.664 (0.664)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.52 (  0.52)	Loss_d 0.664 (0.664)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.25 (  0.25)
Test: [  10/  26]	Loss 0.669 (0.666)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.48)	test_majacc   0.48 (  0.50)	Loss_d 0.669 (0.666)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.48)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.26 (  0.26)
Test: [  20/  26]	Loss 0.663 (0.665)	test_acc   0.51 (  0.50)	test_minacc   0.42 (  0.50)	test_majacc   0.52 (  0.50)	Loss_d 0.663 (0.665)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.42 (  0.50)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.26 (  0.26)
Test: [  26/  26]	Loss 0.666 (0.666)	test_acc   0.48 (  0.50)	test_minacc   0.56 (  0.50)	test_majacc   0.47 (  0.50)	Loss_d 0.666 (0.666)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.56 (  0.50)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.30 (  0.26)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.35it/s]
Test: [  0/  1]	Loss 0.793 (0.793)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.793 (0.793)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.20)
Test: [  1/  1]	Loss 0.793 (0.793)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.793 (0.793)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.20)
Overall Timing[ 30/  1]	epoch_time 0.0494 (0.0447)	validation_time 0.0004 (0.0007)	train_time 0.0490 (0.0439)
record: (train_acc, test_acc) (0.7194000356197358, 0.6920000314712524)
last accs (train_acc, test_acc) (0.500000006467104, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.88it/s] 19%|#9        | 5/26 [00:00<00:01, 19.53it/s] 31%|###       | 8/26 [00:00<00:00, 23.16it/s] 42%|####2     | 11/26 [00:00<00:00, 24.07it/s] 58%|#####7    | 15/26 [00:00<00:00, 25.28it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.25it/s] 85%|########4 | 22/26 [00:00<00:00, 27.41it/s] 96%|#########6| 25/26 [00:00<00:00, 26.74it/s]100%|##########| 26/26 [00:01<00:00, 24.00it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 806 200
penalty weights 10000.0
args.step pgd_anneal_iters 806 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 807 200
penalty weights 10000.0
args.step pgd_anneal_iters 807 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 808 200
penalty weights 10000.0
args.step pgd_anneal_iters 808 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 809 200
penalty weights 10000.0
args.step pgd_anneal_iters 809 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 810 200
penalty weights 10000.0
args.step pgd_anneal_iters 810 600
dim_v 512
rho, theta 350 tensor(-8.1646e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 811 200
penalty weights 10000.0
args.step pgd_anneal_iters 811 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 812 200
penalty weights 10000.0
args.step pgd_anneal_iters 812 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 813 200
penalty weights 10000.0
args.step pgd_anneal_iters 813 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 814 200
penalty weights 10000.0
args.step pgd_anneal_iters 814 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 815 200
penalty weights 10000.0
args.step pgd_anneal_iters 815 600
dim_v 512
rho, theta 342 tensor(-7.9394e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 816 200
penalty weights 10000.0
args.step pgd_anneal_iters 816 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 817 200
penalty weights 10000.0
args.step pgd_anneal_iters 817 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 818 200
penalty weights 10000.0
args.step pgd_anneal_iters 818 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 819 200
penalty weights 10000.0
args.step pgd_anneal_iters 819 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 820 200
penalty weights 10000.0
args.step pgd_anneal_iters 820 600
dim_v 512
rho, theta 347 tensor(-3.7777e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 821 200
penalty weights 10000.0
args.step pgd_anneal_iters 821 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 822 200
penalty weights 10000.0
args.step pgd_anneal_iters 822 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 823 200
penalty weights 10000.0
args.step pgd_anneal_iters 823 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 824 200
penalty weights 10000.0
args.step pgd_anneal_iters 824 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 825 200
penalty weights 10000.0
args.step pgd_anneal_iters 825 600
dim_v 512
rho, theta 431 tensor(4.7949e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 826 200
penalty weights 10000.0
args.step pgd_anneal_iters 826 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 827 200
penalty weights 10000.0
args.step pgd_anneal_iters 827 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 828 200
penalty weights 10000.0
args.step pgd_anneal_iters 828 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 829 200
penalty weights 10000.0
args.step pgd_anneal_iters 829 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 830 200
penalty weights 10000.0
args.step pgd_anneal_iters 830 600
dim_v 512
rho, theta 405 tensor(-4.0132e-06, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 831 200
penalty weights 10000.0
args.step pgd_anneal_iters 831 600
final projection at end of training
dim_v 512
rho, theta 394 tensor(-2.5158e-06, device='cuda:0')
Epoch: [31][  26/  26]	Loss 0.000 (0.000)	train_nll   0.67 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  38.63 ( 38.63)	train_acc   0.48 (  0.50)	train_minacc   0.56 (  0.50)	train_majacc   0.47 (  0.50)	train_corr   0.00 (  0.00)	l1 5.3643 (5.3656)	zero_count 106.0000 (29.8330)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.30it/s] 23%|##3       | 6/26 [00:00<00:00, 23.63it/s]                                               23%|##3       | 6/26 [00:00<00:00, 23.63it/s] 42%|####2     | 11/26 [00:00<00:00, 31.70it/s] 62%|######1   | 16/26 [00:00<00:00, 33.88it/s]                                                62%|######1   | 16/26 [00:00<00:00, 33.88it/s] 81%|########  | 21/26 [00:00<00:00, 37.60it/s]100%|##########| 26/26 [00:00<00:00, 40.40it/s]100%|##########| 26/26 [00:00<00:00, 31.41it/s]
Test: [   0/  26]	Loss 0.667 (0.667)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.52 (  0.52)	Loss_d 0.667 (0.667)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.23 (  0.23)
Test: [  10/  26]	Loss 0.672 (0.668)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.48)	test_majacc   0.48 (  0.50)	Loss_d 0.672 (0.668)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.48)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.24 (  0.24)
Test: [  20/  26]	Loss 0.666 (0.669)	test_acc   0.51 (  0.50)	test_minacc   0.42 (  0.50)	test_majacc   0.52 (  0.50)	Loss_d 0.666 (0.669)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.42 (  0.50)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.23 (  0.24)
Test: [  26/  26]	Loss 0.670 (0.669)	test_acc   0.48 (  0.50)	test_minacc   0.56 (  0.50)	test_majacc   0.47 (  0.50)	Loss_d 0.670 (0.669)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.56 (  0.50)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.27 (  0.24)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.08it/s]
Test: [  0/  1]	Loss 0.787 (0.787)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.787 (0.787)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.18 (  0.18)
Test: [  1/  1]	Loss 0.787 (0.787)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.787 (0.787)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.18 (  0.18)
Overall Timing[ 31/  1]	epoch_time 0.0469 (0.0447)	validation_time 0.0003 (0.0007)	train_time 0.0465 (0.0440)
record: (train_acc, test_acc) (0.7194000356197358, 0.6920000314712524)
last accs (train_acc, test_acc) (0.500000006467104, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.23it/s] 19%|#9        | 5/26 [00:00<00:00, 22.70it/s] 35%|###4      | 9/26 [00:00<00:00, 25.81it/s] 50%|#####     | 13/26 [00:00<00:00, 29.28it/s] 62%|######1   | 16/26 [00:00<00:00, 28.69it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.70it/s] 88%|########8 | 23/26 [00:00<00:00, 30.40it/s]100%|##########| 26/26 [00:00<00:00, 26.66it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 832 200
penalty weights 10000.0
args.step pgd_anneal_iters 832 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 833 200
penalty weights 10000.0
args.step pgd_anneal_iters 833 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 834 200
penalty weights 10000.0
args.step pgd_anneal_iters 834 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 835 200
penalty weights 10000.0
args.step pgd_anneal_iters 835 600
dim_v 512
rho, theta 351 tensor(-7.0374e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 836 200
penalty weights 10000.0
args.step pgd_anneal_iters 836 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 837 200
penalty weights 10000.0
args.step pgd_anneal_iters 837 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 838 200
penalty weights 10000.0
args.step pgd_anneal_iters 838 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 839 200
penalty weights 10000.0
args.step pgd_anneal_iters 839 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 840 200
penalty weights 10000.0
args.step pgd_anneal_iters 840 600
dim_v 512
rho, theta 344 tensor(-7.3143e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 841 200
penalty weights 10000.0
args.step pgd_anneal_iters 841 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 842 200
penalty weights 10000.0
args.step pgd_anneal_iters 842 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 843 200
penalty weights 10000.0
args.step pgd_anneal_iters 843 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 844 200
penalty weights 10000.0
args.step pgd_anneal_iters 844 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 845 200
penalty weights 10000.0
args.step pgd_anneal_iters 845 600
dim_v 512
rho, theta 341 tensor(-4.4031e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 846 200
penalty weights 10000.0
args.step pgd_anneal_iters 846 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 847 200
penalty weights 10000.0
args.step pgd_anneal_iters 847 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 848 200
penalty weights 10000.0
args.step pgd_anneal_iters 848 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 849 200
penalty weights 10000.0
args.step pgd_anneal_iters 849 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 850 200
penalty weights 10000.0
args.step pgd_anneal_iters 850 600
dim_v 512
rho, theta 427 tensor(2.7619e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 851 200
penalty weights 10000.0
args.step pgd_anneal_iters 851 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 852 200
penalty weights 10000.0
args.step pgd_anneal_iters 852 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 853 200
penalty weights 10000.0
args.step pgd_anneal_iters 853 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 854 200
penalty weights 10000.0
args.step pgd_anneal_iters 854 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 855 200
penalty weights 10000.0
args.step pgd_anneal_iters 855 600
dim_v 512
rho, theta 377 tensor(-4.9589e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 856 200
penalty weights 10000.0
args.step pgd_anneal_iters 856 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 857 200
penalty weights 10000.0
args.step pgd_anneal_iters 857 600
final projection at end of training
dim_v 512
rho, theta 357 tensor(-2.7505e-06, device='cuda:0')
Epoch: [32][  26/  26]	Loss 0.000 (0.000)	train_nll   0.67 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  38.63 ( 38.63)	train_acc   0.48 (  0.50)	train_minacc   0.56 (  0.50)	train_majacc   0.47 (  0.50)	train_corr   0.00 (  0.00)	l1 5.3649 (5.3655)	zero_count 0.0000 (32.4480)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.72it/s] 23%|##3       | 6/26 [00:00<00:00, 24.94it/s]                                               23%|##3       | 6/26 [00:00<00:00, 24.94it/s] 42%|####2     | 11/26 [00:00<00:00, 32.29it/s] 62%|######1   | 16/26 [00:00<00:00, 37.94it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.94it/s] 81%|########  | 21/26 [00:00<00:00, 36.85it/s]100%|##########| 26/26 [00:00<00:00, 32.30it/s]
Test: [   0/  26]	Loss 0.667 (0.667)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.52 (  0.52)	Loss_d 0.667 (0.667)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.23 (  0.23)
Test: [  10/  26]	Loss 0.671 (0.668)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.48)	test_majacc   0.48 (  0.50)	Loss_d 0.671 (0.668)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.48)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.24 (  0.24)
Test: [  20/  26]	Loss 0.666 (0.668)	test_acc   0.51 (  0.50)	test_minacc   0.42 (  0.50)	test_majacc   0.52 (  0.50)	Loss_d 0.666 (0.668)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.42 (  0.50)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.23 (  0.24)
Test: [  26/  26]	Loss 0.667 (0.668)	test_acc   0.48 (  0.50)	test_minacc   0.56 (  0.50)	test_majacc   0.47 (  0.50)	Loss_d 0.667 (0.668)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.56 (  0.50)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.28 (  0.24)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.57it/s]
Test: [  0/  1]	Loss 0.790 (0.790)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.790 (0.790)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.18 (  0.18)
Test: [  1/  1]	Loss 0.790 (0.790)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.790 (0.790)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.18 (  0.18)
Overall Timing[ 32/  1]	epoch_time 0.0437 (0.0447)	validation_time 0.0004 (0.0006)	train_time 0.0433 (0.0439)
record: (train_acc, test_acc) (0.7194000356197358, 0.6920000314712524)
last accs (train_acc, test_acc) (0.500000006467104, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.82it/s] 12%|#1        | 3/26 [00:00<00:02, 10.25it/s] 27%|##6       | 7/26 [00:00<00:00, 19.08it/s] 38%|###8      | 10/26 [00:00<00:00, 21.29it/s] 50%|#####     | 13/26 [00:00<00:00, 22.99it/s] 65%|######5   | 17/26 [00:00<00:00, 26.20it/s] 77%|#######6  | 20/26 [00:00<00:00, 26.26it/s] 88%|########8 | 23/26 [00:01<00:00, 26.94it/s]100%|##########| 26/26 [00:01<00:00, 22.44it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 858 200
penalty weights 10000.0
args.step pgd_anneal_iters 858 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 859 200
penalty weights 10000.0
args.step pgd_anneal_iters 859 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 860 200
penalty weights 10000.0
args.step pgd_anneal_iters 860 600
dim_v 512
rho, theta 347 tensor(-3.8805e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 861 200
penalty weights 10000.0
args.step pgd_anneal_iters 861 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 862 200
penalty weights 10000.0
args.step pgd_anneal_iters 862 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 863 200
penalty weights 10000.0
args.step pgd_anneal_iters 863 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 864 200
penalty weights 10000.0
args.step pgd_anneal_iters 864 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 865 200
penalty weights 10000.0
args.step pgd_anneal_iters 865 600
dim_v 512
rho, theta 343 tensor(-5.4781e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 866 200
penalty weights 10000.0
args.step pgd_anneal_iters 866 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 867 200
penalty weights 10000.0
args.step pgd_anneal_iters 867 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 868 200
penalty weights 10000.0
args.step pgd_anneal_iters 868 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 869 200
penalty weights 10000.0
args.step pgd_anneal_iters 869 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 870 200
penalty weights 10000.0
args.step pgd_anneal_iters 870 600
dim_v 512
rho, theta 341 tensor(-3.4550e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 871 200
penalty weights 10000.0
args.step pgd_anneal_iters 871 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 872 200
penalty weights 10000.0
args.step pgd_anneal_iters 872 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 873 200
penalty weights 10000.0
args.step pgd_anneal_iters 873 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 874 200
penalty weights 10000.0
args.step pgd_anneal_iters 874 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 875 200
penalty weights 10000.0
args.step pgd_anneal_iters 875 600
dim_v 512
rho, theta 419 tensor(2.0947e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 876 200
penalty weights 10000.0
args.step pgd_anneal_iters 876 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 877 200
penalty weights 10000.0
args.step pgd_anneal_iters 877 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 878 200
penalty weights 10000.0
args.step pgd_anneal_iters 878 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 879 200
penalty weights 10000.0
args.step pgd_anneal_iters 879 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 880 200
penalty weights 10000.0
args.step pgd_anneal_iters 880 600
dim_v 512
rho, theta 386 tensor(-1.9714e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 881 200
penalty weights 10000.0
args.step pgd_anneal_iters 881 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 882 200
penalty weights 10000.0
args.step pgd_anneal_iters 882 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 883 200
penalty weights 10000.0
args.step pgd_anneal_iters 883 600
final projection at end of training
dim_v 512
rho, theta 361 tensor(-3.8384e-06, device='cuda:0')
Epoch: [33][  26/  26]	Loss 0.000 (0.000)	train_nll   0.67 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  38.63 ( 38.63)	train_acc   0.48 (  0.50)	train_minacc   0.56 (  0.50)	train_majacc   0.47 (  0.50)	train_corr   0.00 (  0.00)	l1 5.3652 (5.3653)	zero_count 0.0000 (34.0470)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.86it/s] 23%|##3       | 6/26 [00:00<00:00, 32.21it/s]                                               23%|##3       | 6/26 [00:00<00:00, 32.21it/s] 42%|####2     | 11/26 [00:00<00:00, 38.60it/s] 62%|######1   | 16/26 [00:00<00:00, 41.58it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.58it/s] 81%|########  | 21/26 [00:00<00:00, 39.33it/s]100%|##########| 26/26 [00:00<00:00, 41.97it/s]100%|##########| 26/26 [00:00<00:00, 35.36it/s]
Test: [   0/  26]	Loss 0.669 (0.669)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.52 (  0.52)	Loss_d 0.669 (0.669)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.22 (  0.22)
Test: [  10/  26]	Loss 0.672 (0.670)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.48)	test_majacc   0.48 (  0.50)	Loss_d 0.672 (0.670)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.48)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.22 (  0.22)
Test: [  20/  26]	Loss 0.669 (0.671)	test_acc   0.51 (  0.50)	test_minacc   0.42 (  0.50)	test_majacc   0.52 (  0.50)	Loss_d 0.669 (0.671)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.42 (  0.50)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.21 (  0.22)
Test: [  26/  26]	Loss 0.670 (0.671)	test_acc   0.48 (  0.50)	test_minacc   0.56 (  0.50)	test_majacc   0.47 (  0.50)	Loss_d 0.670 (0.671)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.56 (  0.50)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.26 (  0.22)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.25it/s]
Test: [  0/  1]	Loss 0.783 (0.783)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.783 (0.783)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.17 (  0.17)
Test: [  1/  1]	Loss 0.783 (0.783)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.783 (0.783)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.17 (  0.17)
Overall Timing[ 33/  1]	epoch_time 0.0454 (0.0447)	validation_time 0.0003 (0.0006)	train_time 0.0450 (0.0440)
record: (train_acc, test_acc) (0.7194000356197358, 0.6920000314712524)
last accs (train_acc, test_acc) (0.500000006467104, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02, 11.45it/s] 23%|##3       | 6/26 [00:00<00:00, 21.60it/s] 35%|###4      | 9/26 [00:00<00:00, 23.15it/s] 46%|####6     | 12/26 [00:00<00:00, 24.23it/s] 62%|######1   | 16/26 [00:00<00:00, 27.45it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.80it/s] 85%|########4 | 22/26 [00:00<00:00, 26.92it/s]100%|##########| 26/26 [00:00<00:00, 29.36it/s]100%|##########| 26/26 [00:01<00:00, 24.60it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 884 200
penalty weights 10000.0
args.step pgd_anneal_iters 884 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 885 200
penalty weights 10000.0
args.step pgd_anneal_iters 885 600
dim_v 512
rho, theta 352 tensor(-3.2757e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 886 200
penalty weights 10000.0
args.step pgd_anneal_iters 886 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 887 200
penalty weights 10000.0
args.step pgd_anneal_iters 887 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 888 200
penalty weights 10000.0
args.step pgd_anneal_iters 888 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 889 200
penalty weights 10000.0
args.step pgd_anneal_iters 889 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 890 200
penalty weights 10000.0
args.step pgd_anneal_iters 890 600
dim_v 512
rho, theta 346 tensor(-5.8127e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 891 200
penalty weights 10000.0
args.step pgd_anneal_iters 891 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 892 200
penalty weights 10000.0
args.step pgd_anneal_iters 892 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 893 200
penalty weights 10000.0
args.step pgd_anneal_iters 893 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 894 200
penalty weights 10000.0
args.step pgd_anneal_iters 894 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 895 200
penalty weights 10000.0
args.step pgd_anneal_iters 895 600
dim_v 512
rho, theta 341 tensor(-3.4954e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 896 200
penalty weights 10000.0
args.step pgd_anneal_iters 896 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 897 200
penalty weights 10000.0
args.step pgd_anneal_iters 897 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 898 200
penalty weights 10000.0
args.step pgd_anneal_iters 898 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 899 200
penalty weights 10000.0
args.step pgd_anneal_iters 899 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 900 200
penalty weights 10000.0
args.step pgd_anneal_iters 900 600
dim_v 512
rho, theta 394 tensor(-8.4503e-09, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 901 200
penalty weights 10000.0
args.step pgd_anneal_iters 901 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 902 200
penalty weights 10000.0
args.step pgd_anneal_iters 902 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 903 200
penalty weights 10000.0
args.step pgd_anneal_iters 903 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 904 200
penalty weights 10000.0
args.step pgd_anneal_iters 904 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 905 200
penalty weights 10000.0
args.step pgd_anneal_iters 905 600
dim_v 512
rho, theta 355 tensor(-2.9709e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 906 200
penalty weights 10000.0
args.step pgd_anneal_iters 906 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 907 200
penalty weights 10000.0
args.step pgd_anneal_iters 907 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 908 200
penalty weights 10000.0
args.step pgd_anneal_iters 908 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 909 200
penalty weights 10000.0
args.step pgd_anneal_iters 909 600
final projection at end of training
dim_v 512
rho, theta 344 tensor(-3.5120e-06, device='cuda:0')
Epoch: [34][  26/  26]	Loss 0.000 (0.000)	train_nll   0.67 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  38.63 ( 38.63)	train_acc   0.48 (  0.50)	train_minacc   0.56 (  0.50)	train_majacc   0.47 (  0.50)	train_corr   0.00 (  0.00)	l1 5.3666 (5.3654)	zero_count 0.0000 (35.7630)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.30it/s] 23%|##3       | 6/26 [00:00<00:00, 30.07it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.07it/s] 42%|####2     | 11/26 [00:00<00:00, 36.64it/s] 62%|######1   | 16/26 [00:00<00:00, 41.12it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.12it/s] 81%|########  | 21/26 [00:00<00:00, 39.36it/s]100%|##########| 26/26 [00:00<00:00, 42.18it/s]100%|##########| 26/26 [00:00<00:00, 35.01it/s]
Test: [   0/  26]	Loss 0.668 (0.668)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.52 (  0.52)	Loss_d 0.668 (0.668)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.22 (  0.22)
Test: [  10/  26]	Loss 0.670 (0.668)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.48)	test_majacc   0.48 (  0.50)	Loss_d 0.670 (0.668)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.48)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.23 (  0.23)
Test: [  20/  26]	Loss 0.666 (0.668)	test_acc   0.51 (  0.50)	test_minacc   0.42 (  0.50)	test_majacc   0.52 (  0.50)	Loss_d 0.666 (0.668)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.42 (  0.50)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.23 (  0.23)
Test: [  26/  26]	Loss 0.665 (0.668)	test_acc   0.48 (  0.50)	test_minacc   0.56 (  0.50)	test_majacc   0.47 (  0.50)	Loss_d 0.665 (0.668)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.56 (  0.50)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.28 (  0.23)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.08it/s]
Test: [  0/  1]	Loss 0.792 (0.792)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.792 (0.792)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.18 (  0.18)
Test: [  1/  1]	Loss 0.792 (0.792)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.792 (0.792)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.18 (  0.18)
Overall Timing[ 34/  1]	epoch_time 0.0455 (0.0447)	validation_time 0.0004 (0.0006)	train_time 0.0451 (0.0440)
record: (train_acc, test_acc) (0.7194000356197358, 0.6920000314712524)
last accs (train_acc, test_acc) (0.500000006467104, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.23it/s] 23%|##3       | 6/26 [00:00<00:00, 22.37it/s] 38%|###8      | 10/26 [00:00<00:00, 26.78it/s] 50%|#####     | 13/26 [00:00<00:00, 26.32it/s] 62%|######1   | 16/26 [00:00<00:00, 25.72it/s] 77%|#######6  | 20/26 [00:00<00:00, 28.46it/s] 88%|########8 | 23/26 [00:00<00:00, 27.71it/s]100%|##########| 26/26 [00:00<00:00, 27.73it/s]100%|##########| 26/26 [00:01<00:00, 24.97it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 910 200
penalty weights 10000.0
args.step pgd_anneal_iters 910 600
dim_v 512
rho, theta 342 tensor(-7.2985e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 911 200
penalty weights 10000.0
args.step pgd_anneal_iters 911 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 912 200
penalty weights 10000.0
args.step pgd_anneal_iters 912 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 913 200
penalty weights 10000.0
args.step pgd_anneal_iters 913 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 914 200
penalty weights 10000.0
args.step pgd_anneal_iters 914 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 915 200
penalty weights 10000.0
args.step pgd_anneal_iters 915 600
dim_v 512
rho, theta 338 tensor(-2.7879e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 916 200
penalty weights 10000.0
args.step pgd_anneal_iters 916 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 917 200
penalty weights 10000.0
args.step pgd_anneal_iters 917 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 918 200
penalty weights 10000.0
args.step pgd_anneal_iters 918 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 919 200
penalty weights 10000.0
args.step pgd_anneal_iters 919 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 920 200
penalty weights 10000.0
args.step pgd_anneal_iters 920 600
dim_v 512
rho, theta 344 tensor(-1.3269e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 921 200
penalty weights 10000.0
args.step pgd_anneal_iters 921 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 922 200
penalty weights 10000.0
args.step pgd_anneal_iters 922 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 923 200
penalty weights 10000.0
args.step pgd_anneal_iters 923 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 924 200
penalty weights 10000.0
args.step pgd_anneal_iters 924 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 925 200
penalty weights 10000.0
args.step pgd_anneal_iters 925 600
dim_v 512
rho, theta 368 tensor(-2.6233e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 926 200
penalty weights 10000.0
args.step pgd_anneal_iters 926 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 927 200
penalty weights 10000.0
args.step pgd_anneal_iters 927 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 928 200
penalty weights 10000.0
args.step pgd_anneal_iters 928 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 929 200
penalty weights 10000.0
args.step pgd_anneal_iters 929 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 930 200
penalty weights 10000.0
args.step pgd_anneal_iters 930 600
dim_v 512
rho, theta 377 tensor(2.5608e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 931 200
penalty weights 10000.0
args.step pgd_anneal_iters 931 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 932 200
penalty weights 10000.0
args.step pgd_anneal_iters 932 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 933 200
penalty weights 10000.0
args.step pgd_anneal_iters 933 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 934 200
penalty weights 10000.0
args.step pgd_anneal_iters 934 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 935 200
penalty weights 10000.0
args.step pgd_anneal_iters 935 600
dim_v 512
rho, theta 342 tensor(-4.1303e-06, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [35][  26/  26]	Loss 0.000 (0.000)	train_nll   0.67 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  38.64 ( 38.63)	train_acc   0.48 (  0.50)	train_minacc   0.56 (  0.50)	train_majacc   0.47 (  0.50)	train_corr   0.00 (  0.00)	l1 5.3666 (5.3651)	zero_count 0.0000 (37.1670)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.71it/s] 23%|##3       | 6/26 [00:00<00:00, 31.91it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.91it/s] 42%|####2     | 11/26 [00:00<00:00, 37.52it/s] 62%|######1   | 16/26 [00:00<00:00, 41.40it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.40it/s] 81%|########  | 21/26 [00:00<00:00, 39.13it/s]100%|##########| 26/26 [00:00<00:00, 41.96it/s]100%|##########| 26/26 [00:00<00:00, 35.32it/s]
Test: [   0/  26]	Loss 0.670 (0.670)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.52 (  0.52)	Loss_d 0.670 (0.670)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.21 (  0.21)
Test: [  10/  26]	Loss 0.672 (0.671)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.48)	test_majacc   0.48 (  0.50)	Loss_d 0.672 (0.671)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.48)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.22 (  0.21)
Test: [  20/  26]	Loss 0.670 (0.672)	test_acc   0.51 (  0.50)	test_minacc   0.42 (  0.50)	test_majacc   0.52 (  0.50)	Loss_d 0.670 (0.672)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.42 (  0.50)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.20 (  0.20)
Test: [  26/  26]	Loss 0.669 (0.672)	test_acc   0.48 (  0.50)	test_minacc   0.56 (  0.50)	test_majacc   0.47 (  0.50)	Loss_d 0.669 (0.672)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.56 (  0.50)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.26 (  0.21)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.24it/s]
Test: [  0/  1]	Loss 0.781 (0.781)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.781 (0.781)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.16 (  0.16)
Test: [  1/  1]	Loss 0.781 (0.781)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.781 (0.781)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.16 (  0.16)
Overall Timing[ 35/  1]	epoch_time 0.0450 (0.0448)	validation_time 0.0003 (0.0006)	train_time 0.0446 (0.0440)
record: (train_acc, test_acc) (0.7194000356197358, 0.6920000314712524)
last accs (train_acc, test_acc) (0.500000006467104, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.99it/s] 19%|#9        | 5/26 [00:00<00:01, 16.28it/s] 35%|###4      | 9/26 [00:00<00:00, 22.60it/s] 46%|####6     | 12/26 [00:00<00:00, 24.00it/s] 58%|#####7    | 15/26 [00:00<00:00, 24.54it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.76it/s] 85%|########4 | 22/26 [00:00<00:00, 26.88it/s] 96%|#########6| 25/26 [00:01<00:00, 27.26it/s]100%|##########| 26/26 [00:01<00:00, 23.09it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 936 200
penalty weights 10000.0
args.step pgd_anneal_iters 936 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 937 200
penalty weights 10000.0
args.step pgd_anneal_iters 937 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 938 200
penalty weights 10000.0
args.step pgd_anneal_iters 938 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 939 200
penalty weights 10000.0
args.step pgd_anneal_iters 939 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 940 200
penalty weights 10000.0
args.step pgd_anneal_iters 940 600
dim_v 512
rho, theta 339 tensor(-4.1204e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 941 200
penalty weights 10000.0
args.step pgd_anneal_iters 941 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 942 200
penalty weights 10000.0
args.step pgd_anneal_iters 942 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 943 200
penalty weights 10000.0
args.step pgd_anneal_iters 943 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 944 200
penalty weights 10000.0
args.step pgd_anneal_iters 944 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 945 200
penalty weights 10000.0
args.step pgd_anneal_iters 945 600
dim_v 512
rho, theta 336 tensor(-1.7432e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 946 200
penalty weights 10000.0
args.step pgd_anneal_iters 946 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 947 200
penalty weights 10000.0
args.step pgd_anneal_iters 947 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 948 200
penalty weights 10000.0
args.step pgd_anneal_iters 948 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 949 200
penalty weights 10000.0
args.step pgd_anneal_iters 949 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 950 200
penalty weights 10000.0
args.step pgd_anneal_iters 950 600
dim_v 512
rho, theta 369 tensor(1.9589e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 951 200
penalty weights 10000.0
args.step pgd_anneal_iters 951 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 952 200
penalty weights 10000.0
args.step pgd_anneal_iters 952 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 953 200
penalty weights 10000.0
args.step pgd_anneal_iters 953 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 954 200
penalty weights 10000.0
args.step pgd_anneal_iters 954 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 955 200
penalty weights 10000.0
args.step pgd_anneal_iters 955 600
dim_v 512
rho, theta 410 tensor(2.1521e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 956 200
penalty weights 10000.0
args.step pgd_anneal_iters 956 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 957 200
penalty weights 10000.0
args.step pgd_anneal_iters 957 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 958 200
penalty weights 10000.0
args.step pgd_anneal_iters 958 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 959 200
penalty weights 10000.0
args.step pgd_anneal_iters 959 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 960 200
penalty weights 10000.0
args.step pgd_anneal_iters 960 600
dim_v 512
rho, theta 359 tensor(-3.3140e-06, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 961 200
penalty weights 10000.0
args.step pgd_anneal_iters 961 600
final projection at end of training
dim_v 512
rho, theta 357 tensor(-9.1105e-07, device='cuda:0')
Epoch: [36][  26/  26]	Loss 0.000 (0.000)	train_nll   0.67 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  38.64 ( 38.64)	train_acc   0.48 (  0.50)	train_minacc   0.56 (  0.50)	train_majacc   0.47 (  0.50)	train_corr   0.00 (  0.00)	l1 5.3643 (5.3652)	zero_count 152.0000 (33.4010)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.33it/s] 27%|##6       | 7/26 [00:00<00:00, 32.91it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.91it/s] 46%|####6     | 12/26 [00:00<00:00, 39.46it/s] 65%|######5   | 17/26 [00:00<00:00, 41.90it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.90it/s] 85%|########4 | 22/26 [00:00<00:00, 40.53it/s]100%|##########| 26/26 [00:00<00:00, 37.01it/s]
Test: [   0/  26]	Loss 0.671 (0.671)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.52 (  0.52)	Loss_d 0.671 (0.671)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.20 (  0.20)
Test: [  10/  26]	Loss 0.673 (0.672)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.48)	test_majacc   0.48 (  0.50)	Loss_d 0.673 (0.672)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.48)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.21 (  0.20)
Test: [  20/  26]	Loss 0.672 (0.672)	test_acc   0.51 (  0.50)	test_minacc   0.42 (  0.50)	test_majacc   0.52 (  0.50)	Loss_d 0.672 (0.672)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.42 (  0.50)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.19 (  0.20)
Test: [  26/  26]	Loss 0.669 (0.672)	test_acc   0.48 (  0.50)	test_minacc   0.56 (  0.50)	test_majacc   0.47 (  0.50)	Loss_d 0.669 (0.672)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.56 (  0.50)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.25 (  0.20)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.02it/s]
Test: [  0/  1]	Loss 0.782 (0.782)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.782 (0.782)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.15 (  0.15)
Test: [  1/  1]	Loss 0.782 (0.782)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.782 (0.782)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.15 (  0.15)
Overall Timing[ 36/  1]	epoch_time 0.0472 (0.0448)	validation_time 0.0004 (0.0006)	train_time 0.0467 (0.0441)
record: (train_acc, test_acc) (0.7194000356197358, 0.6920000314712524)
last accs (train_acc, test_acc) (0.500000006467104, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.65it/s] 15%|#5        | 4/26 [00:00<00:01, 14.94it/s] 31%|###       | 8/26 [00:00<00:00, 21.93it/s] 42%|####2     | 11/26 [00:00<00:00, 23.35it/s] 54%|#####3    | 14/26 [00:00<00:00, 24.20it/s] 69%|######9   | 18/26 [00:00<00:00, 26.91it/s] 81%|########  | 21/26 [00:00<00:00, 26.87it/s] 92%|#########2| 24/26 [00:00<00:00, 27.13it/s]100%|##########| 26/26 [00:01<00:00, 23.13it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 962 200
penalty weights 10000.0
args.step pgd_anneal_iters 962 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 963 200
penalty weights 10000.0
args.step pgd_anneal_iters 963 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 964 200
penalty weights 10000.0
args.step pgd_anneal_iters 964 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 965 200
penalty weights 10000.0
args.step pgd_anneal_iters 965 600
dim_v 512
rho, theta 341 tensor(-3.1719e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 966 200
penalty weights 10000.0
args.step pgd_anneal_iters 966 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 967 200
penalty weights 10000.0
args.step pgd_anneal_iters 967 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 968 200
penalty weights 10000.0
args.step pgd_anneal_iters 968 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 969 200
penalty weights 10000.0
args.step pgd_anneal_iters 969 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 970 200
penalty weights 10000.0
args.step pgd_anneal_iters 970 600
dim_v 512
rho, theta 340 tensor(-3.0051e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 971 200
penalty weights 10000.0
args.step pgd_anneal_iters 971 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 972 200
penalty weights 10000.0
args.step pgd_anneal_iters 972 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 973 200
penalty weights 10000.0
args.step pgd_anneal_iters 973 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 974 200
penalty weights 10000.0
args.step pgd_anneal_iters 974 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 975 200
penalty weights 10000.0
args.step pgd_anneal_iters 975 600
dim_v 512
rho, theta 335 tensor(-1.4589e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 976 200
penalty weights 10000.0
args.step pgd_anneal_iters 976 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 977 200
penalty weights 10000.0
args.step pgd_anneal_iters 977 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 978 200
penalty weights 10000.0
args.step pgd_anneal_iters 978 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 979 200
penalty weights 10000.0
args.step pgd_anneal_iters 979 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 980 200
penalty weights 10000.0
args.step pgd_anneal_iters 980 600
dim_v 512
rho, theta 402 tensor(1.8080e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 981 200
penalty weights 10000.0
args.step pgd_anneal_iters 981 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 982 200
penalty weights 10000.0
args.step pgd_anneal_iters 982 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 983 200
penalty weights 10000.0
args.step pgd_anneal_iters 983 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 984 200
penalty weights 10000.0
args.step pgd_anneal_iters 984 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 985 200
penalty weights 10000.0
args.step pgd_anneal_iters 985 600
dim_v 512
rho, theta 375 tensor(-5.8210e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 986 200
penalty weights 10000.0
args.step pgd_anneal_iters 986 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 987 200
penalty weights 10000.0
args.step pgd_anneal_iters 987 600
final projection at end of training
dim_v 512
rho, theta 362 tensor(-7.5401e-07, device='cuda:0')
Epoch: [37][  26/  26]	Loss 0.000 (0.000)	train_nll   0.67 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  38.64 ( 38.64)	train_acc   0.48 (  0.50)	train_minacc   0.56 (  0.50)	train_majacc   0.47 (  0.50)	train_corr   0.00 (  0.00)	l1 5.3646 (5.3652)	zero_count 0.0000 (35.7240)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 24.83it/s] 31%|###       | 8/26 [00:00<00:00, 37.77it/s]                                               31%|###       | 8/26 [00:00<00:00, 37.77it/s] 50%|#####     | 13/26 [00:00<00:00, 40.09it/s] 69%|######9   | 18/26 [00:00<00:00, 42.62it/s]                                                69%|######9   | 18/26 [00:00<00:00, 42.62it/s] 88%|########8 | 23/26 [00:00<00:00, 41.44it/s]100%|##########| 26/26 [00:00<00:00, 37.28it/s]
Test: [   0/  26]	Loss 0.671 (0.671)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.52 (  0.52)	Loss_d 0.671 (0.671)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.20 (  0.20)
Test: [  10/  26]	Loss 0.673 (0.673)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.48)	test_majacc   0.48 (  0.50)	Loss_d 0.673 (0.673)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.48)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.21 (  0.19)
Test: [  20/  26]	Loss 0.673 (0.673)	test_acc   0.51 (  0.50)	test_minacc   0.42 (  0.50)	test_majacc   0.52 (  0.50)	Loss_d 0.673 (0.673)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.42 (  0.50)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.17 (  0.19)
Test: [  26/  26]	Loss 0.671 (0.673)	test_acc   0.48 (  0.50)	test_minacc   0.56 (  0.50)	test_majacc   0.47 (  0.50)	Loss_d 0.671 (0.673)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.56 (  0.50)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.24 (  0.19)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.93it/s]
Test: [  0/  1]	Loss 0.779 (0.779)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.779 (0.779)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.14 (  0.14)
Test: [  1/  1]	Loss 0.779 (0.779)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.779 (0.779)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.14 (  0.14)
Overall Timing[ 37/  1]	epoch_time 0.0477 (0.0449)	validation_time 0.0004 (0.0006)	train_time 0.0472 (0.0442)
record: (train_acc, test_acc) (0.7194000356197358, 0.6920000314712524)
last accs (train_acc, test_acc) (0.500000006467104, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.06it/s] 15%|#5        | 4/26 [00:00<00:01, 15.49it/s] 31%|###       | 8/26 [00:00<00:00, 20.81it/s] 46%|####6     | 12/26 [00:00<00:00, 25.58it/s] 58%|#####7    | 15/26 [00:00<00:00, 25.87it/s] 69%|######9   | 18/26 [00:00<00:00, 26.23it/s] 85%|########4 | 22/26 [00:00<00:00, 29.23it/s] 96%|#########6| 25/26 [00:01<00:00, 28.52it/s]100%|##########| 26/26 [00:01<00:00, 24.07it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 988 200
penalty weights 10000.0
args.step pgd_anneal_iters 988 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 989 200
penalty weights 10000.0
args.step pgd_anneal_iters 989 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 990 200
penalty weights 10000.0
args.step pgd_anneal_iters 990 600
dim_v 512
rho, theta 351 tensor(-1.8830e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 991 200
penalty weights 10000.0
args.step pgd_anneal_iters 991 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 992 200
penalty weights 10000.0
args.step pgd_anneal_iters 992 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 993 200
penalty weights 10000.0
args.step pgd_anneal_iters 993 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 994 200
penalty weights 10000.0
args.step pgd_anneal_iters 994 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 995 200
penalty weights 10000.0
args.step pgd_anneal_iters 995 600
dim_v 512
rho, theta 340 tensor(-3.0624e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 996 200
penalty weights 10000.0
args.step pgd_anneal_iters 996 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 997 200
penalty weights 10000.0
args.step pgd_anneal_iters 997 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 998 200
penalty weights 10000.0
args.step pgd_anneal_iters 998 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 999 200
penalty weights 10000.0
args.step pgd_anneal_iters 999 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1000 200
penalty weights 10000.0
args.step pgd_anneal_iters 1000 600
dim_v 512
rho, theta 339 tensor(-1.8470e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1001 200
penalty weights 10000.0
args.step pgd_anneal_iters 1001 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1002 200
penalty weights 10000.0
args.step pgd_anneal_iters 1002 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1003 200
penalty weights 10000.0
args.step pgd_anneal_iters 1003 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1004 200
penalty weights 10000.0
args.step pgd_anneal_iters 1004 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1005 200
penalty weights 10000.0
args.step pgd_anneal_iters 1005 600
dim_v 512
rho, theta 373 tensor(4.7301e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1006 200
penalty weights 10000.0
args.step pgd_anneal_iters 1006 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1007 200
penalty weights 10000.0
args.step pgd_anneal_iters 1007 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1008 200
penalty weights 10000.0
args.step pgd_anneal_iters 1008 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1009 200
penalty weights 10000.0
args.step pgd_anneal_iters 1009 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1010 200
penalty weights 10000.0
args.step pgd_anneal_iters 1010 600
dim_v 512
rho, theta 366 tensor(2.6765e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1011 200
penalty weights 10000.0
args.step pgd_anneal_iters 1011 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1012 200
penalty weights 10000.0
args.step pgd_anneal_iters 1012 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1013 200
penalty weights 10000.0
args.step pgd_anneal_iters 1013 600
final projection at end of training
dim_v 512
rho, theta 352 tensor(-5.4033e-07, device='cuda:0')
Epoch: [38][  26/  26]	Loss 0.000 (0.000)	train_nll   0.67 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  38.64 ( 38.64)	train_acc   0.48 (  0.50)	train_minacc   0.56 (  0.50)	train_majacc   0.47 (  0.50)	train_corr   0.00 (  0.00)	l1 5.3649 (5.3651)	zero_count 0.0000 (36.4650)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.47it/s] 23%|##3       | 6/26 [00:00<00:00, 24.63it/s]                                               23%|##3       | 6/26 [00:00<00:00, 24.63it/s] 42%|####2     | 11/26 [00:00<00:00, 29.14it/s] 62%|######1   | 16/26 [00:00<00:00, 34.54it/s]                                                62%|######1   | 16/26 [00:00<00:00, 34.54it/s] 81%|########  | 21/26 [00:00<00:00, 37.64it/s]100%|##########| 26/26 [00:00<00:00, 40.96it/s]100%|##########| 26/26 [00:00<00:00, 31.50it/s]
Test: [   0/  26]	Loss 0.672 (0.672)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.52 (  0.52)	Loss_d 0.672 (0.672)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.19 (  0.19)
Test: [  10/  26]	Loss 0.673 (0.673)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.48)	test_majacc   0.48 (  0.50)	Loss_d 0.673 (0.673)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.48)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.20 (  0.19)
Test: [  20/  26]	Loss 0.674 (0.674)	test_acc   0.51 (  0.50)	test_minacc   0.42 (  0.50)	test_majacc   0.52 (  0.50)	Loss_d 0.674 (0.674)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.42 (  0.50)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.17 (  0.18)
Test: [  26/  26]	Loss 0.670 (0.674)	test_acc   0.48 (  0.50)	test_minacc   0.56 (  0.50)	test_majacc   0.47 (  0.50)	Loss_d 0.670 (0.674)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.56 (  0.50)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.24 (  0.18)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.30it/s]
Test: [  0/  1]	Loss 0.777 (0.777)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.777 (0.777)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.14 (  0.14)
Test: [  1/  1]	Loss 0.777 (0.777)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.777 (0.777)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.14 (  0.14)
Overall Timing[ 38/  1]	epoch_time 0.0437 (0.0449)	validation_time 0.0003 (0.0006)	train_time 0.0434 (0.0442)
record: (train_acc, test_acc) (0.7194000356197358, 0.6920000314712524)
last accs (train_acc, test_acc) (0.500000006467104, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02, 10.82it/s] 23%|##3       | 6/26 [00:00<00:00, 21.00it/s] 35%|###4      | 9/26 [00:00<00:00, 22.46it/s] 46%|####6     | 12/26 [00:00<00:00, 24.14it/s] 62%|######1   | 16/26 [00:00<00:00, 27.69it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.07it/s] 85%|########4 | 22/26 [00:00<00:00, 26.75it/s]100%|##########| 26/26 [00:01<00:00, 29.33it/s]100%|##########| 26/26 [00:01<00:00, 24.33it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1014 200
penalty weights 10000.0
args.step pgd_anneal_iters 1014 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1015 200
penalty weights 10000.0
args.step pgd_anneal_iters 1015 600
dim_v 512
rho, theta 353 tensor(-8.1359e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1016 200
penalty weights 10000.0
args.step pgd_anneal_iters 1016 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1017 200
penalty weights 10000.0
args.step pgd_anneal_iters 1017 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1018 200
penalty weights 10000.0
args.step pgd_anneal_iters 1018 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1019 200
penalty weights 10000.0
args.step pgd_anneal_iters 1019 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1020 200
penalty weights 10000.0
args.step pgd_anneal_iters 1020 600
dim_v 512
rho, theta 339 tensor(-2.7460e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1021 200
penalty weights 10000.0
args.step pgd_anneal_iters 1021 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1022 200
penalty weights 10000.0
args.step pgd_anneal_iters 1022 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1023 200
penalty weights 10000.0
args.step pgd_anneal_iters 1023 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1024 200
penalty weights 10000.0
args.step pgd_anneal_iters 1024 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1025 200
penalty weights 10000.0
args.step pgd_anneal_iters 1025 600
dim_v 512
rho, theta 337 tensor(-1.8199e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1026 200
penalty weights 10000.0
args.step pgd_anneal_iters 1026 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1027 200
penalty weights 10000.0
args.step pgd_anneal_iters 1027 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1028 200
penalty weights 10000.0
args.step pgd_anneal_iters 1028 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1029 200
penalty weights 10000.0
args.step pgd_anneal_iters 1029 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1030 200
penalty weights 10000.0
args.step pgd_anneal_iters 1030 600
dim_v 512
rho, theta 346 tensor(-2.8033e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1031 200
penalty weights 10000.0
args.step pgd_anneal_iters 1031 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1032 200
penalty weights 10000.0
args.step pgd_anneal_iters 1032 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1033 200
penalty weights 10000.0
args.step pgd_anneal_iters 1033 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1034 200
penalty weights 10000.0
args.step pgd_anneal_iters 1034 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1035 200
penalty weights 10000.0
args.step pgd_anneal_iters 1035 600
dim_v 512
rho, theta 374 tensor(6.4214e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1036 200
penalty weights 10000.0
args.step pgd_anneal_iters 1036 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1037 200
penalty weights 10000.0
args.step pgd_anneal_iters 1037 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1038 200
penalty weights 10000.0
args.step pgd_anneal_iters 1038 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1039 200
penalty weights 10000.0
args.step pgd_anneal_iters 1039 600
final projection at end of training
dim_v 512
rho, theta 345 tensor(-7.8830e-07, device='cuda:0')
Epoch: [39][  26/  26]	Loss 0.000 (0.000)	train_nll   0.67 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  38.64 ( 38.64)	train_acc   0.48 (  0.50)	train_minacc   0.56 (  0.50)	train_majacc   0.47 (  0.50)	train_corr   0.00 (  0.00)	l1 5.3652 (5.3651)	zero_count 0.0000 (37.6350)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.80it/s] 23%|##3       | 6/26 [00:00<00:00, 22.57it/s]                                               23%|##3       | 6/26 [00:00<00:00, 22.57it/s] 42%|####2     | 11/26 [00:00<00:00, 32.36it/s] 62%|######1   | 16/26 [00:00<00:00, 37.76it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.76it/s] 81%|########  | 21/26 [00:00<00:00, 38.65it/s]100%|##########| 26/26 [00:00<00:00, 41.78it/s]100%|##########| 26/26 [00:00<00:00, 32.00it/s]
Test: [   0/  26]	Loss 0.672 (0.672)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.52 (  0.52)	Loss_d 0.672 (0.672)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.19 (  0.19)
Test: [  10/  26]	Loss 0.673 (0.673)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.48)	test_majacc   0.48 (  0.50)	Loss_d 0.673 (0.673)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.48)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.20 (  0.19)
Test: [  20/  26]	Loss 0.674 (0.674)	test_acc   0.51 (  0.50)	test_minacc   0.42 (  0.50)	test_majacc   0.52 (  0.50)	Loss_d 0.674 (0.674)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.42 (  0.50)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.16 (  0.18)
Test: [  26/  26]	Loss 0.671 (0.674)	test_acc   0.48 (  0.50)	test_minacc   0.56 (  0.50)	test_majacc   0.47 (  0.50)	Loss_d 0.671 (0.674)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.56 (  0.50)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.23 (  0.18)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.30it/s]
Test: [  0/  1]	Loss 0.776 (0.776)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.776 (0.776)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.14 (  0.14)
Test: [  1/  1]	Loss 0.776 (0.776)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.776 (0.776)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.14 (  0.14)
Overall Timing[ 39/  1]	epoch_time 0.0426 (0.0448)	validation_time 0.0003 (0.0006)	train_time 0.0422 (0.0441)
record: (train_acc, test_acc) (0.7194000356197358, 0.6920000314712524)
last accs (train_acc, test_acc) (0.500000006467104, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.10it/s] 19%|#9        | 5/26 [00:00<00:00, 21.45it/s] 31%|###       | 8/26 [00:00<00:00, 23.69it/s] 42%|####2     | 11/26 [00:00<00:00, 24.88it/s] 58%|#####7    | 15/26 [00:00<00:00, 29.07it/s] 69%|######9   | 18/26 [00:00<00:00, 29.22it/s] 81%|########  | 21/26 [00:00<00:00, 29.15it/s] 96%|#########6| 25/26 [00:00<00:00, 31.34it/s]100%|##########| 26/26 [00:01<00:00, 25.56it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1040 200
penalty weights 10000.0
args.step pgd_anneal_iters 1040 600
dim_v 512
rho, theta 348 tensor(-3.4567e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1041 200
penalty weights 10000.0
args.step pgd_anneal_iters 1041 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1042 200
penalty weights 10000.0
args.step pgd_anneal_iters 1042 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1043 200
penalty weights 10000.0
args.step pgd_anneal_iters 1043 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1044 200
penalty weights 10000.0
args.step pgd_anneal_iters 1044 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1045 200
penalty weights 10000.0
args.step pgd_anneal_iters 1045 600
dim_v 512
rho, theta 338 tensor(-2.0564e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1046 200
penalty weights 10000.0
args.step pgd_anneal_iters 1046 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1047 200
penalty weights 10000.0
args.step pgd_anneal_iters 1047 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1048 200
penalty weights 10000.0
args.step pgd_anneal_iters 1048 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1049 200
penalty weights 10000.0
args.step pgd_anneal_iters 1049 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1050 200
penalty weights 10000.0
args.step pgd_anneal_iters 1050 600
dim_v 512
rho, theta 335 tensor(-1.5923e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1051 200
penalty weights 10000.0
args.step pgd_anneal_iters 1051 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1052 200
penalty weights 10000.0
args.step pgd_anneal_iters 1052 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1053 200
penalty weights 10000.0
args.step pgd_anneal_iters 1053 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1054 200
penalty weights 10000.0
args.step pgd_anneal_iters 1054 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1055 200
penalty weights 10000.0
args.step pgd_anneal_iters 1055 600
dim_v 512
rho, theta 337 tensor(-6.7152e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1056 200
penalty weights 10000.0
args.step pgd_anneal_iters 1056 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1057 200
penalty weights 10000.0
args.step pgd_anneal_iters 1057 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1058 200
penalty weights 10000.0
args.step pgd_anneal_iters 1058 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1059 200
penalty weights 10000.0
args.step pgd_anneal_iters 1059 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1060 200
penalty weights 10000.0
args.step pgd_anneal_iters 1060 600
dim_v 512
rho, theta 377 tensor(5.8028e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1061 200
penalty weights 10000.0
args.step pgd_anneal_iters 1061 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1062 200
penalty weights 10000.0
args.step pgd_anneal_iters 1062 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1063 200
penalty weights 10000.0
args.step pgd_anneal_iters 1063 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1064 200
penalty weights 10000.0
args.step pgd_anneal_iters 1064 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1065 200
penalty weights 10000.0
args.step pgd_anneal_iters 1065 600
dim_v 512
rho, theta 337 tensor(-1.1893e-06, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [40][  26/  26]	Loss 0.000 (0.000)	train_nll   0.67 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  38.64 ( 38.64)	train_acc   0.48 (  0.50)	train_minacc   0.56 (  0.50)	train_majacc   0.47 (  0.50)	train_corr   0.00 (  0.00)	l1 5.3656 (5.3651)	zero_count 0.0000 (38.4540)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.92it/s] 23%|##3       | 6/26 [00:00<00:00, 25.29it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.29it/s] 42%|####2     | 11/26 [00:00<00:00, 30.39it/s] 62%|######1   | 16/26 [00:00<00:00, 36.01it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.01it/s] 81%|########  | 21/26 [00:00<00:00, 39.05it/s]100%|##########| 26/26 [00:00<00:00, 41.82it/s]100%|##########| 26/26 [00:00<00:00, 32.32it/s]
Test: [   0/  26]	Loss 0.672 (0.672)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.52 (  0.52)	Loss_d 0.672 (0.672)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.19 (  0.19)
Test: [  10/  26]	Loss 0.673 (0.674)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.48)	test_majacc   0.48 (  0.50)	Loss_d 0.673 (0.674)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.48)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.20 (  0.18)
Test: [  20/  26]	Loss 0.674 (0.674)	test_acc   0.51 (  0.50)	test_minacc   0.42 (  0.50)	test_majacc   0.52 (  0.50)	Loss_d 0.674 (0.674)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.42 (  0.50)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.16 (  0.18)
Test: [  26/  26]	Loss 0.670 (0.674)	test_acc   0.48 (  0.50)	test_minacc   0.56 (  0.50)	test_majacc   0.47 (  0.50)	Loss_d 0.670 (0.674)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.56 (  0.50)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.23 (  0.18)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.77it/s]
Test: [  0/  1]	Loss 0.775 (0.775)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.775 (0.775)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.14 (  0.14)
Test: [  1/  1]	Loss 0.775 (0.775)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.775 (0.775)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.14 (  0.14)
Overall Timing[ 40/  1]	epoch_time 0.0434 (0.0448)	validation_time 0.0004 (0.0006)	train_time 0.0430 (0.0441)
record: (train_acc, test_acc) (0.7194000356197358, 0.6920000314712524)
last accs (train_acc, test_acc) (0.500000006467104, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.94it/s] 19%|#9        | 5/26 [00:00<00:01, 17.84it/s] 35%|###4      | 9/26 [00:00<00:00, 24.14it/s] 46%|####6     | 12/26 [00:00<00:00, 25.19it/s] 58%|#####7    | 15/26 [00:00<00:00, 25.61it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.54it/s] 85%|########4 | 22/26 [00:00<00:00, 27.90it/s] 96%|#########6| 25/26 [00:00<00:00, 27.41it/s]100%|##########| 26/26 [00:01<00:00, 23.99it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1066 200
penalty weights 10000.0
args.step pgd_anneal_iters 1066 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1067 200
penalty weights 10000.0
args.step pgd_anneal_iters 1067 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1068 200
penalty weights 10000.0
args.step pgd_anneal_iters 1068 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1069 200
penalty weights 10000.0
args.step pgd_anneal_iters 1069 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1070 200
penalty weights 10000.0
args.step pgd_anneal_iters 1070 600
dim_v 512
rho, theta 337 tensor(-1.3275e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1071 200
penalty weights 10000.0
args.step pgd_anneal_iters 1071 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1072 200
penalty weights 10000.0
args.step pgd_anneal_iters 1072 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1073 200
penalty weights 10000.0
args.step pgd_anneal_iters 1073 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1074 200
penalty weights 10000.0
args.step pgd_anneal_iters 1074 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1075 200
penalty weights 10000.0
args.step pgd_anneal_iters 1075 600
dim_v 512
rho, theta 334 tensor(-1.4334e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1076 200
penalty weights 10000.0
args.step pgd_anneal_iters 1076 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1077 200
penalty weights 10000.0
args.step pgd_anneal_iters 1077 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1078 200
penalty weights 10000.0
args.step pgd_anneal_iters 1078 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1079 200
penalty weights 10000.0
args.step pgd_anneal_iters 1079 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1080 200
penalty weights 10000.0
args.step pgd_anneal_iters 1080 600
dim_v 512
rho, theta 334 tensor(-5.9498e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1081 200
penalty weights 10000.0
args.step pgd_anneal_iters 1081 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1082 200
penalty weights 10000.0
args.step pgd_anneal_iters 1082 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1083 200
penalty weights 10000.0
args.step pgd_anneal_iters 1083 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1084 200
penalty weights 10000.0
args.step pgd_anneal_iters 1084 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1085 200
penalty weights 10000.0
args.step pgd_anneal_iters 1085 600
dim_v 512
rho, theta 390 tensor(1.0317e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1086 200
penalty weights 10000.0
args.step pgd_anneal_iters 1086 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1087 200
penalty weights 10000.0
args.step pgd_anneal_iters 1087 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1088 200
penalty weights 10000.0
args.step pgd_anneal_iters 1088 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1089 200
penalty weights 10000.0
args.step pgd_anneal_iters 1089 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1090 200
penalty weights 10000.0
args.step pgd_anneal_iters 1090 600
dim_v 512
rho, theta 346 tensor(-1.1406e-06, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1091 200
penalty weights 10000.0
args.step pgd_anneal_iters 1091 600
final projection at end of training
dim_v 512
rho, theta 343 tensor(-2.2178e-07, device='cuda:0')
Epoch: [41][  26/  26]	Loss 0.000 (0.000)	train_nll   0.67 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  38.64 ( 38.64)	train_acc   0.48 (  0.50)	train_minacc   0.56 (  0.50)	train_majacc   0.47 (  0.50)	train_corr   0.00 (  0.00)	l1 5.3643 (5.3650)	zero_count 165.0000 (36.2220)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.80it/s] 27%|##6       | 7/26 [00:00<00:00, 30.67it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.67it/s] 46%|####6     | 12/26 [00:00<00:00, 38.18it/s] 65%|######5   | 17/26 [00:00<00:00, 41.08it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.08it/s] 85%|########4 | 22/26 [00:00<00:00, 42.92it/s]100%|##########| 26/26 [00:00<00:00, 35.31it/s]
Test: [   0/  26]	Loss 0.672 (0.672)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.52 (  0.52)	Loss_d 0.672 (0.672)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.19 (  0.19)
Test: [  10/  26]	Loss 0.673 (0.674)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.48)	test_majacc   0.48 (  0.50)	Loss_d 0.673 (0.674)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.48)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.20 (  0.18)
Test: [  20/  26]	Loss 0.675 (0.674)	test_acc   0.51 (  0.50)	test_minacc   0.42 (  0.50)	test_majacc   0.52 (  0.50)	Loss_d 0.675 (0.674)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.42 (  0.50)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.16 (  0.18)
Test: [  26/  26]	Loss 0.671 (0.674)	test_acc   0.48 (  0.50)	test_minacc   0.56 (  0.50)	test_majacc   0.47 (  0.50)	Loss_d 0.671 (0.674)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.56 (  0.50)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.23 (  0.18)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.01it/s]
Test: [  0/  1]	Loss 0.775 (0.775)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.775 (0.775)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 0.775 (0.775)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.775 (0.775)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.13 (  0.13)
Overall Timing[ 41/  1]	epoch_time 0.0419 (0.0447)	validation_time 0.0004 (0.0006)	train_time 0.0414 (0.0440)
record: (train_acc, test_acc) (0.7194000356197358, 0.6920000314712524)
last accs (train_acc, test_acc) (0.500000006467104, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.76it/s] 15%|#5        | 4/26 [00:00<00:01, 15.16it/s] 31%|###       | 8/26 [00:00<00:00, 23.08it/s] 42%|####2     | 11/26 [00:00<00:00, 24.66it/s] 54%|#####3    | 14/26 [00:00<00:00, 25.16it/s] 69%|######9   | 18/26 [00:00<00:00, 27.82it/s] 81%|########  | 21/26 [00:00<00:00, 27.15it/s] 92%|#########2| 24/26 [00:00<00:00, 27.82it/s]100%|##########| 26/26 [00:01<00:00, 23.52it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1092 200
penalty weights 10000.0
args.step pgd_anneal_iters 1092 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1093 200
penalty weights 10000.0
args.step pgd_anneal_iters 1093 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1094 200
penalty weights 10000.0
args.step pgd_anneal_iters 1094 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1095 200
penalty weights 10000.0
args.step pgd_anneal_iters 1095 600
dim_v 512
rho, theta 336 tensor(-1.0570e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1096 200
penalty weights 10000.0
args.step pgd_anneal_iters 1096 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1097 200
penalty weights 10000.0
args.step pgd_anneal_iters 1097 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1098 200
penalty weights 10000.0
args.step pgd_anneal_iters 1098 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1099 200
penalty weights 10000.0
args.step pgd_anneal_iters 1099 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1100 200
penalty weights 10000.0
args.step pgd_anneal_iters 1100 600
dim_v 512
rho, theta 335 tensor(-1.4333e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1101 200
penalty weights 10000.0
args.step pgd_anneal_iters 1101 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1102 200
penalty weights 10000.0
args.step pgd_anneal_iters 1102 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1103 200
penalty weights 10000.0
args.step pgd_anneal_iters 1103 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1104 200
penalty weights 10000.0
args.step pgd_anneal_iters 1104 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1105 200
penalty weights 10000.0
args.step pgd_anneal_iters 1105 600
dim_v 512
rho, theta 335 tensor(-6.5991e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1106 200
penalty weights 10000.0
args.step pgd_anneal_iters 1106 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1107 200
penalty weights 10000.0
args.step pgd_anneal_iters 1107 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1108 200
penalty weights 10000.0
args.step pgd_anneal_iters 1108 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1109 200
penalty weights 10000.0
args.step pgd_anneal_iters 1109 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1110 200
penalty weights 10000.0
args.step pgd_anneal_iters 1110 600
dim_v 512
rho, theta 385 tensor(1.0142e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1111 200
penalty weights 10000.0
args.step pgd_anneal_iters 1111 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1112 200
penalty weights 10000.0
args.step pgd_anneal_iters 1112 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1113 200
penalty weights 10000.0
args.step pgd_anneal_iters 1113 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1114 200
penalty weights 10000.0
args.step pgd_anneal_iters 1114 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1115 200
penalty weights 10000.0
args.step pgd_anneal_iters 1115 600
dim_v 512
rho, theta 348 tensor(-8.9766e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1116 200
penalty weights 10000.0
args.step pgd_anneal_iters 1116 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1117 200
penalty weights 10000.0
args.step pgd_anneal_iters 1117 600
final projection at end of training
dim_v 512
rho, theta 344 tensor(-2.9301e-07, device='cuda:0')
Epoch: [42][  26/  26]	Loss 0.000 (0.000)	train_nll   0.67 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  38.64 ( 38.64)	train_acc   0.48 (  0.50)	train_minacc   0.56 (  0.50)	train_majacc   0.47 (  0.50)	train_corr   0.00 (  0.00)	l1 5.3646 (5.3650)	zero_count 0.0000 (38.3760)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 26.14it/s] 31%|###       | 8/26 [00:00<00:00, 38.08it/s]                                               31%|###       | 8/26 [00:00<00:00, 38.08it/s] 50%|#####     | 13/26 [00:00<00:00, 41.08it/s] 69%|######9   | 18/26 [00:00<00:00, 40.23it/s]                                                69%|######9   | 18/26 [00:00<00:00, 40.23it/s] 88%|########8 | 23/26 [00:00<00:00, 41.75it/s]100%|##########| 26/26 [00:00<00:00, 37.74it/s]
Test: [   0/  26]	Loss 0.672 (0.672)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.52 (  0.52)	Loss_d 0.672 (0.672)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.19 (  0.19)
Test: [  10/  26]	Loss 0.672 (0.674)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.48)	test_majacc   0.48 (  0.50)	Loss_d 0.672 (0.674)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.48)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.20 (  0.18)
Test: [  20/  26]	Loss 0.675 (0.674)	test_acc   0.51 (  0.50)	test_minacc   0.42 (  0.50)	test_majacc   0.52 (  0.50)	Loss_d 0.675 (0.674)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.42 (  0.50)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.15 (  0.18)
Test: [  26/  26]	Loss 0.670 (0.674)	test_acc   0.48 (  0.50)	test_minacc   0.56 (  0.50)	test_majacc   0.47 (  0.50)	Loss_d 0.670 (0.674)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.56 (  0.50)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.23 (  0.18)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.60it/s]
Test: [  0/  1]	Loss 0.775 (0.775)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.775 (0.775)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 0.775 (0.775)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.775 (0.775)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.13 (  0.13)
Overall Timing[ 42/  1]	epoch_time 0.0426 (0.0447)	validation_time 0.0004 (0.0006)	train_time 0.0422 (0.0440)
record: (train_acc, test_acc) (0.7194000356197358, 0.6920000314712524)
last accs (train_acc, test_acc) (0.500000006467104, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.63it/s] 12%|#1        | 3/26 [00:00<00:01, 11.66it/s] 27%|##6       | 7/26 [00:00<00:00, 21.09it/s] 38%|###8      | 10/26 [00:00<00:00, 23.43it/s] 50%|#####     | 13/26 [00:00<00:00, 24.35it/s] 65%|######5   | 17/26 [00:00<00:00, 27.75it/s] 77%|#######6  | 20/26 [00:00<00:00, 27.07it/s] 88%|########8 | 23/26 [00:00<00:00, 26.58it/s]100%|##########| 26/26 [00:01<00:00, 23.08it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1118 200
penalty weights 10000.0
args.step pgd_anneal_iters 1118 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1119 200
penalty weights 10000.0
args.step pgd_anneal_iters 1119 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1120 200
penalty weights 10000.0
args.step pgd_anneal_iters 1120 600
dim_v 512
rho, theta 340 tensor(-7.7608e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1121 200
penalty weights 10000.0
args.step pgd_anneal_iters 1121 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1122 200
penalty weights 10000.0
args.step pgd_anneal_iters 1122 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1123 200
penalty weights 10000.0
args.step pgd_anneal_iters 1123 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1124 200
penalty weights 10000.0
args.step pgd_anneal_iters 1124 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1125 200
penalty weights 10000.0
args.step pgd_anneal_iters 1125 600
dim_v 512
rho, theta 336 tensor(-1.3640e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1126 200
penalty weights 10000.0
args.step pgd_anneal_iters 1126 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1127 200
penalty weights 10000.0
args.step pgd_anneal_iters 1127 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1128 200
penalty weights 10000.0
args.step pgd_anneal_iters 1128 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1129 200
penalty weights 10000.0
args.step pgd_anneal_iters 1129 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1130 200
penalty weights 10000.0
args.step pgd_anneal_iters 1130 600
dim_v 512
rho, theta 332 tensor(-8.1621e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1131 200
penalty weights 10000.0
args.step pgd_anneal_iters 1131 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1132 200
penalty weights 10000.0
args.step pgd_anneal_iters 1132 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1133 200
penalty weights 10000.0
args.step pgd_anneal_iters 1133 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1134 200
penalty weights 10000.0
args.step pgd_anneal_iters 1134 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1135 200
penalty weights 10000.0
args.step pgd_anneal_iters 1135 600
dim_v 512
rho, theta 371 tensor(5.9989e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1136 200
penalty weights 10000.0
args.step pgd_anneal_iters 1136 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1137 200
penalty weights 10000.0
args.step pgd_anneal_iters 1137 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1138 200
penalty weights 10000.0
args.step pgd_anneal_iters 1138 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1139 200
penalty weights 10000.0
args.step pgd_anneal_iters 1139 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1140 200
penalty weights 10000.0
args.step pgd_anneal_iters 1140 600
dim_v 512
rho, theta 354 tensor(-5.9101e-08, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1141 200
penalty weights 10000.0
args.step pgd_anneal_iters 1141 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1142 200
penalty weights 10000.0
args.step pgd_anneal_iters 1142 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1143 200
penalty weights 10000.0
args.step pgd_anneal_iters 1143 600
final projection at end of training
dim_v 512
rho, theta 346 tensor(-3.4767e-07, device='cuda:0')
Epoch: [43][  26/  26]	Loss 0.000 (0.000)	train_nll   0.67 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  38.64 ( 38.64)	train_acc   0.48 (  0.50)	train_minacc   0.56 (  0.50)	train_majacc   0.47 (  0.50)	train_corr   0.00 (  0.00)	l1 5.3648 (5.3649)	zero_count 0.0000 (38.5710)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.26it/s] 23%|##3       | 6/26 [00:00<00:00, 29.52it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.52it/s] 42%|####2     | 11/26 [00:00<00:00, 36.40it/s] 62%|######1   | 16/26 [00:00<00:00, 40.88it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.88it/s] 81%|########  | 21/26 [00:00<00:00, 39.15it/s]100%|##########| 26/26 [00:00<00:00, 41.56it/s]100%|##########| 26/26 [00:00<00:00, 34.47it/s]
Test: [   0/  26]	Loss 0.672 (0.672)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.52 (  0.52)	Loss_d 0.672 (0.672)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.19 (  0.19)
Test: [  10/  26]	Loss 0.672 (0.674)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.48)	test_majacc   0.48 (  0.50)	Loss_d 0.672 (0.674)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.48)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.20 (  0.18)
Test: [  20/  26]	Loss 0.675 (0.674)	test_acc   0.51 (  0.50)	test_minacc   0.42 (  0.50)	test_majacc   0.52 (  0.50)	Loss_d 0.675 (0.674)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.42 (  0.50)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.15 (  0.17)
Test: [  26/  26]	Loss 0.671 (0.674)	test_acc   0.48 (  0.50)	test_minacc   0.56 (  0.50)	test_majacc   0.47 (  0.50)	Loss_d 0.671 (0.674)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.56 (  0.50)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.23 (  0.18)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.54it/s]
Test: [  0/  1]	Loss 0.776 (0.776)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.776 (0.776)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 0.776 (0.776)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.776 (0.776)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.13 (  0.13)
Overall Timing[ 43/  1]	epoch_time 0.0449 (0.0447)	validation_time 0.0004 (0.0006)	train_time 0.0445 (0.0440)
record: (train_acc, test_acc) (0.7194000356197358, 0.6920000314712524)
last accs (train_acc, test_acc) (0.500000006467104, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 13.87it/s] 23%|##3       | 6/26 [00:00<00:00, 23.66it/s] 35%|###4      | 9/26 [00:00<00:00, 25.36it/s] 46%|####6     | 12/26 [00:00<00:00, 26.60it/s] 62%|######1   | 16/26 [00:00<00:00, 29.73it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.15it/s] 92%|#########2| 24/26 [00:00<00:00, 29.23it/s]100%|##########| 26/26 [00:00<00:00, 26.14it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1144 200
penalty weights 10000.0
args.step pgd_anneal_iters 1144 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1145 200
penalty weights 10000.0
args.step pgd_anneal_iters 1145 600
dim_v 512
rho, theta 350 tensor(-4.7140e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1146 200
penalty weights 10000.0
args.step pgd_anneal_iters 1146 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1147 200
penalty weights 10000.0
args.step pgd_anneal_iters 1147 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1148 200
penalty weights 10000.0
args.step pgd_anneal_iters 1148 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1149 200
penalty weights 10000.0
args.step pgd_anneal_iters 1149 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1150 200
penalty weights 10000.0
args.step pgd_anneal_iters 1150 600
dim_v 512
rho, theta 336 tensor(-1.4050e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1151 200
penalty weights 10000.0
args.step pgd_anneal_iters 1151 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1152 200
penalty weights 10000.0
args.step pgd_anneal_iters 1152 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1153 200
penalty weights 10000.0
args.step pgd_anneal_iters 1153 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1154 200
penalty weights 10000.0
args.step pgd_anneal_iters 1154 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1155 200
penalty weights 10000.0
args.step pgd_anneal_iters 1155 600
dim_v 512
rho, theta 332 tensor(-8.6776e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1156 200
penalty weights 10000.0
args.step pgd_anneal_iters 1156 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1157 200
penalty weights 10000.0
args.step pgd_anneal_iters 1157 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1158 200
penalty weights 10000.0
args.step pgd_anneal_iters 1158 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1159 200
penalty weights 10000.0
args.step pgd_anneal_iters 1159 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1160 200
penalty weights 10000.0
args.step pgd_anneal_iters 1160 600
dim_v 512
rho, theta 347 tensor(4.5217e-08, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1161 200
penalty weights 10000.0
args.step pgd_anneal_iters 1161 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1162 200
penalty weights 10000.0
args.step pgd_anneal_iters 1162 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1163 200
penalty weights 10000.0
args.step pgd_anneal_iters 1163 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1164 200
penalty weights 10000.0
args.step pgd_anneal_iters 1164 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1165 200
penalty weights 10000.0
args.step pgd_anneal_iters 1165 600
dim_v 512
rho, theta 370 tensor(5.7837e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1166 200
penalty weights 10000.0
args.step pgd_anneal_iters 1166 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1167 200
penalty weights 10000.0
args.step pgd_anneal_iters 1167 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1168 200
penalty weights 10000.0
args.step pgd_anneal_iters 1168 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1169 200
penalty weights 10000.0
args.step pgd_anneal_iters 1169 600
final projection at end of training
dim_v 512
rho, theta 344 tensor(-5.7773e-07, device='cuda:0')
Epoch: [44][  26/  26]	Loss 0.000 (0.000)	train_nll   0.67 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  38.64 ( 38.64)	train_acc   0.48 (  0.50)	train_minacc   0.56 (  0.50)	train_majacc   0.47 (  0.50)	train_corr   0.00 (  0.00)	l1 5.3650 (5.3649)	zero_count 0.0000 (38.4150)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.97it/s] 12%|#1        | 3/26 [00:00<00:02,  8.87it/s] 31%|###       | 8/26 [00:00<00:00, 21.60it/s]                                               31%|###       | 8/26 [00:00<00:00, 21.60it/s] 46%|####6     | 12/26 [00:00<00:00, 27.11it/s] 65%|######5   | 17/26 [00:00<00:00, 33.52it/s]                                                65%|######5   | 17/26 [00:00<00:00, 33.52it/s] 85%|########4 | 22/26 [00:00<00:00, 37.92it/s]100%|##########| 26/26 [00:00<00:00, 27.22it/s]
Test: [   0/  26]	Loss 0.672 (0.672)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.52 (  0.52)	Loss_d 0.672 (0.672)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.19 (  0.19)
Test: [  10/  26]	Loss 0.672 (0.674)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.48)	test_majacc   0.48 (  0.50)	Loss_d 0.672 (0.674)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.48)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.20 (  0.18)
Test: [  20/  26]	Loss 0.675 (0.675)	test_acc   0.51 (  0.50)	test_minacc   0.42 (  0.50)	test_majacc   0.52 (  0.50)	Loss_d 0.675 (0.675)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.42 (  0.50)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.15 (  0.17)
Test: [  26/  26]	Loss 0.671 (0.674)	test_acc   0.48 (  0.50)	test_minacc   0.56 (  0.50)	test_majacc   0.47 (  0.50)	Loss_d 0.671 (0.674)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.56 (  0.50)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.22 (  0.17)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.68it/s]
Test: [  0/  1]	Loss 0.776 (0.776)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.776 (0.776)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 0.776 (0.776)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.776 (0.776)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.13 (  0.13)
Overall Timing[ 44/  1]	epoch_time 0.0452 (0.0447)	validation_time 0.0006 (0.0006)	train_time 0.0445 (0.0440)
record: (train_acc, test_acc) (0.7194000356197358, 0.6920000314712524)
last accs (train_acc, test_acc) (0.500000006467104, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.06it/s] 19%|#9        | 5/26 [00:00<00:01, 18.70it/s] 31%|###       | 8/26 [00:00<00:00, 22.12it/s] 42%|####2     | 11/26 [00:00<00:00, 23.68it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.77it/s] 69%|######9   | 18/26 [00:00<00:00, 27.20it/s] 81%|########  | 21/26 [00:00<00:00, 26.75it/s] 96%|#########6| 25/26 [00:00<00:00, 28.99it/s]100%|##########| 26/26 [00:01<00:00, 23.77it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1170 200
penalty weights 10000.0
args.step pgd_anneal_iters 1170 600
dim_v 512
rho, theta 350 tensor(-2.3095e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1171 200
penalty weights 10000.0
args.step pgd_anneal_iters 1171 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1172 200
penalty weights 10000.0
args.step pgd_anneal_iters 1172 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1173 200
penalty weights 10000.0
args.step pgd_anneal_iters 1173 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1174 200
penalty weights 10000.0
args.step pgd_anneal_iters 1174 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1175 200
penalty weights 10000.0
args.step pgd_anneal_iters 1175 600
dim_v 512
rho, theta 336 tensor(-1.3032e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1176 200
penalty weights 10000.0
args.step pgd_anneal_iters 1176 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1177 200
penalty weights 10000.0
args.step pgd_anneal_iters 1177 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1178 200
penalty weights 10000.0
args.step pgd_anneal_iters 1178 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1179 200
penalty weights 10000.0
args.step pgd_anneal_iters 1179 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1180 200
penalty weights 10000.0
args.step pgd_anneal_iters 1180 600
dim_v 512
rho, theta 334 tensor(-9.6791e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1181 200
penalty weights 10000.0
args.step pgd_anneal_iters 1181 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1182 200
penalty weights 10000.0
args.step pgd_anneal_iters 1182 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1183 200
penalty weights 10000.0
args.step pgd_anneal_iters 1183 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1184 200
penalty weights 10000.0
args.step pgd_anneal_iters 1184 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1185 200
penalty weights 10000.0
args.step pgd_anneal_iters 1185 600
dim_v 512
rho, theta 337 tensor(-3.1460e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1186 200
penalty weights 10000.0
args.step pgd_anneal_iters 1186 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1187 200
penalty weights 10000.0
args.step pgd_anneal_iters 1187 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1188 200
penalty weights 10000.0
args.step pgd_anneal_iters 1188 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1189 200
penalty weights 10000.0
args.step pgd_anneal_iters 1189 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1190 200
penalty weights 10000.0
args.step pgd_anneal_iters 1190 600
dim_v 512
rho, theta 396 tensor(1.2203e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1191 200
penalty weights 10000.0
args.step pgd_anneal_iters 1191 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1192 200
penalty weights 10000.0
args.step pgd_anneal_iters 1192 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1193 200
penalty weights 10000.0
args.step pgd_anneal_iters 1193 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1194 200
penalty weights 10000.0
args.step pgd_anneal_iters 1194 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1195 200
penalty weights 10000.0
args.step pgd_anneal_iters 1195 600
dim_v 512
rho, theta 354 tensor(-8.1801e-07, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [45][  26/  26]	Loss 0.000 (0.000)	train_nll   0.67 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  38.64 ( 38.64)	train_acc   0.48 (  0.50)	train_minacc   0.56 (  0.50)	train_majacc   0.47 (  0.50)	train_corr   0.00 (  0.00)	l1 5.3650 (5.3649)	zero_count 0.0000 (37.7910)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.30it/s] 23%|##3       | 6/26 [00:00<00:00, 27.05it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.05it/s] 42%|####2     | 11/26 [00:00<00:00, 31.77it/s] 62%|######1   | 16/26 [00:00<00:00, 37.14it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.14it/s] 81%|########  | 21/26 [00:00<00:00, 39.62it/s]100%|##########| 26/26 [00:00<00:00, 42.54it/s]100%|##########| 26/26 [00:00<00:00, 33.70it/s]
Test: [   0/  26]	Loss 0.672 (0.672)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.52 (  0.52)	Loss_d 0.672 (0.672)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.19 (  0.19)
Test: [  10/  26]	Loss 0.672 (0.674)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.48)	test_majacc   0.48 (  0.50)	Loss_d 0.672 (0.674)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.48)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.20 (  0.18)
Test: [  20/  26]	Loss 0.675 (0.675)	test_acc   0.51 (  0.50)	test_minacc   0.42 (  0.50)	test_majacc   0.52 (  0.50)	Loss_d 0.675 (0.675)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.42 (  0.50)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.15 (  0.17)
Test: [  26/  26]	Loss 0.671 (0.674)	test_acc   0.48 (  0.50)	test_minacc   0.56 (  0.50)	test_majacc   0.47 (  0.50)	Loss_d 0.671 (0.674)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.56 (  0.50)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.22 (  0.17)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.06it/s]
Test: [  0/  1]	Loss 0.776 (0.776)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.776 (0.776)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 0.776 (0.776)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.776 (0.776)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.13 (  0.13)
Overall Timing[ 45/  1]	epoch_time 0.0441 (0.0447)	validation_time 0.0003 (0.0006)	train_time 0.0437 (0.0440)
record: (train_acc, test_acc) (0.7194000356197358, 0.6920000314712524)
last accs (train_acc, test_acc) (0.500000006467104, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.95it/s] 19%|#9        | 5/26 [00:00<00:00, 22.69it/s] 35%|###4      | 9/26 [00:00<00:00, 28.06it/s] 46%|####6     | 12/26 [00:00<00:00, 27.83it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.64it/s] 73%|#######3  | 19/26 [00:00<00:00, 30.16it/s] 85%|########4 | 22/26 [00:00<00:00, 29.16it/s] 96%|#########6| 25/26 [00:00<00:00, 28.27it/s]100%|##########| 26/26 [00:00<00:00, 26.07it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1196 200
penalty weights 10000.0
args.step pgd_anneal_iters 1196 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1197 200
penalty weights 10000.0
args.step pgd_anneal_iters 1197 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1198 200
penalty weights 10000.0
args.step pgd_anneal_iters 1198 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1199 200
penalty weights 10000.0
args.step pgd_anneal_iters 1199 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1200 200
penalty weights 10000.0
args.step pgd_anneal_iters 1200 600
dim_v 512
rho, theta 338 tensor(-1.1422e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1201 200
penalty weights 10000.0
args.step pgd_anneal_iters 1201 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1202 200
penalty weights 10000.0
args.step pgd_anneal_iters 1202 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1203 200
penalty weights 10000.0
args.step pgd_anneal_iters 1203 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1204 200
penalty weights 10000.0
args.step pgd_anneal_iters 1204 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1205 200
penalty weights 10000.0
args.step pgd_anneal_iters 1205 600
dim_v 512
rho, theta 335 tensor(-1.1694e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1206 200
penalty weights 10000.0
args.step pgd_anneal_iters 1206 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1207 200
penalty weights 10000.0
args.step pgd_anneal_iters 1207 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1208 200
penalty weights 10000.0
args.step pgd_anneal_iters 1208 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1209 200
penalty weights 10000.0
args.step pgd_anneal_iters 1209 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1210 200
penalty weights 10000.0
args.step pgd_anneal_iters 1210 600
dim_v 512
rho, theta 332 tensor(-5.8423e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1211 200
penalty weights 10000.0
args.step pgd_anneal_iters 1211 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1212 200
penalty weights 10000.0
args.step pgd_anneal_iters 1212 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1213 200
penalty weights 10000.0
args.step pgd_anneal_iters 1213 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1214 200
penalty weights 10000.0
args.step pgd_anneal_iters 1214 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1215 200
penalty weights 10000.0
args.step pgd_anneal_iters 1215 600
dim_v 512
rho, theta 392 tensor(1.2109e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1216 200
penalty weights 10000.0
args.step pgd_anneal_iters 1216 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1217 200
penalty weights 10000.0
args.step pgd_anneal_iters 1217 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1218 200
penalty weights 10000.0
args.step pgd_anneal_iters 1218 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1219 200
penalty weights 10000.0
args.step pgd_anneal_iters 1219 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1220 200
penalty weights 10000.0
args.step pgd_anneal_iters 1220 600
dim_v 512
rho, theta 362 tensor(-3.3891e-07, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1221 200
penalty weights 10000.0
args.step pgd_anneal_iters 1221 600
final projection at end of training
dim_v 512
rho, theta 358 tensor(-4.9145e-08, device='cuda:0')
Epoch: [46][  26/  26]	Loss 0.000 (0.000)	train_nll   0.67 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  38.64 ( 38.64)	train_acc   0.48 (  0.50)	train_minacc   0.56 (  0.50)	train_majacc   0.47 (  0.50)	train_corr   0.00 (  0.00)	l1 5.3643 (5.3649)	zero_count 149.0000 (35.0810)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.80it/s] 19%|#9        | 5/26 [00:00<00:00, 22.83it/s]                                               19%|#9        | 5/26 [00:00<00:00, 22.83it/s] 42%|####2     | 11/26 [00:00<00:00, 36.48it/s] 62%|######1   | 16/26 [00:00<00:00, 40.51it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.51it/s] 81%|########  | 21/26 [00:00<00:00, 39.83it/s]100%|##########| 26/26 [00:00<00:00, 42.72it/s]100%|##########| 26/26 [00:00<00:00, 34.09it/s]
Test: [   0/  26]	Loss 0.672 (0.672)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.52 (  0.52)	Loss_d 0.672 (0.672)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.19 (  0.19)
Test: [  10/  26]	Loss 0.672 (0.674)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.48)	test_majacc   0.48 (  0.50)	Loss_d 0.672 (0.674)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.48)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.20 (  0.18)
Test: [  20/  26]	Loss 0.675 (0.675)	test_acc   0.51 (  0.50)	test_minacc   0.42 (  0.50)	test_majacc   0.52 (  0.50)	Loss_d 0.675 (0.675)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.42 (  0.50)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.15 (  0.17)
Test: [  26/  26]	Loss 0.671 (0.674)	test_acc   0.48 (  0.50)	test_minacc   0.56 (  0.50)	test_majacc   0.47 (  0.50)	Loss_d 0.671 (0.674)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.56 (  0.50)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.22 (  0.17)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.92it/s]
Test: [  0/  1]	Loss 0.776 (0.776)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.776 (0.776)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 0.776 (0.776)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.776 (0.776)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.13 (  0.13)
Overall Timing[ 46/  1]	epoch_time 0.0444 (0.0447)	validation_time 0.0004 (0.0006)	train_time 0.0439 (0.0440)
record: (train_acc, test_acc) (0.7194000356197358, 0.6920000314712524)
last accs (train_acc, test_acc) (0.500000006467104, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.37it/s] 15%|#5        | 4/26 [00:00<00:01, 17.90it/s] 31%|###       | 8/26 [00:00<00:00, 24.47it/s] 42%|####2     | 11/26 [00:00<00:00, 24.89it/s] 54%|#####3    | 14/26 [00:00<00:00, 25.57it/s] 69%|######9   | 18/26 [00:00<00:00, 27.86it/s] 81%|########  | 21/26 [00:00<00:00, 27.45it/s] 92%|#########2| 24/26 [00:00<00:00, 28.09it/s]100%|##########| 26/26 [00:01<00:00, 24.70it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1222 200
penalty weights 10000.0
args.step pgd_anneal_iters 1222 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1223 200
penalty weights 10000.0
args.step pgd_anneal_iters 1223 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1224 200
penalty weights 10000.0
args.step pgd_anneal_iters 1224 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1225 200
penalty weights 10000.0
args.step pgd_anneal_iters 1225 600
dim_v 512
rho, theta 352 tensor(-8.8478e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1226 200
penalty weights 10000.0
args.step pgd_anneal_iters 1226 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1227 200
penalty weights 10000.0
args.step pgd_anneal_iters 1227 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1228 200
penalty weights 10000.0
args.step pgd_anneal_iters 1228 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1229 200
penalty weights 10000.0
args.step pgd_anneal_iters 1229 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1230 200
penalty weights 10000.0
args.step pgd_anneal_iters 1230 600
dim_v 512
rho, theta 338 tensor(-1.3968e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1231 200
penalty weights 10000.0
args.step pgd_anneal_iters 1231 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1232 200
penalty weights 10000.0
args.step pgd_anneal_iters 1232 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1233 200
penalty weights 10000.0
args.step pgd_anneal_iters 1233 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1234 200
penalty weights 10000.0
args.step pgd_anneal_iters 1234 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1235 200
penalty weights 10000.0
args.step pgd_anneal_iters 1235 600
dim_v 512
rho, theta 333 tensor(-7.4666e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1236 200
penalty weights 10000.0
args.step pgd_anneal_iters 1236 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1237 200
penalty weights 10000.0
args.step pgd_anneal_iters 1237 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1238 200
penalty weights 10000.0
args.step pgd_anneal_iters 1238 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1239 200
penalty weights 10000.0
args.step pgd_anneal_iters 1239 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1240 200
penalty weights 10000.0
args.step pgd_anneal_iters 1240 600
dim_v 512
rho, theta 380 tensor(7.5092e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1241 200
penalty weights 10000.0
args.step pgd_anneal_iters 1241 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1242 200
penalty weights 10000.0
args.step pgd_anneal_iters 1242 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1243 200
penalty weights 10000.0
args.step pgd_anneal_iters 1243 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1244 200
penalty weights 10000.0
args.step pgd_anneal_iters 1244 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1245 200
penalty weights 10000.0
args.step pgd_anneal_iters 1245 600
dim_v 512
rho, theta 364 tensor(1.4109e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1246 200
penalty weights 10000.0
args.step pgd_anneal_iters 1246 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1247 200
penalty weights 10000.0
args.step pgd_anneal_iters 1247 600
final projection at end of training
dim_v 512
rho, theta 359 tensor(9.9341e-08, device='cuda:0')
Epoch: [47][  26/  26]	Loss 0.000 (0.000)	train_nll   0.67 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  38.64 ( 38.64)	train_acc   0.48 (  0.50)	train_minacc   0.56 (  0.50)	train_majacc   0.47 (  0.50)	train_corr   0.00 (  0.00)	l1 5.3645 (5.3649)	zero_count 0.0000 (36.6990)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.13it/s] 19%|#9        | 5/26 [00:00<00:01, 20.60it/s] 38%|###8      | 10/26 [00:00<00:00, 28.38it/s]                                                38%|###8      | 10/26 [00:00<00:00, 28.38it/s] 58%|#####7    | 15/26 [00:00<00:00, 34.69it/s] 77%|#######6  | 20/26 [00:00<00:00, 38.63it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 38.63it/s] 96%|#########6| 25/26 [00:00<00:00, 41.57it/s]100%|##########| 26/26 [00:00<00:00, 32.27it/s]
Test: [   0/  26]	Loss 0.672 (0.672)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.52 (  0.52)	Loss_d 0.672 (0.672)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.19 (  0.19)
Test: [  10/  26]	Loss 0.672 (0.674)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.48)	test_majacc   0.48 (  0.50)	Loss_d 0.672 (0.674)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.48)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.20 (  0.18)
Test: [  20/  26]	Loss 0.675 (0.674)	test_acc   0.51 (  0.50)	test_minacc   0.42 (  0.50)	test_majacc   0.52 (  0.50)	Loss_d 0.675 (0.674)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.42 (  0.50)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.15 (  0.17)
Test: [  26/  26]	Loss 0.671 (0.674)	test_acc   0.48 (  0.50)	test_minacc   0.56 (  0.50)	test_majacc   0.47 (  0.50)	Loss_d 0.671 (0.674)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.56 (  0.50)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.22 (  0.17)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.35it/s]
Test: [  0/  1]	Loss 0.777 (0.777)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.777 (0.777)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.12 (  0.12)
Test: [  1/  1]	Loss 0.777 (0.777)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.777 (0.777)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.12 (  0.12)
Overall Timing[ 47/  1]	epoch_time 0.0419 (0.0446)	validation_time 0.0004 (0.0006)	train_time 0.0415 (0.0439)
record: (train_acc, test_acc) (0.7194000356197358, 0.6920000314712524)
last accs (train_acc, test_acc) (0.500000006467104, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.91it/s] 15%|#5        | 4/26 [00:00<00:01, 14.60it/s] 31%|###       | 8/26 [00:00<00:00, 20.82it/s] 46%|####6     | 12/26 [00:00<00:00, 25.63it/s] 58%|#####7    | 15/26 [00:00<00:00, 25.70it/s] 69%|######9   | 18/26 [00:00<00:00, 25.97it/s] 85%|########4 | 22/26 [00:00<00:00, 28.88it/s] 96%|#########6| 25/26 [00:01<00:00, 28.01it/s]100%|##########| 26/26 [00:01<00:00, 23.07it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1248 200
penalty weights 10000.0
args.step pgd_anneal_iters 1248 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1249 200
penalty weights 10000.0
args.step pgd_anneal_iters 1249 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1250 200
penalty weights 10000.0
args.step pgd_anneal_iters 1250 600
dim_v 512
rho, theta 361 tensor(-5.3743e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1251 200
penalty weights 10000.0
args.step pgd_anneal_iters 1251 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1252 200
penalty weights 10000.0
args.step pgd_anneal_iters 1252 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1253 200
penalty weights 10000.0
args.step pgd_anneal_iters 1253 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1254 200
penalty weights 10000.0
args.step pgd_anneal_iters 1254 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1255 200
penalty weights 10000.0
args.step pgd_anneal_iters 1255 600
dim_v 512
rho, theta 341 tensor(-1.5309e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1256 200
penalty weights 10000.0
args.step pgd_anneal_iters 1256 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1257 200
penalty weights 10000.0
args.step pgd_anneal_iters 1257 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1258 200
penalty weights 10000.0
args.step pgd_anneal_iters 1258 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1259 200
penalty weights 10000.0
args.step pgd_anneal_iters 1259 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1260 200
penalty weights 10000.0
args.step pgd_anneal_iters 1260 600
dim_v 512
rho, theta 335 tensor(-8.9833e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1261 200
penalty weights 10000.0
args.step pgd_anneal_iters 1261 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1262 200
penalty weights 10000.0
args.step pgd_anneal_iters 1262 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1263 200
penalty weights 10000.0
args.step pgd_anneal_iters 1263 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1264 200
penalty weights 10000.0
args.step pgd_anneal_iters 1264 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1265 200
penalty weights 10000.0
args.step pgd_anneal_iters 1265 600
dim_v 512
rho, theta 349 tensor(1.8256e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1266 200
penalty weights 10000.0
args.step pgd_anneal_iters 1266 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1267 200
penalty weights 10000.0
args.step pgd_anneal_iters 1267 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1268 200
penalty weights 10000.0
args.step pgd_anneal_iters 1268 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1269 200
penalty weights 10000.0
args.step pgd_anneal_iters 1269 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1270 200
penalty weights 10000.0
args.step pgd_anneal_iters 1270 600
dim_v 512
rho, theta 388 tensor(8.2129e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1271 200
penalty weights 10000.0
args.step pgd_anneal_iters 1271 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1272 200
penalty weights 10000.0
args.step pgd_anneal_iters 1272 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1273 200
penalty weights 10000.0
args.step pgd_anneal_iters 1273 600
final projection at end of training
dim_v 512
rho, theta 373 tensor(2.4224e-07, device='cuda:0')
Epoch: [48][  26/  26]	Loss 0.000 (0.000)	train_nll   0.67 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  38.64 ( 38.64)	train_acc   0.48 (  0.50)	train_minacc   0.56 (  0.50)	train_majacc   0.47 (  0.50)	train_corr   0.00 (  0.00)	l1 5.3646 (5.3649)	zero_count 0.0000 (36.3870)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 21.11it/s] 31%|###       | 8/26 [00:00<00:00, 33.78it/s]                                               31%|###       | 8/26 [00:00<00:00, 33.78it/s] 46%|####6     | 12/26 [00:00<00:00, 34.91it/s] 69%|######9   | 18/26 [00:00<00:00, 43.05it/s]                                                69%|######9   | 18/26 [00:00<00:00, 43.05it/s] 88%|########8 | 23/26 [00:00<00:00, 41.06it/s]100%|##########| 26/26 [00:00<00:00, 36.11it/s]
Test: [   0/  26]	Loss 0.672 (0.672)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.52 (  0.52)	Loss_d 0.672 (0.672)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.19 (  0.19)
Test: [  10/  26]	Loss 0.672 (0.674)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.48)	test_majacc   0.48 (  0.50)	Loss_d 0.672 (0.674)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.48)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.20 (  0.18)
Test: [  20/  26]	Loss 0.676 (0.675)	test_acc   0.51 (  0.50)	test_minacc   0.42 (  0.50)	test_majacc   0.52 (  0.50)	Loss_d 0.676 (0.675)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.42 (  0.50)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.15 (  0.17)
Test: [  26/  26]	Loss 0.671 (0.674)	test_acc   0.48 (  0.50)	test_minacc   0.56 (  0.50)	test_majacc   0.47 (  0.50)	Loss_d 0.671 (0.674)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.56 (  0.50)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.22 (  0.17)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.93it/s]
Test: [  0/  1]	Loss 0.776 (0.776)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.776 (0.776)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.12 (  0.12)
Test: [  1/  1]	Loss 0.776 (0.776)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.776 (0.776)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.12 (  0.12)
Overall Timing[ 48/  1]	epoch_time 0.0429 (0.0446)	validation_time 0.0003 (0.0006)	train_time 0.0426 (0.0439)
record: (train_acc, test_acc) (0.7194000356197358, 0.6920000314712524)
last accs (train_acc, test_acc) (0.500000006467104, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.26it/s] 15%|#5        | 4/26 [00:00<00:01, 11.37it/s] 27%|##6       | 7/26 [00:00<00:01, 16.43it/s] 42%|####2     | 11/26 [00:00<00:00, 22.65it/s] 54%|#####3    | 14/26 [00:00<00:00, 24.29it/s] 65%|######5   | 17/26 [00:00<00:00, 25.27it/s] 81%|########  | 21/26 [00:00<00:00, 28.27it/s] 92%|#########2| 24/26 [00:01<00:00, 27.64it/s]100%|##########| 26/26 [00:01<00:00, 21.52it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1274 200
penalty weights 10000.0
args.step pgd_anneal_iters 1274 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1275 200
penalty weights 10000.0
args.step pgd_anneal_iters 1275 600
dim_v 512
rho, theta 369 tensor(-2.4486e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1276 200
penalty weights 10000.0
args.step pgd_anneal_iters 1276 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1277 200
penalty weights 10000.0
args.step pgd_anneal_iters 1277 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1278 200
penalty weights 10000.0
args.step pgd_anneal_iters 1278 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1279 200
penalty weights 10000.0
args.step pgd_anneal_iters 1279 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1280 200
penalty weights 10000.0
args.step pgd_anneal_iters 1280 600
dim_v 512
rho, theta 341 tensor(-1.6954e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1281 200
penalty weights 10000.0
args.step pgd_anneal_iters 1281 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1282 200
penalty weights 10000.0
args.step pgd_anneal_iters 1282 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1283 200
penalty weights 10000.0
args.step pgd_anneal_iters 1283 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1284 200
penalty weights 10000.0
args.step pgd_anneal_iters 1284 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1285 200
penalty weights 10000.0
args.step pgd_anneal_iters 1285 600
dim_v 512
rho, theta 334 tensor(-9.8784e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1286 200
penalty weights 10000.0
args.step pgd_anneal_iters 1286 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1287 200
penalty weights 10000.0
args.step pgd_anneal_iters 1287 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1288 200
penalty weights 10000.0
args.step pgd_anneal_iters 1288 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1289 200
penalty weights 10000.0
args.step pgd_anneal_iters 1289 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1290 200
penalty weights 10000.0
args.step pgd_anneal_iters 1290 600
dim_v 512
rho, theta 332 tensor(-3.2648e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1291 200
penalty weights 10000.0
args.step pgd_anneal_iters 1291 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1292 200
penalty weights 10000.0
args.step pgd_anneal_iters 1292 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1293 200
penalty weights 10000.0
args.step pgd_anneal_iters 1293 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1294 200
penalty weights 10000.0
args.step pgd_anneal_iters 1294 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1295 200
penalty weights 10000.0
args.step pgd_anneal_iters 1295 600
dim_v 512
rho, theta 413 tensor(1.4697e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1296 200
penalty weights 10000.0
args.step pgd_anneal_iters 1296 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1297 200
penalty weights 10000.0
args.step pgd_anneal_iters 1297 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1298 200
penalty weights 10000.0
args.step pgd_anneal_iters 1298 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1299 200
penalty weights 10000.0
args.step pgd_anneal_iters 1299 600
final projection at end of training
dim_v 512
rho, theta 392 tensor(2.5480e-07, device='cuda:0')
Epoch: [49][  26/  26]	Loss 0.000 (0.000)	train_nll   0.67 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  38.64 ( 38.64)	train_acc   0.48 (  0.50)	train_minacc   0.56 (  0.50)	train_majacc   0.47 (  0.50)	train_corr   0.00 (  0.00)	l1 5.3646 (5.3649)	zero_count 0.0000 (35.2560)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 13.10it/s] 27%|##6       | 7/26 [00:00<00:00, 29.75it/s]                                               27%|##6       | 7/26 [00:00<00:00, 29.75it/s] 46%|####6     | 12/26 [00:00<00:00, 33.72it/s] 65%|######5   | 17/26 [00:00<00:00, 38.46it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.46it/s] 85%|########4 | 22/26 [00:00<00:00, 40.87it/s]100%|##########| 26/26 [00:00<00:00, 34.16it/s]
Test: [   0/  26]	Loss 0.671 (0.671)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.52 (  0.52)	Loss_d 0.671 (0.671)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.19 (  0.19)
Test: [  10/  26]	Loss 0.672 (0.673)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.48)	test_majacc   0.48 (  0.50)	Loss_d 0.672 (0.673)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.48)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.20 (  0.18)
Test: [  20/  26]	Loss 0.675 (0.674)	test_acc   0.51 (  0.50)	test_minacc   0.42 (  0.50)	test_majacc   0.52 (  0.50)	Loss_d 0.675 (0.674)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.42 (  0.50)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.15 (  0.17)
Test: [  26/  26]	Loss 0.671 (0.674)	test_acc   0.48 (  0.50)	test_minacc   0.56 (  0.50)	test_majacc   0.47 (  0.50)	Loss_d 0.671 (0.674)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.56 (  0.50)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.22 (  0.17)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.28it/s]
Test: [  0/  1]	Loss 0.777 (0.777)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.777 (0.777)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.12 (  0.12)
Test: [  1/  1]	Loss 0.777 (0.777)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.777 (0.777)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.12 (  0.12)
Overall Timing[ 49/  1]	epoch_time 0.0428 (0.0445)	validation_time 0.0005 (0.0006)	train_time 0.0423 (0.0439)
record: (train_acc, test_acc) (0.7194000356197358, 0.6920000314712524)
last accs (train_acc, test_acc) (0.500000006467104, 0.5)
done saving aggregate.csv to ./aggregate.csv
wandb: - 0.160 MB of 0.160 MB uploadedwandb: \ 0.160 MB of 0.160 MB uploadedwandb: | 0.160 MB of 0.160 MB uploadedwandb: / 0.160 MB of 0.160 MB uploadedThread SenderThread:
Traceback (most recent call last):
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/internal_util.py", line 48, in run
    self._run()
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/internal_util.py", line 99, in _run
    self._process(record)
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/internal.py", line 327, in _process
    self._sm.send(record)
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/sender.py", line 398, in send
    send_handler(record)
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/sender.py", line 420, in send_request
    send_handler(record)
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/sender.py", line 654, in send_request_defer
    self._flush_job()
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/sender.py", line 1706, in _flush_job
    artifact = self._job_builder.build(api=self._api)
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/job_builder.py", line 552, in build
    artifact.add_file(
  File "/home/zd16/scratch/mypython3/wandb/sdk/artifacts/artifact.py", line 1196, in add_file
    return self._add_local_file(
  File "/home/zd16/scratch/mypython3/wandb/sdk/artifacts/artifact.py", line 1459, in _add_local_file
    with tempfile.NamedTemporaryFile(dir=get_staging_dir(), delete=False) as f:
  File "/usr/local/python/3.9.16/lib/python3.9/tempfile.py", line 545, in NamedTemporaryFile
    (fd, name) = _mkstemp_inner(dir, prefix, suffix, flags, output_type)
  File "/usr/local/python/3.9.16/lib/python3.9/tempfile.py", line 255, in _mkstemp_inner
    fd = _os.open(file, flags, 0o600)
OSError: [Errno 122] Disk quota exceeded: '/home/zd16/.local/share/wandb/artifacts/staging/tmp7_upts5e'
wandb: ERROR Internal wandb error: file data was not synced
wandb: Currently logged in as: janezdu (janezdu-uiuc). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.17.9 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.7
wandb: Run data is saved locally in /scratch/users/zd16/sparseIRM-resnet-ver/wandb/run-20240907_205947-x529gb9q
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run name_random
wandb: ⭐️ View project at https://wandb.ai/janezdu-uiuc/irm
wandb: 🚀 View run at https://wandb.ai/janezdu-uiuc/irm/runs/x529gb9q
=> Reading YAML config from configs/smallscale/resnet18/resnet18-usc-unsigned.yaml
Namespace(data='dataset/', optimizer='adam', weight_opt='adam', set='mnistcifar', arch='ResNet18', config='configs/smallscale/resnet18/resnet18-usc-unsigned.yaml', log_dir=None, workers=4, epochs=50, start_epoch=None, batch_size=390, lr=0.006, warmup_length=0, momentum=0.9, weight_decay=0.0, print_freq=10, num_classes=1, resume='', resume_train_weights='', evaluate=False, pretrained=None, pretrained_distill=None, alpha_distill=0.95, T_distill=2, seed=0, multigpu=[0], lr_policy='cosine_lr', lr_adjust=30, lr_gamma=0.1, name='baseline', save_every=-1, prune_rate=1.0, param_prune_rate=0.0, pr_start=1.0, low_data=1, width_mult=1.0, nesterov=False, threetimes=False, random_subnet=False, one_batch=False, conv_type='DenseConv', freeze_weights=False, st=False, mode='fan_in', nonlinearity='relu', bn_type='LearnedBatchNorm', init='kaiming_normal', no_bn_decay=False, scale_fan=False, first_layer_dense=False, last_layer_dense=True, approx=False, zero=False, flip=False, bs=False, gumbel_sample=False, multiply_prob=False, no_multiply=False, multiply_cont=False, multiply_prob_bs=False, indiv=False, label_smoothing=None, first_layer_type=None, trainer='default', score_init_constant=1.0, K=1, update_freq=20, D=0.01, T=1, TA=True, TA2=False, TA_grow=False, center=False, straight_through=False, PLA_factor=0.1, PLA_patience=10, gradient_loss_para=0, abs_loss_para=0, thres=0.9, runs_name='name_random', resume_compare_loss1='', resume_compare_loss2='', init_weights='', trained_mask='', weight_rescaling=False, constrain_by_layer=False, weight_rescaling_data=False, use_running_stats=False, not_clipping=False, rescaling_para=False, lasso_para=0, dont_freeze_weights=False, iterative=True, prob_by_weight=False, rescale_at_fix_subnet=False, train_weights_at_the_same_time=False, sample_from_training_set=False, load_true_para=False, distill=False, finetune=False, stablize=False, prev_best=0, weight_opt_lr=0.0006, n=500, ts=0.28, te=0.6, d=20000, s=80, c=0.75, init_prob=False, thres_before=0.001, wide_ratio=0.001, noise=1, cal_p_q=False, just_finetune=False, snip=False, envs_num=2, l2_regularizer_weight=0.001, data_num=50000, env_type='linear', irm_type='irmv1', hidden_dim=390, penalty_anneal_iters=200, penalty_weight=10000.0, grayscale_model=0, weight_lr_schedule=False, fix_subnet=False, freeze_weight=False, step='ours', prior_sd_coef=0, dim_inv=2, variance_gamma=1.0, dim_spu=10, image_scale=32, cons_ratio='0.999_0.7_0.1', noise_ratio=0.2, step_gamma=0.1, step_round=3, inner_steps=1, use_pgd=True, z=15.0, pgd_anneal_iters=600, pgd_skip_steps=5, fraction_z=0.99)
=> Creating model 'ResNet18'
Here!!!!!!!!
==> Conv Type: DenseConv
==> BN Type: LearnedBatchNorm
<class 'torch.nn.modules.conv.Conv2d'>
<class 'torch.nn.modules.batchnorm.BatchNorm2d'>
==> Building first layer with <class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): Linear(in_features=512, out_features=1, bias=True)
)
=> Parallelizing on [0] gpus
<DEBUG> gradient to module.conv1.weight
<DEBUG> gradient to module.bn1.weight
<DEBUG> gradient to module.bn1.bias
<DEBUG> gradient to module.layer1.0.conv1.weight
<DEBUG> gradient to module.layer1.0.bn1.weight
<DEBUG> gradient to module.layer1.0.bn1.bias
<DEBUG> gradient to module.layer1.0.conv2.weight
<DEBUG> gradient to module.layer1.0.bn2.weight
<DEBUG> gradient to module.layer1.0.bn2.bias
<DEBUG> gradient to module.layer1.1.conv1.weight
<DEBUG> gradient to module.layer1.1.bn1.weight
<DEBUG> gradient to module.layer1.1.bn1.bias
<DEBUG> gradient to module.layer1.1.conv2.weight
<DEBUG> gradient to module.layer1.1.bn2.weight
<DEBUG> gradient to module.layer1.1.bn2.bias
<DEBUG> gradient to module.layer2.0.conv1.weight
<DEBUG> gradient to module.layer2.0.bn1.weight
<DEBUG> gradient to module.layer2.0.bn1.bias
<DEBUG> gradient to module.layer2.0.conv2.weight
<DEBUG> gradient to module.layer2.0.bn2.weight
<DEBUG> gradient to module.layer2.0.bn2.bias
<DEBUG> gradient to module.layer2.0.downsample.0.weight
<DEBUG> gradient to module.layer2.0.downsample.1.weight
<DEBUG> gradient to module.layer2.0.downsample.1.bias
<DEBUG> gradient to module.layer2.1.conv1.weight
<DEBUG> gradient to module.layer2.1.bn1.weight
<DEBUG> gradient to module.layer2.1.bn1.bias
<DEBUG> gradient to module.layer2.1.conv2.weight
<DEBUG> gradient to module.layer2.1.bn2.weight
<DEBUG> gradient to module.layer2.1.bn2.bias
<DEBUG> gradient to module.layer3.0.conv1.weight
<DEBUG> gradient to module.layer3.0.bn1.weight
<DEBUG> gradient to module.layer3.0.bn1.bias
<DEBUG> gradient to module.layer3.0.conv2.weight
<DEBUG> gradient to module.layer3.0.bn2.weight
<DEBUG> gradient to module.layer3.0.bn2.bias
<DEBUG> gradient to module.layer3.0.downsample.0.weight
<DEBUG> gradient to module.layer3.0.downsample.1.weight
<DEBUG> gradient to module.layer3.0.downsample.1.bias
<DEBUG> gradient to module.layer3.1.conv1.weight
<DEBUG> gradient to module.layer3.1.bn1.weight
<DEBUG> gradient to module.layer3.1.bn1.bias
<DEBUG> gradient to module.layer3.1.conv2.weight
<DEBUG> gradient to module.layer3.1.bn2.weight
<DEBUG> gradient to module.layer3.1.bn2.bias
<DEBUG> gradient to module.layer4.0.conv1.weight
<DEBUG> gradient to module.layer4.0.bn1.weight
<DEBUG> gradient to module.layer4.0.bn1.bias
<DEBUG> gradient to module.layer4.0.conv2.weight
<DEBUG> gradient to module.layer4.0.bn2.weight
<DEBUG> gradient to module.layer4.0.bn2.bias
<DEBUG> gradient to module.layer4.0.downsample.0.weight
<DEBUG> gradient to module.layer4.0.downsample.1.weight
<DEBUG> gradient to module.layer4.0.downsample.1.bias
<DEBUG> gradient to module.layer4.1.conv1.weight
<DEBUG> gradient to module.layer4.1.bn1.weight
<DEBUG> gradient to module.layer4.1.bn1.bias
<DEBUG> gradient to module.layer4.1.conv2.weight
<DEBUG> gradient to module.layer4.1.bn2.weight
<DEBUG> gradient to module.layer4.1.bn2.bias
<DEBUG> gradient to module.fc.weight
<DEBUG> gradient to module.fc.bias
Files already downloaded and verified
Files already downloaded and verified
Adding Noise to Label, len(Y)=12000, Label_noise=1136
Xmp (7877, 3, 32, 32) (6903, 3, 32, 32)
Xcp (6038, 3, 32, 32) (5962, 3, 32, 32)
env=0 2497 2497 3 3
xn 2500 xp 2500
env=1 1750 1750 750 750
xn 2500 xp 2500
env=2 50 50 450 450
xn 500 xp 500
=> Creating model 'EBD'
EBD(
  (embedings): Embedding(2, 1)
)
=> Parallelizing on [0] gpus
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:01<00:40,  1.62s/it] 19%|#9        | 5/26 [00:01<00:05,  3.77it/s] 35%|###4      | 9/26 [00:01<00:02,  7.36it/s] 50%|#####     | 13/26 [00:01<00:01, 11.34it/s] 65%|######5   | 17/26 [00:02<00:00, 15.41it/s] 81%|########  | 21/26 [00:02<00:00, 19.48it/s] 96%|#########6| 25/26 [00:02<00:00, 22.93it/s]100%|##########| 26/26 [00:02<00:00,  9.75it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 0 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 2 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 3 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 4 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 5 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 6 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 7 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 8 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 9 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 10 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 11 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 12 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 13 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 14 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 15 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 16 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 17 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 18 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 19 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 20 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 21 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 22 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 23 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 24 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 25 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [0][  26/  26]	Loss 0.417 (0.573)	train_nll   0.42 (  0.57)	train_penalty   0.06 (  0.28)	weight_norm  20.83 ( 18.06)	train_acc   0.85 (  0.80)	train_minacc   0.03 (  0.07)	train_majacc   1.00 (  0.93)	train_corr   0.00 (  0.00)	l1 6.9498 (7.8755)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 17.40it/s] 31%|###       | 8/26 [00:00<00:00, 31.75it/s]                                               31%|###       | 8/26 [00:00<00:00, 31.75it/s] 50%|#####     | 13/26 [00:00<00:00, 38.22it/s] 73%|#######3  | 19/26 [00:00<00:00, 41.73it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 41.73it/s] 92%|#########2| 24/26 [00:00<00:00, 42.12it/s]100%|##########| 26/26 [00:01<00:00, 16.13it/s]
Test: [   0/  26]	Loss 0.423 (0.423)	test_acc   0.84 (  0.84)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.423 (0.423)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.99 (  0.99)
Test: [  10/  26]	Loss 0.417 (0.425)	test_acc   0.85 (  0.84)	test_minacc   0.00 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 0.417 (0.425)	test_acc_d   0.85 (  0.84)	test_minacc_d   0.00 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.98)
Test: [  20/  26]	Loss 0.418 (0.422)	test_acc   0.84 (  0.84)	test_minacc   0.00 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 0.418 (0.422)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.00 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.98 (  0.98)
Test: [  26/  26]	Loss 0.411 (0.420)	test_acc   0.85 (  0.85)	test_minacc   0.03 (  0.01)	test_majacc   1.00 (  0.99)	Loss_d 0.411 (0.420)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.03 (  0.01)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.98 (  0.98)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00,  2.54it/s]100%|##########| 1/1 [00:00<00:00,  2.54it/s]
Test: [  0/  1]	Loss 1.859 (1.859)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 1.859 (1.859)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.97)
Test: [  1/  1]	Loss 1.859 (1.859)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 1.859 (1.859)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.97)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/169/checkpoints/model_best.pth
Overall Timing[  0/  1]	epoch_time 0.0952 (0.0952)	validation_time 0.0068 (0.0068)	train_time 0.0852 (0.0852)
record: (train_acc, test_acc) (0.8452000241875649, 0.1080000028014183)
last accs (train_acc, test_acc) (0.8452000241875649, 0.1080000028014183)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.38it/s] 19%|#9        | 5/26 [00:00<00:01, 20.09it/s] 35%|###4      | 9/26 [00:00<00:00, 25.86it/s] 50%|#####     | 13/26 [00:00<00:00, 29.53it/s] 65%|######5   | 17/26 [00:00<00:00, 31.59it/s] 81%|########  | 21/26 [00:00<00:00, 33.28it/s] 96%|#########6| 25/26 [00:00<00:00, 34.04it/s]100%|##########| 26/26 [00:00<00:00, 27.77it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 26 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 27 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 28 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 29 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 30 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 31 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 32 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 33 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 34 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 35 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 36 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 37 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 38 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 39 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 40 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 41 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 42 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 43 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 44 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 45 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 46 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 47 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 48 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 49 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 50 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 51 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [1][  26/  26]	Loss 0.415 (0.420)	train_nll   0.41 (  0.42)	train_penalty   0.05 (  0.06)	weight_norm  21.96 ( 21.61)	train_acc   0.85 (  0.85)	train_minacc   0.08 (  0.01)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 6.7483 (6.7744)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.93it/s] 31%|###       | 8/26 [00:00<00:00, 26.76it/s]                                               31%|###       | 8/26 [00:00<00:00, 26.76it/s] 50%|#####     | 13/26 [00:00<00:00, 32.16it/s] 73%|#######3  | 19/26 [00:00<00:00, 39.76it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 39.76it/s] 96%|#########6| 25/26 [00:00<00:00, 42.13it/s]100%|##########| 26/26 [00:00<00:00, 32.59it/s]
Test: [   0/  26]	Loss 0.416 (0.416)	test_acc   0.84 (  0.84)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.416 (0.416)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  10/  26]	Loss 0.404 (0.415)	test_acc   0.85 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   0.99 (  1.00)	Loss_d 0.404 (0.415)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.97 (  0.98)
Test: [  20/  26]	Loss 0.402 (0.412)	test_acc   0.85 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.402 (0.412)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  26/  26]	Loss 0.407 (0.409)	test_acc   0.85 (  0.85)	test_minacc   0.03 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.407 (0.409)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.03 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.98)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.50it/s]
Test: [  0/  1]	Loss 1.772 (1.772)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.772 (1.772)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
Test: [  1/  1]	Loss 1.772 (1.772)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.772 (1.772)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
Overall Timing[  1/  1]	epoch_time 0.0400 (0.0676)	validation_time 0.0003 (0.0035)	train_time 0.0396 (0.0624)
record: (train_acc, test_acc) (0.8452000241875649, 0.1080000028014183)
last accs (train_acc, test_acc) (0.8471000298857689, 0.10600000619888306)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.61it/s] 19%|#9        | 5/26 [00:00<00:01, 16.76it/s] 35%|###4      | 9/26 [00:00<00:00, 23.46it/s] 50%|#####     | 13/26 [00:00<00:00, 27.09it/s] 65%|######5   | 17/26 [00:00<00:00, 29.90it/s] 81%|########  | 21/26 [00:00<00:00, 32.04it/s] 96%|#########6| 25/26 [00:00<00:00, 33.25it/s]100%|##########| 26/26 [00:00<00:00, 26.27it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 52 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 53 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 54 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 55 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 56 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 57 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 58 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 59 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 60 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 61 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 62 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 63 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 64 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 65 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 66 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 67 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 68 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 69 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 70 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 71 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 72 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 73 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 74 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 75 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 76 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 77 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [2][  26/  26]	Loss 0.412 (0.412)	train_nll   0.41 (  0.41)	train_penalty   0.06 (  0.06)	weight_norm  22.08 ( 22.04)	train_acc   0.85 (  0.85)	train_minacc   0.05 (  0.01)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 6.7627 (6.6656)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 26.10it/s] 27%|##6       | 7/26 [00:00<00:00, 33.05it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.05it/s] 46%|####6     | 12/26 [00:00<00:00, 35.33it/s] 65%|######5   | 17/26 [00:00<00:00, 39.16it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.16it/s] 85%|########4 | 22/26 [00:00<00:00, 42.29it/s]100%|##########| 26/26 [00:00<00:00, 36.11it/s]
Test: [   0/  26]	Loss 0.415 (0.415)	test_acc   0.84 (  0.84)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.415 (0.415)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.99 (  0.99)
Test: [  10/  26]	Loss 0.397 (0.407)	test_acc   0.86 (  0.85)	test_minacc   0.00 (  0.00)	test_majacc   0.99 (  1.00)	Loss_d 0.397 (0.407)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.00 (  0.00)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  20/  26]	Loss 0.394 (0.403)	test_acc   0.85 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.394 (0.403)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  26/  26]	Loss 0.401 (0.400)	test_acc   0.85 (  0.85)	test_minacc   0.03 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.401 (0.400)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.03 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.98)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 57.65it/s]
Test: [  0/  1]	Loss 1.858 (1.858)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.858 (1.858)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
Test: [  1/  1]	Loss 1.858 (1.858)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.858 (1.858)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
Overall Timing[  2/  1]	epoch_time 0.0410 (0.0587)	validation_time 0.0004 (0.0025)	train_time 0.0406 (0.0551)
record: (train_acc, test_acc) (0.8452000241875649, 0.1080000028014183)
last accs (train_acc, test_acc) (0.8483000298142434, 0.10700000822544098)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.17it/s] 19%|#9        | 5/26 [00:00<00:00, 22.49it/s] 35%|###4      | 9/26 [00:00<00:00, 28.26it/s] 50%|#####     | 13/26 [00:00<00:00, 31.67it/s] 65%|######5   | 17/26 [00:00<00:00, 33.35it/s] 81%|########  | 21/26 [00:00<00:00, 34.76it/s] 96%|#########6| 25/26 [00:00<00:00, 34.65it/s]100%|##########| 26/26 [00:00<00:00, 29.12it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 78 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 79 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 80 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 81 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 82 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 83 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 84 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 85 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 86 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 87 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 88 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 89 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 90 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 91 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 92 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 93 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 94 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 95 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 96 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 97 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 98 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 99 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 100 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 101 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 102 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 103 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [3][  26/  26]	Loss 0.407 (0.403)	train_nll   0.41 (  0.40)	train_penalty   0.05 (  0.05)	weight_norm  22.12 ( 22.10)	train_acc   0.86 (  0.85)	train_minacc   0.08 (  0.03)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 6.6262 (6.5743)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.78it/s] 27%|##6       | 7/26 [00:00<00:00, 35.27it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.27it/s] 46%|####6     | 12/26 [00:00<00:00, 40.57it/s] 65%|######5   | 17/26 [00:00<00:00, 42.02it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.02it/s] 85%|########4 | 22/26 [00:00<00:00, 44.00it/s]100%|##########| 26/26 [00:00<00:00, 37.68it/s]
Test: [   0/  26]	Loss 0.411 (0.411)	test_acc   0.84 (  0.84)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.411 (0.411)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  10/  26]	Loss 0.391 (0.398)	test_acc   0.86 (  0.85)	test_minacc   0.02 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.391 (0.398)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.02 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
Test: [  20/  26]	Loss 0.378 (0.395)	test_acc   0.85 (  0.85)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 0.378 (0.395)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
Test: [  26/  26]	Loss 0.394 (0.391)	test_acc   0.86 (  0.85)	test_minacc   0.08 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 0.394 (0.391)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.08 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.96 (  0.97)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.30it/s]
Test: [  0/  1]	Loss 1.879 (1.879)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.879 (1.879)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.96 (  0.96)
Test: [  1/  1]	Loss 1.879 (1.879)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.879 (1.879)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.96 (  0.96)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/169/checkpoints/model_best.pth
Overall Timing[  3/  1]	epoch_time 0.0448 (0.0552)	validation_time 0.0004 (0.0020)	train_time 0.0443 (0.0524)
record: (train_acc, test_acc) (0.8504000266194344, 0.10900000482797623)
last accs (train_acc, test_acc) (0.8504000266194344, 0.10900000482797623)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.79it/s] 23%|##3       | 6/26 [00:00<00:00, 26.57it/s] 38%|###8      | 10/26 [00:00<00:00, 30.41it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.03it/s] 69%|######9   | 18/26 [00:00<00:00, 33.33it/s] 85%|########4 | 22/26 [00:00<00:00, 34.88it/s]100%|##########| 26/26 [00:00<00:00, 30.75it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 104 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 105 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 106 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 107 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 108 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 109 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 110 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 111 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 112 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 113 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 114 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 115 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 116 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 117 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 118 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 119 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 120 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 121 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 122 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 123 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 124 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 125 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 126 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 127 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 128 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 129 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [4][  26/  26]	Loss 0.385 (0.385)	train_nll   0.38 (  0.39)	train_penalty   0.04 (  0.05)	weight_norm  22.16 ( 22.14)	train_acc   0.85 (  0.85)	train_minacc   0.18 (  0.06)	train_majacc   0.97 (  0.99)	train_corr   0.00 (  0.00)	l1 6.5641 (6.4382)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 15%|#5        | 4/26 [00:00<00:00, 34.50it/s] 35%|###4      | 9/26 [00:00<00:00, 40.87it/s]                                               35%|###4      | 9/26 [00:00<00:00, 40.87it/s] 54%|#####3    | 14/26 [00:00<00:00, 42.48it/s] 73%|#######3  | 19/26 [00:00<00:00, 43.32it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 43.32it/s] 92%|#########2| 24/26 [00:00<00:00, 41.60it/s]100%|##########| 26/26 [00:00<00:00, 38.71it/s]
Test: [   0/  26]	Loss 0.380 (0.380)	test_acc   0.85 (  0.85)	test_minacc   0.05 (  0.05)	test_majacc   0.99 (  0.99)	Loss_d 0.380 (0.380)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.05 (  0.05)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.96)
Test: [  10/  26]	Loss 0.361 (0.372)	test_acc   0.86 (  0.85)	test_minacc   0.04 (  0.06)	test_majacc   0.99 (  0.99)	Loss_d 0.361 (0.372)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.04 (  0.06)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.96)
Test: [  20/  26]	Loss 0.362 (0.368)	test_acc   0.85 (  0.85)	test_minacc   0.03 (  0.05)	test_majacc   0.99 (  0.99)	Loss_d 0.362 (0.368)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.03 (  0.05)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.96)
Test: [  26/  26]	Loss 0.363 (0.365)	test_acc   0.85 (  0.85)	test_minacc   0.10 (  0.06)	test_majacc   0.99 (  0.99)	Loss_d 0.363 (0.365)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.10 (  0.06)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.95 (  0.96)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.93it/s]
Test: [  0/  1]	Loss 1.842 (1.842)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.842 (1.842)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.94 (  0.94)
Test: [  1/  1]	Loss 1.842 (1.842)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.842 (1.842)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.94 (  0.94)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/169/checkpoints/model_best.pth
Overall Timing[  4/  1]	epoch_time 0.0464 (0.0534)	validation_time 0.0004 (0.0017)	train_time 0.0459 (0.0511)
record: (train_acc, test_acc) (0.851800025165081, 0.1120000034570694)
last accs (train_acc, test_acc) (0.851800025165081, 0.1120000034570694)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.97it/s] 23%|##3       | 6/26 [00:00<00:00, 26.93it/s] 38%|###8      | 10/26 [00:00<00:00, 30.60it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.75it/s] 69%|######9   | 18/26 [00:00<00:00, 32.98it/s] 85%|########4 | 22/26 [00:00<00:00, 32.89it/s]100%|##########| 26/26 [00:00<00:00, 33.99it/s]100%|##########| 26/26 [00:00<00:00, 29.90it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 130 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 131 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 132 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 133 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 134 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 135 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 136 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 137 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 138 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 139 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 140 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 141 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 142 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 143 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 144 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 145 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 146 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 147 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 148 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 149 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 150 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 151 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 152 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 153 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 154 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 155 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [5][  26/  26]	Loss 0.370 (0.356)	train_nll   0.37 (  0.36)	train_penalty   0.05 (  0.03)	weight_norm  22.24 ( 22.20)	train_acc   0.86 (  0.85)	train_minacc   0.18 (  0.16)	train_majacc   0.99 (  0.97)	train_corr   0.00 (  0.00)	l1 6.4240 (6.4106)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 23.96it/s] 35%|###4      | 9/26 [00:00<00:00, 36.25it/s]                                               35%|###4      | 9/26 [00:00<00:00, 36.25it/s] 54%|#####3    | 14/26 [00:00<00:00, 40.28it/s] 73%|#######3  | 19/26 [00:00<00:00, 41.40it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 41.40it/s] 92%|#########2| 24/26 [00:00<00:00, 43.18it/s]100%|##########| 26/26 [00:00<00:00, 37.34it/s]
Test: [   0/  26]	Loss 0.354 (0.354)	test_acc   0.85 (  0.85)	test_minacc   0.07 (  0.07)	test_majacc   0.99 (  0.99)	Loss_d 0.354 (0.354)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.07 (  0.07)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.95 (  0.95)
Test: [  10/  26]	Loss 0.315 (0.336)	test_acc   0.87 (  0.85)	test_minacc   0.09 (  0.08)	test_majacc   0.99 (  0.99)	Loss_d 0.315 (0.336)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.09 (  0.08)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.95)
Test: [  20/  26]	Loss 0.341 (0.335)	test_acc   0.85 (  0.85)	test_minacc   0.05 (  0.08)	test_majacc   1.00 (  0.99)	Loss_d 0.341 (0.335)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.05 (  0.08)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.95 (  0.95)
Test: [  26/  26]	Loss 0.344 (0.333)	test_acc   0.86 (  0.86)	test_minacc   0.13 (  0.08)	test_majacc   0.99 (  0.99)	Loss_d 0.344 (0.333)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.13 (  0.08)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.94 (  0.95)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.91it/s]
Test: [  0/  1]	Loss 1.825 (1.825)	test_acc   0.12 (  0.12)	test_minacc   0.03 (  0.03)	test_majacc   0.99 (  0.99)	Loss_d 1.825 (1.825)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.03 (  0.03)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.92 (  0.92)
Test: [  1/  1]	Loss 1.825 (1.825)	test_acc   0.12 (  0.12)	test_minacc   0.03 (  0.03)	test_majacc   0.99 (  0.99)	Loss_d 1.825 (1.825)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.03 (  0.03)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.92 (  0.92)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/169/checkpoints/model_best.pth
Overall Timing[  5/  1]	epoch_time 0.0403 (0.0513)	validation_time 0.0004 (0.0015)	train_time 0.0398 (0.0492)
record: (train_acc, test_acc) (0.8551000275015831, 0.12400000542402267)
last accs (train_acc, test_acc) (0.8551000275015831, 0.12400000542402267)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.83it/s] 19%|#9        | 5/26 [00:00<00:00, 21.97it/s] 35%|###4      | 9/26 [00:00<00:00, 28.34it/s] 50%|#####     | 13/26 [00:00<00:00, 31.01it/s] 65%|######5   | 17/26 [00:00<00:00, 31.87it/s] 81%|########  | 21/26 [00:00<00:00, 33.44it/s] 96%|#########6| 25/26 [00:00<00:00, 33.99it/s]100%|##########| 26/26 [00:00<00:00, 29.02it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 156 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 157 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 158 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 159 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 160 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 161 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 162 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 163 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 164 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 165 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 166 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 167 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 168 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 169 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 170 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 171 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 172 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 173 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 174 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 175 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 176 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 177 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 178 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 179 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 180 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 181 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [6][  26/  26]	Loss 0.321 (0.337)	train_nll   0.32 (  0.34)	train_penalty   0.01 (  0.03)	weight_norm  22.32 ( 22.28)	train_acc   0.85 (  0.85)	train_minacc   0.33 (  0.23)	train_majacc   0.94 (  0.97)	train_corr   0.00 (  0.00)	l1 6.2998 (6.3214)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.54it/s] 23%|##3       | 6/26 [00:00<00:00, 31.08it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.08it/s] 42%|####2     | 11/26 [00:00<00:00, 37.67it/s] 65%|######5   | 17/26 [00:00<00:00, 40.84it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.84it/s] 85%|########4 | 22/26 [00:00<00:00, 42.51it/s]100%|##########| 26/26 [00:00<00:00, 36.95it/s]
Test: [   0/  26]	Loss 0.318 (0.318)	test_acc   0.86 (  0.86)	test_minacc   0.15 (  0.15)	test_majacc   0.99 (  0.99)	Loss_d 0.318 (0.318)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.15 (  0.15)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.93 (  0.93)
Test: [  10/  26]	Loss 0.302 (0.318)	test_acc   0.86 (  0.86)	test_minacc   0.11 (  0.17)	test_majacc   0.98 (  0.98)	Loss_d 0.302 (0.318)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.11 (  0.17)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.93 (  0.92)
Test: [  20/  26]	Loss 0.326 (0.316)	test_acc   0.85 (  0.86)	test_minacc   0.08 (  0.17)	test_majacc   0.98 (  0.98)	Loss_d 0.326 (0.316)	test_acc_d   0.85 (  0.86)	test_minacc_d   0.08 (  0.17)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.93 (  0.92)
Test: [  26/  26]	Loss 0.292 (0.313)	test_acc   0.86 (  0.86)	test_minacc   0.26 (  0.18)	test_majacc   0.97 (  0.98)	Loss_d 0.292 (0.313)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.26 (  0.18)	test_majacc_d   0.97 (  0.98)	test_corr_d   0.90 (  0.92)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.42it/s]
Test: [  0/  1]	Loss 1.758 (1.758)	test_acc   0.15 (  0.15)	test_minacc   0.06 (  0.06)	test_majacc   0.99 (  0.99)	Loss_d 1.758 (1.758)	test_acc_d   0.15 (  0.15)	test_minacc_d   0.06 (  0.06)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.86 (  0.86)
Test: [  1/  1]	Loss 1.758 (1.758)	test_acc   0.15 (  0.15)	test_minacc   0.06 (  0.06)	test_majacc   0.99 (  0.99)	Loss_d 1.758 (1.758)	test_acc_d   0.15 (  0.15)	test_minacc_d   0.06 (  0.06)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.86 (  0.86)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/169/checkpoints/model_best.pth
Overall Timing[  6/  1]	epoch_time 0.0389 (0.0495)	validation_time 0.0005 (0.0013)	train_time 0.0384 (0.0477)
record: (train_acc, test_acc) (0.8606000235676765, 0.1510000079870224)
last accs (train_acc, test_acc) (0.8606000235676765, 0.1510000079870224)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.53it/s] 19%|#9        | 5/26 [00:00<00:00, 22.53it/s] 35%|###4      | 9/26 [00:00<00:00, 28.56it/s] 50%|#####     | 13/26 [00:00<00:00, 30.56it/s] 65%|######5   | 17/26 [00:00<00:00, 31.55it/s] 81%|########  | 21/26 [00:00<00:00, 33.52it/s] 96%|#########6| 25/26 [00:00<00:00, 34.27it/s]100%|##########| 26/26 [00:00<00:00, 29.06it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 182 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 183 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 184 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 185 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 186 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 187 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 188 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 189 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 190 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 191 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 192 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 193 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 194 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 195 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 196 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 197 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 198 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 199 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 200 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 201 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 202 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 203 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 204 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 205 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 206 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 207 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [7][  26/  26]	Loss 0.004 (0.230)	train_nll   0.44 (  0.33)	train_penalty   0.00 (  0.02)	weight_norm  22.40 ( 22.36)	train_acc   0.80 (  0.85)	train_minacc   0.67 (  0.32)	train_majacc   0.82 (  0.95)	train_corr   0.00 (  0.00)	l1 5.6823 (6.2990)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.22it/s] 23%|##3       | 6/26 [00:00<00:00, 24.07it/s]                                               23%|##3       | 6/26 [00:00<00:00, 24.07it/s] 42%|####2     | 11/26 [00:00<00:00, 32.85it/s] 62%|######1   | 16/26 [00:00<00:00, 34.84it/s]                                                62%|######1   | 16/26 [00:00<00:00, 34.84it/s] 81%|########  | 21/26 [00:00<00:00, 38.23it/s]100%|##########| 26/26 [00:00<00:00, 41.08it/s]100%|##########| 26/26 [00:00<00:00, 32.34it/s]
Test: [   0/  26]	Loss 0.481 (0.481)	test_acc   0.78 (  0.78)	test_minacc   0.62 (  0.62)	test_majacc   0.81 (  0.81)	Loss_d 0.481 (0.481)	test_acc_d   0.78 (  0.78)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.81 (  0.81)	test_corr_d   0.57 (  0.57)
Test: [  10/  26]	Loss 0.491 (0.472)	test_acc   0.77 (  0.78)	test_minacc   0.63 (  0.67)	test_majacc   0.79 (  0.80)	Loss_d 0.491 (0.472)	test_acc_d   0.77 (  0.78)	test_minacc_d   0.63 (  0.67)	test_majacc_d   0.79 (  0.80)	test_corr_d   0.57 (  0.57)
Test: [  20/  26]	Loss 0.529 (0.476)	test_acc   0.76 (  0.78)	test_minacc   0.61 (  0.67)	test_majacc   0.79 (  0.80)	Loss_d 0.529 (0.476)	test_acc_d   0.76 (  0.78)	test_minacc_d   0.61 (  0.67)	test_majacc_d   0.79 (  0.80)	test_corr_d   0.57 (  0.57)
Test: [  26/  26]	Loss 0.471 (0.478)	test_acc   0.77 (  0.78)	test_minacc   0.69 (  0.67)	test_majacc   0.78 (  0.80)	Loss_d 0.471 (0.478)	test_acc_d   0.77 (  0.78)	test_minacc_d   0.69 (  0.67)	test_majacc_d   0.78 (  0.80)	test_corr_d   0.54 (  0.56)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 58.32it/s]
Test: [  0/  1]	Loss 1.061 (1.061)	test_acc   0.44 (  0.44)	test_minacc   0.39 (  0.39)	test_majacc   0.85 (  0.85)	Loss_d 1.061 (1.061)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.26 (  0.26)
Test: [  1/  1]	Loss 1.061 (1.061)	test_acc   0.44 (  0.44)	test_minacc   0.39 (  0.39)	test_majacc   0.85 (  0.85)	Loss_d 1.061 (1.061)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.26 (  0.26)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/169/checkpoints/model_best.pth
Overall Timing[  7/  1]	epoch_time 0.0429 (0.0487)	validation_time 0.0004 (0.0012)	train_time 0.0425 (0.0470)
record: (train_acc, test_acc) (0.7809000303149223, 0.43800002336502075)
last accs (train_acc, test_acc) (0.7809000303149223, 0.43800002336502075)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.53it/s] 19%|#9        | 5/26 [00:00<00:01, 20.79it/s] 35%|###4      | 9/26 [00:00<00:00, 26.80it/s] 50%|#####     | 13/26 [00:00<00:00, 30.23it/s] 65%|######5   | 17/26 [00:00<00:00, 31.99it/s] 81%|########  | 21/26 [00:00<00:00, 33.16it/s] 96%|#########6| 25/26 [00:00<00:00, 33.75it/s]100%|##########| 26/26 [00:00<00:00, 28.16it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 208 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 209 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 210 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 211 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 212 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 213 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 214 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 215 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 216 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 217 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 218 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 219 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 220 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 221 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 222 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 223 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 224 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 225 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 226 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 227 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 228 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 229 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 230 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 231 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 232 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 233 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [8][  26/  26]	Loss 0.000 (0.002)	train_nll   0.63 (  0.58)	train_penalty   0.00 (  0.00)	weight_norm  22.44 ( 22.43)	train_acc   0.55 (  0.65)	train_minacc   0.74 (  0.76)	train_majacc   0.52 (  0.63)	train_corr   0.00 (  0.00)	l1 4.5883 (4.9050)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.69it/s] 27%|##6       | 7/26 [00:00<00:00, 31.28it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.28it/s] 46%|####6     | 12/26 [00:00<00:00, 38.05it/s] 65%|######5   | 17/26 [00:00<00:00, 40.87it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.87it/s] 85%|########4 | 22/26 [00:00<00:00, 39.28it/s]100%|##########| 26/26 [00:00<00:00, 35.93it/s]
Test: [   0/  26]	Loss 0.621 (0.621)	test_acc   0.55 (  0.55)	test_minacc   0.70 (  0.70)	test_majacc   0.52 (  0.52)	Loss_d 0.621 (0.621)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.28 (  0.28)
Test: [  10/  26]	Loss 0.640 (0.635)	test_acc   0.57 (  0.56)	test_minacc   0.72 (  0.68)	test_majacc   0.54 (  0.53)	Loss_d 0.640 (0.635)	test_acc_d   0.57 (  0.56)	test_minacc_d   0.72 (  0.68)	test_majacc_d   0.54 (  0.53)	test_corr_d   0.26 (  0.29)
Test: [  20/  26]	Loss 0.627 (0.633)	test_acc   0.59 (  0.56)	test_minacc   0.71 (  0.70)	test_majacc   0.57 (  0.54)	Loss_d 0.627 (0.633)	test_acc_d   0.59 (  0.56)	test_minacc_d   0.71 (  0.70)	test_majacc_d   0.57 (  0.54)	test_corr_d   0.31 (  0.28)
Test: [  26/  26]	Loss 0.640 (0.633)	test_acc   0.55 (  0.56)	test_minacc   0.74 (  0.70)	test_majacc   0.51 (  0.54)	Loss_d 0.640 (0.633)	test_acc_d   0.55 (  0.56)	test_minacc_d   0.74 (  0.70)	test_majacc_d   0.51 (  0.54)	test_corr_d   0.28 (  0.28)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.77it/s]
Test: [  0/  1]	Loss 0.764 (0.764)	test_acc   0.58 (  0.58)	test_minacc   0.59 (  0.59)	test_majacc   0.52 (  0.52)	Loss_d 0.764 (0.764)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 0.764 (0.764)	test_acc   0.58 (  0.58)	test_minacc   0.59 (  0.59)	test_majacc   0.52 (  0.52)	Loss_d 0.764 (0.764)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.11 (  0.11)
Overall Timing[  8/  1]	epoch_time 0.0402 (0.0477)	validation_time 0.0004 (0.0011)	train_time 0.0397 (0.0462)
record: (train_acc, test_acc) (0.7809000303149223, 0.43800002336502075)
last accs (train_acc, test_acc) (0.5622000089287758, 0.5840000510215759)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.78it/s] 19%|#9        | 5/26 [00:00<00:01, 20.41it/s] 35%|###4      | 9/26 [00:00<00:00, 26.79it/s] 50%|#####     | 13/26 [00:00<00:00, 30.06it/s] 65%|######5   | 17/26 [00:00<00:00, 32.40it/s] 81%|########  | 21/26 [00:00<00:00, 34.34it/s] 96%|#########6| 25/26 [00:00<00:00, 35.16it/s]100%|##########| 26/26 [00:00<00:00, 28.58it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 234 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 235 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 236 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 237 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 238 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 239 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 240 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 241 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 242 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 243 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 244 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 245 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 246 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 247 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 248 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 249 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 250 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 251 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 252 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 253 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 254 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 255 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 256 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 257 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 258 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 259 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [9][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  22.45 ( 22.44)	train_acc   0.52 (  0.56)	train_minacc   0.79 (  0.74)	train_majacc   0.47 (  0.53)	train_corr   0.00 (  0.00)	l1 4.4365 (4.4823)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.03it/s] 23%|##3       | 6/26 [00:00<00:00, 26.03it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.03it/s] 42%|####2     | 11/26 [00:00<00:00, 34.34it/s] 62%|######1   | 16/26 [00:00<00:00, 38.86it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.86it/s] 81%|########  | 21/26 [00:00<00:00, 37.04it/s]100%|##########| 26/26 [00:00<00:00, 39.99it/s]100%|##########| 26/26 [00:00<00:00, 32.73it/s]
Test: [   0/  26]	Loss 0.642 (0.642)	test_acc   0.53 (  0.53)	test_minacc   0.72 (  0.72)	test_majacc   0.50 (  0.50)	Loss_d 0.642 (0.642)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.16 (  0.16)
Test: [  10/  26]	Loss 0.659 (0.654)	test_acc   0.54 (  0.53)	test_minacc   0.72 (  0.72)	test_majacc   0.51 (  0.49)	Loss_d 0.659 (0.654)	test_acc_d   0.54 (  0.53)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.51 (  0.49)	test_corr_d   0.15 (  0.17)
Test: [  20/  26]	Loss 0.654 (0.653)	test_acc   0.57 (  0.54)	test_minacc   0.73 (  0.75)	test_majacc   0.54 (  0.50)	Loss_d 0.654 (0.653)	test_acc_d   0.57 (  0.54)	test_minacc_d   0.73 (  0.75)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.18 (  0.17)
Test: [  26/  26]	Loss 0.656 (0.653)	test_acc   0.52 (  0.54)	test_minacc   0.79 (  0.75)	test_majacc   0.47 (  0.50)	Loss_d 0.656 (0.653)	test_acc_d   0.52 (  0.54)	test_minacc_d   0.79 (  0.75)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.15 (  0.16)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.73it/s]
Test: [  0/  1]	Loss 0.715 (0.715)	test_acc   0.61 (  0.61)	test_minacc   0.62 (  0.62)	test_majacc   0.50 (  0.50)	Loss_d 0.715 (0.715)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.00 ( -0.00)
Test: [  1/  1]	Loss 0.715 (0.715)	test_acc   0.61 (  0.61)	test_minacc   0.62 (  0.62)	test_majacc   0.50 (  0.50)	Loss_d 0.715 (0.715)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.00 ( -0.00)
Overall Timing[  9/  1]	epoch_time 0.0413 (0.0471)	validation_time 0.0003 (0.0010)	train_time 0.0409 (0.0457)
record: (train_acc, test_acc) (0.7809000303149223, 0.43800002336502075)
last accs (train_acc, test_acc) (0.5357000153958797, 0.6100000143051147)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.37it/s] 19%|#9        | 5/26 [00:00<00:01, 16.79it/s] 35%|###4      | 9/26 [00:00<00:00, 23.42it/s] 50%|#####     | 13/26 [00:00<00:00, 27.52it/s] 65%|######5   | 17/26 [00:00<00:00, 29.41it/s] 81%|########  | 21/26 [00:00<00:00, 31.64it/s] 96%|#########6| 25/26 [00:00<00:00, 33.36it/s]100%|##########| 26/26 [00:00<00:00, 26.02it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 260 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 261 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 262 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 263 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 264 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 265 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 266 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 267 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 268 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 269 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 270 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 271 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 272 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 273 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 274 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 275 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 276 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 277 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 278 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 279 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 280 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 281 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 282 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 283 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 284 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 285 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [10][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm  22.45 ( 22.45)	train_acc   0.53 (  0.54)	train_minacc   0.77 (  0.71)	train_majacc   0.48 (  0.51)	train_corr   0.00 (  0.00)	l1 4.3884 (4.4141)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.88it/s] 27%|##6       | 7/26 [00:00<00:00, 36.20it/s]                                               27%|##6       | 7/26 [00:00<00:00, 36.20it/s] 46%|####6     | 12/26 [00:00<00:00, 40.46it/s] 65%|######5   | 17/26 [00:00<00:00, 43.72it/s]                                                65%|######5   | 17/26 [00:00<00:00, 43.72it/s] 85%|########4 | 22/26 [00:00<00:00, 44.72it/s]100%|##########| 26/26 [00:00<00:00, 37.77it/s]
Test: [   0/  26]	Loss 0.644 (0.644)	test_acc   0.53 (  0.53)	test_minacc   0.74 (  0.74)	test_majacc   0.49 (  0.49)	Loss_d 0.644 (0.644)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.16 (  0.16)
Test: [  10/  26]	Loss 0.661 (0.656)	test_acc   0.52 (  0.53)	test_minacc   0.70 (  0.71)	test_majacc   0.49 (  0.49)	Loss_d 0.661 (0.656)	test_acc_d   0.52 (  0.53)	test_minacc_d   0.70 (  0.71)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.16 (  0.17)
Test: [  20/  26]	Loss 0.662 (0.655)	test_acc   0.56 (  0.53)	test_minacc   0.69 (  0.73)	test_majacc   0.53 (  0.50)	Loss_d 0.662 (0.655)	test_acc_d   0.56 (  0.53)	test_minacc_d   0.69 (  0.73)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.18 (  0.17)
Test: [  26/  26]	Loss 0.655 (0.656)	test_acc   0.51 (  0.53)	test_minacc   0.79 (  0.73)	test_majacc   0.45 (  0.49)	Loss_d 0.655 (0.656)	test_acc_d   0.51 (  0.53)	test_minacc_d   0.79 (  0.73)	test_majacc_d   0.45 (  0.49)	test_corr_d   0.15 (  0.16)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.68it/s]
Test: [  0/  1]	Loss 0.718 (0.718)	test_acc   0.61 (  0.61)	test_minacc   0.61 (  0.61)	test_majacc   0.52 (  0.52)	Loss_d 0.718 (0.718)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.02 (  0.02)
Test: [  1/  1]	Loss 0.718 (0.718)	test_acc   0.61 (  0.61)	test_minacc   0.61 (  0.61)	test_majacc   0.52 (  0.52)	Loss_d 0.718 (0.718)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.02 (  0.02)
Overall Timing[ 10/  1]	epoch_time 0.0401 (0.0464)	validation_time 0.0004 (0.0010)	train_time 0.0396 (0.0451)
record: (train_acc, test_acc) (0.7809000303149223, 0.43800002336502075)
last accs (train_acc, test_acc) (0.5307000160217286, 0.6050000190734863)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.09it/s] 19%|#9        | 5/26 [00:00<00:00, 21.38it/s] 35%|###4      | 9/26 [00:00<00:00, 27.33it/s] 50%|#####     | 13/26 [00:00<00:00, 30.48it/s] 65%|######5   | 17/26 [00:00<00:00, 32.14it/s] 81%|########  | 21/26 [00:00<00:00, 33.24it/s] 96%|#########6| 25/26 [00:00<00:00, 34.15it/s]100%|##########| 26/26 [00:00<00:00, 28.49it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 286 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 287 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 288 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 289 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 290 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 291 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 292 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 293 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 294 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 295 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 296 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 297 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 298 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 299 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 300 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 301 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 302 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 303 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 304 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 305 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 306 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 307 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 308 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 309 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 310 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 311 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [11][  26/  26]	Loss 0.001 (0.000)	train_nll   0.63 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm  22.45 ( 22.45)	train_acc   0.58 (  0.55)	train_minacc   0.77 (  0.72)	train_majacc   0.54 (  0.52)	train_corr   0.00 (  0.00)	l1 4.3287 (4.3633)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.46it/s] 27%|##6       | 7/26 [00:00<00:00, 31.75it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.75it/s] 46%|####6     | 12/26 [00:00<00:00, 36.82it/s] 65%|######5   | 17/26 [00:00<00:00, 40.88it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.88it/s] 85%|########4 | 22/26 [00:00<00:00, 42.75it/s]100%|##########| 26/26 [00:00<00:00, 36.39it/s]
Test: [   0/  26]	Loss 0.634 (0.634)	test_acc   0.56 (  0.56)	test_minacc   0.74 (  0.74)	test_majacc   0.53 (  0.53)	Loss_d 0.634 (0.634)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.53 (  0.53)	test_corr_d   0.22 (  0.22)
Test: [  10/  26]	Loss 0.651 (0.643)	test_acc   0.53 (  0.55)	test_minacc   0.67 (  0.68)	test_majacc   0.51 (  0.53)	Loss_d 0.651 (0.643)	test_acc_d   0.53 (  0.55)	test_minacc_d   0.67 (  0.68)	test_majacc_d   0.51 (  0.53)	test_corr_d   0.21 (  0.23)
Test: [  20/  26]	Loss 0.653 (0.644)	test_acc   0.58 (  0.56)	test_minacc   0.69 (  0.71)	test_majacc   0.56 (  0.53)	Loss_d 0.653 (0.644)	test_acc_d   0.58 (  0.56)	test_minacc_d   0.69 (  0.71)	test_majacc_d   0.56 (  0.53)	test_corr_d   0.24 (  0.23)
Test: [  26/  26]	Loss 0.642 (0.644)	test_acc   0.56 (  0.56)	test_minacc   0.77 (  0.71)	test_majacc   0.52 (  0.53)	Loss_d 0.642 (0.644)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.77 (  0.71)	test_majacc_d   0.52 (  0.53)	test_corr_d   0.21 (  0.22)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 54.22it/s]
Test: [  0/  1]	Loss 0.734 (0.734)	test_acc   0.59 (  0.59)	test_minacc   0.59 (  0.59)	test_majacc   0.60 (  0.60)	Loss_d 0.734 (0.734)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 0.734 (0.734)	test_acc   0.59 (  0.59)	test_minacc   0.59 (  0.59)	test_majacc   0.60 (  0.60)	Loss_d 0.734 (0.734)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.09 (  0.09)
Overall Timing[ 11/  1]	epoch_time 0.0404 (0.0459)	validation_time 0.0005 (0.0009)	train_time 0.0399 (0.0447)
record: (train_acc, test_acc) (0.7809000303149223, 0.43800002336502075)
last accs (train_acc, test_acc) (0.55790001308918, 0.5910000205039978)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.56it/s] 19%|#9        | 5/26 [00:00<00:01, 17.56it/s] 35%|###4      | 9/26 [00:00<00:00, 24.58it/s] 50%|#####     | 13/26 [00:00<00:00, 28.83it/s] 65%|######5   | 17/26 [00:00<00:00, 31.52it/s] 81%|########  | 21/26 [00:00<00:00, 32.04it/s] 96%|#########6| 25/26 [00:00<00:00, 32.71it/s]100%|##########| 26/26 [00:00<00:00, 26.37it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 312 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 313 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 314 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 315 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 316 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 317 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 318 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 319 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 320 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 321 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 322 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 323 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 324 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 325 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 326 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 327 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 328 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 329 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 330 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 331 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 332 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 333 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 334 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 335 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 336 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 337 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [12][  26/  26]	Loss 0.001 (0.001)	train_nll   0.61 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  22.45 ( 22.45)	train_acc   0.61 (  0.56)	train_minacc   0.74 (  0.71)	train_majacc   0.58 (  0.53)	train_corr   0.00 (  0.00)	l1 4.2601 (4.3115)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.17it/s] 27%|##6       | 7/26 [00:00<00:00, 32.69it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.69it/s] 46%|####6     | 12/26 [00:00<00:00, 38.43it/s] 65%|######5   | 17/26 [00:00<00:00, 40.91it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.91it/s] 85%|########4 | 22/26 [00:00<00:00, 39.81it/s]100%|##########| 26/26 [00:00<00:00, 36.46it/s]
Test: [   0/  26]	Loss 0.615 (0.615)	test_acc   0.59 (  0.59)	test_minacc   0.67 (  0.67)	test_majacc   0.58 (  0.58)	Loss_d 0.615 (0.615)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.58 (  0.58)	test_corr_d   0.31 (  0.31)
Test: [  10/  26]	Loss 0.631 (0.620)	test_acc   0.55 (  0.59)	test_minacc   0.61 (  0.66)	test_majacc   0.54 (  0.57)	Loss_d 0.631 (0.620)	test_acc_d   0.55 (  0.59)	test_minacc_d   0.61 (  0.66)	test_majacc_d   0.54 (  0.57)	test_corr_d   0.30 (  0.32)
Test: [  20/  26]	Loss 0.627 (0.621)	test_acc   0.61 (  0.59)	test_minacc   0.66 (  0.68)	test_majacc   0.60 (  0.58)	Loss_d 0.627 (0.621)	test_acc_d   0.61 (  0.59)	test_minacc_d   0.66 (  0.68)	test_majacc_d   0.60 (  0.58)	test_corr_d   0.33 (  0.31)
Test: [  26/  26]	Loss 0.620 (0.621)	test_acc   0.59 (  0.59)	test_minacc   0.74 (  0.69)	test_majacc   0.56 (  0.57)	Loss_d 0.620 (0.621)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.74 (  0.69)	test_majacc_d   0.56 (  0.57)	test_corr_d   0.31 (  0.31)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.88it/s]
Test: [  0/  1]	Loss 0.763 (0.763)	test_acc   0.57 (  0.57)	test_minacc   0.57 (  0.57)	test_majacc   0.64 (  0.64)	Loss_d 0.763 (0.763)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.17 (  0.17)
Test: [  1/  1]	Loss 0.763 (0.763)	test_acc   0.57 (  0.57)	test_minacc   0.57 (  0.57)	test_majacc   0.64 (  0.64)	Loss_d 0.763 (0.763)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.17 (  0.17)
Overall Timing[ 12/  1]	epoch_time 0.0416 (0.0456)	validation_time 0.0005 (0.0009)	train_time 0.0412 (0.0444)
record: (train_acc, test_acc) (0.7809000303149223, 0.43800002336502075)
last accs (train_acc, test_acc) (0.5908000040054321, 0.5730000138282776)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.94it/s] 15%|#5        | 4/26 [00:00<00:01, 14.66it/s] 31%|###       | 8/26 [00:00<00:00, 21.89it/s] 46%|####6     | 12/26 [00:00<00:00, 26.23it/s] 62%|######1   | 16/26 [00:00<00:00, 28.87it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.40it/s] 92%|#########2| 24/26 [00:00<00:00, 31.66it/s]100%|##########| 26/26 [00:01<00:00, 25.26it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 338 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 339 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 340 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 341 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 342 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 343 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 344 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 345 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 346 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 347 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 348 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 349 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 350 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 351 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 352 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 353 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 354 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 355 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 356 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 357 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 358 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 359 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 360 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 361 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 362 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 363 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [13][  26/  26]	Loss 0.001 (0.001)	train_nll   0.59 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  22.46 ( 22.45)	train_acc   0.65 (  0.57)	train_minacc   0.74 (  0.71)	train_majacc   0.63 (  0.55)	train_corr   0.00 (  0.00)	l1 4.1642 (4.2359)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.28it/s] 23%|##3       | 6/26 [00:00<00:00, 28.97it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.97it/s] 42%|####2     | 11/26 [00:00<00:00, 36.27it/s] 62%|######1   | 16/26 [00:00<00:00, 40.37it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.37it/s] 81%|########  | 21/26 [00:00<00:00, 40.39it/s]100%|##########| 26/26 [00:00<00:00, 43.07it/s]100%|##########| 26/26 [00:00<00:00, 35.62it/s]
Test: [   0/  26]	Loss 0.592 (0.592)	test_acc   0.61 (  0.61)	test_minacc   0.69 (  0.69)	test_majacc   0.59 (  0.59)	Loss_d 0.592 (0.592)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.40 (  0.40)
Test: [  10/  26]	Loss 0.607 (0.593)	test_acc   0.57 (  0.60)	test_minacc   0.57 (  0.64)	test_majacc   0.57 (  0.59)	Loss_d 0.607 (0.593)	test_acc_d   0.57 (  0.60)	test_minacc_d   0.57 (  0.64)	test_majacc_d   0.57 (  0.59)	test_corr_d   0.39 (  0.42)
Test: [  20/  26]	Loss 0.592 (0.592)	test_acc   0.63 (  0.61)	test_minacc   0.63 (  0.66)	test_majacc   0.63 (  0.60)	Loss_d 0.592 (0.592)	test_acc_d   0.63 (  0.61)	test_minacc_d   0.63 (  0.66)	test_majacc_d   0.63 (  0.60)	test_corr_d   0.42 (  0.41)
Test: [  26/  26]	Loss 0.595 (0.593)	test_acc   0.63 (  0.61)	test_minacc   0.72 (  0.66)	test_majacc   0.61 (  0.60)	Loss_d 0.595 (0.593)	test_acc_d   0.63 (  0.61)	test_minacc_d   0.72 (  0.66)	test_majacc_d   0.61 (  0.60)	test_corr_d   0.42 (  0.41)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.32it/s]
Test: [  0/  1]	Loss 0.808 (0.808)	test_acc   0.56 (  0.56)	test_minacc   0.55 (  0.55)	test_majacc   0.65 (  0.65)	Loss_d 0.808 (0.808)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.26 (  0.26)
Test: [  1/  1]	Loss 0.808 (0.808)	test_acc   0.56 (  0.56)	test_minacc   0.55 (  0.55)	test_majacc   0.65 (  0.65)	Loss_d 0.808 (0.808)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.26 (  0.26)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/169/checkpoints/model_best.pth
Overall Timing[ 13/  1]	epoch_time 0.0430 (0.0454)	validation_time 0.0004 (0.0009)	train_time 0.0425 (0.0443)
record: (train_acc, test_acc) (0.6089000070095062, 0.5600000023841858)
last accs (train_acc, test_acc) (0.6089000070095062, 0.5600000023841858)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.26it/s] 12%|#1        | 3/26 [00:00<00:01, 12.85it/s] 27%|##6       | 7/26 [00:00<00:00, 21.87it/s] 42%|####2     | 11/26 [00:00<00:00, 26.38it/s] 58%|#####7    | 15/26 [00:00<00:00, 29.25it/s] 73%|#######3  | 19/26 [00:00<00:00, 31.12it/s] 88%|########8 | 23/26 [00:00<00:00, 31.84it/s]100%|##########| 26/26 [00:00<00:00, 26.31it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 364 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 365 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 366 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 367 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 368 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 369 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 370 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 371 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 372 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 373 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 374 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 375 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 376 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 377 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 378 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 379 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 380 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 381 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 382 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 383 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 384 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 385 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 386 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 387 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 388 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 389 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [14][  26/  26]	Loss 0.001 (0.001)	train_nll   0.60 (  0.62)	train_penalty   0.00 (  0.00)	weight_norm  22.46 ( 22.46)	train_acc   0.71 (  0.64)	train_minacc   0.67 (  0.66)	train_majacc   0.72 (  0.63)	train_corr   0.00 (  0.00)	l1 3.9460 (4.0740)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.60it/s] 23%|##3       | 6/26 [00:00<00:01, 18.99it/s]                                               23%|##3       | 6/26 [00:00<00:01, 18.99it/s] 42%|####2     | 11/26 [00:00<00:00, 27.57it/s] 62%|######1   | 16/26 [00:00<00:00, 33.25it/s]                                                62%|######1   | 16/26 [00:00<00:00, 33.25it/s] 81%|########  | 21/26 [00:00<00:00, 36.90it/s]100%|##########| 26/26 [00:00<00:00, 40.46it/s]100%|##########| 26/26 [00:00<00:00, 29.15it/s]
Test: [   0/  26]	Loss 0.612 (0.612)	test_acc   0.74 (  0.74)	test_minacc   0.62 (  0.62)	test_majacc   0.77 (  0.77)	Loss_d 0.612 (0.612)	test_acc_d   0.74 (  0.74)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.30 (  0.30)
Test: [  10/  26]	Loss 0.638 (0.611)	test_acc   0.71 (  0.72)	test_minacc   0.57 (  0.61)	test_majacc   0.73 (  0.74)	Loss_d 0.638 (0.611)	test_acc_d   0.71 (  0.72)	test_minacc_d   0.57 (  0.61)	test_majacc_d   0.73 (  0.74)	test_corr_d   0.31 (  0.32)
Test: [  20/  26]	Loss 0.626 (0.613)	test_acc   0.71 (  0.72)	test_minacc   0.66 (  0.63)	test_majacc   0.71 (  0.73)	Loss_d 0.626 (0.613)	test_acc_d   0.71 (  0.72)	test_minacc_d   0.66 (  0.63)	test_majacc_d   0.71 (  0.73)	test_corr_d   0.34 (  0.32)
Test: [  26/  26]	Loss 0.616 (0.614)	test_acc   0.70 (  0.72)	test_minacc   0.69 (  0.63)	test_majacc   0.70 (  0.73)	Loss_d 0.616 (0.614)	test_acc_d   0.70 (  0.72)	test_minacc_d   0.69 (  0.63)	test_majacc_d   0.70 (  0.73)	test_corr_d   0.29 (  0.31)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.52it/s]
Test: [  0/  1]	Loss 0.752 (0.752)	test_acc   0.38 (  0.38)	test_minacc   0.33 (  0.33)	test_majacc   0.87 (  0.87)	Loss_d 0.752 (0.752)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 0.752 (0.752)	test_acc   0.38 (  0.38)	test_minacc   0.33 (  0.33)	test_majacc   0.87 (  0.87)	Loss_d 0.752 (0.752)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.13 (  0.13)
Overall Timing[ 14/  1]	epoch_time 0.0410 (0.0451)	validation_time 0.0005 (0.0008)	train_time 0.0405 (0.0440)
record: (train_acc, test_acc) (0.6089000070095062, 0.5600000023841858)
last accs (train_acc, test_acc) (0.7184000335931778, 0.3840000033378601)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.33it/s] 19%|#9        | 5/26 [00:00<00:00, 22.41it/s] 35%|###4      | 9/26 [00:00<00:00, 27.38it/s] 50%|#####     | 13/26 [00:00<00:00, 29.88it/s] 65%|######5   | 17/26 [00:00<00:00, 31.65it/s] 81%|########  | 21/26 [00:00<00:00, 32.74it/s] 96%|#########6| 25/26 [00:00<00:00, 33.73it/s]100%|##########| 26/26 [00:00<00:00, 28.47it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 390 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 391 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 392 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 393 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 394 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 395 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 396 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 397 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 398 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 399 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 400 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 401 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 402 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 403 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 404 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 405 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 406 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 407 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 408 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 409 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 410 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 411 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 412 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 413 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 414 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 415 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [15][  26/  26]	Loss 0.001 (0.001)	train_nll   0.60 (  0.62)	train_penalty   0.00 (  0.00)	weight_norm  22.46 ( 22.46)	train_acc   0.62 (  0.63)	train_minacc   0.72 (  0.68)	train_majacc   0.60 (  0.62)	train_corr   0.00 (  0.00)	l1 3.9748 (4.0010)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.75it/s] 23%|##3       | 6/26 [00:00<00:00, 32.75it/s]                                               23%|##3       | 6/26 [00:00<00:00, 32.75it/s] 42%|####2     | 11/26 [00:00<00:00, 38.67it/s] 62%|######1   | 16/26 [00:00<00:00, 39.10it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.10it/s] 81%|########  | 21/26 [00:00<00:00, 40.23it/s]100%|##########| 26/26 [00:00<00:00, 42.51it/s]100%|##########| 26/26 [00:00<00:00, 35.44it/s]
Test: [   0/  26]	Loss 0.595 (0.595)	test_acc   0.62 (  0.62)	test_minacc   0.67 (  0.67)	test_majacc   0.61 (  0.61)	Loss_d 0.595 (0.595)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.61 (  0.61)	test_corr_d   0.36 (  0.36)
Test: [  10/  26]	Loss 0.613 (0.590)	test_acc   0.59 (  0.61)	test_minacc   0.65 (  0.67)	test_majacc   0.58 (  0.60)	Loss_d 0.613 (0.590)	test_acc_d   0.59 (  0.61)	test_minacc_d   0.65 (  0.67)	test_majacc_d   0.58 (  0.60)	test_corr_d   0.37 (  0.39)
Test: [  20/  26]	Loss 0.591 (0.591)	test_acc   0.62 (  0.62)	test_minacc   0.66 (  0.68)	test_majacc   0.62 (  0.60)	Loss_d 0.591 (0.591)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.66 (  0.68)	test_majacc_d   0.62 (  0.60)	test_corr_d   0.40 (  0.39)
Test: [  26/  26]	Loss 0.598 (0.592)	test_acc   0.62 (  0.62)	test_minacc   0.72 (  0.69)	test_majacc   0.61 (  0.60)	Loss_d 0.598 (0.592)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.72 (  0.69)	test_majacc_d   0.61 (  0.60)	test_corr_d   0.39 (  0.39)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.09it/s]
Test: [  0/  1]	Loss 0.798 (0.798)	test_acc   0.57 (  0.57)	test_minacc   0.56 (  0.56)	test_majacc   0.64 (  0.64)	Loss_d 0.798 (0.798)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.21 (  0.21)
Test: [  1/  1]	Loss 0.798 (0.798)	test_acc   0.57 (  0.57)	test_minacc   0.56 (  0.56)	test_majacc   0.64 (  0.64)	Loss_d 0.798 (0.798)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.21 (  0.21)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/169/checkpoints/model_best.pth
Overall Timing[ 15/  1]	epoch_time 0.0405 (0.0448)	validation_time 0.0003 (0.0008)	train_time 0.0401 (0.0438)
record: (train_acc, test_acc) (0.6168000086545944, 0.5680000185966492)
last accs (train_acc, test_acc) (0.6168000086545944, 0.5680000185966492)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.00it/s] 23%|##3       | 6/26 [00:00<00:00, 28.18it/s] 38%|###8      | 10/26 [00:00<00:00, 31.70it/s] 54%|#####3    | 14/26 [00:00<00:00, 33.11it/s] 69%|######9   | 18/26 [00:00<00:00, 34.07it/s] 85%|########4 | 22/26 [00:00<00:00, 34.86it/s]100%|##########| 26/26 [00:00<00:00, 35.09it/s]100%|##########| 26/26 [00:00<00:00, 30.79it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 416 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 417 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 418 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 419 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 420 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 421 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 422 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 423 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 424 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 425 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 426 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 427 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 428 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 429 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 430 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 431 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 432 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 433 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 434 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 435 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 436 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 437 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 438 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 439 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 440 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 441 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [16][  26/  26]	Loss 0.000 (0.001)	train_nll   0.61 (  0.62)	train_penalty   0.00 (  0.00)	weight_norm  22.47 ( 22.46)	train_acc   0.59 (  0.59)	train_minacc   0.72 (  0.71)	train_majacc   0.56 (  0.57)	train_corr   0.00 (  0.00)	l1 3.7916 (3.9018)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02,  8.96it/s] 27%|##6       | 7/26 [00:00<00:00, 24.79it/s]                                               27%|##6       | 7/26 [00:00<00:00, 24.79it/s] 50%|#####     | 13/26 [00:00<00:00, 36.05it/s] 69%|######9   | 18/26 [00:00<00:00, 40.59it/s]                                                69%|######9   | 18/26 [00:00<00:00, 40.59it/s] 92%|#########2| 24/26 [00:00<00:00, 45.27it/s]100%|##########| 26/26 [00:00<00:00, 34.95it/s]
Test: [   0/  26]	Loss 0.602 (0.602)	test_acc   0.60 (  0.60)	test_minacc   0.70 (  0.70)	test_majacc   0.58 (  0.58)	Loss_d 0.602 (0.602)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.58 (  0.58)	test_corr_d   0.38 (  0.38)
Test: [  10/  26]	Loss 0.613 (0.597)	test_acc   0.58 (  0.59)	test_minacc   0.57 (  0.65)	test_majacc   0.59 (  0.58)	Loss_d 0.613 (0.597)	test_acc_d   0.58 (  0.59)	test_minacc_d   0.57 (  0.65)	test_majacc_d   0.59 (  0.58)	test_corr_d   0.38 (  0.40)
Test: [  20/  26]	Loss 0.590 (0.598)	test_acc   0.63 (  0.60)	test_minacc   0.68 (  0.66)	test_majacc   0.62 (  0.59)	Loss_d 0.590 (0.598)	test_acc_d   0.63 (  0.60)	test_minacc_d   0.68 (  0.66)	test_majacc_d   0.62 (  0.59)	test_corr_d   0.41 (  0.40)
Test: [  26/  26]	Loss 0.606 (0.598)	test_acc   0.58 (  0.60)	test_minacc   0.67 (  0.66)	test_majacc   0.57 (  0.58)	Loss_d 0.606 (0.598)	test_acc_d   0.58 (  0.60)	test_minacc_d   0.67 (  0.66)	test_majacc_d   0.57 (  0.58)	test_corr_d   0.41 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.24it/s]
Test: [  0/  1]	Loss 0.809 (0.809)	test_acc   0.57 (  0.57)	test_minacc   0.57 (  0.57)	test_majacc   0.58 (  0.58)	Loss_d 0.809 (0.809)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.58 (  0.58)	test_corr_d   0.24 (  0.24)
Test: [  1/  1]	Loss 0.809 (0.809)	test_acc   0.57 (  0.57)	test_minacc   0.57 (  0.57)	test_majacc   0.58 (  0.58)	Loss_d 0.809 (0.809)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.58 (  0.58)	test_corr_d   0.24 (  0.24)
Overall Timing[ 16/  1]	epoch_time 0.0397 (0.0445)	validation_time 0.0005 (0.0008)	train_time 0.0392 (0.0435)
record: (train_acc, test_acc) (0.6168000086545944, 0.5680000185966492)
last accs (train_acc, test_acc) (0.5964000084400177, 0.5700000524520874)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.19it/s] 19%|#9        | 5/26 [00:00<00:00, 22.52it/s] 35%|###4      | 9/26 [00:00<00:00, 27.21it/s] 50%|#####     | 13/26 [00:00<00:00, 28.80it/s] 65%|######5   | 17/26 [00:00<00:00, 30.51it/s] 81%|########  | 21/26 [00:00<00:00, 31.68it/s] 96%|#########6| 25/26 [00:00<00:00, 32.63it/s]100%|##########| 26/26 [00:00<00:00, 27.61it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 442 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 443 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 444 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 445 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 446 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 447 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 448 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 449 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 450 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 451 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 452 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 453 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 454 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 455 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 456 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 457 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 458 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 459 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 460 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 461 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 462 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 463 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 464 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 465 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 466 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 467 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [17][  26/  26]	Loss 0.001 (0.001)	train_nll   0.61 (  0.62)	train_penalty   0.00 (  0.00)	weight_norm  22.47 ( 22.47)	train_acc   0.64 (  0.60)	train_minacc   0.79 (  0.71)	train_majacc   0.61 (  0.58)	train_corr   0.00 (  0.00)	l1 3.5737 (3.7145)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.50it/s] 12%|#1        | 3/26 [00:00<00:01, 14.00it/s] 31%|###       | 8/26 [00:00<00:00, 27.21it/s]                                               31%|###       | 8/26 [00:00<00:00, 27.21it/s] 50%|#####     | 13/26 [00:00<00:00, 34.56it/s] 69%|######9   | 18/26 [00:00<00:00, 39.20it/s]                                                69%|######9   | 18/26 [00:00<00:00, 39.20it/s] 88%|########8 | 23/26 [00:00<00:00, 38.43it/s]100%|##########| 26/26 [00:00<00:00, 32.72it/s]
Test: [   0/  26]	Loss 0.620 (0.620)	test_acc   0.66 (  0.66)	test_minacc   0.70 (  0.70)	test_majacc   0.65 (  0.65)	Loss_d 0.620 (0.620)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.26 (  0.26)
Test: [  10/  26]	Loss 0.642 (0.615)	test_acc   0.64 (  0.67)	test_minacc   0.63 (  0.70)	test_majacc   0.64 (  0.66)	Loss_d 0.642 (0.615)	test_acc_d   0.64 (  0.67)	test_minacc_d   0.63 (  0.70)	test_majacc_d   0.64 (  0.66)	test_corr_d   0.28 (  0.29)
Test: [  20/  26]	Loss 0.622 (0.617)	test_acc   0.65 (  0.66)	test_minacc   0.71 (  0.71)	test_majacc   0.64 (  0.65)	Loss_d 0.622 (0.617)	test_acc_d   0.65 (  0.66)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.64 (  0.65)	test_corr_d   0.32 (  0.29)
Test: [  26/  26]	Loss 0.619 (0.618)	test_acc   0.64 (  0.66)	test_minacc   0.79 (  0.72)	test_majacc   0.61 (  0.65)	Loss_d 0.619 (0.618)	test_acc_d   0.64 (  0.66)	test_minacc_d   0.79 (  0.72)	test_majacc_d   0.61 (  0.65)	test_corr_d   0.27 (  0.28)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.41it/s]
Test: [  0/  1]	Loss 0.734 (0.734)	test_acc   0.46 (  0.46)	test_minacc   0.43 (  0.43)	test_majacc   0.77 (  0.77)	Loss_d 0.734 (0.734)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.07 (  0.07)
Test: [  1/  1]	Loss 0.734 (0.734)	test_acc   0.46 (  0.46)	test_minacc   0.43 (  0.43)	test_majacc   0.77 (  0.77)	Loss_d 0.734 (0.734)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.07 (  0.07)
Overall Timing[ 17/  1]	epoch_time 0.0439 (0.0445)	validation_time 0.0004 (0.0008)	train_time 0.0435 (0.0435)
record: (train_acc, test_acc) (0.6168000086545944, 0.5680000185966492)
last accs (train_acc, test_acc) (0.6602000264525414, 0.4610000252723694)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.53it/s] 19%|#9        | 5/26 [00:00<00:00, 21.78it/s] 35%|###4      | 9/26 [00:00<00:00, 28.09it/s] 50%|#####     | 13/26 [00:00<00:00, 30.89it/s] 65%|######5   | 17/26 [00:00<00:00, 32.59it/s] 81%|########  | 21/26 [00:00<00:00, 33.37it/s] 96%|#########6| 25/26 [00:00<00:00, 33.54it/s]100%|##########| 26/26 [00:00<00:00, 29.33it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 468 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 469 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 470 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 471 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 472 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 473 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 474 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 475 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 476 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 477 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 478 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 479 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 480 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 481 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 482 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 483 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 484 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 485 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 486 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 487 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 488 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 489 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 490 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 491 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 492 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 493 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [18][  26/  26]	Loss 0.000 (0.000)	train_nll   0.61 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm  22.47 ( 22.47)	train_acc   0.61 (  0.64)	train_minacc   0.72 (  0.69)	train_majacc   0.59 (  0.63)	train_corr   0.00 (  0.00)	l1 3.6331 (3.6086)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.19it/s] 23%|##3       | 6/26 [00:00<00:00, 32.14it/s]                                               23%|##3       | 6/26 [00:00<00:00, 32.14it/s] 42%|####2     | 11/26 [00:00<00:00, 38.21it/s] 62%|######1   | 16/26 [00:00<00:00, 42.03it/s]                                                62%|######1   | 16/26 [00:00<00:00, 42.03it/s] 81%|########  | 21/26 [00:00<00:00, 40.60it/s]100%|##########| 26/26 [00:00<00:00, 36.71it/s]
Test: [   0/  26]	Loss 0.603 (0.603)	test_acc   0.61 (  0.61)	test_minacc   0.67 (  0.67)	test_majacc   0.59 (  0.59)	Loss_d 0.603 (0.603)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.36 (  0.36)
Test: [  10/  26]	Loss 0.615 (0.595)	test_acc   0.58 (  0.60)	test_minacc   0.57 (  0.65)	test_majacc   0.58 (  0.60)	Loss_d 0.615 (0.595)	test_acc_d   0.58 (  0.60)	test_minacc_d   0.57 (  0.65)	test_majacc_d   0.58 (  0.60)	test_corr_d   0.38 (  0.39)
Test: [  20/  26]	Loss 0.590 (0.597)	test_acc   0.63 (  0.61)	test_minacc   0.68 (  0.66)	test_majacc   0.63 (  0.60)	Loss_d 0.590 (0.597)	test_acc_d   0.63 (  0.61)	test_minacc_d   0.68 (  0.66)	test_majacc_d   0.63 (  0.60)	test_corr_d   0.41 (  0.39)
Test: [  26/  26]	Loss 0.606 (0.597)	test_acc   0.62 (  0.61)	test_minacc   0.72 (  0.66)	test_majacc   0.60 (  0.60)	Loss_d 0.606 (0.597)	test_acc_d   0.62 (  0.61)	test_minacc_d   0.72 (  0.66)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.39 (  0.39)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.16it/s]
Test: [  0/  1]	Loss 0.804 (0.804)	test_acc   0.55 (  0.55)	test_minacc   0.55 (  0.55)	test_majacc   0.63 (  0.63)	Loss_d 0.804 (0.804)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.22 (  0.22)
Test: [  1/  1]	Loss 0.804 (0.804)	test_acc   0.55 (  0.55)	test_minacc   0.55 (  0.55)	test_majacc   0.63 (  0.63)	Loss_d 0.804 (0.804)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.22 (  0.22)
Overall Timing[ 18/  1]	epoch_time 0.0423 (0.0444)	validation_time 0.0004 (0.0007)	train_time 0.0419 (0.0434)
record: (train_acc, test_acc) (0.6168000086545944, 0.5680000185966492)
last accs (train_acc, test_acc) (0.6075000114440918, 0.5540000200271606)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.75it/s] 19%|#9        | 5/26 [00:00<00:00, 23.50it/s] 35%|###4      | 9/26 [00:00<00:00, 28.04it/s] 50%|#####     | 13/26 [00:00<00:00, 30.66it/s] 65%|######5   | 17/26 [00:00<00:00, 31.69it/s] 81%|########  | 21/26 [00:00<00:00, 32.86it/s] 96%|#########6| 25/26 [00:00<00:00, 33.67it/s]100%|##########| 26/26 [00:00<00:00, 28.87it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 494 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 495 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 496 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 497 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 498 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 499 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 500 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 501 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 502 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 503 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 504 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 505 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 506 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 507 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 508 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 509 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 510 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 511 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 512 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 513 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 514 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 515 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 516 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 517 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 518 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 519 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [19][  26/  26]	Loss 0.002 (0.001)	train_nll   0.60 (  0.62)	train_penalty   0.00 (  0.00)	weight_norm  22.47 ( 22.47)	train_acc   0.64 (  0.61)	train_minacc   0.77 (  0.69)	train_majacc   0.61 (  0.59)	train_corr   0.00 (  0.00)	l1 3.4515 (3.5801)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.39it/s] 23%|##3       | 6/26 [00:00<00:00, 30.22it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.22it/s] 42%|####2     | 11/26 [00:00<00:00, 37.43it/s] 62%|######1   | 16/26 [00:00<00:00, 40.51it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.51it/s] 81%|########  | 21/26 [00:00<00:00, 38.32it/s]100%|##########| 26/26 [00:00<00:00, 41.51it/s]100%|##########| 26/26 [00:00<00:00, 34.62it/s]
Test: [   0/  26]	Loss 0.604 (0.604)	test_acc   0.61 (  0.61)	test_minacc   0.67 (  0.67)	test_majacc   0.60 (  0.60)	Loss_d 0.604 (0.604)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.33 (  0.33)
Test: [  10/  26]	Loss 0.620 (0.599)	test_acc   0.62 (  0.62)	test_minacc   0.63 (  0.68)	test_majacc   0.62 (  0.61)	Loss_d 0.620 (0.599)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.63 (  0.68)	test_majacc_d   0.62 (  0.61)	test_corr_d   0.34 (  0.36)
Test: [  20/  26]	Loss 0.597 (0.600)	test_acc   0.64 (  0.62)	test_minacc   0.71 (  0.70)	test_majacc   0.62 (  0.61)	Loss_d 0.597 (0.600)	test_acc_d   0.64 (  0.62)	test_minacc_d   0.71 (  0.70)	test_majacc_d   0.62 (  0.61)	test_corr_d   0.38 (  0.36)
Test: [  26/  26]	Loss 0.609 (0.601)	test_acc   0.62 (  0.62)	test_minacc   0.77 (  0.70)	test_majacc   0.59 (  0.61)	Loss_d 0.609 (0.601)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.77 (  0.70)	test_majacc_d   0.59 (  0.61)	test_corr_d   0.36 (  0.36)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.67it/s]
Test: [  0/  1]	Loss 0.758 (0.758)	test_acc   0.56 (  0.56)	test_minacc   0.55 (  0.55)	test_majacc   0.65 (  0.65)	Loss_d 0.758 (0.758)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.17 (  0.17)
Test: [  1/  1]	Loss 0.758 (0.758)	test_acc   0.56 (  0.56)	test_minacc   0.55 (  0.55)	test_majacc   0.65 (  0.65)	Loss_d 0.758 (0.758)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.17 (  0.17)
Overall Timing[ 19/  1]	epoch_time 0.0432 (0.0443)	validation_time 0.0003 (0.0007)	train_time 0.0428 (0.0434)
record: (train_acc, test_acc) (0.6168000086545944, 0.5680000185966492)
last accs (train_acc, test_acc) (0.623200009226799, 0.5570000410079956)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.68it/s] 19%|#9        | 5/26 [00:00<00:00, 25.19it/s] 35%|###4      | 9/26 [00:00<00:00, 29.70it/s] 50%|#####     | 13/26 [00:00<00:00, 32.30it/s] 65%|######5   | 17/26 [00:00<00:00, 33.70it/s] 81%|########  | 21/26 [00:00<00:00, 34.46it/s] 96%|#########6| 25/26 [00:00<00:00, 34.61it/s]100%|##########| 26/26 [00:00<00:00, 29.79it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 520 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 521 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 522 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 523 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 524 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 525 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 526 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 527 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 528 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 529 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 530 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 531 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 532 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 533 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 534 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 535 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 536 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 537 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 538 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 539 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 540 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 541 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 542 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 543 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 544 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 545 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [20][  26/  26]	Loss 0.000 (0.001)	train_nll   0.62 (  0.62)	train_penalty   0.00 (  0.00)	weight_norm  22.48 ( 22.48)	train_acc   0.56 (  0.58)	train_minacc   0.67 (  0.68)	train_majacc   0.55 (  0.56)	train_corr   0.00 (  0.00)	l1 3.4647 (3.5273)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.62it/s] 27%|##6       | 7/26 [00:00<00:00, 30.19it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.19it/s] 46%|####6     | 12/26 [00:00<00:00, 36.58it/s] 65%|######5   | 17/26 [00:00<00:00, 38.00it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.00it/s] 85%|########4 | 22/26 [00:00<00:00, 40.53it/s]100%|##########| 26/26 [00:00<00:00, 34.28it/s]
Test: [   0/  26]	Loss 0.616 (0.616)	test_acc   0.58 (  0.58)	test_minacc   0.70 (  0.70)	test_majacc   0.56 (  0.56)	Loss_d 0.616 (0.616)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.56 (  0.56)	test_corr_d   0.33 (  0.33)
Test: [  10/  26]	Loss 0.623 (0.605)	test_acc   0.57 (  0.59)	test_minacc   0.56 (  0.67)	test_majacc   0.58 (  0.57)	Loss_d 0.623 (0.605)	test_acc_d   0.57 (  0.59)	test_minacc_d   0.56 (  0.67)	test_majacc_d   0.58 (  0.57)	test_corr_d   0.35 (  0.37)
Test: [  20/  26]	Loss 0.588 (0.605)	test_acc   0.62 (  0.59)	test_minacc   0.71 (  0.68)	test_majacc   0.60 (  0.58)	Loss_d 0.588 (0.605)	test_acc_d   0.62 (  0.59)	test_minacc_d   0.71 (  0.68)	test_majacc_d   0.60 (  0.58)	test_corr_d   0.38 (  0.36)
Test: [  26/  26]	Loss 0.618 (0.605)	test_acc   0.58 (  0.59)	test_minacc   0.67 (  0.68)	test_majacc   0.56 (  0.58)	Loss_d 0.618 (0.605)	test_acc_d   0.58 (  0.59)	test_minacc_d   0.67 (  0.68)	test_majacc_d   0.56 (  0.58)	test_corr_d   0.39 (  0.36)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.15it/s]
Test: [  0/  1]	Loss 0.799 (0.799)	test_acc   0.59 (  0.59)	test_minacc   0.59 (  0.59)	test_majacc   0.58 (  0.58)	Loss_d 0.799 (0.799)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.58 (  0.58)	test_corr_d   0.17 (  0.17)
Test: [  1/  1]	Loss 0.799 (0.799)	test_acc   0.59 (  0.59)	test_minacc   0.59 (  0.59)	test_majacc   0.58 (  0.58)	Loss_d 0.799 (0.799)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.58 (  0.58)	test_corr_d   0.17 (  0.17)
Overall Timing[ 20/  1]	epoch_time 0.0445 (0.0443)	validation_time 0.0004 (0.0007)	train_time 0.0441 (0.0434)
record: (train_acc, test_acc) (0.6168000086545944, 0.5680000185966492)
last accs (train_acc, test_acc) (0.5910000129938126, 0.5860000252723694)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.10it/s] 15%|#5        | 4/26 [00:00<00:01, 15.95it/s] 31%|###       | 8/26 [00:00<00:00, 23.10it/s] 46%|####6     | 12/26 [00:00<00:00, 26.89it/s] 62%|######1   | 16/26 [00:00<00:00, 29.94it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.04it/s] 92%|#########2| 24/26 [00:00<00:00, 33.41it/s]100%|##########| 26/26 [00:00<00:00, 27.15it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 546 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 547 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 548 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 549 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 550 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 551 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 552 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 553 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 554 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 555 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 556 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 557 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 558 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 559 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 560 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 561 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 562 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 563 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 564 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 565 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 566 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 567 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 568 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 569 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 570 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 571 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [21][  26/  26]	Loss 0.000 (0.001)	train_nll   0.65 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm  22.48 ( 22.48)	train_acc   0.57 (  0.59)	train_minacc   0.72 (  0.72)	train_majacc   0.54 (  0.56)	train_corr   0.00 (  0.00)	l1 3.3256 (3.3687)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.09it/s] 27%|##6       | 7/26 [00:00<00:00, 33.31it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.31it/s] 46%|####6     | 12/26 [00:00<00:00, 39.73it/s] 65%|######5   | 17/26 [00:00<00:00, 42.34it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.34it/s] 85%|########4 | 22/26 [00:00<00:00, 40.25it/s]100%|##########| 26/26 [00:00<00:00, 37.00it/s]
Test: [   0/  26]	Loss 0.648 (0.648)	test_acc   0.55 (  0.55)	test_minacc   0.66 (  0.66)	test_majacc   0.53 (  0.53)	Loss_d 0.648 (0.648)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.53 (  0.53)	test_corr_d   0.21 (  0.21)
Test: [  10/  26]	Loss 0.653 (0.636)	test_acc   0.56 (  0.56)	test_minacc   0.59 (  0.67)	test_majacc   0.56 (  0.54)	Loss_d 0.653 (0.636)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.59 (  0.67)	test_majacc_d   0.56 (  0.54)	test_corr_d   0.23 (  0.24)
Test: [  20/  26]	Loss 0.625 (0.638)	test_acc   0.59 (  0.57)	test_minacc   0.75 (  0.69)	test_majacc   0.57 (  0.54)	Loss_d 0.625 (0.638)	test_acc_d   0.59 (  0.57)	test_minacc_d   0.75 (  0.69)	test_majacc_d   0.57 (  0.54)	test_corr_d   0.26 (  0.24)
Test: [  26/  26]	Loss 0.645 (0.639)	test_acc   0.57 (  0.57)	test_minacc   0.72 (  0.69)	test_majacc   0.54 (  0.54)	Loss_d 0.645 (0.639)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.72 (  0.69)	test_majacc_d   0.54 (  0.54)	test_corr_d   0.25 (  0.24)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.96it/s]
Test: [  0/  1]	Loss 0.739 (0.739)	test_acc   0.60 (  0.60)	test_minacc   0.61 (  0.61)	test_majacc   0.53 (  0.53)	Loss_d 0.739 (0.739)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.53 (  0.53)	test_corr_d   0.05 (  0.05)
Test: [  1/  1]	Loss 0.739 (0.739)	test_acc   0.60 (  0.60)	test_minacc   0.61 (  0.61)	test_majacc   0.53 (  0.53)	Loss_d 0.739 (0.739)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.53 (  0.53)	test_corr_d   0.05 (  0.05)
Overall Timing[ 21/  1]	epoch_time 0.0408 (0.0442)	validation_time 0.0004 (0.0007)	train_time 0.0404 (0.0433)
record: (train_acc, test_acc) (0.6168000086545944, 0.5680000185966492)
last accs (train_acc, test_acc) (0.5658000117540359, 0.5980000495910645)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.45it/s] 12%|#1        | 3/26 [00:00<00:02,  8.39it/s] 27%|##6       | 7/26 [00:00<00:01, 16.98it/s] 42%|####2     | 11/26 [00:00<00:00, 22.91it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.47it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.39it/s] 88%|########8 | 23/26 [00:00<00:00, 31.00it/s]100%|##########| 26/26 [00:01<00:00, 23.07it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 572 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 573 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 574 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 575 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 576 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 577 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 578 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 579 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 580 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 581 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 582 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 583 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 584 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 585 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 586 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 587 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 588 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 589 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 590 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 591 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 592 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 593 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 594 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 595 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 596 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 597 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [22][  26/  26]	Loss 0.000 (0.000)	train_nll   0.67 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm  22.48 ( 22.48)	train_acc   0.54 (  0.56)	train_minacc   0.69 (  0.66)	train_majacc   0.52 (  0.54)	train_corr   0.00 (  0.00)	l1 3.2312 (3.2533)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.14it/s] 23%|##3       | 6/26 [00:00<00:00, 28.08it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.08it/s] 42%|####2     | 11/26 [00:00<00:00, 35.24it/s] 62%|######1   | 16/26 [00:00<00:00, 40.05it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.05it/s] 81%|########  | 21/26 [00:00<00:00, 39.69it/s]100%|##########| 26/26 [00:00<00:00, 35.43it/s]
Test: [   0/  26]	Loss 0.660 (0.660)	test_acc   0.54 (  0.54)	test_minacc   0.70 (  0.70)	test_majacc   0.50 (  0.50)	Loss_d 0.660 (0.660)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.19 (  0.19)
Test: [  10/  26]	Loss 0.663 (0.652)	test_acc   0.54 (  0.54)	test_minacc   0.61 (  0.67)	test_majacc   0.53 (  0.52)	Loss_d 0.663 (0.652)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.61 (  0.67)	test_majacc_d   0.53 (  0.52)	test_corr_d   0.20 (  0.21)
Test: [  20/  26]	Loss 0.642 (0.654)	test_acc   0.58 (  0.54)	test_minacc   0.71 (  0.67)	test_majacc   0.55 (  0.52)	Loss_d 0.642 (0.654)	test_acc_d   0.58 (  0.54)	test_minacc_d   0.71 (  0.67)	test_majacc_d   0.55 (  0.52)	test_corr_d   0.23 (  0.21)
Test: [  26/  26]	Loss 0.663 (0.654)	test_acc   0.54 (  0.54)	test_minacc   0.69 (  0.67)	test_majacc   0.52 (  0.52)	Loss_d 0.663 (0.654)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.69 (  0.67)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.22 (  0.21)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.42it/s]
Test: [  0/  1]	Loss 0.732 (0.732)	test_acc   0.59 (  0.59)	test_minacc   0.60 (  0.60)	test_majacc   0.52 (  0.52)	Loss_d 0.732 (0.732)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.05 (  0.05)
Test: [  1/  1]	Loss 0.732 (0.732)	test_acc   0.59 (  0.59)	test_minacc   0.60 (  0.60)	test_majacc   0.52 (  0.52)	Loss_d 0.732 (0.732)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.05 (  0.05)
Overall Timing[ 22/  1]	epoch_time 0.0478 (0.0443)	validation_time 0.0004 (0.0007)	train_time 0.0473 (0.0435)
record: (train_acc, test_acc) (0.6168000086545944, 0.5680000185966492)
last accs (train_acc, test_acc) (0.5437000098228455, 0.593000054359436)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 23.92it/s] 27%|##6       | 7/26 [00:00<00:00, 29.01it/s] 38%|###8      | 10/26 [00:00<00:00, 27.09it/s] 50%|#####     | 13/26 [00:00<00:00, 28.07it/s] 65%|######5   | 17/26 [00:00<00:00, 29.05it/s] 81%|########  | 21/26 [00:00<00:00, 30.43it/s] 96%|#########6| 25/26 [00:00<00:00, 31.32it/s]100%|##########| 26/26 [00:00<00:00, 28.15it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 598 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 599 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 600 200
penalty weights 10000.0
l1 at pgd_anneal_iters 3.1928553581237793
set z to 3.1609268045425414
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 601 200
penalty weights 10000.0
args.step pgd_anneal_iters 601 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 602 200
penalty weights 10000.0
args.step pgd_anneal_iters 602 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 603 200
penalty weights 10000.0
args.step pgd_anneal_iters 603 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 604 200
penalty weights 10000.0
args.step pgd_anneal_iters 604 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 605 200
penalty weights 10000.0
args.step pgd_anneal_iters 605 600
dim_v 512
rho, theta 394 tensor(-0.0052, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 606 200
penalty weights 10000.0
args.step pgd_anneal_iters 606 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 607 200
penalty weights 10000.0
args.step pgd_anneal_iters 607 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 608 200
penalty weights 10000.0
args.step pgd_anneal_iters 608 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 609 200
penalty weights 10000.0
args.step pgd_anneal_iters 609 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 610 200
penalty weights 10000.0
args.step pgd_anneal_iters 610 600
dim_v 512
rho, theta 238 tensor(-0.0007, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 611 200
penalty weights 10000.0
args.step pgd_anneal_iters 611 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 612 200
penalty weights 10000.0
args.step pgd_anneal_iters 612 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 613 200
penalty weights 10000.0
args.step pgd_anneal_iters 613 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 614 200
penalty weights 10000.0
args.step pgd_anneal_iters 614 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 615 200
penalty weights 10000.0
args.step pgd_anneal_iters 615 600
dim_v 512
rho, theta 205 tensor(0.0123, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 616 200
penalty weights 10000.0
args.step pgd_anneal_iters 616 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 617 200
penalty weights 10000.0
args.step pgd_anneal_iters 617 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 618 200
penalty weights 10000.0
args.step pgd_anneal_iters 618 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 619 200
penalty weights 10000.0
args.step pgd_anneal_iters 619 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 620 200
penalty weights 10000.0
args.step pgd_anneal_iters 620 600
dim_v 512
rho, theta 183 tensor(0.0069, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 621 200
penalty weights 10000.0
args.step pgd_anneal_iters 621 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 622 200
penalty weights 10000.0
args.step pgd_anneal_iters 622 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 623 200
penalty weights 10000.0
args.step pgd_anneal_iters 623 600
final projection at end of training
dim_v 512
rho, theta 179 tensor(0.0024, device='cuda:0')
Epoch: [23][  26/  26]	Loss 0.004 (0.036)	train_nll   0.56 (  0.62)	train_penalty   0.00 (  0.04)	weight_norm  23.28 ( 22.72)	train_acc   0.71 (  0.64)	train_minacc   0.28 (  0.51)	train_majacc   0.79 (  0.66)	train_corr   0.00 (  0.00)	l1 3.9041 (4.0993)	zero_count 0.0000 (39.9360)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.46it/s] 23%|##3       | 6/26 [00:00<00:01, 18.76it/s]                                               23%|##3       | 6/26 [00:00<00:01, 18.76it/s] 42%|####2     | 11/26 [00:00<00:00, 28.02it/s] 62%|######1   | 16/26 [00:00<00:00, 34.29it/s]                                                62%|######1   | 16/26 [00:00<00:00, 34.29it/s] 81%|########  | 21/26 [00:00<00:00, 36.42it/s]100%|##########| 26/26 [00:00<00:00, 29.73it/s]
Test: [   0/  26]	Loss 0.600 (0.600)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.51 (  0.51)	Loss_d 0.600 (0.600)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.56 (  0.56)
Test: [  10/  26]	Loss 0.628 (0.617)	test_acc   0.49 (  0.51)	test_minacc   0.56 (  0.53)	test_majacc   0.48 (  0.51)	Loss_d 0.628 (0.617)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.56 (  0.53)	test_majacc_d   0.48 (  0.51)	test_corr_d   0.52 (  0.52)
Test: [  20/  26]	Loss 0.633 (0.620)	test_acc   0.45 (  0.50)	test_minacc   0.42 (  0.50)	test_majacc   0.46 (  0.50)	Loss_d 0.633 (0.620)	test_acc_d   0.45 (  0.50)	test_minacc_d   0.42 (  0.50)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.58 (  0.53)
Test: [  26/  26]	Loss 0.612 (0.621)	test_acc   0.53 (  0.50)	test_minacc   0.44 (  0.50)	test_majacc   0.55 (  0.50)	Loss_d 0.612 (0.621)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.44 (  0.50)	test_majacc_d   0.55 (  0.50)	test_corr_d   0.43 (  0.52)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 56.46it/s]
Test: [  0/  1]	Loss 1.002 (1.002)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.002 (1.002)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.37 (  0.37)
Test: [  1/  1]	Loss 1.002 (1.002)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.002 (1.002)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.37 (  0.37)
Overall Timing[ 23/  1]	epoch_time 0.0455 (0.0444)	validation_time 0.0004 (0.0007)	train_time 0.0451 (0.0435)
record: (train_acc, test_acc) (0.6168000086545944, 0.5680000185966492)
last accs (train_acc, test_acc) (0.5000000104308129, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02,  9.51it/s] 23%|##3       | 6/26 [00:00<00:00, 20.70it/s] 35%|###4      | 9/26 [00:00<00:00, 23.92it/s] 50%|#####     | 13/26 [00:00<00:00, 27.05it/s] 65%|######5   | 17/26 [00:00<00:00, 28.58it/s] 81%|########  | 21/26 [00:00<00:00, 30.26it/s] 96%|#########6| 25/26 [00:00<00:00, 30.69it/s]100%|##########| 26/26 [00:01<00:00, 25.73it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 624 200
penalty weights 10000.0
args.step pgd_anneal_iters 624 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 625 200
penalty weights 10000.0
args.step pgd_anneal_iters 625 600
dim_v 512
rho, theta 177 tensor(0.0013, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 626 200
penalty weights 10000.0
args.step pgd_anneal_iters 626 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 627 200
penalty weights 10000.0
args.step pgd_anneal_iters 627 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 628 200
penalty weights 10000.0
args.step pgd_anneal_iters 628 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 629 200
penalty weights 10000.0
args.step pgd_anneal_iters 629 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 630 200
penalty weights 10000.0
args.step pgd_anneal_iters 630 600
dim_v 512
rho, theta 169 tensor(0.0020, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 631 200
penalty weights 10000.0
args.step pgd_anneal_iters 631 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 632 200
penalty weights 10000.0
args.step pgd_anneal_iters 632 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 633 200
penalty weights 10000.0
args.step pgd_anneal_iters 633 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 634 200
penalty weights 10000.0
args.step pgd_anneal_iters 634 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 635 200
penalty weights 10000.0
args.step pgd_anneal_iters 635 600
dim_v 512
rho, theta 169 tensor(0.0004, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 636 200
penalty weights 10000.0
args.step pgd_anneal_iters 636 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 637 200
penalty weights 10000.0
args.step pgd_anneal_iters 637 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 638 200
penalty weights 10000.0
args.step pgd_anneal_iters 638 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 639 200
penalty weights 10000.0
args.step pgd_anneal_iters 639 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 640 200
penalty weights 10000.0
args.step pgd_anneal_iters 640 600
dim_v 512
rho, theta 175 tensor(-0.0003, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 641 200
penalty weights 10000.0
args.step pgd_anneal_iters 641 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 642 200
penalty weights 10000.0
args.step pgd_anneal_iters 642 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 643 200
penalty weights 10000.0
args.step pgd_anneal_iters 643 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 644 200
penalty weights 10000.0
args.step pgd_anneal_iters 644 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 645 200
penalty weights 10000.0
args.step pgd_anneal_iters 645 600
dim_v 512
rho, theta 181 tensor(-0.0004, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 646 200
penalty weights 10000.0
args.step pgd_anneal_iters 646 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 647 200
penalty weights 10000.0
args.step pgd_anneal_iters 647 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 648 200
penalty weights 10000.0
args.step pgd_anneal_iters 648 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 649 200
penalty weights 10000.0
args.step pgd_anneal_iters 649 600
final projection at end of training
dim_v 512
rho, theta 194 tensor(-0.0004, device='cuda:0')
Epoch: [24][  26/  26]	Loss 0.003 (0.002)	train_nll   0.65 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm  23.74 ( 23.59)	train_acc   0.64 (  0.59)	train_minacc   0.46 (  0.56)	train_majacc   0.67 (  0.59)	train_corr   0.00 (  0.00)	l1 3.3244 (3.3966)	zero_count 0.0000 (78.6240)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.56it/s]  8%|7         | 2/26 [00:00<00:03,  7.51it/s] 27%|##6       | 7/26 [00:00<00:00, 23.60it/s]                                               27%|##6       | 7/26 [00:00<00:00, 23.60it/s] 50%|#####     | 13/26 [00:00<00:00, 34.52it/s] 73%|#######3  | 19/26 [00:00<00:00, 40.77it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 40.77it/s] 92%|#########2| 24/26 [00:00<00:00, 43.26it/s]100%|##########| 26/26 [00:00<00:00, 32.12it/s]
Test: [   0/  26]	Loss 0.645 (0.645)	test_acc   0.42 (  0.42)	test_minacc   0.92 (  0.92)	test_majacc   0.33 (  0.33)	Loss_d 0.645 (0.645)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.92 (  0.92)	test_majacc_d   0.33 (  0.33)	test_corr_d   0.33 (  0.33)
Test: [  10/  26]	Loss 0.659 (0.644)	test_acc   0.41 (  0.40)	test_minacc   0.85 (  0.85)	test_majacc   0.33 (  0.32)	Loss_d 0.659 (0.644)	test_acc_d   0.41 (  0.40)	test_minacc_d   0.85 (  0.85)	test_majacc_d   0.33 (  0.32)	test_corr_d   0.33 (  0.33)
Test: [  20/  26]	Loss 0.631 (0.640)	test_acc   0.42 (  0.40)	test_minacc   0.92 (  0.87)	test_majacc   0.33 (  0.32)	Loss_d 0.631 (0.640)	test_acc_d   0.42 (  0.40)	test_minacc_d   0.92 (  0.87)	test_majacc_d   0.33 (  0.32)	test_corr_d   0.40 (  0.34)
Test: [  26/  26]	Loss 0.661 (0.639)	test_acc   0.36 (  0.40)	test_minacc   0.74 (  0.87)	test_majacc   0.29 (  0.32)	Loss_d 0.661 (0.639)	test_acc_d   0.36 (  0.40)	test_minacc_d   0.74 (  0.87)	test_majacc_d   0.29 (  0.32)	test_corr_d   0.33 (  0.34)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 57.91it/s]
Test: [  0/  1]	Loss 0.906 (0.906)	test_acc   0.77 (  0.77)	test_minacc   0.81 (  0.81)	test_majacc   0.36 (  0.36)	Loss_d 0.906 (0.906)	test_acc_d   0.77 (  0.77)	test_minacc_d   0.81 (  0.81)	test_majacc_d   0.36 (  0.36)	test_corr_d   0.07 (  0.07)
Test: [  1/  1]	Loss 0.906 (0.906)	test_acc   0.77 (  0.77)	test_minacc   0.81 (  0.81)	test_majacc   0.36 (  0.36)	Loss_d 0.906 (0.906)	test_acc_d   0.77 (  0.77)	test_minacc_d   0.81 (  0.81)	test_majacc_d   0.36 (  0.36)	test_corr_d   0.07 (  0.07)
Overall Timing[ 24/  1]	epoch_time 0.0436 (0.0443)	validation_time 0.0004 (0.0007)	train_time 0.0431 (0.0435)
record: (train_acc, test_acc) (0.6168000086545944, 0.5680000185966492)
last accs (train_acc, test_acc) (0.4004000062942505, 0.7690000534057617)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.87it/s] 19%|#9        | 5/26 [00:00<00:00, 22.07it/s] 35%|###4      | 9/26 [00:00<00:00, 25.95it/s] 46%|####6     | 12/26 [00:00<00:00, 25.38it/s] 62%|######1   | 16/26 [00:00<00:00, 28.72it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.70it/s] 92%|#########2| 24/26 [00:00<00:00, 32.39it/s]100%|##########| 26/26 [00:00<00:00, 26.18it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 650 200
penalty weights 10000.0
args.step pgd_anneal_iters 650 600
dim_v 512
rho, theta 210 tensor(-0.0001, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 651 200
penalty weights 10000.0
args.step pgd_anneal_iters 651 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 652 200
penalty weights 10000.0
args.step pgd_anneal_iters 652 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 653 200
penalty weights 10000.0
args.step pgd_anneal_iters 653 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 654 200
penalty weights 10000.0
args.step pgd_anneal_iters 654 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 655 200
penalty weights 10000.0
args.step pgd_anneal_iters 655 600
dim_v 512
rho, theta 252 tensor(-0.0007, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 656 200
penalty weights 10000.0
args.step pgd_anneal_iters 656 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 657 200
penalty weights 10000.0
args.step pgd_anneal_iters 657 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 658 200
penalty weights 10000.0
args.step pgd_anneal_iters 658 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 659 200
penalty weights 10000.0
args.step pgd_anneal_iters 659 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 660 200
penalty weights 10000.0
args.step pgd_anneal_iters 660 600
dim_v 512
rho, theta 391 tensor(-0.0003, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 661 200
penalty weights 10000.0
args.step pgd_anneal_iters 661 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 662 200
penalty weights 10000.0
args.step pgd_anneal_iters 662 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 663 200
penalty weights 10000.0
args.step pgd_anneal_iters 663 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 664 200
penalty weights 10000.0
args.step pgd_anneal_iters 664 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 665 200
penalty weights 10000.0
args.step pgd_anneal_iters 665 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 666 200
penalty weights 10000.0
args.step pgd_anneal_iters 666 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 667 200
penalty weights 10000.0
args.step pgd_anneal_iters 667 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 668 200
penalty weights 10000.0
args.step pgd_anneal_iters 668 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 669 200
penalty weights 10000.0
args.step pgd_anneal_iters 669 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 670 200
penalty weights 10000.0
args.step pgd_anneal_iters 670 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 671 200
penalty weights 10000.0
args.step pgd_anneal_iters 671 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 672 200
penalty weights 10000.0
args.step pgd_anneal_iters 672 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 673 200
penalty weights 10000.0
args.step pgd_anneal_iters 673 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 674 200
penalty weights 10000.0
args.step pgd_anneal_iters 674 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 675 200
penalty weights 10000.0
args.step pgd_anneal_iters 675 600
dim_v 512
rho, theta 389 tensor(-0.0003, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [25][  26/  26]	Loss 0.000 (0.001)	train_nll   0.64 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm  23.79 ( 23.77)	train_acc   0.38 (  0.44)	train_minacc   0.90 (  0.83)	train_majacc   0.28 (  0.37)	train_corr   0.00 (  0.00)	l1 3.1741 (3.1764)	zero_count 0.0000 (38.8830)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.88it/s] 23%|##3       | 6/26 [00:00<00:00, 28.74it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.74it/s] 42%|####2     | 11/26 [00:00<00:00, 35.63it/s] 62%|######1   | 16/26 [00:00<00:00, 40.12it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.12it/s] 81%|########  | 21/26 [00:00<00:00, 41.24it/s]100%|##########| 26/26 [00:00<00:00, 35.46it/s]
Test: [   0/  26]	Loss 0.667 (0.667)	test_acc   0.45 (  0.45)	test_minacc   0.75 (  0.75)	test_majacc   0.39 (  0.39)	Loss_d 0.667 (0.667)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.75 (  0.75)	test_majacc_d   0.39 (  0.39)	test_corr_d   0.19 (  0.19)
Test: [  10/  26]	Loss 0.653 (0.659)	test_acc   0.42 (  0.43)	test_minacc   0.87 (  0.81)	test_majacc   0.35 (  0.37)	Loss_d 0.653 (0.659)	test_acc_d   0.42 (  0.43)	test_minacc_d   0.87 (  0.81)	test_majacc_d   0.35 (  0.37)	test_corr_d   0.26 (  0.23)
Test: [  20/  26]	Loss 0.658 (0.657)	test_acc   0.42 (  0.43)	test_minacc   0.85 (  0.81)	test_majacc   0.34 (  0.36)	Loss_d 0.658 (0.657)	test_acc_d   0.42 (  0.43)	test_minacc_d   0.85 (  0.81)	test_majacc_d   0.34 (  0.36)	test_corr_d   0.30 (  0.24)
Test: [  26/  26]	Loss 0.649 (0.656)	test_acc   0.42 (  0.42)	test_minacc   0.79 (  0.80)	test_majacc   0.35 (  0.36)	Loss_d 0.649 (0.656)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.79 (  0.80)	test_majacc_d   0.35 (  0.36)	test_corr_d   0.22 (  0.24)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.82it/s]
Test: [  0/  1]	Loss 0.849 (0.849)	test_acc   0.68 (  0.68)	test_minacc   0.71 (  0.71)	test_majacc   0.36 (  0.36)	Loss_d 0.849 (0.849)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.36 (  0.36)	test_corr_d   0.04 (  0.04)
Test: [  1/  1]	Loss 0.849 (0.849)	test_acc   0.68 (  0.68)	test_minacc   0.71 (  0.71)	test_majacc   0.36 (  0.36)	Loss_d 0.849 (0.849)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.36 (  0.36)	test_corr_d   0.04 (  0.04)
Overall Timing[ 25/  1]	epoch_time 0.0430 (0.0443)	validation_time 0.0005 (0.0007)	train_time 0.0425 (0.0435)
record: (train_acc, test_acc) (0.6168000086545944, 0.5680000185966492)
last accs (train_acc, test_acc) (0.42440000480413437, 0.675000011920929)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.63it/s] 19%|#9        | 5/26 [00:00<00:00, 22.38it/s] 35%|###4      | 9/26 [00:00<00:00, 27.47it/s] 50%|#####     | 13/26 [00:00<00:00, 30.18it/s] 65%|######5   | 17/26 [00:00<00:00, 31.47it/s] 81%|########  | 21/26 [00:00<00:00, 33.24it/s] 96%|#########6| 25/26 [00:00<00:00, 34.52it/s]100%|##########| 26/26 [00:00<00:00, 28.56it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 676 200
penalty weights 10000.0
args.step pgd_anneal_iters 676 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 677 200
penalty weights 10000.0
args.step pgd_anneal_iters 677 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 678 200
penalty weights 10000.0
args.step pgd_anneal_iters 678 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 679 200
penalty weights 10000.0
args.step pgd_anneal_iters 679 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 680 200
penalty weights 10000.0
args.step pgd_anneal_iters 680 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 681 200
penalty weights 10000.0
args.step pgd_anneal_iters 681 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 682 200
penalty weights 10000.0
args.step pgd_anneal_iters 682 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 683 200
penalty weights 10000.0
args.step pgd_anneal_iters 683 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 684 200
penalty weights 10000.0
args.step pgd_anneal_iters 684 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 685 200
penalty weights 10000.0
args.step pgd_anneal_iters 685 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 686 200
penalty weights 10000.0
args.step pgd_anneal_iters 686 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 687 200
penalty weights 10000.0
args.step pgd_anneal_iters 687 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 688 200
penalty weights 10000.0
args.step pgd_anneal_iters 688 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 689 200
penalty weights 10000.0
args.step pgd_anneal_iters 689 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 690 200
penalty weights 10000.0
args.step pgd_anneal_iters 690 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 691 200
penalty weights 10000.0
args.step pgd_anneal_iters 691 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 692 200
penalty weights 10000.0
args.step pgd_anneal_iters 692 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 693 200
penalty weights 10000.0
args.step pgd_anneal_iters 693 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 694 200
penalty weights 10000.0
args.step pgd_anneal_iters 694 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 695 200
penalty weights 10000.0
args.step pgd_anneal_iters 695 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 696 200
penalty weights 10000.0
args.step pgd_anneal_iters 696 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 697 200
penalty weights 10000.0
args.step pgd_anneal_iters 697 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 698 200
penalty weights 10000.0
args.step pgd_anneal_iters 698 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 699 200
penalty weights 10000.0
args.step pgd_anneal_iters 699 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 700 200
penalty weights 10000.0
args.step pgd_anneal_iters 700 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 701 200
penalty weights 10000.0
args.step pgd_anneal_iters 701 600
final projection at end of training
dim_v 512
Epoch: [26][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  23.79 ( 23.79)	train_acc   0.44 (  0.47)	train_minacc   0.92 (  0.83)	train_majacc   0.36 (  0.40)	train_corr   0.00 (  0.00)	l1 3.0926 (3.1044)	zero_count 0.0000 (4.7580)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.12it/s] 31%|###       | 8/26 [00:00<00:00, 37.37it/s]                                               31%|###       | 8/26 [00:00<00:00, 37.37it/s] 50%|#####     | 13/26 [00:00<00:00, 41.21it/s] 69%|######9   | 18/26 [00:00<00:00, 42.62it/s]                                                69%|######9   | 18/26 [00:00<00:00, 42.62it/s] 88%|########8 | 23/26 [00:00<00:00, 40.24it/s]100%|##########| 26/26 [00:00<00:00, 37.47it/s]
Test: [   0/  26]	Loss 0.649 (0.649)	test_acc   0.38 (  0.38)	test_minacc   0.92 (  0.92)	test_majacc   0.28 (  0.28)	Loss_d 0.649 (0.649)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.92 (  0.92)	test_majacc_d   0.28 (  0.28)	test_corr_d   0.25 (  0.25)
Test: [  10/  26]	Loss 0.640 (0.643)	test_acc   0.37 (  0.38)	test_minacc   0.91 (  0.89)	test_majacc   0.28 (  0.28)	Loss_d 0.640 (0.643)	test_acc_d   0.37 (  0.38)	test_minacc_d   0.91 (  0.89)	test_majacc_d   0.28 (  0.28)	test_corr_d   0.31 (  0.28)
Test: [  20/  26]	Loss 0.645 (0.642)	test_acc   0.38 (  0.38)	test_minacc   0.95 (  0.90)	test_majacc   0.28 (  0.28)	Loss_d 0.645 (0.642)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.95 (  0.90)	test_majacc_d   0.28 (  0.28)	test_corr_d   0.33 (  0.29)
Test: [  26/  26]	Loss 0.638 (0.641)	test_acc   0.36 (  0.37)	test_minacc   0.92 (  0.90)	test_majacc   0.26 (  0.28)	Loss_d 0.638 (0.641)	test_acc_d   0.36 (  0.37)	test_minacc_d   0.92 (  0.90)	test_majacc_d   0.26 (  0.28)	test_corr_d   0.27 (  0.29)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.74it/s]
Test: [  0/  1]	Loss 0.825 (0.825)	test_acc   0.79 (  0.79)	test_minacc   0.84 (  0.84)	test_majacc   0.33 (  0.33)	Loss_d 0.825 (0.825)	test_acc_d   0.79 (  0.79)	test_minacc_d   0.84 (  0.84)	test_majacc_d   0.33 (  0.33)	test_corr_d   0.10 (  0.10)
Test: [  1/  1]	Loss 0.825 (0.825)	test_acc   0.79 (  0.79)	test_minacc   0.84 (  0.84)	test_majacc   0.33 (  0.33)	Loss_d 0.825 (0.825)	test_acc_d   0.79 (  0.79)	test_minacc_d   0.84 (  0.84)	test_majacc_d   0.33 (  0.33)	test_corr_d   0.10 (  0.10)
Overall Timing[ 26/  1]	epoch_time 0.0461 (0.0444)	validation_time 0.0003 (0.0006)	train_time 0.0457 (0.0436)
record: (train_acc, test_acc) (0.6168000086545944, 0.5680000185966492)
last accs (train_acc, test_acc) (0.37440000763535497, 0.7880000472068787)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.27it/s] 15%|#5        | 4/26 [00:00<00:01, 13.77it/s] 31%|###       | 8/26 [00:00<00:00, 22.06it/s] 46%|####6     | 12/26 [00:00<00:00, 27.20it/s] 62%|######1   | 16/26 [00:00<00:00, 30.47it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.70it/s] 92%|#########2| 24/26 [00:00<00:00, 34.40it/s]100%|##########| 26/26 [00:00<00:00, 26.23it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 702 200
penalty weights 10000.0
args.step pgd_anneal_iters 702 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 703 200
penalty weights 10000.0
args.step pgd_anneal_iters 703 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 704 200
penalty weights 10000.0
args.step pgd_anneal_iters 704 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 705 200
penalty weights 10000.0
args.step pgd_anneal_iters 705 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 706 200
penalty weights 10000.0
args.step pgd_anneal_iters 706 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 707 200
penalty weights 10000.0
args.step pgd_anneal_iters 707 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 708 200
penalty weights 10000.0
args.step pgd_anneal_iters 708 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 709 200
penalty weights 10000.0
args.step pgd_anneal_iters 709 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 710 200
penalty weights 10000.0
args.step pgd_anneal_iters 710 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 711 200
penalty weights 10000.0
args.step pgd_anneal_iters 711 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 712 200
penalty weights 10000.0
args.step pgd_anneal_iters 712 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 713 200
penalty weights 10000.0
args.step pgd_anneal_iters 713 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 714 200
penalty weights 10000.0
args.step pgd_anneal_iters 714 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 715 200
penalty weights 10000.0
args.step pgd_anneal_iters 715 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 716 200
penalty weights 10000.0
args.step pgd_anneal_iters 716 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 717 200
penalty weights 10000.0
args.step pgd_anneal_iters 717 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 718 200
penalty weights 10000.0
args.step pgd_anneal_iters 718 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 719 200
penalty weights 10000.0
args.step pgd_anneal_iters 719 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 720 200
penalty weights 10000.0
args.step pgd_anneal_iters 720 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 721 200
penalty weights 10000.0
args.step pgd_anneal_iters 721 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 722 200
penalty weights 10000.0
args.step pgd_anneal_iters 722 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 723 200
penalty weights 10000.0
args.step pgd_anneal_iters 723 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 724 200
penalty weights 10000.0
args.step pgd_anneal_iters 724 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 725 200
penalty weights 10000.0
args.step pgd_anneal_iters 725 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 726 200
penalty weights 10000.0
args.step pgd_anneal_iters 726 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 727 200
penalty weights 10000.0
args.step pgd_anneal_iters 727 600
final projection at end of training
dim_v 512
Epoch: [27][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm  23.79 ( 23.79)	train_acc   0.34 (  0.37)	train_minacc   0.90 (  0.90)	train_majacc   0.24 (  0.27)	train_corr   0.00 (  0.00)	l1 3.0909 (3.0890)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.80it/s] 23%|##3       | 6/26 [00:00<00:00, 22.75it/s]                                               23%|##3       | 6/26 [00:00<00:00, 22.75it/s] 42%|####2     | 11/26 [00:00<00:00, 30.84it/s] 62%|######1   | 16/26 [00:00<00:00, 36.90it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.90it/s] 81%|########  | 21/26 [00:00<00:00, 36.48it/s]100%|##########| 26/26 [00:00<00:00, 39.38it/s]100%|##########| 26/26 [00:00<00:00, 30.88it/s]
Test: [   0/  26]	Loss 0.661 (0.661)	test_acc   0.36 (  0.36)	test_minacc   0.89 (  0.89)	test_majacc   0.26 (  0.26)	Loss_d 0.661 (0.661)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.89 (  0.89)	test_majacc_d   0.26 (  0.26)	test_corr_d   0.20 (  0.20)
Test: [  10/  26]	Loss 0.650 (0.652)	test_acc   0.34 (  0.36)	test_minacc   0.94 (  0.89)	test_majacc   0.25 (  0.27)	Loss_d 0.650 (0.652)	test_acc_d   0.34 (  0.36)	test_minacc_d   0.94 (  0.89)	test_majacc_d   0.25 (  0.27)	test_corr_d   0.26 (  0.24)
Test: [  20/  26]	Loss 0.654 (0.651)	test_acc   0.36 (  0.36)	test_minacc   0.92 (  0.90)	test_majacc   0.27 (  0.26)	Loss_d 0.654 (0.651)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.92 (  0.90)	test_majacc_d   0.27 (  0.26)	test_corr_d   0.28 (  0.25)
Test: [  26/  26]	Loss 0.648 (0.651)	test_acc   0.34 (  0.35)	test_minacc   0.90 (  0.90)	test_majacc   0.24 (  0.26)	Loss_d 0.648 (0.651)	test_acc_d   0.34 (  0.35)	test_minacc_d   0.90 (  0.90)	test_majacc_d   0.24 (  0.26)	test_corr_d   0.22 (  0.25)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.04it/s]
Test: [  0/  1]	Loss 0.801 (0.801)	test_acc   0.79 (  0.79)	test_minacc   0.84 (  0.84)	test_majacc   0.31 (  0.31)	Loss_d 0.801 (0.801)	test_acc_d   0.79 (  0.79)	test_minacc_d   0.84 (  0.84)	test_majacc_d   0.31 (  0.31)	test_corr_d   0.07 (  0.07)
Test: [  1/  1]	Loss 0.801 (0.801)	test_acc   0.79 (  0.79)	test_minacc   0.84 (  0.84)	test_majacc   0.31 (  0.31)	Loss_d 0.801 (0.801)	test_acc_d   0.79 (  0.79)	test_minacc_d   0.84 (  0.84)	test_majacc_d   0.31 (  0.31)	test_corr_d   0.07 (  0.07)
Overall Timing[ 27/  1]	epoch_time 0.0435 (0.0443)	validation_time 0.0004 (0.0006)	train_time 0.0431 (0.0436)
record: (train_acc, test_acc) (0.6168000086545944, 0.5680000185966492)
last accs (train_acc, test_acc) (0.3533000085949898, 0.7850000262260437)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.72it/s] 19%|#9        | 5/26 [00:00<00:01, 15.61it/s] 35%|###4      | 9/26 [00:00<00:00, 22.25it/s] 50%|#####     | 13/26 [00:00<00:00, 26.40it/s] 65%|######5   | 17/26 [00:00<00:00, 29.45it/s] 81%|########  | 21/26 [00:00<00:00, 31.46it/s] 96%|#########6| 25/26 [00:00<00:00, 32.97it/s]100%|##########| 26/26 [00:01<00:00, 25.21it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 728 200
penalty weights 10000.0
args.step pgd_anneal_iters 728 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 729 200
penalty weights 10000.0
args.step pgd_anneal_iters 729 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 730 200
penalty weights 10000.0
args.step pgd_anneal_iters 730 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 731 200
penalty weights 10000.0
args.step pgd_anneal_iters 731 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 732 200
penalty weights 10000.0
args.step pgd_anneal_iters 732 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 733 200
penalty weights 10000.0
args.step pgd_anneal_iters 733 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 734 200
penalty weights 10000.0
args.step pgd_anneal_iters 734 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 735 200
penalty weights 10000.0
args.step pgd_anneal_iters 735 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 736 200
penalty weights 10000.0
args.step pgd_anneal_iters 736 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 737 200
penalty weights 10000.0
args.step pgd_anneal_iters 737 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 738 200
penalty weights 10000.0
args.step pgd_anneal_iters 738 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 739 200
penalty weights 10000.0
args.step pgd_anneal_iters 739 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 740 200
penalty weights 10000.0
args.step pgd_anneal_iters 740 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 741 200
penalty weights 10000.0
args.step pgd_anneal_iters 741 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 742 200
penalty weights 10000.0
args.step pgd_anneal_iters 742 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 743 200
penalty weights 10000.0
args.step pgd_anneal_iters 743 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 744 200
penalty weights 10000.0
args.step pgd_anneal_iters 744 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 745 200
penalty weights 10000.0
args.step pgd_anneal_iters 745 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 746 200
penalty weights 10000.0
args.step pgd_anneal_iters 746 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 747 200
penalty weights 10000.0
args.step pgd_anneal_iters 747 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 748 200
penalty weights 10000.0
args.step pgd_anneal_iters 748 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 749 200
penalty weights 10000.0
args.step pgd_anneal_iters 749 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 750 200
penalty weights 10000.0
args.step pgd_anneal_iters 750 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 751 200
penalty weights 10000.0
args.step pgd_anneal_iters 751 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 752 200
penalty weights 10000.0
args.step pgd_anneal_iters 752 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 753 200
penalty weights 10000.0
args.step pgd_anneal_iters 753 600
final projection at end of training
dim_v 512
Epoch: [28][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm  23.80 ( 23.80)	train_acc   0.35 (  0.36)	train_minacc   0.87 (  0.89)	train_majacc   0.25 (  0.27)	train_corr   0.00 (  0.00)	l1 3.0965 (3.0933)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.73it/s] 19%|#9        | 5/26 [00:00<00:00, 24.37it/s] 38%|###8      | 10/26 [00:00<00:00, 30.73it/s]                                                38%|###8      | 10/26 [00:00<00:00, 30.73it/s] 58%|#####7    | 15/26 [00:00<00:00, 36.65it/s] 77%|#######6  | 20/26 [00:00<00:00, 40.34it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 40.34it/s] 96%|#########6| 25/26 [00:00<00:00, 41.43it/s]100%|##########| 26/26 [00:00<00:00, 33.91it/s]
Test: [   0/  26]	Loss 0.662 (0.662)	test_acc   0.37 (  0.37)	test_minacc   0.84 (  0.84)	test_majacc   0.28 (  0.28)	Loss_d 0.662 (0.662)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.84 (  0.84)	test_majacc_d   0.28 (  0.28)	test_corr_d   0.20 (  0.20)
Test: [  10/  26]	Loss 0.650 (0.653)	test_acc   0.34 (  0.37)	test_minacc   0.89 (  0.87)	test_majacc   0.26 (  0.28)	Loss_d 0.650 (0.653)	test_acc_d   0.34 (  0.37)	test_minacc_d   0.89 (  0.87)	test_majacc_d   0.26 (  0.28)	test_corr_d   0.26 (  0.23)
Test: [  20/  26]	Loss 0.655 (0.652)	test_acc   0.37 (  0.36)	test_minacc   0.92 (  0.88)	test_majacc   0.28 (  0.27)	Loss_d 0.655 (0.652)	test_acc_d   0.37 (  0.36)	test_minacc_d   0.92 (  0.88)	test_majacc_d   0.28 (  0.27)	test_corr_d   0.28 (  0.24)
Test: [  26/  26]	Loss 0.649 (0.651)	test_acc   0.34 (  0.36)	test_minacc   0.87 (  0.88)	test_majacc   0.24 (  0.27)	Loss_d 0.649 (0.651)	test_acc_d   0.34 (  0.36)	test_minacc_d   0.87 (  0.88)	test_majacc_d   0.24 (  0.27)	test_corr_d   0.22 (  0.24)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.55it/s]
Test: [  0/  1]	Loss 0.795 (0.795)	test_acc   0.77 (  0.77)	test_minacc   0.82 (  0.82)	test_majacc   0.31 (  0.31)	Loss_d 0.795 (0.795)	test_acc_d   0.77 (  0.77)	test_minacc_d   0.82 (  0.82)	test_majacc_d   0.31 (  0.31)	test_corr_d   0.07 (  0.07)
Test: [  1/  1]	Loss 0.795 (0.795)	test_acc   0.77 (  0.77)	test_minacc   0.82 (  0.82)	test_majacc   0.31 (  0.31)	Loss_d 0.795 (0.795)	test_acc_d   0.77 (  0.77)	test_minacc_d   0.82 (  0.82)	test_majacc_d   0.31 (  0.31)	test_corr_d   0.07 (  0.07)
Overall Timing[ 28/  1]	epoch_time 0.0406 (0.0442)	validation_time 0.0004 (0.0006)	train_time 0.0402 (0.0434)
record: (train_acc, test_acc) (0.6168000086545944, 0.5680000185966492)
last accs (train_acc, test_acc) (0.3581000083088875, 0.7690000534057617)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.33it/s] 19%|#9        | 5/26 [00:00<00:01, 20.54it/s] 35%|###4      | 9/26 [00:00<00:00, 26.56it/s] 50%|#####     | 13/26 [00:00<00:00, 29.72it/s] 65%|######5   | 17/26 [00:00<00:00, 31.55it/s] 81%|########  | 21/26 [00:00<00:00, 33.09it/s] 96%|#########6| 25/26 [00:00<00:00, 34.05it/s]100%|##########| 26/26 [00:00<00:00, 27.51it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 754 200
penalty weights 10000.0
args.step pgd_anneal_iters 754 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 755 200
penalty weights 10000.0
args.step pgd_anneal_iters 755 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 756 200
penalty weights 10000.0
args.step pgd_anneal_iters 756 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 757 200
penalty weights 10000.0
args.step pgd_anneal_iters 757 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 758 200
penalty weights 10000.0
args.step pgd_anneal_iters 758 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 759 200
penalty weights 10000.0
args.step pgd_anneal_iters 759 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 760 200
penalty weights 10000.0
args.step pgd_anneal_iters 760 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 761 200
penalty weights 10000.0
args.step pgd_anneal_iters 761 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 762 200
penalty weights 10000.0
args.step pgd_anneal_iters 762 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 763 200
penalty weights 10000.0
args.step pgd_anneal_iters 763 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 764 200
penalty weights 10000.0
args.step pgd_anneal_iters 764 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 765 200
penalty weights 10000.0
args.step pgd_anneal_iters 765 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 766 200
penalty weights 10000.0
args.step pgd_anneal_iters 766 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 767 200
penalty weights 10000.0
args.step pgd_anneal_iters 767 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 768 200
penalty weights 10000.0
args.step pgd_anneal_iters 768 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 769 200
penalty weights 10000.0
args.step pgd_anneal_iters 769 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 770 200
penalty weights 10000.0
args.step pgd_anneal_iters 770 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 771 200
penalty weights 10000.0
args.step pgd_anneal_iters 771 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 772 200
penalty weights 10000.0
args.step pgd_anneal_iters 772 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 773 200
penalty weights 10000.0
args.step pgd_anneal_iters 773 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 774 200
penalty weights 10000.0
args.step pgd_anneal_iters 774 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 775 200
penalty weights 10000.0
args.step pgd_anneal_iters 775 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 776 200
penalty weights 10000.0
args.step pgd_anneal_iters 776 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 777 200
penalty weights 10000.0
args.step pgd_anneal_iters 777 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 778 200
penalty weights 10000.0
args.step pgd_anneal_iters 778 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 779 200
penalty weights 10000.0
args.step pgd_anneal_iters 779 600
final projection at end of training
dim_v 512
Epoch: [29][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm  23.80 ( 23.80)	train_acc   0.38 (  0.37)	train_minacc   0.85 (  0.87)	train_majacc   0.29 (  0.28)	train_corr   0.00 (  0.00)	l1 3.1016 (3.0972)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.57it/s] 15%|#5        | 4/26 [00:00<00:01, 15.99it/s] 35%|###4      | 9/26 [00:00<00:00, 28.85it/s]                                               35%|###4      | 9/26 [00:00<00:00, 28.85it/s] 58%|#####7    | 15/26 [00:00<00:00, 38.04it/s] 77%|#######6  | 20/26 [00:00<00:00, 40.59it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 40.59it/s]100%|##########| 26/26 [00:00<00:00, 45.76it/s]100%|##########| 26/26 [00:00<00:00, 34.96it/s]
Test: [   0/  26]	Loss 0.662 (0.662)	test_acc   0.38 (  0.38)	test_minacc   0.82 (  0.82)	test_majacc   0.30 (  0.30)	Loss_d 0.662 (0.662)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.82 (  0.82)	test_majacc_d   0.30 (  0.30)	test_corr_d   0.20 (  0.20)
Test: [  10/  26]	Loss 0.649 (0.653)	test_acc   0.36 (  0.38)	test_minacc   0.83 (  0.84)	test_majacc   0.28 (  0.30)	Loss_d 0.649 (0.653)	test_acc_d   0.36 (  0.38)	test_minacc_d   0.83 (  0.84)	test_majacc_d   0.28 (  0.30)	test_corr_d   0.26 (  0.23)
Test: [  20/  26]	Loss 0.655 (0.652)	test_acc   0.39 (  0.38)	test_minacc   0.90 (  0.85)	test_majacc   0.31 (  0.30)	Loss_d 0.655 (0.652)	test_acc_d   0.39 (  0.38)	test_minacc_d   0.90 (  0.85)	test_majacc_d   0.31 (  0.30)	test_corr_d   0.28 (  0.24)
Test: [  26/  26]	Loss 0.650 (0.652)	test_acc   0.36 (  0.38)	test_minacc   0.85 (  0.85)	test_majacc   0.27 (  0.29)	Loss_d 0.650 (0.652)	test_acc_d   0.36 (  0.38)	test_minacc_d   0.85 (  0.85)	test_majacc_d   0.27 (  0.29)	test_corr_d   0.22 (  0.24)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.66it/s]
Test: [  0/  1]	Loss 0.792 (0.792)	test_acc   0.73 (  0.73)	test_minacc   0.77 (  0.77)	test_majacc   0.38 (  0.38)	Loss_d 0.792 (0.792)	test_acc_d   0.73 (  0.73)	test_minacc_d   0.77 (  0.77)	test_majacc_d   0.38 (  0.38)	test_corr_d   0.08 (  0.08)
Test: [  1/  1]	Loss 0.792 (0.792)	test_acc   0.73 (  0.73)	test_minacc   0.77 (  0.77)	test_majacc   0.38 (  0.38)	Loss_d 0.792 (0.792)	test_acc_d   0.73 (  0.73)	test_minacc_d   0.77 (  0.77)	test_majacc_d   0.38 (  0.38)	test_corr_d   0.08 (  0.08)
Overall Timing[ 29/  1]	epoch_time 0.0444 (0.0442)	validation_time 0.0003 (0.0006)	train_time 0.0441 (0.0435)
record: (train_acc, test_acc) (0.6168000086545944, 0.5680000185966492)
last accs (train_acc, test_acc) (0.37810000762343404, 0.7320000529289246)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.35it/s] 15%|#5        | 4/26 [00:00<00:01, 16.60it/s] 31%|###       | 8/26 [00:00<00:00, 25.34it/s] 46%|####6     | 12/26 [00:00<00:00, 30.37it/s] 62%|######1   | 16/26 [00:00<00:00, 32.33it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.47it/s] 92%|#########2| 24/26 [00:00<00:00, 33.84it/s]100%|##########| 26/26 [00:00<00:00, 28.63it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 780 200
penalty weights 10000.0
args.step pgd_anneal_iters 780 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 781 200
penalty weights 10000.0
args.step pgd_anneal_iters 781 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 782 200
penalty weights 10000.0
args.step pgd_anneal_iters 782 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 783 200
penalty weights 10000.0
args.step pgd_anneal_iters 783 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 784 200
penalty weights 10000.0
args.step pgd_anneal_iters 784 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 785 200
penalty weights 10000.0
args.step pgd_anneal_iters 785 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 786 200
penalty weights 10000.0
args.step pgd_anneal_iters 786 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 787 200
penalty weights 10000.0
args.step pgd_anneal_iters 787 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 788 200
penalty weights 10000.0
args.step pgd_anneal_iters 788 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 789 200
penalty weights 10000.0
args.step pgd_anneal_iters 789 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 790 200
penalty weights 10000.0
args.step pgd_anneal_iters 790 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 791 200
penalty weights 10000.0
args.step pgd_anneal_iters 791 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 792 200
penalty weights 10000.0
args.step pgd_anneal_iters 792 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 793 200
penalty weights 10000.0
args.step pgd_anneal_iters 793 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 794 200
penalty weights 10000.0
args.step pgd_anneal_iters 794 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 795 200
penalty weights 10000.0
args.step pgd_anneal_iters 795 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 796 200
penalty weights 10000.0
args.step pgd_anneal_iters 796 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 797 200
penalty weights 10000.0
args.step pgd_anneal_iters 797 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 798 200
penalty weights 10000.0
args.step pgd_anneal_iters 798 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 799 200
penalty weights 10000.0
args.step pgd_anneal_iters 799 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 800 200
penalty weights 10000.0
args.step pgd_anneal_iters 800 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 801 200
penalty weights 10000.0
args.step pgd_anneal_iters 801 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 802 200
penalty weights 10000.0
args.step pgd_anneal_iters 802 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 803 200
penalty weights 10000.0
args.step pgd_anneal_iters 803 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 804 200
penalty weights 10000.0
args.step pgd_anneal_iters 804 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 805 200
penalty weights 10000.0
args.step pgd_anneal_iters 805 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [30][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm  23.80 ( 23.80)	train_acc   0.38 (  0.39)	train_minacc   0.82 (  0.85)	train_majacc   0.30 (  0.30)	train_corr   0.00 (  0.00)	l1 3.1077 (3.1028)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  4.13it/s] 27%|##6       | 7/26 [00:00<00:00, 24.16it/s]                                               27%|##6       | 7/26 [00:00<00:00, 24.16it/s] 46%|####6     | 12/26 [00:00<00:00, 32.01it/s] 65%|######5   | 17/26 [00:00<00:00, 35.34it/s]                                                65%|######5   | 17/26 [00:00<00:00, 35.34it/s] 88%|########8 | 23/26 [00:00<00:00, 41.59it/s]100%|##########| 26/26 [00:00<00:00, 31.21it/s]
Test: [   0/  26]	Loss 0.663 (0.663)	test_acc   0.41 (  0.41)	test_minacc   0.82 (  0.82)	test_majacc   0.33 (  0.33)	Loss_d 0.663 (0.663)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.82 (  0.82)	test_majacc_d   0.33 (  0.33)	test_corr_d   0.20 (  0.20)
Test: [  10/  26]	Loss 0.650 (0.654)	test_acc   0.39 (  0.40)	test_minacc   0.83 (  0.82)	test_majacc   0.32 (  0.33)	Loss_d 0.650 (0.654)	test_acc_d   0.39 (  0.40)	test_minacc_d   0.83 (  0.82)	test_majacc_d   0.32 (  0.33)	test_corr_d   0.26 (  0.23)
Test: [  20/  26]	Loss 0.656 (0.653)	test_acc   0.42 (  0.40)	test_minacc   0.88 (  0.84)	test_majacc   0.33 (  0.32)	Loss_d 0.656 (0.653)	test_acc_d   0.42 (  0.40)	test_minacc_d   0.88 (  0.84)	test_majacc_d   0.33 (  0.32)	test_corr_d   0.28 (  0.24)
Test: [  26/  26]	Loss 0.650 (0.653)	test_acc   0.38 (  0.40)	test_minacc   0.82 (  0.83)	test_majacc   0.30 (  0.32)	Loss_d 0.650 (0.653)	test_acc_d   0.38 (  0.40)	test_minacc_d   0.82 (  0.83)	test_majacc_d   0.30 (  0.32)	test_corr_d   0.21 (  0.24)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.43it/s]
Test: [  0/  1]	Loss 0.790 (0.790)	test_acc   0.72 (  0.72)	test_minacc   0.76 (  0.76)	test_majacc   0.42 (  0.42)	Loss_d 0.790 (0.790)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.76 (  0.76)	test_majacc_d   0.42 (  0.42)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 0.790 (0.790)	test_acc   0.72 (  0.72)	test_minacc   0.76 (  0.76)	test_majacc   0.42 (  0.42)	Loss_d 0.790 (0.790)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.76 (  0.76)	test_majacc_d   0.42 (  0.42)	test_corr_d   0.09 (  0.09)
Overall Timing[ 30/  1]	epoch_time 0.0416 (0.0441)	validation_time 0.0005 (0.0006)	train_time 0.0411 (0.0434)
record: (train_acc, test_acc) (0.6168000086545944, 0.5680000185966492)
last accs (train_acc, test_acc) (0.3975000065565109, 0.7240000367164612)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.74it/s] 23%|##3       | 6/26 [00:00<00:00, 28.23it/s] 38%|###8      | 10/26 [00:00<00:00, 31.13it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.73it/s] 69%|######9   | 18/26 [00:00<00:00, 34.02it/s] 85%|########4 | 22/26 [00:00<00:00, 34.79it/s]100%|##########| 26/26 [00:00<00:00, 35.47it/s]100%|##########| 26/26 [00:00<00:00, 30.82it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 806 200
penalty weights 10000.0
args.step pgd_anneal_iters 806 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 807 200
penalty weights 10000.0
args.step pgd_anneal_iters 807 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 808 200
penalty weights 10000.0
args.step pgd_anneal_iters 808 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 809 200
penalty weights 10000.0
args.step pgd_anneal_iters 809 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 810 200
penalty weights 10000.0
args.step pgd_anneal_iters 810 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 811 200
penalty weights 10000.0
args.step pgd_anneal_iters 811 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 812 200
penalty weights 10000.0
args.step pgd_anneal_iters 812 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 813 200
penalty weights 10000.0
args.step pgd_anneal_iters 813 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 814 200
penalty weights 10000.0
args.step pgd_anneal_iters 814 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 815 200
penalty weights 10000.0
args.step pgd_anneal_iters 815 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 816 200
penalty weights 10000.0
args.step pgd_anneal_iters 816 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 817 200
penalty weights 10000.0
args.step pgd_anneal_iters 817 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 818 200
penalty weights 10000.0
args.step pgd_anneal_iters 818 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 819 200
penalty weights 10000.0
args.step pgd_anneal_iters 819 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 820 200
penalty weights 10000.0
args.step pgd_anneal_iters 820 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 821 200
penalty weights 10000.0
args.step pgd_anneal_iters 821 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 822 200
penalty weights 10000.0
args.step pgd_anneal_iters 822 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 823 200
penalty weights 10000.0
args.step pgd_anneal_iters 823 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 824 200
penalty weights 10000.0
args.step pgd_anneal_iters 824 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 825 200
penalty weights 10000.0
args.step pgd_anneal_iters 825 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 826 200
penalty weights 10000.0
args.step pgd_anneal_iters 826 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 827 200
penalty weights 10000.0
args.step pgd_anneal_iters 827 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 828 200
penalty weights 10000.0
args.step pgd_anneal_iters 828 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 829 200
penalty weights 10000.0
args.step pgd_anneal_iters 829 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 830 200
penalty weights 10000.0
args.step pgd_anneal_iters 830 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 831 200
penalty weights 10000.0
args.step pgd_anneal_iters 831 600
final projection at end of training
dim_v 512
Epoch: [31][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm  23.80 ( 23.80)	train_acc   0.38 (  0.40)	train_minacc   0.79 (  0.83)	train_majacc   0.31 (  0.32)	train_corr   0.00 (  0.00)	l1 3.1148 (3.1093)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 27.97it/s] 31%|###       | 8/26 [00:00<00:00, 39.02it/s]                                               31%|###       | 8/26 [00:00<00:00, 39.02it/s] 50%|#####     | 13/26 [00:00<00:00, 42.21it/s] 69%|######9   | 18/26 [00:00<00:00, 40.48it/s]                                                69%|######9   | 18/26 [00:00<00:00, 40.48it/s] 88%|########8 | 23/26 [00:00<00:00, 40.59it/s]100%|##########| 26/26 [00:00<00:00, 38.19it/s]
Test: [   0/  26]	Loss 0.664 (0.664)	test_acc   0.43 (  0.43)	test_minacc   0.80 (  0.80)	test_majacc   0.36 (  0.36)	Loss_d 0.664 (0.664)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.80 (  0.80)	test_majacc_d   0.36 (  0.36)	test_corr_d   0.20 (  0.20)
Test: [  10/  26]	Loss 0.650 (0.654)	test_acc   0.42 (  0.42)	test_minacc   0.83 (  0.81)	test_majacc   0.35 (  0.35)	Loss_d 0.650 (0.654)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.83 (  0.81)	test_majacc_d   0.35 (  0.35)	test_corr_d   0.26 (  0.23)
Test: [  20/  26]	Loss 0.657 (0.654)	test_acc   0.42 (  0.42)	test_minacc   0.85 (  0.82)	test_majacc   0.34 (  0.35)	Loss_d 0.657 (0.654)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.85 (  0.82)	test_majacc_d   0.34 (  0.35)	test_corr_d   0.28 (  0.24)
Test: [  26/  26]	Loss 0.651 (0.654)	test_acc   0.38 (  0.41)	test_minacc   0.79 (  0.82)	test_majacc   0.30 (  0.34)	Loss_d 0.651 (0.654)	test_acc_d   0.38 (  0.41)	test_minacc_d   0.79 (  0.82)	test_majacc_d   0.30 (  0.34)	test_corr_d   0.21 (  0.24)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.46it/s]
Test: [  0/  1]	Loss 0.789 (0.789)	test_acc   0.71 (  0.71)	test_minacc   0.74 (  0.74)	test_majacc   0.43 (  0.43)	Loss_d 0.789 (0.789)	test_acc_d   0.71 (  0.71)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 0.789 (0.789)	test_acc   0.71 (  0.71)	test_minacc   0.74 (  0.74)	test_majacc   0.43 (  0.43)	Loss_d 0.789 (0.789)	test_acc_d   0.71 (  0.71)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.09 (  0.09)
Overall Timing[ 31/  1]	epoch_time 0.0413 (0.0440)	validation_time 0.0003 (0.0006)	train_time 0.0409 (0.0433)
record: (train_acc, test_acc) (0.6168000086545944, 0.5680000185966492)
last accs (train_acc, test_acc) (0.4138000055849552, 0.7050000429153442)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.90it/s] 19%|#9        | 5/26 [00:00<00:00, 25.34it/s] 35%|###4      | 9/26 [00:00<00:00, 30.25it/s] 50%|#####     | 13/26 [00:00<00:00, 31.75it/s] 65%|######5   | 17/26 [00:00<00:00, 32.51it/s] 81%|########  | 21/26 [00:00<00:00, 33.13it/s] 96%|#########6| 25/26 [00:00<00:00, 33.51it/s]100%|##########| 26/26 [00:00<00:00, 29.42it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 832 200
penalty weights 10000.0
args.step pgd_anneal_iters 832 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 833 200
penalty weights 10000.0
args.step pgd_anneal_iters 833 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 834 200
penalty weights 10000.0
args.step pgd_anneal_iters 834 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 835 200
penalty weights 10000.0
args.step pgd_anneal_iters 835 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 836 200
penalty weights 10000.0
args.step pgd_anneal_iters 836 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 837 200
penalty weights 10000.0
args.step pgd_anneal_iters 837 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 838 200
penalty weights 10000.0
args.step pgd_anneal_iters 838 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 839 200
penalty weights 10000.0
args.step pgd_anneal_iters 839 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 840 200
penalty weights 10000.0
args.step pgd_anneal_iters 840 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 841 200
penalty weights 10000.0
args.step pgd_anneal_iters 841 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 842 200
penalty weights 10000.0
args.step pgd_anneal_iters 842 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 843 200
penalty weights 10000.0
args.step pgd_anneal_iters 843 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 844 200
penalty weights 10000.0
args.step pgd_anneal_iters 844 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 845 200
penalty weights 10000.0
args.step pgd_anneal_iters 845 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 846 200
penalty weights 10000.0
args.step pgd_anneal_iters 846 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 847 200
penalty weights 10000.0
args.step pgd_anneal_iters 847 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 848 200
penalty weights 10000.0
args.step pgd_anneal_iters 848 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 849 200
penalty weights 10000.0
args.step pgd_anneal_iters 849 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 850 200
penalty weights 10000.0
args.step pgd_anneal_iters 850 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 851 200
penalty weights 10000.0
args.step pgd_anneal_iters 851 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 852 200
penalty weights 10000.0
args.step pgd_anneal_iters 852 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 853 200
penalty weights 10000.0
args.step pgd_anneal_iters 853 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 854 200
penalty weights 10000.0
args.step pgd_anneal_iters 854 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 855 200
penalty weights 10000.0
args.step pgd_anneal_iters 855 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 856 200
penalty weights 10000.0
args.step pgd_anneal_iters 856 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 857 200
penalty weights 10000.0
args.step pgd_anneal_iters 857 600
final projection at end of training
dim_v 512
Epoch: [32][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm  23.80 ( 23.80)	train_acc   0.40 (  0.41)	train_minacc   0.82 (  0.82)	train_majacc   0.32 (  0.33)	train_corr   0.00 (  0.00)	l1 3.1224 (3.1167)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.73it/s] 27%|##6       | 7/26 [00:00<00:00, 33.74it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.74it/s] 46%|####6     | 12/26 [00:00<00:00, 39.03it/s] 65%|######5   | 17/26 [00:00<00:00, 42.51it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.51it/s] 85%|########4 | 22/26 [00:00<00:00, 40.47it/s]100%|##########| 26/26 [00:00<00:00, 37.53it/s]
Test: [   0/  26]	Loss 0.664 (0.664)	test_acc   0.43 (  0.43)	test_minacc   0.79 (  0.79)	test_majacc   0.37 (  0.37)	Loss_d 0.664 (0.664)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.79 (  0.79)	test_majacc_d   0.37 (  0.37)	test_corr_d   0.20 (  0.20)
Test: [  10/  26]	Loss 0.649 (0.655)	test_acc   0.42 (  0.43)	test_minacc   0.83 (  0.80)	test_majacc   0.36 (  0.36)	Loss_d 0.649 (0.655)	test_acc_d   0.42 (  0.43)	test_minacc_d   0.83 (  0.80)	test_majacc_d   0.36 (  0.36)	test_corr_d   0.26 (  0.23)
Test: [  20/  26]	Loss 0.657 (0.654)	test_acc   0.42 (  0.42)	test_minacc   0.81 (  0.81)	test_majacc   0.35 (  0.36)	Loss_d 0.657 (0.654)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.81 (  0.81)	test_majacc_d   0.35 (  0.36)	test_corr_d   0.28 (  0.24)
Test: [  26/  26]	Loss 0.652 (0.654)	test_acc   0.40 (  0.42)	test_minacc   0.82 (  0.80)	test_majacc   0.32 (  0.35)	Loss_d 0.652 (0.654)	test_acc_d   0.40 (  0.42)	test_minacc_d   0.82 (  0.80)	test_majacc_d   0.32 (  0.35)	test_corr_d   0.21 (  0.24)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.44it/s]
Test: [  0/  1]	Loss 0.788 (0.788)	test_acc   0.69 (  0.69)	test_minacc   0.71 (  0.71)	test_majacc   0.43 (  0.43)	Loss_d 0.788 (0.788)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.10 (  0.10)
Test: [  1/  1]	Loss 0.788 (0.788)	test_acc   0.69 (  0.69)	test_minacc   0.71 (  0.71)	test_majacc   0.43 (  0.43)	Loss_d 0.788 (0.788)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.10 (  0.10)
Overall Timing[ 32/  1]	epoch_time 0.0433 (0.0440)	validation_time 0.0004 (0.0006)	train_time 0.0429 (0.0433)
record: (train_acc, test_acc) (0.6168000086545944, 0.5680000185966492)
last accs (train_acc, test_acc) (0.4204000047445297, 0.6850000619888306)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.59it/s] 23%|##3       | 6/26 [00:00<00:00, 26.79it/s] 38%|###8      | 10/26 [00:00<00:00, 30.31it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.98it/s] 69%|######9   | 18/26 [00:00<00:00, 33.31it/s] 85%|########4 | 22/26 [00:00<00:00, 34.00it/s]100%|##########| 26/26 [00:00<00:00, 34.32it/s]100%|##########| 26/26 [00:00<00:00, 29.89it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 858 200
penalty weights 10000.0
args.step pgd_anneal_iters 858 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 859 200
penalty weights 10000.0
args.step pgd_anneal_iters 859 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 860 200
penalty weights 10000.0
args.step pgd_anneal_iters 860 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 861 200
penalty weights 10000.0
args.step pgd_anneal_iters 861 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 862 200
penalty weights 10000.0
args.step pgd_anneal_iters 862 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 863 200
penalty weights 10000.0
args.step pgd_anneal_iters 863 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 864 200
penalty weights 10000.0
args.step pgd_anneal_iters 864 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 865 200
penalty weights 10000.0
args.step pgd_anneal_iters 865 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 866 200
penalty weights 10000.0
args.step pgd_anneal_iters 866 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 867 200
penalty weights 10000.0
args.step pgd_anneal_iters 867 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 868 200
penalty weights 10000.0
args.step pgd_anneal_iters 868 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 869 200
penalty weights 10000.0
args.step pgd_anneal_iters 869 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 870 200
penalty weights 10000.0
args.step pgd_anneal_iters 870 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 871 200
penalty weights 10000.0
args.step pgd_anneal_iters 871 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 872 200
penalty weights 10000.0
args.step pgd_anneal_iters 872 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 873 200
penalty weights 10000.0
args.step pgd_anneal_iters 873 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 874 200
penalty weights 10000.0
args.step pgd_anneal_iters 874 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 875 200
penalty weights 10000.0
args.step pgd_anneal_iters 875 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 876 200
penalty weights 10000.0
args.step pgd_anneal_iters 876 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 877 200
penalty weights 10000.0
args.step pgd_anneal_iters 877 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 878 200
penalty weights 10000.0
args.step pgd_anneal_iters 878 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 879 200
penalty weights 10000.0
args.step pgd_anneal_iters 879 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 880 200
penalty weights 10000.0
args.step pgd_anneal_iters 880 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 881 200
penalty weights 10000.0
args.step pgd_anneal_iters 881 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 882 200
penalty weights 10000.0
args.step pgd_anneal_iters 882 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 883 200
penalty weights 10000.0
args.step pgd_anneal_iters 883 600
final projection at end of training
dim_v 512
Epoch: [33][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm  23.80 ( 23.80)	train_acc   0.41 (  0.41)	train_minacc   0.79 (  0.80)	train_majacc   0.34 (  0.34)	train_corr   0.00 (  0.00)	l1 3.1295 (3.1242)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 23.80it/s] 31%|###       | 8/26 [00:00<00:00, 35.81it/s]                                               31%|###       | 8/26 [00:00<00:00, 35.81it/s] 50%|#####     | 13/26 [00:00<00:00, 39.97it/s] 69%|######9   | 18/26 [00:00<00:00, 42.61it/s]                                                69%|######9   | 18/26 [00:00<00:00, 42.61it/s] 88%|########8 | 23/26 [00:00<00:00, 41.86it/s]100%|##########| 26/26 [00:00<00:00, 37.24it/s]
Test: [   0/  26]	Loss 0.665 (0.665)	test_acc   0.44 (  0.44)	test_minacc   0.77 (  0.77)	test_majacc   0.38 (  0.38)	Loss_d 0.665 (0.665)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.77 (  0.77)	test_majacc_d   0.38 (  0.38)	test_corr_d   0.20 (  0.20)
Test: [  10/  26]	Loss 0.649 (0.656)	test_acc   0.43 (  0.44)	test_minacc   0.83 (  0.79)	test_majacc   0.36 (  0.37)	Loss_d 0.649 (0.656)	test_acc_d   0.43 (  0.44)	test_minacc_d   0.83 (  0.79)	test_majacc_d   0.36 (  0.37)	test_corr_d   0.26 (  0.23)
Test: [  20/  26]	Loss 0.658 (0.655)	test_acc   0.43 (  0.43)	test_minacc   0.81 (  0.80)	test_majacc   0.36 (  0.36)	Loss_d 0.658 (0.655)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.81 (  0.80)	test_majacc_d   0.36 (  0.36)	test_corr_d   0.28 (  0.24)
Test: [  26/  26]	Loss 0.652 (0.655)	test_acc   0.41 (  0.43)	test_minacc   0.79 (  0.79)	test_majacc   0.34 (  0.36)	Loss_d 0.652 (0.655)	test_acc_d   0.41 (  0.43)	test_minacc_d   0.79 (  0.79)	test_majacc_d   0.34 (  0.36)	test_corr_d   0.21 (  0.24)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.32it/s]
Test: [  0/  1]	Loss 0.787 (0.787)	test_acc   0.68 (  0.68)	test_minacc   0.70 (  0.70)	test_majacc   0.43 (  0.43)	Loss_d 0.787 (0.787)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.10 (  0.10)
Test: [  1/  1]	Loss 0.787 (0.787)	test_acc   0.68 (  0.68)	test_minacc   0.70 (  0.70)	test_majacc   0.43 (  0.43)	Loss_d 0.787 (0.787)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.10 (  0.10)
Overall Timing[ 33/  1]	epoch_time 0.0449 (0.0440)	validation_time 0.0004 (0.0006)	train_time 0.0445 (0.0433)
record: (train_acc, test_acc) (0.6168000086545944, 0.5680000185966492)
last accs (train_acc, test_acc) (0.42550000485777856, 0.6770000457763672)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.86it/s] 19%|#9        | 5/26 [00:00<00:01, 19.39it/s] 35%|###4      | 9/26 [00:00<00:00, 25.56it/s] 50%|#####     | 13/26 [00:00<00:00, 28.98it/s] 65%|######5   | 17/26 [00:00<00:00, 30.71it/s] 81%|########  | 21/26 [00:00<00:00, 32.84it/s] 96%|#########6| 25/26 [00:00<00:00, 34.21it/s]100%|##########| 26/26 [00:00<00:00, 27.71it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 884 200
penalty weights 10000.0
args.step pgd_anneal_iters 884 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 885 200
penalty weights 10000.0
args.step pgd_anneal_iters 885 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 886 200
penalty weights 10000.0
args.step pgd_anneal_iters 886 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 887 200
penalty weights 10000.0
args.step pgd_anneal_iters 887 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 888 200
penalty weights 10000.0
args.step pgd_anneal_iters 888 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 889 200
penalty weights 10000.0
args.step pgd_anneal_iters 889 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 890 200
penalty weights 10000.0
args.step pgd_anneal_iters 890 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 891 200
penalty weights 10000.0
args.step pgd_anneal_iters 891 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 892 200
penalty weights 10000.0
args.step pgd_anneal_iters 892 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 893 200
penalty weights 10000.0
args.step pgd_anneal_iters 893 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 894 200
penalty weights 10000.0
args.step pgd_anneal_iters 894 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 895 200
penalty weights 10000.0
args.step pgd_anneal_iters 895 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 896 200
penalty weights 10000.0
args.step pgd_anneal_iters 896 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 897 200
penalty weights 10000.0
args.step pgd_anneal_iters 897 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 898 200
penalty weights 10000.0
args.step pgd_anneal_iters 898 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 899 200
penalty weights 10000.0
args.step pgd_anneal_iters 899 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 900 200
penalty weights 10000.0
args.step pgd_anneal_iters 900 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 901 200
penalty weights 10000.0
args.step pgd_anneal_iters 901 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 902 200
penalty weights 10000.0
args.step pgd_anneal_iters 902 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 903 200
penalty weights 10000.0
args.step pgd_anneal_iters 903 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 904 200
penalty weights 10000.0
args.step pgd_anneal_iters 904 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 905 200
penalty weights 10000.0
args.step pgd_anneal_iters 905 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 906 200
penalty weights 10000.0
args.step pgd_anneal_iters 906 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 907 200
penalty weights 10000.0
args.step pgd_anneal_iters 907 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 908 200
penalty weights 10000.0
args.step pgd_anneal_iters 908 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 909 200
penalty weights 10000.0
args.step pgd_anneal_iters 909 600
final projection at end of training
dim_v 512
Epoch: [34][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  23.80 ( 23.80)	train_acc   0.40 (  0.42)	train_minacc   0.79 (  0.79)	train_majacc   0.33 (  0.35)	train_corr   0.00 (  0.00)	l1 3.1360 (3.1312)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.40it/s] 27%|##6       | 7/26 [00:00<00:00, 28.97it/s]                                               27%|##6       | 7/26 [00:00<00:00, 28.97it/s] 46%|####6     | 12/26 [00:00<00:00, 36.53it/s] 65%|######5   | 17/26 [00:00<00:00, 39.91it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.91it/s] 85%|########4 | 22/26 [00:00<00:00, 42.43it/s]100%|##########| 26/26 [00:00<00:00, 36.04it/s]
Test: [   0/  26]	Loss 0.665 (0.665)	test_acc   0.44 (  0.44)	test_minacc   0.75 (  0.75)	test_majacc   0.38 (  0.38)	Loss_d 0.665 (0.665)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.75 (  0.75)	test_majacc_d   0.38 (  0.38)	test_corr_d   0.20 (  0.20)
Test: [  10/  26]	Loss 0.649 (0.656)	test_acc   0.43 (  0.44)	test_minacc   0.83 (  0.78)	test_majacc   0.36 (  0.38)	Loss_d 0.649 (0.656)	test_acc_d   0.43 (  0.44)	test_minacc_d   0.83 (  0.78)	test_majacc_d   0.36 (  0.38)	test_corr_d   0.26 (  0.23)
Test: [  20/  26]	Loss 0.658 (0.655)	test_acc   0.44 (  0.43)	test_minacc   0.80 (  0.79)	test_majacc   0.38 (  0.37)	Loss_d 0.658 (0.655)	test_acc_d   0.44 (  0.43)	test_minacc_d   0.80 (  0.79)	test_majacc_d   0.38 (  0.37)	test_corr_d   0.28 (  0.24)
Test: [  26/  26]	Loss 0.653 (0.655)	test_acc   0.40 (  0.43)	test_minacc   0.79 (  0.78)	test_majacc   0.33 (  0.37)	Loss_d 0.653 (0.655)	test_acc_d   0.40 (  0.43)	test_minacc_d   0.79 (  0.78)	test_majacc_d   0.33 (  0.37)	test_corr_d   0.21 (  0.24)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.56it/s]
Test: [  0/  1]	Loss 0.787 (0.787)	test_acc   0.67 (  0.67)	test_minacc   0.69 (  0.69)	test_majacc   0.43 (  0.43)	Loss_d 0.787 (0.787)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 0.787 (0.787)	test_acc   0.67 (  0.67)	test_minacc   0.69 (  0.69)	test_majacc   0.43 (  0.43)	Loss_d 0.787 (0.787)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.11 (  0.11)
Overall Timing[ 34/  1]	epoch_time 0.0416 (0.0440)	validation_time 0.0003 (0.0006)	train_time 0.0412 (0.0433)
record: (train_acc, test_acc) (0.6168000086545944, 0.5680000185966492)
last accs (train_acc, test_acc) (0.4289000044465065, 0.6650000214576721)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.52it/s] 19%|#9        | 5/26 [00:00<00:01, 18.87it/s] 35%|###4      | 9/26 [00:00<00:00, 24.60it/s] 50%|#####     | 13/26 [00:00<00:00, 28.32it/s] 65%|######5   | 17/26 [00:00<00:00, 30.72it/s] 81%|########  | 21/26 [00:00<00:00, 32.88it/s] 96%|#########6| 25/26 [00:00<00:00, 34.00it/s]100%|##########| 26/26 [00:00<00:00, 27.21it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 910 200
penalty weights 10000.0
args.step pgd_anneal_iters 910 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 911 200
penalty weights 10000.0
args.step pgd_anneal_iters 911 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 912 200
penalty weights 10000.0
args.step pgd_anneal_iters 912 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 913 200
penalty weights 10000.0
args.step pgd_anneal_iters 913 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 914 200
penalty weights 10000.0
args.step pgd_anneal_iters 914 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 915 200
penalty weights 10000.0
args.step pgd_anneal_iters 915 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 916 200
penalty weights 10000.0
args.step pgd_anneal_iters 916 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 917 200
penalty weights 10000.0
args.step pgd_anneal_iters 917 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 918 200
penalty weights 10000.0
args.step pgd_anneal_iters 918 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 919 200
penalty weights 10000.0
args.step pgd_anneal_iters 919 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 920 200
penalty weights 10000.0
args.step pgd_anneal_iters 920 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 921 200
penalty weights 10000.0
args.step pgd_anneal_iters 921 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 922 200
penalty weights 10000.0
args.step pgd_anneal_iters 922 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 923 200
penalty weights 10000.0
args.step pgd_anneal_iters 923 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 924 200
penalty weights 10000.0
args.step pgd_anneal_iters 924 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 925 200
penalty weights 10000.0
args.step pgd_anneal_iters 925 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 926 200
penalty weights 10000.0
args.step pgd_anneal_iters 926 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 927 200
penalty weights 10000.0
args.step pgd_anneal_iters 927 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 928 200
penalty weights 10000.0
args.step pgd_anneal_iters 928 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 929 200
penalty weights 10000.0
args.step pgd_anneal_iters 929 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 930 200
penalty weights 10000.0
args.step pgd_anneal_iters 930 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 931 200
penalty weights 10000.0
args.step pgd_anneal_iters 931 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 932 200
penalty weights 10000.0
args.step pgd_anneal_iters 932 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 933 200
penalty weights 10000.0
args.step pgd_anneal_iters 933 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 934 200
penalty weights 10000.0
args.step pgd_anneal_iters 934 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 935 200
penalty weights 10000.0
args.step pgd_anneal_iters 935 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [35][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  23.80 ( 23.80)	train_acc   0.39 (  0.42)	train_minacc   0.79 (  0.78)	train_majacc   0.32 (  0.35)	train_corr   0.00 (  0.00)	l1 3.1424 (3.1379)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.14it/s] 23%|##3       | 6/26 [00:00<00:00, 22.48it/s]                                               23%|##3       | 6/26 [00:00<00:00, 22.48it/s] 42%|####2     | 11/26 [00:00<00:00, 31.05it/s] 62%|######1   | 16/26 [00:00<00:00, 37.20it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.20it/s] 81%|########  | 21/26 [00:00<00:00, 39.69it/s]100%|##########| 26/26 [00:00<00:00, 42.31it/s]100%|##########| 26/26 [00:00<00:00, 32.47it/s]
Test: [   0/  26]	Loss 0.666 (0.666)	test_acc   0.44 (  0.44)	test_minacc   0.75 (  0.75)	test_majacc   0.38 (  0.38)	Loss_d 0.666 (0.666)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.75 (  0.75)	test_majacc_d   0.38 (  0.38)	test_corr_d   0.19 (  0.19)
Test: [  10/  26]	Loss 0.650 (0.656)	test_acc   0.43 (  0.44)	test_minacc   0.83 (  0.77)	test_majacc   0.37 (  0.39)	Loss_d 0.650 (0.656)	test_acc_d   0.43 (  0.44)	test_minacc_d   0.83 (  0.77)	test_majacc_d   0.37 (  0.39)	test_corr_d   0.26 (  0.23)
Test: [  20/  26]	Loss 0.658 (0.656)	test_acc   0.44 (  0.44)	test_minacc   0.78 (  0.78)	test_majacc   0.38 (  0.38)	Loss_d 0.658 (0.656)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.78 (  0.78)	test_majacc_d   0.38 (  0.38)	test_corr_d   0.27 (  0.23)
Test: [  26/  26]	Loss 0.653 (0.655)	test_acc   0.39 (  0.43)	test_minacc   0.79 (  0.77)	test_majacc   0.32 (  0.37)	Loss_d 0.653 (0.655)	test_acc_d   0.39 (  0.43)	test_minacc_d   0.79 (  0.77)	test_majacc_d   0.32 (  0.37)	test_corr_d   0.21 (  0.23)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.96it/s]
Test: [  0/  1]	Loss 0.787 (0.787)	test_acc   0.66 (  0.66)	test_minacc   0.68 (  0.68)	test_majacc   0.44 (  0.44)	Loss_d 0.787 (0.787)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.68 (  0.68)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 0.787 (0.787)	test_acc   0.66 (  0.66)	test_minacc   0.68 (  0.68)	test_majacc   0.44 (  0.44)	Loss_d 0.787 (0.787)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.68 (  0.68)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.11 (  0.11)
Overall Timing[ 35/  1]	epoch_time 0.0407 (0.0439)	validation_time 0.0004 (0.0006)	train_time 0.0402 (0.0432)
record: (train_acc, test_acc) (0.6168000086545944, 0.5680000185966492)
last accs (train_acc, test_acc) (0.4324000055193901, 0.6570000052452087)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.18it/s] 19%|#9        | 5/26 [00:00<00:01, 13.50it/s] 35%|###4      | 9/26 [00:00<00:00, 19.66it/s] 50%|#####     | 13/26 [00:00<00:00, 23.91it/s] 65%|######5   | 17/26 [00:00<00:00, 27.13it/s] 81%|########  | 21/26 [00:00<00:00, 29.47it/s] 96%|#########6| 25/26 [00:01<00:00, 31.20it/s]100%|##########| 26/26 [00:01<00:00, 23.07it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 936 200
penalty weights 10000.0
args.step pgd_anneal_iters 936 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 937 200
penalty weights 10000.0
args.step pgd_anneal_iters 937 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 938 200
penalty weights 10000.0
args.step pgd_anneal_iters 938 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 939 200
penalty weights 10000.0
args.step pgd_anneal_iters 939 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 940 200
penalty weights 10000.0
args.step pgd_anneal_iters 940 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 941 200
penalty weights 10000.0
args.step pgd_anneal_iters 941 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 942 200
penalty weights 10000.0
args.step pgd_anneal_iters 942 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 943 200
penalty weights 10000.0
args.step pgd_anneal_iters 943 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 944 200
penalty weights 10000.0
args.step pgd_anneal_iters 944 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 945 200
penalty weights 10000.0
args.step pgd_anneal_iters 945 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 946 200
penalty weights 10000.0
args.step pgd_anneal_iters 946 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 947 200
penalty weights 10000.0
args.step pgd_anneal_iters 947 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 948 200
penalty weights 10000.0
args.step pgd_anneal_iters 948 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 949 200
penalty weights 10000.0
args.step pgd_anneal_iters 949 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 950 200
penalty weights 10000.0
args.step pgd_anneal_iters 950 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 951 200
penalty weights 10000.0
args.step pgd_anneal_iters 951 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 952 200
penalty weights 10000.0
args.step pgd_anneal_iters 952 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 953 200
penalty weights 10000.0
args.step pgd_anneal_iters 953 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 954 200
penalty weights 10000.0
args.step pgd_anneal_iters 954 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 955 200
penalty weights 10000.0
args.step pgd_anneal_iters 955 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 956 200
penalty weights 10000.0
args.step pgd_anneal_iters 956 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 957 200
penalty weights 10000.0
args.step pgd_anneal_iters 957 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 958 200
penalty weights 10000.0
args.step pgd_anneal_iters 958 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 959 200
penalty weights 10000.0
args.step pgd_anneal_iters 959 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 960 200
penalty weights 10000.0
args.step pgd_anneal_iters 960 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 961 200
penalty weights 10000.0
args.step pgd_anneal_iters 961 600
final projection at end of training
dim_v 512
Epoch: [36][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  23.80 ( 23.80)	train_acc   0.39 (  0.43)	train_minacc   0.79 (  0.78)	train_majacc   0.32 (  0.36)	train_corr   0.00 (  0.00)	l1 3.1484 (3.1443)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.18it/s] 23%|##3       | 6/26 [00:00<00:00, 26.32it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.32it/s] 42%|####2     | 11/26 [00:00<00:00, 33.92it/s] 62%|######1   | 16/26 [00:00<00:00, 39.44it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.44it/s] 81%|########  | 21/26 [00:00<00:00, 37.91it/s]100%|##########| 26/26 [00:00<00:00, 41.22it/s]100%|##########| 26/26 [00:00<00:00, 33.21it/s]
Test: [   0/  26]	Loss 0.666 (0.666)	test_acc   0.44 (  0.44)	test_minacc   0.72 (  0.72)	test_majacc   0.39 (  0.39)	Loss_d 0.666 (0.666)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.39 (  0.39)	test_corr_d   0.19 (  0.19)
Test: [  10/  26]	Loss 0.650 (0.657)	test_acc   0.44 (  0.45)	test_minacc   0.83 (  0.75)	test_majacc   0.38 (  0.39)	Loss_d 0.650 (0.657)	test_acc_d   0.44 (  0.45)	test_minacc_d   0.83 (  0.75)	test_majacc_d   0.38 (  0.39)	test_corr_d   0.25 (  0.22)
Test: [  20/  26]	Loss 0.658 (0.656)	test_acc   0.44 (  0.44)	test_minacc   0.75 (  0.77)	test_majacc   0.39 (  0.38)	Loss_d 0.658 (0.656)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.75 (  0.77)	test_majacc_d   0.39 (  0.38)	test_corr_d   0.27 (  0.23)
Test: [  26/  26]	Loss 0.654 (0.656)	test_acc   0.40 (  0.44)	test_minacc   0.79 (  0.76)	test_majacc   0.32 (  0.38)	Loss_d 0.654 (0.656)	test_acc_d   0.40 (  0.44)	test_minacc_d   0.79 (  0.76)	test_majacc_d   0.32 (  0.38)	test_corr_d   0.21 (  0.23)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.96it/s]
Test: [  0/  1]	Loss 0.787 (0.787)	test_acc   0.65 (  0.65)	test_minacc   0.67 (  0.67)	test_majacc   0.46 (  0.46)	Loss_d 0.787 (0.787)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 0.787 (0.787)	test_acc   0.65 (  0.65)	test_minacc   0.67 (  0.67)	test_majacc   0.46 (  0.46)	Loss_d 0.787 (0.787)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.11 (  0.11)
Overall Timing[ 36/  1]	epoch_time 0.0417 (0.0438)	validation_time 0.0003 (0.0006)	train_time 0.0413 (0.0431)
record: (train_acc, test_acc) (0.6168000086545944, 0.5680000185966492)
last accs (train_acc, test_acc) (0.43600000551342966, 0.6480000019073486)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.76it/s] 15%|#5        | 4/26 [00:00<00:01, 20.63it/s] 31%|###       | 8/26 [00:00<00:00, 27.14it/s] 46%|####6     | 12/26 [00:00<00:00, 30.52it/s] 62%|######1   | 16/26 [00:00<00:00, 32.55it/s] 77%|#######6  | 20/26 [00:00<00:00, 33.91it/s] 92%|#########2| 24/26 [00:00<00:00, 34.44it/s]100%|##########| 26/26 [00:00<00:00, 29.41it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 962 200
penalty weights 10000.0
args.step pgd_anneal_iters 962 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 963 200
penalty weights 10000.0
args.step pgd_anneal_iters 963 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 964 200
penalty weights 10000.0
args.step pgd_anneal_iters 964 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 965 200
penalty weights 10000.0
args.step pgd_anneal_iters 965 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 966 200
penalty weights 10000.0
args.step pgd_anneal_iters 966 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 967 200
penalty weights 10000.0
args.step pgd_anneal_iters 967 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 968 200
penalty weights 10000.0
args.step pgd_anneal_iters 968 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 969 200
penalty weights 10000.0
args.step pgd_anneal_iters 969 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 970 200
penalty weights 10000.0
args.step pgd_anneal_iters 970 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 971 200
penalty weights 10000.0
args.step pgd_anneal_iters 971 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 972 200
penalty weights 10000.0
args.step pgd_anneal_iters 972 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 973 200
penalty weights 10000.0
args.step pgd_anneal_iters 973 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 974 200
penalty weights 10000.0
args.step pgd_anneal_iters 974 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 975 200
penalty weights 10000.0
args.step pgd_anneal_iters 975 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 976 200
penalty weights 10000.0
args.step pgd_anneal_iters 976 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 977 200
penalty weights 10000.0
args.step pgd_anneal_iters 977 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 978 200
penalty weights 10000.0
args.step pgd_anneal_iters 978 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 979 200
penalty weights 10000.0
args.step pgd_anneal_iters 979 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 980 200
penalty weights 10000.0
args.step pgd_anneal_iters 980 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 981 200
penalty weights 10000.0
args.step pgd_anneal_iters 981 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 982 200
penalty weights 10000.0
args.step pgd_anneal_iters 982 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 983 200
penalty weights 10000.0
args.step pgd_anneal_iters 983 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 984 200
penalty weights 10000.0
args.step pgd_anneal_iters 984 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 985 200
penalty weights 10000.0
args.step pgd_anneal_iters 985 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 986 200
penalty weights 10000.0
args.step pgd_anneal_iters 986 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 987 200
penalty weights 10000.0
args.step pgd_anneal_iters 987 600
final projection at end of training
dim_v 512
Epoch: [37][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  23.80 ( 23.80)	train_acc   0.40 (  0.43)	train_minacc   0.79 (  0.77)	train_majacc   0.32 (  0.37)	train_corr   0.00 (  0.00)	l1 3.1540 (3.1504)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.43it/s] 15%|#5        | 4/26 [00:00<00:01, 17.28it/s] 35%|###4      | 9/26 [00:00<00:00, 29.39it/s]                                               35%|###4      | 9/26 [00:00<00:00, 29.39it/s] 54%|#####3    | 14/26 [00:00<00:00, 35.97it/s] 73%|#######3  | 19/26 [00:00<00:00, 39.27it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 39.27it/s] 92%|#########2| 24/26 [00:00<00:00, 39.74it/s]100%|##########| 26/26 [00:00<00:00, 33.83it/s]
Test: [   0/  26]	Loss 0.666 (0.666)	test_acc   0.43 (  0.43)	test_minacc   0.69 (  0.69)	test_majacc   0.39 (  0.39)	Loss_d 0.666 (0.666)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.39 (  0.39)	test_corr_d   0.19 (  0.19)
Test: [  10/  26]	Loss 0.650 (0.657)	test_acc   0.44 (  0.45)	test_minacc   0.83 (  0.74)	test_majacc   0.38 (  0.40)	Loss_d 0.650 (0.657)	test_acc_d   0.44 (  0.45)	test_minacc_d   0.83 (  0.74)	test_majacc_d   0.38 (  0.40)	test_corr_d   0.25 (  0.22)
Test: [  20/  26]	Loss 0.659 (0.656)	test_acc   0.45 (  0.44)	test_minacc   0.75 (  0.76)	test_majacc   0.40 (  0.39)	Loss_d 0.659 (0.656)	test_acc_d   0.45 (  0.44)	test_minacc_d   0.75 (  0.76)	test_majacc_d   0.40 (  0.39)	test_corr_d   0.27 (  0.23)
Test: [  26/  26]	Loss 0.654 (0.656)	test_acc   0.39 (  0.44)	test_minacc   0.77 (  0.75)	test_majacc   0.32 (  0.38)	Loss_d 0.654 (0.656)	test_acc_d   0.39 (  0.44)	test_minacc_d   0.77 (  0.75)	test_majacc_d   0.32 (  0.38)	test_corr_d   0.21 (  0.23)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.97it/s]
Test: [  0/  1]	Loss 0.788 (0.788)	test_acc   0.64 (  0.64)	test_minacc   0.66 (  0.66)	test_majacc   0.46 (  0.46)	Loss_d 0.788 (0.788)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.12 (  0.12)
Test: [  1/  1]	Loss 0.788 (0.788)	test_acc   0.64 (  0.64)	test_minacc   0.66 (  0.66)	test_majacc   0.46 (  0.46)	Loss_d 0.788 (0.788)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.12 (  0.12)
Overall Timing[ 37/  1]	epoch_time 0.0384 (0.0437)	validation_time 0.0004 (0.0006)	train_time 0.0380 (0.0430)
record: (train_acc, test_acc) (0.6168000086545944, 0.5680000185966492)
last accs (train_acc, test_acc) (0.4379000051915646, 0.6430000066757202)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.90it/s] 23%|##3       | 6/26 [00:00<00:00, 26.68it/s] 38%|###8      | 10/26 [00:00<00:00, 29.42it/s] 54%|#####3    | 14/26 [00:00<00:00, 30.61it/s] 69%|######9   | 18/26 [00:00<00:00, 30.89it/s] 85%|########4 | 22/26 [00:00<00:00, 32.10it/s]100%|##########| 26/26 [00:00<00:00, 32.99it/s]100%|##########| 26/26 [00:00<00:00, 28.94it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 988 200
penalty weights 10000.0
args.step pgd_anneal_iters 988 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 989 200
penalty weights 10000.0
args.step pgd_anneal_iters 989 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 990 200
penalty weights 10000.0
args.step pgd_anneal_iters 990 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 991 200
penalty weights 10000.0
args.step pgd_anneal_iters 991 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 992 200
penalty weights 10000.0
args.step pgd_anneal_iters 992 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 993 200
penalty weights 10000.0
args.step pgd_anneal_iters 993 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 994 200
penalty weights 10000.0
args.step pgd_anneal_iters 994 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 995 200
penalty weights 10000.0
args.step pgd_anneal_iters 995 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 996 200
penalty weights 10000.0
args.step pgd_anneal_iters 996 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 997 200
penalty weights 10000.0
args.step pgd_anneal_iters 997 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 998 200
penalty weights 10000.0
args.step pgd_anneal_iters 998 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 999 200
penalty weights 10000.0
args.step pgd_anneal_iters 999 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1000 200
penalty weights 10000.0
args.step pgd_anneal_iters 1000 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1001 200
penalty weights 10000.0
args.step pgd_anneal_iters 1001 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1002 200
penalty weights 10000.0
args.step pgd_anneal_iters 1002 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1003 200
penalty weights 10000.0
args.step pgd_anneal_iters 1003 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1004 200
penalty weights 10000.0
args.step pgd_anneal_iters 1004 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1005 200
penalty weights 10000.0
args.step pgd_anneal_iters 1005 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1006 200
penalty weights 10000.0
args.step pgd_anneal_iters 1006 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1007 200
penalty weights 10000.0
args.step pgd_anneal_iters 1007 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1008 200
penalty weights 10000.0
args.step pgd_anneal_iters 1008 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1009 200
penalty weights 10000.0
args.step pgd_anneal_iters 1009 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1010 200
penalty weights 10000.0
args.step pgd_anneal_iters 1010 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1011 200
penalty weights 10000.0
args.step pgd_anneal_iters 1011 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1012 200
penalty weights 10000.0
args.step pgd_anneal_iters 1012 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1013 200
penalty weights 10000.0
args.step pgd_anneal_iters 1013 600
final projection at end of training
dim_v 512
Epoch: [38][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  23.80 ( 23.80)	train_acc   0.38 (  0.43)	train_minacc   0.74 (  0.75)	train_majacc   0.32 (  0.38)	train_corr   0.00 (  0.00)	l1 3.1593 (3.1561)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.20it/s] 27%|##6       | 7/26 [00:00<00:00, 32.28it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.28it/s] 46%|####6     | 12/26 [00:00<00:00, 37.03it/s] 65%|######5   | 17/26 [00:00<00:00, 39.82it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.82it/s] 85%|########4 | 22/26 [00:00<00:00, 40.18it/s]100%|##########| 26/26 [00:00<00:00, 35.33it/s]
Test: [   0/  26]	Loss 0.667 (0.667)	test_acc   0.44 (  0.44)	test_minacc   0.67 (  0.67)	test_majacc   0.39 (  0.39)	Loss_d 0.667 (0.667)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.39 (  0.39)	test_corr_d   0.19 (  0.19)
Test: [  10/  26]	Loss 0.650 (0.658)	test_acc   0.44 (  0.45)	test_minacc   0.83 (  0.73)	test_majacc   0.38 (  0.40)	Loss_d 0.650 (0.658)	test_acc_d   0.44 (  0.45)	test_minacc_d   0.83 (  0.73)	test_majacc_d   0.38 (  0.40)	test_corr_d   0.25 (  0.22)
Test: [  20/  26]	Loss 0.659 (0.657)	test_acc   0.46 (  0.45)	test_minacc   0.73 (  0.74)	test_majacc   0.41 (  0.39)	Loss_d 0.659 (0.657)	test_acc_d   0.46 (  0.45)	test_minacc_d   0.73 (  0.74)	test_majacc_d   0.41 (  0.39)	test_corr_d   0.27 (  0.23)
Test: [  26/  26]	Loss 0.655 (0.657)	test_acc   0.38 (  0.44)	test_minacc   0.72 (  0.74)	test_majacc   0.31 (  0.39)	Loss_d 0.655 (0.657)	test_acc_d   0.38 (  0.44)	test_minacc_d   0.72 (  0.74)	test_majacc_d   0.31 (  0.39)	test_corr_d   0.21 (  0.23)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.27it/s]
Test: [  0/  1]	Loss 0.788 (0.788)	test_acc   0.63 (  0.63)	test_minacc   0.65 (  0.65)	test_majacc   0.46 (  0.46)	Loss_d 0.788 (0.788)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.12 (  0.12)
Test: [  1/  1]	Loss 0.788 (0.788)	test_acc   0.63 (  0.63)	test_minacc   0.65 (  0.65)	test_majacc   0.46 (  0.46)	Loss_d 0.788 (0.788)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.12 (  0.12)
Overall Timing[ 38/  1]	epoch_time 0.0411 (0.0436)	validation_time 0.0004 (0.0006)	train_time 0.0407 (0.0429)
record: (train_acc, test_acc) (0.6168000086545944, 0.5680000185966492)
last accs (train_acc, test_acc) (0.44040000611543656, 0.6340000033378601)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.20it/s] 15%|#5        | 4/26 [00:00<00:01, 18.53it/s] 31%|###       | 8/26 [00:00<00:00, 25.90it/s] 46%|####6     | 12/26 [00:00<00:00, 29.63it/s] 62%|######1   | 16/26 [00:00<00:00, 31.73it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.20it/s] 92%|#########2| 24/26 [00:00<00:00, 30.90it/s]100%|##########| 26/26 [00:00<00:00, 27.47it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1014 200
penalty weights 10000.0
args.step pgd_anneal_iters 1014 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1015 200
penalty weights 10000.0
args.step pgd_anneal_iters 1015 600
dim_v 512
rho, theta 368 tensor(-0.0010, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1016 200
penalty weights 10000.0
args.step pgd_anneal_iters 1016 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1017 200
penalty weights 10000.0
args.step pgd_anneal_iters 1017 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1018 200
penalty weights 10000.0
args.step pgd_anneal_iters 1018 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1019 200
penalty weights 10000.0
args.step pgd_anneal_iters 1019 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1020 200
penalty weights 10000.0
args.step pgd_anneal_iters 1020 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1021 200
penalty weights 10000.0
args.step pgd_anneal_iters 1021 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1022 200
penalty weights 10000.0
args.step pgd_anneal_iters 1022 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1023 200
penalty weights 10000.0
args.step pgd_anneal_iters 1023 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1024 200
penalty weights 10000.0
args.step pgd_anneal_iters 1024 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1025 200
penalty weights 10000.0
args.step pgd_anneal_iters 1025 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1026 200
penalty weights 10000.0
args.step pgd_anneal_iters 1026 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1027 200
penalty weights 10000.0
args.step pgd_anneal_iters 1027 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1028 200
penalty weights 10000.0
args.step pgd_anneal_iters 1028 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1029 200
penalty weights 10000.0
args.step pgd_anneal_iters 1029 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1030 200
penalty weights 10000.0
args.step pgd_anneal_iters 1030 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1031 200
penalty weights 10000.0
args.step pgd_anneal_iters 1031 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1032 200
penalty weights 10000.0
args.step pgd_anneal_iters 1032 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1033 200
penalty weights 10000.0
args.step pgd_anneal_iters 1033 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1034 200
penalty weights 10000.0
args.step pgd_anneal_iters 1034 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1035 200
penalty weights 10000.0
args.step pgd_anneal_iters 1035 600
dim_v 512
rho, theta 384 tensor(-0.0006, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1036 200
penalty weights 10000.0
args.step pgd_anneal_iters 1036 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1037 200
penalty weights 10000.0
args.step pgd_anneal_iters 1037 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1038 200
penalty weights 10000.0
args.step pgd_anneal_iters 1038 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1039 200
penalty weights 10000.0
args.step pgd_anneal_iters 1039 600
final projection at end of training
dim_v 512
rho, theta 361 tensor(-0.0002, device='cuda:0')
Epoch: [39][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm  23.80 ( 23.80)	train_acc   0.40 (  0.49)	train_minacc   0.77 (  0.62)	train_majacc   0.33 (  0.47)	train_corr   0.00 (  0.00)	l1 3.1693 (3.1479)	zero_count 0.0000 (10.5300)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.37it/s] 19%|#9        | 5/26 [00:00<00:00, 25.32it/s] 38%|###8      | 10/26 [00:00<00:00, 34.92it/s]                                                38%|###8      | 10/26 [00:00<00:00, 34.92it/s] 58%|#####7    | 15/26 [00:00<00:00, 38.82it/s] 77%|#######6  | 20/26 [00:00<00:00, 38.70it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 38.70it/s] 96%|#########6| 25/26 [00:00<00:00, 41.32it/s]100%|##########| 26/26 [00:00<00:00, 34.70it/s]
Test: [   0/  26]	Loss 0.669 (0.669)	test_acc   0.46 (  0.46)	test_minacc   0.72 (  0.72)	test_majacc   0.41 (  0.41)	Loss_d 0.669 (0.669)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.41 (  0.41)	test_corr_d   0.19 (  0.19)
Test: [  10/  26]	Loss 0.649 (0.657)	test_acc   0.43 (  0.44)	test_minacc   0.85 (  0.75)	test_majacc   0.36 (  0.39)	Loss_d 0.649 (0.657)	test_acc_d   0.43 (  0.44)	test_minacc_d   0.85 (  0.75)	test_majacc_d   0.36 (  0.39)	test_corr_d   0.26 (  0.22)
Test: [  20/  26]	Loss 0.660 (0.655)	test_acc   0.42 (  0.43)	test_minacc   0.73 (  0.75)	test_majacc   0.37 (  0.38)	Loss_d 0.660 (0.655)	test_acc_d   0.42 (  0.43)	test_minacc_d   0.73 (  0.75)	test_majacc_d   0.37 (  0.38)	test_corr_d   0.28 (  0.23)
Test: [  26/  26]	Loss 0.652 (0.655)	test_acc   0.42 (  0.43)	test_minacc   0.69 (  0.74)	test_majacc   0.37 (  0.38)	Loss_d 0.652 (0.655)	test_acc_d   0.42 (  0.43)	test_minacc_d   0.69 (  0.74)	test_majacc_d   0.37 (  0.38)	test_corr_d   0.23 (  0.24)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.88it/s]
Test: [  0/  1]	Loss 0.829 (0.829)	test_acc   0.65 (  0.65)	test_minacc   0.68 (  0.68)	test_majacc   0.38 (  0.38)	Loss_d 0.829 (0.829)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.68 (  0.68)	test_majacc_d   0.38 (  0.38)	test_corr_d   0.06 (  0.06)
Test: [  1/  1]	Loss 0.829 (0.829)	test_acc   0.65 (  0.65)	test_minacc   0.68 (  0.68)	test_majacc   0.38 (  0.38)	Loss_d 0.829 (0.829)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.68 (  0.68)	test_majacc_d   0.38 (  0.38)	test_corr_d   0.06 (  0.06)
Overall Timing[ 39/  1]	epoch_time 0.0428 (0.0436)	validation_time 0.0003 (0.0006)	train_time 0.0425 (0.0429)
record: (train_acc, test_acc) (0.6168000086545944, 0.5680000185966492)
last accs (train_acc, test_acc) (0.43170000436902045, 0.6470000147819519)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.28it/s] 19%|#9        | 5/26 [00:00<00:01, 20.72it/s] 31%|###       | 8/26 [00:00<00:00, 24.09it/s] 42%|####2     | 11/26 [00:00<00:00, 25.44it/s] 58%|#####7    | 15/26 [00:00<00:00, 29.42it/s] 73%|#######3  | 19/26 [00:00<00:00, 31.96it/s] 88%|########8 | 23/26 [00:00<00:00, 30.27it/s]100%|##########| 26/26 [00:00<00:00, 26.16it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1040 200
penalty weights 10000.0
args.step pgd_anneal_iters 1040 600
dim_v 512
rho, theta 357 tensor(-7.2760e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1041 200
penalty weights 10000.0
args.step pgd_anneal_iters 1041 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1042 200
penalty weights 10000.0
args.step pgd_anneal_iters 1042 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1043 200
penalty weights 10000.0
args.step pgd_anneal_iters 1043 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1044 200
penalty weights 10000.0
args.step pgd_anneal_iters 1044 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1045 200
penalty weights 10000.0
args.step pgd_anneal_iters 1045 600
dim_v 512
rho, theta 325 tensor(-0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1046 200
penalty weights 10000.0
args.step pgd_anneal_iters 1046 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1047 200
penalty weights 10000.0
args.step pgd_anneal_iters 1047 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1048 200
penalty weights 10000.0
args.step pgd_anneal_iters 1048 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1049 200
penalty weights 10000.0
args.step pgd_anneal_iters 1049 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1050 200
penalty weights 10000.0
args.step pgd_anneal_iters 1050 600
dim_v 512
rho, theta 316 tensor(-7.3861e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1051 200
penalty weights 10000.0
args.step pgd_anneal_iters 1051 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1052 200
penalty weights 10000.0
args.step pgd_anneal_iters 1052 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1053 200
penalty weights 10000.0
args.step pgd_anneal_iters 1053 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1054 200
penalty weights 10000.0
args.step pgd_anneal_iters 1054 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1055 200
penalty weights 10000.0
args.step pgd_anneal_iters 1055 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1056 200
penalty weights 10000.0
args.step pgd_anneal_iters 1056 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1057 200
penalty weights 10000.0
args.step pgd_anneal_iters 1057 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1058 200
penalty weights 10000.0
args.step pgd_anneal_iters 1058 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1059 200
penalty weights 10000.0
args.step pgd_anneal_iters 1059 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1060 200
penalty weights 10000.0
args.step pgd_anneal_iters 1060 600
dim_v 512
rho, theta 474 tensor(-3.0367e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1061 200
penalty weights 10000.0
args.step pgd_anneal_iters 1061 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1062 200
penalty weights 10000.0
args.step pgd_anneal_iters 1062 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1063 200
penalty weights 10000.0
args.step pgd_anneal_iters 1063 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1064 200
penalty weights 10000.0
args.step pgd_anneal_iters 1064 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1065 200
penalty weights 10000.0
args.step pgd_anneal_iters 1065 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [40][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm  23.80 ( 23.80)	train_acc   0.40 (  0.43)	train_minacc   0.79 (  0.78)	train_majacc   0.32 (  0.37)	train_corr   0.00 (  0.00)	l1 3.1498 (3.1670)	zero_count 0.0000 (28.1580)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.08it/s] 19%|#9        | 5/26 [00:00<00:00, 22.94it/s] 38%|###8      | 10/26 [00:00<00:00, 33.22it/s]                                                38%|###8      | 10/26 [00:00<00:00, 33.22it/s] 58%|#####7    | 15/26 [00:00<00:00, 38.11it/s] 77%|#######6  | 20/26 [00:00<00:00, 36.26it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 36.26it/s] 96%|#########6| 25/26 [00:00<00:00, 39.14it/s]100%|##########| 26/26 [00:00<00:00, 33.17it/s]
Test: [   0/  26]	Loss 0.663 (0.663)	test_acc   0.44 (  0.44)	test_minacc   0.77 (  0.77)	test_majacc   0.38 (  0.38)	Loss_d 0.663 (0.663)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.77 (  0.77)	test_majacc_d   0.38 (  0.38)	test_corr_d   0.21 (  0.21)
Test: [  10/  26]	Loss 0.646 (0.653)	test_acc   0.41 (  0.43)	test_minacc   0.87 (  0.80)	test_majacc   0.33 (  0.37)	Loss_d 0.646 (0.653)	test_acc_d   0.41 (  0.43)	test_minacc_d   0.87 (  0.80)	test_majacc_d   0.33 (  0.37)	test_corr_d   0.27 (  0.23)
Test: [  20/  26]	Loss 0.655 (0.652)	test_acc   0.42 (  0.42)	test_minacc   0.81 (  0.79)	test_majacc   0.35 (  0.35)	Loss_d 0.655 (0.652)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.81 (  0.79)	test_majacc_d   0.35 (  0.35)	test_corr_d   0.29 (  0.25)
Test: [  26/  26]	Loss 0.646 (0.652)	test_acc   0.40 (  0.42)	test_minacc   0.79 (  0.79)	test_majacc   0.32 (  0.35)	Loss_d 0.646 (0.652)	test_acc_d   0.40 (  0.42)	test_minacc_d   0.79 (  0.79)	test_majacc_d   0.32 (  0.35)	test_corr_d   0.25 (  0.25)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.27it/s]
Test: [  0/  1]	Loss 0.822 (0.822)	test_acc   0.69 (  0.69)	test_minacc   0.73 (  0.73)	test_majacc   0.37 (  0.37)	Loss_d 0.822 (0.822)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.73 (  0.73)	test_majacc_d   0.37 (  0.37)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 0.822 (0.822)	test_acc   0.69 (  0.69)	test_minacc   0.73 (  0.73)	test_majacc   0.37 (  0.37)	Loss_d 0.822 (0.822)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.73 (  0.73)	test_majacc_d   0.37 (  0.37)	test_corr_d   0.09 (  0.09)
Overall Timing[ 40/  1]	epoch_time 0.0438 (0.0436)	validation_time 0.0004 (0.0006)	train_time 0.0434 (0.0429)
record: (train_acc, test_acc) (0.6168000086545944, 0.5680000185966492)
last accs (train_acc, test_acc) (0.4173000054657459, 0.690000057220459)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.73it/s] 15%|#5        | 4/26 [00:00<00:01, 17.41it/s] 31%|###       | 8/26 [00:00<00:00, 24.86it/s] 46%|####6     | 12/26 [00:00<00:00, 28.91it/s] 62%|######1   | 16/26 [00:00<00:00, 31.24it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.81it/s] 92%|#########2| 24/26 [00:00<00:00, 33.71it/s]100%|##########| 26/26 [00:00<00:00, 27.92it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1066 200
penalty weights 10000.0
args.step pgd_anneal_iters 1066 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1067 200
penalty weights 10000.0
args.step pgd_anneal_iters 1067 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1068 200
penalty weights 10000.0
args.step pgd_anneal_iters 1068 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1069 200
penalty weights 10000.0
args.step pgd_anneal_iters 1069 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1070 200
penalty weights 10000.0
args.step pgd_anneal_iters 1070 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1071 200
penalty weights 10000.0
args.step pgd_anneal_iters 1071 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1072 200
penalty weights 10000.0
args.step pgd_anneal_iters 1072 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1073 200
penalty weights 10000.0
args.step pgd_anneal_iters 1073 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1074 200
penalty weights 10000.0
args.step pgd_anneal_iters 1074 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1075 200
penalty weights 10000.0
args.step pgd_anneal_iters 1075 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1076 200
penalty weights 10000.0
args.step pgd_anneal_iters 1076 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1077 200
penalty weights 10000.0
args.step pgd_anneal_iters 1077 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1078 200
penalty weights 10000.0
args.step pgd_anneal_iters 1078 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1079 200
penalty weights 10000.0
args.step pgd_anneal_iters 1079 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1080 200
penalty weights 10000.0
args.step pgd_anneal_iters 1080 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1081 200
penalty weights 10000.0
args.step pgd_anneal_iters 1081 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1082 200
penalty weights 10000.0
args.step pgd_anneal_iters 1082 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1083 200
penalty weights 10000.0
args.step pgd_anneal_iters 1083 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1084 200
penalty weights 10000.0
args.step pgd_anneal_iters 1084 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1085 200
penalty weights 10000.0
args.step pgd_anneal_iters 1085 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1086 200
penalty weights 10000.0
args.step pgd_anneal_iters 1086 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1087 200
penalty weights 10000.0
args.step pgd_anneal_iters 1087 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1088 200
penalty weights 10000.0
args.step pgd_anneal_iters 1088 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1089 200
penalty weights 10000.0
args.step pgd_anneal_iters 1089 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1090 200
penalty weights 10000.0
args.step pgd_anneal_iters 1090 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1091 200
penalty weights 10000.0
args.step pgd_anneal_iters 1091 600
final projection at end of training
dim_v 512
Epoch: [41][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm  23.80 ( 23.80)	train_acc   0.38 (  0.42)	train_minacc   0.79 (  0.79)	train_majacc   0.31 (  0.35)	train_corr   0.00 (  0.00)	l1 3.1544 (3.1490)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.23it/s] 27%|##6       | 7/26 [00:00<00:00, 27.34it/s]                                               27%|##6       | 7/26 [00:00<00:00, 27.34it/s] 50%|#####     | 13/26 [00:00<00:00, 37.08it/s] 73%|#######3  | 19/26 [00:00<00:00, 43.65it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 43.65it/s] 92%|#########2| 24/26 [00:00<00:00, 45.26it/s]100%|##########| 26/26 [00:00<00:00, 35.95it/s]
Test: [   0/  26]	Loss 0.662 (0.662)	test_acc   0.44 (  0.44)	test_minacc   0.75 (  0.75)	test_majacc   0.38 (  0.38)	Loss_d 0.662 (0.662)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.75 (  0.75)	test_majacc_d   0.38 (  0.38)	test_corr_d   0.21 (  0.21)
Test: [  10/  26]	Loss 0.645 (0.653)	test_acc   0.40 (  0.43)	test_minacc   0.87 (  0.79)	test_majacc   0.33 (  0.36)	Loss_d 0.645 (0.653)	test_acc_d   0.40 (  0.43)	test_minacc_d   0.87 (  0.79)	test_majacc_d   0.33 (  0.36)	test_corr_d   0.27 (  0.24)
Test: [  20/  26]	Loss 0.654 (0.652)	test_acc   0.42 (  0.42)	test_minacc   0.80 (  0.79)	test_majacc   0.35 (  0.35)	Loss_d 0.654 (0.652)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.80 (  0.79)	test_majacc_d   0.35 (  0.35)	test_corr_d   0.29 (  0.25)
Test: [  26/  26]	Loss 0.648 (0.652)	test_acc   0.38 (  0.41)	test_minacc   0.79 (  0.79)	test_majacc   0.31 (  0.35)	Loss_d 0.648 (0.652)	test_acc_d   0.38 (  0.41)	test_minacc_d   0.79 (  0.79)	test_majacc_d   0.31 (  0.35)	test_corr_d   0.24 (  0.25)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.25it/s]
Test: [  0/  1]	Loss 0.822 (0.822)	test_acc   0.69 (  0.69)	test_minacc   0.72 (  0.72)	test_majacc   0.36 (  0.36)	Loss_d 0.822 (0.822)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.36 (  0.36)	test_corr_d   0.10 (  0.10)
Test: [  1/  1]	Loss 0.822 (0.822)	test_acc   0.69 (  0.69)	test_minacc   0.72 (  0.72)	test_majacc   0.36 (  0.36)	Loss_d 0.822 (0.822)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.36 (  0.36)	test_corr_d   0.10 (  0.10)
Overall Timing[ 41/  1]	epoch_time 0.0405 (0.0435)	validation_time 0.0003 (0.0006)	train_time 0.0401 (0.0429)
record: (train_acc, test_acc) (0.6168000086545944, 0.5680000185966492)
last accs (train_acc, test_acc) (0.4130000050961971, 0.6880000233650208)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.77it/s] 19%|#9        | 5/26 [00:00<00:00, 22.96it/s] 35%|###4      | 9/26 [00:00<00:00, 28.58it/s] 50%|#####     | 13/26 [00:00<00:00, 31.34it/s] 65%|######5   | 17/26 [00:00<00:00, 33.14it/s] 81%|########  | 21/26 [00:00<00:00, 33.75it/s] 96%|#########6| 25/26 [00:00<00:00, 34.63it/s]100%|##########| 26/26 [00:00<00:00, 29.25it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1092 200
penalty weights 10000.0
args.step pgd_anneal_iters 1092 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1093 200
penalty weights 10000.0
args.step pgd_anneal_iters 1093 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1094 200
penalty weights 10000.0
args.step pgd_anneal_iters 1094 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1095 200
penalty weights 10000.0
args.step pgd_anneal_iters 1095 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1096 200
penalty weights 10000.0
args.step pgd_anneal_iters 1096 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1097 200
penalty weights 10000.0
args.step pgd_anneal_iters 1097 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1098 200
penalty weights 10000.0
args.step pgd_anneal_iters 1098 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1099 200
penalty weights 10000.0
args.step pgd_anneal_iters 1099 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1100 200
penalty weights 10000.0
args.step pgd_anneal_iters 1100 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1101 200
penalty weights 10000.0
args.step pgd_anneal_iters 1101 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1102 200
penalty weights 10000.0
args.step pgd_anneal_iters 1102 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1103 200
penalty weights 10000.0
args.step pgd_anneal_iters 1103 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1104 200
penalty weights 10000.0
args.step pgd_anneal_iters 1104 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1105 200
penalty weights 10000.0
args.step pgd_anneal_iters 1105 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1106 200
penalty weights 10000.0
args.step pgd_anneal_iters 1106 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1107 200
penalty weights 10000.0
args.step pgd_anneal_iters 1107 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1108 200
penalty weights 10000.0
args.step pgd_anneal_iters 1108 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1109 200
penalty weights 10000.0
args.step pgd_anneal_iters 1109 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1110 200
penalty weights 10000.0
args.step pgd_anneal_iters 1110 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1111 200
penalty weights 10000.0
args.step pgd_anneal_iters 1111 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1112 200
penalty weights 10000.0
args.step pgd_anneal_iters 1112 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1113 200
penalty weights 10000.0
args.step pgd_anneal_iters 1113 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1114 200
penalty weights 10000.0
args.step pgd_anneal_iters 1114 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1115 200
penalty weights 10000.0
args.step pgd_anneal_iters 1115 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1116 200
penalty weights 10000.0
args.step pgd_anneal_iters 1116 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1117 200
penalty weights 10000.0
args.step pgd_anneal_iters 1117 600
final projection at end of training
dim_v 512
rho, theta 359 tensor(-0.0001, device='cuda:0')
Epoch: [42][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm  23.80 ( 23.80)	train_acc   0.39 (  0.41)	train_minacc   0.77 (  0.79)	train_majacc   0.32 (  0.35)	train_corr   0.00 (  0.00)	l1 3.1611 (3.1561)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.20it/s] 19%|#9        | 5/26 [00:00<00:01, 19.42it/s] 38%|###8      | 10/26 [00:00<00:00, 30.65it/s]                                                38%|###8      | 10/26 [00:00<00:00, 30.65it/s] 62%|######1   | 16/26 [00:00<00:00, 39.07it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.07it/s] 85%|########4 | 22/26 [00:00<00:00, 41.28it/s]100%|##########| 26/26 [00:00<00:00, 33.93it/s]
Test: [   0/  26]	Loss 0.666 (0.666)	test_acc   0.46 (  0.46)	test_minacc   0.70 (  0.70)	test_majacc   0.41 (  0.41)	Loss_d 0.666 (0.666)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.41 (  0.41)	test_corr_d   0.19 (  0.19)
Test: [  10/  26]	Loss 0.649 (0.658)	test_acc   0.42 (  0.45)	test_minacc   0.87 (  0.76)	test_majacc   0.35 (  0.39)	Loss_d 0.649 (0.658)	test_acc_d   0.42 (  0.45)	test_minacc_d   0.87 (  0.76)	test_majacc_d   0.35 (  0.39)	test_corr_d   0.26 (  0.22)
Test: [  20/  26]	Loss 0.658 (0.656)	test_acc   0.43 (  0.44)	test_minacc   0.76 (  0.76)	test_majacc   0.37 (  0.38)	Loss_d 0.658 (0.656)	test_acc_d   0.43 (  0.44)	test_minacc_d   0.76 (  0.76)	test_majacc_d   0.37 (  0.38)	test_corr_d   0.27 (  0.23)
Test: [  26/  26]	Loss 0.653 (0.656)	test_acc   0.41 (  0.43)	test_minacc   0.72 (  0.76)	test_majacc   0.36 (  0.37)	Loss_d 0.653 (0.656)	test_acc_d   0.41 (  0.43)	test_minacc_d   0.72 (  0.76)	test_majacc_d   0.36 (  0.37)	test_corr_d   0.23 (  0.23)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.56it/s]
Test: [  0/  1]	Loss 0.823 (0.823)	test_acc   0.65 (  0.65)	test_minacc   0.68 (  0.68)	test_majacc   0.38 (  0.38)	Loss_d 0.823 (0.823)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.68 (  0.68)	test_majacc_d   0.38 (  0.38)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 0.823 (0.823)	test_acc   0.65 (  0.65)	test_minacc   0.68 (  0.68)	test_majacc   0.38 (  0.38)	Loss_d 0.823 (0.823)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.68 (  0.68)	test_majacc_d   0.38 (  0.38)	test_corr_d   0.09 (  0.09)
Overall Timing[ 42/  1]	epoch_time 0.0428 (0.0435)	validation_time 0.0005 (0.0006)	train_time 0.0423 (0.0429)
record: (train_acc, test_acc) (0.6168000086545944, 0.5680000185966492)
last accs (train_acc, test_acc) (0.43210000467300413, 0.6530000567436218)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.74it/s] 19%|#9        | 5/26 [00:00<00:00, 22.35it/s] 31%|###       | 8/26 [00:00<00:00, 24.36it/s] 50%|#####     | 13/26 [00:00<00:00, 28.83it/s] 65%|######5   | 17/26 [00:00<00:00, 31.11it/s] 81%|########  | 21/26 [00:00<00:00, 29.91it/s] 96%|#########6| 25/26 [00:00<00:00, 31.45it/s]100%|##########| 26/26 [00:00<00:00, 27.68it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1118 200
penalty weights 10000.0
args.step pgd_anneal_iters 1118 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1119 200
penalty weights 10000.0
args.step pgd_anneal_iters 1119 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1120 200
penalty weights 10000.0
args.step pgd_anneal_iters 1120 600
dim_v 512
rho, theta 339 tensor(-4.9909e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1121 200
penalty weights 10000.0
args.step pgd_anneal_iters 1121 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1122 200
penalty weights 10000.0
args.step pgd_anneal_iters 1122 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1123 200
penalty weights 10000.0
args.step pgd_anneal_iters 1123 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1124 200
penalty weights 10000.0
args.step pgd_anneal_iters 1124 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1125 200
penalty weights 10000.0
args.step pgd_anneal_iters 1125 600
dim_v 512
rho, theta 314 tensor(-4.3618e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1126 200
penalty weights 10000.0
args.step pgd_anneal_iters 1126 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1127 200
penalty weights 10000.0
args.step pgd_anneal_iters 1127 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1128 200
penalty weights 10000.0
args.step pgd_anneal_iters 1128 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1129 200
penalty weights 10000.0
args.step pgd_anneal_iters 1129 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1130 200
penalty weights 10000.0
args.step pgd_anneal_iters 1130 600
dim_v 512
rho, theta 320 tensor(-4.7372e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1131 200
penalty weights 10000.0
args.step pgd_anneal_iters 1131 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1132 200
penalty weights 10000.0
args.step pgd_anneal_iters 1132 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1133 200
penalty weights 10000.0
args.step pgd_anneal_iters 1133 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1134 200
penalty weights 10000.0
args.step pgd_anneal_iters 1134 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1135 200
penalty weights 10000.0
args.step pgd_anneal_iters 1135 600
dim_v 512
rho, theta 483 tensor(5.7681e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1136 200
penalty weights 10000.0
args.step pgd_anneal_iters 1136 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1137 200
penalty weights 10000.0
args.step pgd_anneal_iters 1137 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1138 200
penalty weights 10000.0
args.step pgd_anneal_iters 1138 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1139 200
penalty weights 10000.0
args.step pgd_anneal_iters 1139 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1140 200
penalty weights 10000.0
args.step pgd_anneal_iters 1140 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1141 200
penalty weights 10000.0
args.step pgd_anneal_iters 1141 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1142 200
penalty weights 10000.0
args.step pgd_anneal_iters 1142 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1143 200
penalty weights 10000.0
args.step pgd_anneal_iters 1143 600
final projection at end of training
dim_v 512
Epoch: [43][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm  23.80 ( 23.80)	train_acc   0.42 (  0.44)	train_minacc   0.72 (  0.75)	train_majacc   0.37 (  0.38)	train_corr   0.00 (  0.00)	l1 3.1560 (3.1659)	zero_count 0.0000 (28.8600)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.18it/s] 27%|##6       | 7/26 [00:00<00:00, 31.09it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.09it/s] 46%|####6     | 12/26 [00:00<00:00, 38.46it/s] 69%|######9   | 18/26 [00:00<00:00, 40.83it/s]                                                69%|######9   | 18/26 [00:00<00:00, 40.83it/s] 88%|########8 | 23/26 [00:00<00:00, 42.27it/s]100%|##########| 26/26 [00:00<00:00, 37.08it/s]
Test: [   0/  26]	Loss 0.662 (0.662)	test_acc   0.46 (  0.46)	test_minacc   0.67 (  0.67)	test_majacc   0.43 (  0.43)	Loss_d 0.662 (0.662)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.21 (  0.21)
Test: [  10/  26]	Loss 0.647 (0.654)	test_acc   0.43 (  0.45)	test_minacc   0.83 (  0.75)	test_majacc   0.36 (  0.40)	Loss_d 0.647 (0.654)	test_acc_d   0.43 (  0.45)	test_minacc_d   0.83 (  0.75)	test_majacc_d   0.36 (  0.40)	test_corr_d   0.27 (  0.23)
Test: [  20/  26]	Loss 0.654 (0.653)	test_acc   0.44 (  0.44)	test_minacc   0.78 (  0.75)	test_majacc   0.38 (  0.39)	Loss_d 0.654 (0.653)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.78 (  0.75)	test_majacc_d   0.38 (  0.39)	test_corr_d   0.29 (  0.24)
Test: [  26/  26]	Loss 0.650 (0.653)	test_acc   0.42 (  0.44)	test_minacc   0.72 (  0.74)	test_majacc   0.36 (  0.38)	Loss_d 0.650 (0.653)	test_acc_d   0.42 (  0.44)	test_minacc_d   0.72 (  0.74)	test_majacc_d   0.36 (  0.38)	test_corr_d   0.24 (  0.25)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.34it/s]
Test: [  0/  1]	Loss 0.822 (0.822)	test_acc   0.65 (  0.65)	test_minacc   0.68 (  0.68)	test_majacc   0.39 (  0.39)	Loss_d 0.822 (0.822)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.68 (  0.68)	test_majacc_d   0.39 (  0.39)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 0.822 (0.822)	test_acc   0.65 (  0.65)	test_minacc   0.68 (  0.68)	test_majacc   0.39 (  0.39)	Loss_d 0.822 (0.822)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.68 (  0.68)	test_majacc_d   0.39 (  0.39)	test_corr_d   0.11 (  0.11)
Overall Timing[ 43/  1]	epoch_time 0.0467 (0.0436)	validation_time 0.0003 (0.0005)	train_time 0.0463 (0.0429)
record: (train_acc, test_acc) (0.6168000086545944, 0.5680000185966492)
last accs (train_acc, test_acc) (0.43880000373721123, 0.6470000147819519)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.72it/s] 15%|#5        | 4/26 [00:00<00:01, 18.37it/s] 27%|##6       | 7/26 [00:00<00:00, 21.74it/s] 42%|####2     | 11/26 [00:00<00:00, 27.15it/s] 54%|#####3    | 14/26 [00:00<00:00, 27.71it/s] 65%|######5   | 17/26 [00:00<00:00, 26.90it/s] 81%|########  | 21/26 [00:00<00:00, 29.05it/s] 92%|#########2| 24/26 [00:00<00:00, 27.57it/s]100%|##########| 26/26 [00:01<00:00, 24.87it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1144 200
penalty weights 10000.0
args.step pgd_anneal_iters 1144 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1145 200
penalty weights 10000.0
args.step pgd_anneal_iters 1145 600
dim_v 512
rho, theta 335 tensor(-5.0540e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1146 200
penalty weights 10000.0
args.step pgd_anneal_iters 1146 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1147 200
penalty weights 10000.0
args.step pgd_anneal_iters 1147 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1148 200
penalty weights 10000.0
args.step pgd_anneal_iters 1148 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1149 200
penalty weights 10000.0
args.step pgd_anneal_iters 1149 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1150 200
penalty weights 10000.0
args.step pgd_anneal_iters 1150 600
dim_v 512
rho, theta 325 tensor(-2.3886e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1151 200
penalty weights 10000.0
args.step pgd_anneal_iters 1151 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1152 200
penalty weights 10000.0
args.step pgd_anneal_iters 1152 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1153 200
penalty weights 10000.0
args.step pgd_anneal_iters 1153 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1154 200
penalty weights 10000.0
args.step pgd_anneal_iters 1154 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1155 200
penalty weights 10000.0
args.step pgd_anneal_iters 1155 600
dim_v 512
rho, theta 312 tensor(-5.4676e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1156 200
penalty weights 10000.0
args.step pgd_anneal_iters 1156 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1157 200
penalty weights 10000.0
args.step pgd_anneal_iters 1157 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1158 200
penalty weights 10000.0
args.step pgd_anneal_iters 1158 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1159 200
penalty weights 10000.0
args.step pgd_anneal_iters 1159 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1160 200
penalty weights 10000.0
args.step pgd_anneal_iters 1160 600
dim_v 512
rho, theta 473 tensor(3.6000e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1161 200
penalty weights 10000.0
args.step pgd_anneal_iters 1161 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1162 200
penalty weights 10000.0
args.step pgd_anneal_iters 1162 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1163 200
penalty weights 10000.0
args.step pgd_anneal_iters 1163 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1164 200
penalty weights 10000.0
args.step pgd_anneal_iters 1164 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1165 200
penalty weights 10000.0
args.step pgd_anneal_iters 1165 600
dim_v 512
rho, theta 463 tensor(1.7241e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1166 200
penalty weights 10000.0
args.step pgd_anneal_iters 1166 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1167 200
penalty weights 10000.0
args.step pgd_anneal_iters 1167 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1168 200
penalty weights 10000.0
args.step pgd_anneal_iters 1168 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1169 200
penalty weights 10000.0
args.step pgd_anneal_iters 1169 600
final projection at end of training
dim_v 512
Epoch: [44][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm  23.80 ( 23.80)	train_acc   0.40 (  0.44)	train_minacc   0.72 (  0.74)	train_majacc   0.35 (  0.38)	train_corr   0.00 (  0.00)	l1 3.1554 (3.1639)	zero_count 0.0000 (25.2330)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.96it/s] 27%|##6       | 7/26 [00:00<00:00, 28.41it/s]                                               27%|##6       | 7/26 [00:00<00:00, 28.41it/s] 46%|####6     | 12/26 [00:00<00:00, 35.76it/s] 65%|######5   | 17/26 [00:00<00:00, 36.50it/s]                                                65%|######5   | 17/26 [00:00<00:00, 36.50it/s] 85%|########4 | 22/26 [00:00<00:00, 40.17it/s]100%|##########| 26/26 [00:00<00:00, 33.24it/s]
Test: [   0/  26]	Loss 0.662 (0.662)	test_acc   0.46 (  0.46)	test_minacc   0.69 (  0.69)	test_majacc   0.42 (  0.42)	Loss_d 0.662 (0.662)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.42 (  0.42)	test_corr_d   0.21 (  0.21)
Test: [  10/  26]	Loss 0.646 (0.654)	test_acc   0.42 (  0.45)	test_minacc   0.87 (  0.77)	test_majacc   0.34 (  0.39)	Loss_d 0.646 (0.654)	test_acc_d   0.42 (  0.45)	test_minacc_d   0.87 (  0.77)	test_majacc_d   0.34 (  0.39)	test_corr_d   0.27 (  0.23)
Test: [  20/  26]	Loss 0.654 (0.653)	test_acc   0.44 (  0.44)	test_minacc   0.78 (  0.77)	test_majacc   0.37 (  0.38)	Loss_d 0.654 (0.653)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.78 (  0.77)	test_majacc_d   0.37 (  0.38)	test_corr_d   0.29 (  0.25)
Test: [  26/  26]	Loss 0.650 (0.653)	test_acc   0.40 (  0.43)	test_minacc   0.74 (  0.76)	test_majacc   0.34 (  0.37)	Loss_d 0.650 (0.653)	test_acc_d   0.40 (  0.43)	test_minacc_d   0.74 (  0.76)	test_majacc_d   0.34 (  0.37)	test_corr_d   0.24 (  0.25)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.56it/s]
Test: [  0/  1]	Loss 0.826 (0.826)	test_acc   0.66 (  0.66)	test_minacc   0.69 (  0.69)	test_majacc   0.38 (  0.38)	Loss_d 0.826 (0.826)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.38 (  0.38)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 0.826 (0.826)	test_acc   0.66 (  0.66)	test_minacc   0.69 (  0.69)	test_majacc   0.38 (  0.38)	Loss_d 0.826 (0.826)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.38 (  0.38)	test_corr_d   0.11 (  0.11)
Overall Timing[ 44/  1]	epoch_time 0.0457 (0.0436)	validation_time 0.0004 (0.0005)	train_time 0.0453 (0.0430)
record: (train_acc, test_acc) (0.6168000086545944, 0.5680000185966492)
last accs (train_acc, test_acc) (0.431800004273653, 0.656000018119812)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.23it/s] 19%|#9        | 5/26 [00:00<00:00, 22.04it/s] 31%|###       | 8/26 [00:00<00:00, 24.64it/s] 42%|####2     | 11/26 [00:00<00:00, 25.92it/s] 58%|#####7    | 15/26 [00:00<00:00, 29.52it/s] 69%|######9   | 18/26 [00:00<00:00, 28.00it/s] 81%|########  | 21/26 [00:00<00:00, 26.78it/s] 96%|#########6| 25/26 [00:00<00:00, 29.07it/s]100%|##########| 26/26 [00:01<00:00, 25.35it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1170 200
penalty weights 10000.0
args.step pgd_anneal_iters 1170 600
dim_v 512
rho, theta 340 tensor(-4.3017e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1171 200
penalty weights 10000.0
args.step pgd_anneal_iters 1171 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1172 200
penalty weights 10000.0
args.step pgd_anneal_iters 1172 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1173 200
penalty weights 10000.0
args.step pgd_anneal_iters 1173 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1174 200
penalty weights 10000.0
args.step pgd_anneal_iters 1174 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1175 200
penalty weights 10000.0
args.step pgd_anneal_iters 1175 600
dim_v 512
rho, theta 312 tensor(-2.1111e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1176 200
penalty weights 10000.0
args.step pgd_anneal_iters 1176 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1177 200
penalty weights 10000.0
args.step pgd_anneal_iters 1177 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1178 200
penalty weights 10000.0
args.step pgd_anneal_iters 1178 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1179 200
penalty weights 10000.0
args.step pgd_anneal_iters 1179 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1180 200
penalty weights 10000.0
args.step pgd_anneal_iters 1180 600
dim_v 512
rho, theta 307 tensor(-5.1693e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1181 200
penalty weights 10000.0
args.step pgd_anneal_iters 1181 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1182 200
penalty weights 10000.0
args.step pgd_anneal_iters 1182 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1183 200
penalty weights 10000.0
args.step pgd_anneal_iters 1183 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1184 200
penalty weights 10000.0
args.step pgd_anneal_iters 1184 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1185 200
penalty weights 10000.0
args.step pgd_anneal_iters 1185 600
dim_v 512
rho, theta 465 tensor(2.5721e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1186 200
penalty weights 10000.0
args.step pgd_anneal_iters 1186 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1187 200
penalty weights 10000.0
args.step pgd_anneal_iters 1187 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1188 200
penalty weights 10000.0
args.step pgd_anneal_iters 1188 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1189 200
penalty weights 10000.0
args.step pgd_anneal_iters 1189 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1190 200
penalty weights 10000.0
args.step pgd_anneal_iters 1190 600
dim_v 512
rho, theta 463 tensor(2.8011e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1191 200
penalty weights 10000.0
args.step pgd_anneal_iters 1191 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1192 200
penalty weights 10000.0
args.step pgd_anneal_iters 1192 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1193 200
penalty weights 10000.0
args.step pgd_anneal_iters 1193 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1194 200
penalty weights 10000.0
args.step pgd_anneal_iters 1194 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1195 200
penalty weights 10000.0
args.step pgd_anneal_iters 1195 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [45][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm  23.80 ( 23.80)	train_acc   0.41 (  0.44)	train_minacc   0.72 (  0.75)	train_majacc   0.35 (  0.38)	train_corr   0.00 (  0.00)	l1 3.1562 (3.1640)	zero_count 0.0000 (26.0520)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.49it/s] 19%|#9        | 5/26 [00:00<00:01, 18.08it/s] 35%|###4      | 9/26 [00:00<00:00, 25.72it/s]                                               35%|###4      | 9/26 [00:00<00:00, 25.72it/s] 54%|#####3    | 14/26 [00:00<00:00, 33.72it/s] 73%|#######3  | 19/26 [00:00<00:00, 35.53it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 35.53it/s] 92%|#########2| 24/26 [00:00<00:00, 39.21it/s]100%|##########| 26/26 [00:00<00:00, 30.31it/s]
Test: [   0/  26]	Loss 0.662 (0.662)	test_acc   0.46 (  0.46)	test_minacc   0.67 (  0.67)	test_majacc   0.43 (  0.43)	Loss_d 0.662 (0.662)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.21 (  0.21)
Test: [  10/  26]	Loss 0.647 (0.654)	test_acc   0.42 (  0.45)	test_minacc   0.85 (  0.76)	test_majacc   0.35 (  0.39)	Loss_d 0.647 (0.654)	test_acc_d   0.42 (  0.45)	test_minacc_d   0.85 (  0.76)	test_majacc_d   0.35 (  0.39)	test_corr_d   0.27 (  0.23)
Test: [  20/  26]	Loss 0.654 (0.653)	test_acc   0.44 (  0.44)	test_minacc   0.78 (  0.76)	test_majacc   0.38 (  0.38)	Loss_d 0.654 (0.653)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.78 (  0.76)	test_majacc_d   0.38 (  0.38)	test_corr_d   0.29 (  0.24)
Test: [  26/  26]	Loss 0.650 (0.653)	test_acc   0.41 (  0.43)	test_minacc   0.72 (  0.75)	test_majacc   0.35 (  0.38)	Loss_d 0.650 (0.653)	test_acc_d   0.41 (  0.43)	test_minacc_d   0.72 (  0.75)	test_majacc_d   0.35 (  0.38)	test_corr_d   0.24 (  0.24)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.04it/s]
Test: [  0/  1]	Loss 0.824 (0.824)	test_acc   0.65 (  0.65)	test_minacc   0.68 (  0.68)	test_majacc   0.39 (  0.39)	Loss_d 0.824 (0.824)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.68 (  0.68)	test_majacc_d   0.39 (  0.39)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 0.824 (0.824)	test_acc   0.65 (  0.65)	test_minacc   0.68 (  0.68)	test_majacc   0.39 (  0.39)	Loss_d 0.824 (0.824)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.68 (  0.68)	test_majacc_d   0.39 (  0.39)	test_corr_d   0.11 (  0.11)
Overall Timing[ 45/  1]	epoch_time 0.0461 (0.0437)	validation_time 0.0004 (0.0005)	train_time 0.0457 (0.0430)
record: (train_acc, test_acc) (0.6168000086545944, 0.5680000185966492)
last accs (train_acc, test_acc) (0.4344000043272972, 0.6500000357627869)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.62it/s] 19%|#9        | 5/26 [00:00<00:00, 21.51it/s] 35%|###4      | 9/26 [00:00<00:00, 28.23it/s] 50%|#####     | 13/26 [00:00<00:00, 29.90it/s] 65%|######5   | 17/26 [00:00<00:00, 30.05it/s] 81%|########  | 21/26 [00:00<00:00, 29.13it/s] 96%|#########6| 25/26 [00:00<00:00, 30.65it/s]100%|##########| 26/26 [00:00<00:00, 27.44it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1196 200
penalty weights 10000.0
args.step pgd_anneal_iters 1196 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1197 200
penalty weights 10000.0
args.step pgd_anneal_iters 1197 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1198 200
penalty weights 10000.0
args.step pgd_anneal_iters 1198 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1199 200
penalty weights 10000.0
args.step pgd_anneal_iters 1199 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1200 200
penalty weights 10000.0
args.step pgd_anneal_iters 1200 600
dim_v 512
rho, theta 329 tensor(-4.2875e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1201 200
penalty weights 10000.0
args.step pgd_anneal_iters 1201 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1202 200
penalty weights 10000.0
args.step pgd_anneal_iters 1202 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1203 200
penalty weights 10000.0
args.step pgd_anneal_iters 1203 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1204 200
penalty weights 10000.0
args.step pgd_anneal_iters 1204 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1205 200
penalty weights 10000.0
args.step pgd_anneal_iters 1205 600
dim_v 512
rho, theta 314 tensor(-3.6641e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1206 200
penalty weights 10000.0
args.step pgd_anneal_iters 1206 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1207 200
penalty weights 10000.0
args.step pgd_anneal_iters 1207 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1208 200
penalty weights 10000.0
args.step pgd_anneal_iters 1208 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1209 200
penalty weights 10000.0
args.step pgd_anneal_iters 1209 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1210 200
penalty weights 10000.0
args.step pgd_anneal_iters 1210 600
dim_v 512
rho, theta 324 tensor(3.4318e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1211 200
penalty weights 10000.0
args.step pgd_anneal_iters 1211 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1212 200
penalty weights 10000.0
args.step pgd_anneal_iters 1212 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1213 200
penalty weights 10000.0
args.step pgd_anneal_iters 1213 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1214 200
penalty weights 10000.0
args.step pgd_anneal_iters 1214 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1215 200
penalty weights 10000.0
args.step pgd_anneal_iters 1215 600
dim_v 512
rho, theta 473 tensor(4.9982e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1216 200
penalty weights 10000.0
args.step pgd_anneal_iters 1216 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1217 200
penalty weights 10000.0
args.step pgd_anneal_iters 1217 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1218 200
penalty weights 10000.0
args.step pgd_anneal_iters 1218 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1219 200
penalty weights 10000.0
args.step pgd_anneal_iters 1219 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1220 200
penalty weights 10000.0
args.step pgd_anneal_iters 1220 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1221 200
penalty weights 10000.0
args.step pgd_anneal_iters 1221 600
final projection at end of training
dim_v 512
Epoch: [46][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm  23.80 ( 23.80)	train_acc   0.41 (  0.43)	train_minacc   0.72 (  0.75)	train_majacc   0.35 (  0.38)	train_corr   0.00 (  0.00)	l1 3.1562 (3.1642)	zero_count 0.0000 (23.5560)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.84it/s] 23%|##3       | 6/26 [00:00<00:00, 32.67it/s]                                               23%|##3       | 6/26 [00:00<00:00, 32.67it/s] 42%|####2     | 11/26 [00:00<00:00, 40.28it/s] 62%|######1   | 16/26 [00:00<00:00, 43.57it/s]                                                62%|######1   | 16/26 [00:00<00:00, 43.57it/s] 81%|########  | 21/26 [00:00<00:00, 40.42it/s]100%|##########| 26/26 [00:00<00:00, 42.94it/s]100%|##########| 26/26 [00:00<00:00, 36.25it/s]
Test: [   0/  26]	Loss 0.662 (0.662)	test_acc   0.46 (  0.46)	test_minacc   0.69 (  0.69)	test_majacc   0.42 (  0.42)	Loss_d 0.662 (0.662)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.42 (  0.42)	test_corr_d   0.21 (  0.21)
Test: [  10/  26]	Loss 0.647 (0.655)	test_acc   0.42 (  0.45)	test_minacc   0.87 (  0.76)	test_majacc   0.35 (  0.39)	Loss_d 0.647 (0.655)	test_acc_d   0.42 (  0.45)	test_minacc_d   0.87 (  0.76)	test_majacc_d   0.35 (  0.39)	test_corr_d   0.27 (  0.23)
Test: [  20/  26]	Loss 0.654 (0.653)	test_acc   0.43 (  0.44)	test_minacc   0.75 (  0.76)	test_majacc   0.37 (  0.38)	Loss_d 0.654 (0.653)	test_acc_d   0.43 (  0.44)	test_minacc_d   0.75 (  0.76)	test_majacc_d   0.37 (  0.38)	test_corr_d   0.29 (  0.24)
Test: [  26/  26]	Loss 0.650 (0.653)	test_acc   0.40 (  0.43)	test_minacc   0.74 (  0.75)	test_majacc   0.34 (  0.37)	Loss_d 0.650 (0.653)	test_acc_d   0.40 (  0.43)	test_minacc_d   0.74 (  0.75)	test_majacc_d   0.34 (  0.37)	test_corr_d   0.24 (  0.24)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.19it/s]
Test: [  0/  1]	Loss 0.826 (0.826)	test_acc   0.65 (  0.65)	test_minacc   0.68 (  0.68)	test_majacc   0.39 (  0.39)	Loss_d 0.826 (0.826)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.68 (  0.68)	test_majacc_d   0.39 (  0.39)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 0.826 (0.826)	test_acc   0.65 (  0.65)	test_minacc   0.68 (  0.68)	test_majacc   0.39 (  0.39)	Loss_d 0.826 (0.826)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.68 (  0.68)	test_majacc_d   0.39 (  0.39)	test_corr_d   0.11 (  0.11)
Overall Timing[ 46/  1]	epoch_time 0.0425 (0.0437)	validation_time 0.0003 (0.0005)	train_time 0.0421 (0.0430)
record: (train_acc, test_acc) (0.6168000086545944, 0.5680000185966492)
last accs (train_acc, test_acc) (0.43120000410079956, 0.6480000019073486)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.85it/s] 19%|#9        | 5/26 [00:00<00:00, 22.05it/s] 35%|###4      | 9/26 [00:00<00:00, 26.00it/s] 50%|#####     | 13/26 [00:00<00:00, 29.00it/s] 62%|######1   | 16/26 [00:00<00:00, 27.11it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.38it/s] 88%|########8 | 23/26 [00:00<00:00, 28.76it/s]100%|##########| 26/26 [00:00<00:00, 26.12it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1222 200
penalty weights 10000.0
args.step pgd_anneal_iters 1222 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1223 200
penalty weights 10000.0
args.step pgd_anneal_iters 1223 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1224 200
penalty weights 10000.0
args.step pgd_anneal_iters 1224 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1225 200
penalty weights 10000.0
args.step pgd_anneal_iters 1225 600
dim_v 512
rho, theta 313 tensor(-5.1489e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1226 200
penalty weights 10000.0
args.step pgd_anneal_iters 1226 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1227 200
penalty weights 10000.0
args.step pgd_anneal_iters 1227 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1228 200
penalty weights 10000.0
args.step pgd_anneal_iters 1228 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1229 200
penalty weights 10000.0
args.step pgd_anneal_iters 1229 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1230 200
penalty weights 10000.0
args.step pgd_anneal_iters 1230 600
dim_v 512
rho, theta 308 tensor(-8.9611e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1231 200
penalty weights 10000.0
args.step pgd_anneal_iters 1231 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1232 200
penalty weights 10000.0
args.step pgd_anneal_iters 1232 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1233 200
penalty weights 10000.0
args.step pgd_anneal_iters 1233 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1234 200
penalty weights 10000.0
args.step pgd_anneal_iters 1234 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1235 200
penalty weights 10000.0
args.step pgd_anneal_iters 1235 600
dim_v 512
rho, theta 447 tensor(1.2870e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1236 200
penalty weights 10000.0
args.step pgd_anneal_iters 1236 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1237 200
penalty weights 10000.0
args.step pgd_anneal_iters 1237 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1238 200
penalty weights 10000.0
args.step pgd_anneal_iters 1238 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1239 200
penalty weights 10000.0
args.step pgd_anneal_iters 1239 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1240 200
penalty weights 10000.0
args.step pgd_anneal_iters 1240 600
dim_v 512
rho, theta 467 tensor(3.7949e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1241 200
penalty weights 10000.0
args.step pgd_anneal_iters 1241 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1242 200
penalty weights 10000.0
args.step pgd_anneal_iters 1242 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1243 200
penalty weights 10000.0
args.step pgd_anneal_iters 1243 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1244 200
penalty weights 10000.0
args.step pgd_anneal_iters 1244 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1245 200
penalty weights 10000.0
args.step pgd_anneal_iters 1245 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1246 200
penalty weights 10000.0
args.step pgd_anneal_iters 1246 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1247 200
penalty weights 10000.0
args.step pgd_anneal_iters 1247 600
final projection at end of training
dim_v 512
Epoch: [47][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm  23.80 ( 23.80)	train_acc   0.41 (  0.44)	train_minacc   0.72 (  0.74)	train_majacc   0.36 (  0.38)	train_corr   0.00 (  0.00)	l1 3.1576 (3.1640)	zero_count 0.0000 (19.8510)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.38it/s] 31%|###       | 8/26 [00:00<00:00, 36.15it/s]                                               31%|###       | 8/26 [00:00<00:00, 36.15it/s] 50%|#####     | 13/26 [00:00<00:00, 39.80it/s] 69%|######9   | 18/26 [00:00<00:00, 42.51it/s]                                                69%|######9   | 18/26 [00:00<00:00, 42.51it/s] 88%|########8 | 23/26 [00:00<00:00, 41.77it/s]100%|##########| 26/26 [00:00<00:00, 37.54it/s]
Test: [   0/  26]	Loss 0.662 (0.662)	test_acc   0.46 (  0.46)	test_minacc   0.66 (  0.66)	test_majacc   0.43 (  0.43)	Loss_d 0.662 (0.662)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.21 (  0.21)
Test: [  10/  26]	Loss 0.647 (0.654)	test_acc   0.42 (  0.45)	test_minacc   0.87 (  0.74)	test_majacc   0.35 (  0.40)	Loss_d 0.647 (0.654)	test_acc_d   0.42 (  0.45)	test_minacc_d   0.87 (  0.74)	test_majacc_d   0.35 (  0.40)	test_corr_d   0.27 (  0.23)
Test: [  20/  26]	Loss 0.654 (0.653)	test_acc   0.43 (  0.44)	test_minacc   0.75 (  0.74)	test_majacc   0.38 (  0.38)	Loss_d 0.654 (0.653)	test_acc_d   0.43 (  0.44)	test_minacc_d   0.75 (  0.74)	test_majacc_d   0.38 (  0.38)	test_corr_d   0.29 (  0.24)
Test: [  26/  26]	Loss 0.650 (0.653)	test_acc   0.41 (  0.43)	test_minacc   0.72 (  0.74)	test_majacc   0.36 (  0.38)	Loss_d 0.650 (0.653)	test_acc_d   0.41 (  0.43)	test_minacc_d   0.72 (  0.74)	test_majacc_d   0.36 (  0.38)	test_corr_d   0.24 (  0.25)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.25it/s]
Test: [  0/  1]	Loss 0.825 (0.825)	test_acc   0.64 (  0.64)	test_minacc   0.66 (  0.66)	test_majacc   0.39 (  0.39)	Loss_d 0.825 (0.825)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.39 (  0.39)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 0.825 (0.825)	test_acc   0.64 (  0.64)	test_minacc   0.66 (  0.66)	test_majacc   0.39 (  0.39)	Loss_d 0.825 (0.825)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.39 (  0.39)	test_corr_d   0.11 (  0.11)
Overall Timing[ 47/  1]	epoch_time 0.0425 (0.0436)	validation_time 0.0004 (0.0005)	train_time 0.0420 (0.0430)
record: (train_acc, test_acc) (0.6168000086545944, 0.5680000185966492)
last accs (train_acc, test_acc) (0.4344000045359135, 0.6370000243186951)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.11it/s] 15%|#5        | 4/26 [00:00<00:01, 17.56it/s] 31%|###       | 8/26 [00:00<00:00, 23.29it/s] 46%|####6     | 12/26 [00:00<00:00, 27.49it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.34it/s] 69%|######9   | 18/26 [00:00<00:00, 26.26it/s] 85%|########4 | 22/26 [00:00<00:00, 28.72it/s] 96%|#########6| 25/26 [00:00<00:00, 27.26it/s]100%|##########| 26/26 [00:01<00:00, 24.27it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1248 200
penalty weights 10000.0
args.step pgd_anneal_iters 1248 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1249 200
penalty weights 10000.0
args.step pgd_anneal_iters 1249 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1250 200
penalty weights 10000.0
args.step pgd_anneal_iters 1250 600
dim_v 512
rho, theta 315 tensor(-4.2399e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1251 200
penalty weights 10000.0
args.step pgd_anneal_iters 1251 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1252 200
penalty weights 10000.0
args.step pgd_anneal_iters 1252 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1253 200
penalty weights 10000.0
args.step pgd_anneal_iters 1253 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1254 200
penalty weights 10000.0
args.step pgd_anneal_iters 1254 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1255 200
penalty weights 10000.0
args.step pgd_anneal_iters 1255 600
dim_v 512
rho, theta 304 tensor(-4.7402e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1256 200
penalty weights 10000.0
args.step pgd_anneal_iters 1256 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1257 200
penalty weights 10000.0
args.step pgd_anneal_iters 1257 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1258 200
penalty weights 10000.0
args.step pgd_anneal_iters 1258 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1259 200
penalty weights 10000.0
args.step pgd_anneal_iters 1259 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1260 200
penalty weights 10000.0
args.step pgd_anneal_iters 1260 600
dim_v 512
rho, theta 303 tensor(4.0547e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1261 200
penalty weights 10000.0
args.step pgd_anneal_iters 1261 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1262 200
penalty weights 10000.0
args.step pgd_anneal_iters 1262 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1263 200
penalty weights 10000.0
args.step pgd_anneal_iters 1263 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1264 200
penalty weights 10000.0
args.step pgd_anneal_iters 1264 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1265 200
penalty weights 10000.0
args.step pgd_anneal_iters 1265 600
dim_v 512
rho, theta 470 tensor(4.1022e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1266 200
penalty weights 10000.0
args.step pgd_anneal_iters 1266 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1267 200
penalty weights 10000.0
args.step pgd_anneal_iters 1267 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1268 200
penalty weights 10000.0
args.step pgd_anneal_iters 1268 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1269 200
penalty weights 10000.0
args.step pgd_anneal_iters 1269 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1270 200
penalty weights 10000.0
args.step pgd_anneal_iters 1270 600
dim_v 512
rho, theta 459 tensor(1.3316e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1271 200
penalty weights 10000.0
args.step pgd_anneal_iters 1271 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1272 200
penalty weights 10000.0
args.step pgd_anneal_iters 1272 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1273 200
penalty weights 10000.0
args.step pgd_anneal_iters 1273 600
final projection at end of training
dim_v 512
Epoch: [48][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm  23.80 ( 23.80)	train_acc   0.39 (  0.43)	train_minacc   0.74 (  0.74)	train_majacc   0.33 (  0.38)	train_corr   0.00 (  0.00)	l1 3.1556 (3.1646)	zero_count 0.0000 (27.4560)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.57it/s] 19%|#9        | 5/26 [00:00<00:00, 23.22it/s] 38%|###8      | 10/26 [00:00<00:00, 32.27it/s]                                                38%|###8      | 10/26 [00:00<00:00, 32.27it/s] 58%|#####7    | 15/26 [00:00<00:00, 37.36it/s] 77%|#######6  | 20/26 [00:00<00:00, 41.11it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 41.11it/s] 96%|#########6| 25/26 [00:00<00:00, 39.52it/s]100%|##########| 26/26 [00:00<00:00, 33.67it/s]
Test: [   0/  26]	Loss 0.662 (0.662)	test_acc   0.46 (  0.46)	test_minacc   0.69 (  0.69)	test_majacc   0.42 (  0.42)	Loss_d 0.662 (0.662)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.42 (  0.42)	test_corr_d   0.21 (  0.21)
Test: [  10/  26]	Loss 0.647 (0.655)	test_acc   0.42 (  0.44)	test_minacc   0.87 (  0.75)	test_majacc   0.34 (  0.39)	Loss_d 0.647 (0.655)	test_acc_d   0.42 (  0.44)	test_minacc_d   0.87 (  0.75)	test_majacc_d   0.34 (  0.39)	test_corr_d   0.27 (  0.23)
Test: [  20/  26]	Loss 0.654 (0.653)	test_acc   0.43 (  0.43)	test_minacc   0.75 (  0.76)	test_majacc   0.37 (  0.37)	Loss_d 0.654 (0.653)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.75 (  0.76)	test_majacc_d   0.37 (  0.37)	test_corr_d   0.29 (  0.24)
Test: [  26/  26]	Loss 0.650 (0.653)	test_acc   0.40 (  0.43)	test_minacc   0.77 (  0.75)	test_majacc   0.33 (  0.37)	Loss_d 0.650 (0.653)	test_acc_d   0.40 (  0.43)	test_minacc_d   0.77 (  0.75)	test_majacc_d   0.33 (  0.37)	test_corr_d   0.24 (  0.25)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.32it/s]
Test: [  0/  1]	Loss 0.826 (0.826)	test_acc   0.64 (  0.64)	test_minacc   0.67 (  0.67)	test_majacc   0.39 (  0.39)	Loss_d 0.826 (0.826)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.39 (  0.39)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 0.826 (0.826)	test_acc   0.64 (  0.64)	test_minacc   0.67 (  0.67)	test_majacc   0.39 (  0.39)	Loss_d 0.826 (0.826)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.39 (  0.39)	test_corr_d   0.11 (  0.11)
Overall Timing[ 48/  1]	epoch_time 0.0485 (0.0437)	validation_time 0.0004 (0.0005)	train_time 0.0481 (0.0431)
record: (train_acc, test_acc) (0.6168000086545944, 0.5680000185966492)
last accs (train_acc, test_acc) (0.427400004863739, 0.6430000066757202)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.78it/s] 15%|#5        | 4/26 [00:00<00:01, 17.33it/s] 27%|##6       | 7/26 [00:00<00:00, 21.44it/s] 42%|####2     | 11/26 [00:00<00:00, 26.61it/s] 54%|#####3    | 14/26 [00:00<00:00, 27.14it/s] 65%|######5   | 17/26 [00:00<00:00, 26.58it/s] 81%|########  | 21/26 [00:00<00:00, 29.58it/s] 92%|#########2| 24/26 [00:00<00:00, 28.49it/s]100%|##########| 26/26 [00:01<00:00, 24.46it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1274 200
penalty weights 10000.0
args.step pgd_anneal_iters 1274 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1275 200
penalty weights 10000.0
args.step pgd_anneal_iters 1275 600
dim_v 512
rho, theta 315 tensor(-4.9046e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1276 200
penalty weights 10000.0
args.step pgd_anneal_iters 1276 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1277 200
penalty weights 10000.0
args.step pgd_anneal_iters 1277 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1278 200
penalty weights 10000.0
args.step pgd_anneal_iters 1278 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1279 200
penalty weights 10000.0
args.step pgd_anneal_iters 1279 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1280 200
penalty weights 10000.0
args.step pgd_anneal_iters 1280 600
dim_v 512
rho, theta 302 tensor(-1.5487e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1281 200
penalty weights 10000.0
args.step pgd_anneal_iters 1281 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1282 200
penalty weights 10000.0
args.step pgd_anneal_iters 1282 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1283 200
penalty weights 10000.0
args.step pgd_anneal_iters 1283 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1284 200
penalty weights 10000.0
args.step pgd_anneal_iters 1284 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1285 200
penalty weights 10000.0
args.step pgd_anneal_iters 1285 600
dim_v 512
rho, theta 363 tensor(3.4020e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1286 200
penalty weights 10000.0
args.step pgd_anneal_iters 1286 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1287 200
penalty weights 10000.0
args.step pgd_anneal_iters 1287 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1288 200
penalty weights 10000.0
args.step pgd_anneal_iters 1288 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1289 200
penalty weights 10000.0
args.step pgd_anneal_iters 1289 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1290 200
penalty weights 10000.0
args.step pgd_anneal_iters 1290 600
dim_v 512
rho, theta 466 tensor(3.0215e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1291 200
penalty weights 10000.0
args.step pgd_anneal_iters 1291 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1292 200
penalty weights 10000.0
args.step pgd_anneal_iters 1292 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1293 200
penalty weights 10000.0
args.step pgd_anneal_iters 1293 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1294 200
penalty weights 10000.0
args.step pgd_anneal_iters 1294 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1295 200
penalty weights 10000.0
args.step pgd_anneal_iters 1295 600
dim_v 512
rho, theta 455 tensor(1.7171e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1296 200
penalty weights 10000.0
args.step pgd_anneal_iters 1296 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1297 200
penalty weights 10000.0
args.step pgd_anneal_iters 1297 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1298 200
penalty weights 10000.0
args.step pgd_anneal_iters 1298 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1299 200
penalty weights 10000.0
args.step pgd_anneal_iters 1299 600
final projection at end of training
dim_v 512
Epoch: [49][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm  23.80 ( 23.80)	train_acc   0.41 (  0.44)	train_minacc   0.72 (  0.74)	train_majacc   0.35 (  0.38)	train_corr   0.00 (  0.00)	l1 3.1564 (3.1643)	zero_count 0.0000 (25.5060)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:08,  3.06it/s] 23%|##3       | 6/26 [00:00<00:01, 16.84it/s]                                               23%|##3       | 6/26 [00:00<00:01, 16.84it/s] 42%|####2     | 11/26 [00:00<00:00, 25.73it/s] 62%|######1   | 16/26 [00:00<00:00, 32.37it/s]                                                62%|######1   | 16/26 [00:00<00:00, 32.37it/s] 81%|########  | 21/26 [00:00<00:00, 33.12it/s]100%|##########| 26/26 [00:00<00:00, 37.62it/s]100%|##########| 26/26 [00:00<00:00, 27.29it/s]
Test: [   0/  26]	Loss 0.662 (0.662)	test_acc   0.46 (  0.46)	test_minacc   0.66 (  0.66)	test_majacc   0.42 (  0.42)	Loss_d 0.662 (0.662)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.42 (  0.42)	test_corr_d   0.21 (  0.21)
Test: [  10/  26]	Loss 0.648 (0.655)	test_acc   0.42 (  0.45)	test_minacc   0.87 (  0.74)	test_majacc   0.35 (  0.40)	Loss_d 0.648 (0.655)	test_acc_d   0.42 (  0.45)	test_minacc_d   0.87 (  0.74)	test_majacc_d   0.35 (  0.40)	test_corr_d   0.27 (  0.23)
Test: [  20/  26]	Loss 0.654 (0.653)	test_acc   0.43 (  0.44)	test_minacc   0.75 (  0.74)	test_majacc   0.37 (  0.38)	Loss_d 0.654 (0.653)	test_acc_d   0.43 (  0.44)	test_minacc_d   0.75 (  0.74)	test_majacc_d   0.37 (  0.38)	test_corr_d   0.29 (  0.24)
Test: [  26/  26]	Loss 0.649 (0.653)	test_acc   0.40 (  0.43)	test_minacc   0.77 (  0.74)	test_majacc   0.34 (  0.38)	Loss_d 0.649 (0.653)	test_acc_d   0.40 (  0.43)	test_minacc_d   0.77 (  0.74)	test_majacc_d   0.34 (  0.38)	test_corr_d   0.24 (  0.24)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.00it/s]
Test: [  0/  1]	Loss 0.825 (0.825)	test_acc   0.64 (  0.64)	test_minacc   0.67 (  0.67)	test_majacc   0.39 (  0.39)	Loss_d 0.825 (0.825)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.39 (  0.39)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 0.825 (0.825)	test_acc   0.64 (  0.64)	test_minacc   0.67 (  0.67)	test_majacc   0.39 (  0.39)	Loss_d 0.825 (0.825)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.39 (  0.39)	test_corr_d   0.11 (  0.11)
Overall Timing[ 49/  1]	epoch_time 0.0485 (0.0438)	validation_time 0.0003 (0.0005)	train_time 0.0481 (0.0432)
record: (train_acc, test_acc) (0.6168000086545944, 0.5680000185966492)
last accs (train_acc, test_acc) (0.43190000426769254, 0.6390000581741333)
done saving aggregate.csv to ./aggregate.csv
wandb: - 0.164 MB of 0.164 MB uploadedwandb: \ 0.164 MB of 0.164 MB uploadedThread SenderThread:
Traceback (most recent call last):
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/internal_util.py", line 48, in run
    self._run()
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/internal_util.py", line 99, in _run
    self._process(record)
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/internal.py", line 327, in _process
    self._sm.send(record)
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/sender.py", line 398, in send
    send_handler(record)
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/sender.py", line 420, in send_request
    send_handler(record)
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/sender.py", line 654, in send_request_defer
    self._flush_job()
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/sender.py", line 1706, in _flush_job
    artifact = self._job_builder.build(api=self._api)
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/job_builder.py", line 552, in build
    artifact.add_file(
  File "/home/zd16/scratch/mypython3/wandb/sdk/artifacts/artifact.py", line 1196, in add_file
    return self._add_local_file(
  File "/home/zd16/scratch/mypython3/wandb/sdk/artifacts/artifact.py", line 1459, in _add_local_file
    with tempfile.NamedTemporaryFile(dir=get_staging_dir(), delete=False) as f:
  File "/usr/local/python/3.9.16/lib/python3.9/tempfile.py", line 545, in NamedTemporaryFile
    (fd, name) = _mkstemp_inner(dir, prefix, suffix, flags, output_type)
  File "/usr/local/python/3.9.16/lib/python3.9/tempfile.py", line 255, in _mkstemp_inner
    fd = _os.open(file, flags, 0o600)
OSError: [Errno 122] Disk quota exceeded: '/home/zd16/.local/share/wandb/artifacts/staging/tmpvwzje1xs'
wandb: ERROR Internal wandb error: file data was not synced
wandb: Currently logged in as: janezdu (janezdu-uiuc). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.17.9 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.7
wandb: Run data is saved locally in /scratch/users/zd16/sparseIRM-resnet-ver/wandb/run-20240907_210239-ctqdcuxz
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run name_random
wandb: ⭐️ View project at https://wandb.ai/janezdu-uiuc/irm
wandb: 🚀 View run at https://wandb.ai/janezdu-uiuc/irm/runs/ctqdcuxz
=> Reading YAML config from configs/smallscale/resnet18/resnet18-usc-unsigned.yaml
Namespace(data='dataset/', optimizer='adam', weight_opt='adam', set='mnistcifar', arch='ResNet18', config='configs/smallscale/resnet18/resnet18-usc-unsigned.yaml', log_dir=None, workers=4, epochs=50, start_epoch=None, batch_size=390, lr=0.006, warmup_length=0, momentum=0.9, weight_decay=0.0, print_freq=10, num_classes=1, resume='', resume_train_weights='', evaluate=False, pretrained=None, pretrained_distill=None, alpha_distill=0.95, T_distill=2, seed=0, multigpu=[0], lr_policy='cosine_lr', lr_adjust=30, lr_gamma=0.1, name='baseline', save_every=-1, prune_rate=1.0, param_prune_rate=0.0, pr_start=1.0, low_data=1, width_mult=1.0, nesterov=False, threetimes=False, random_subnet=False, one_batch=False, conv_type='DenseConv', freeze_weights=False, st=False, mode='fan_in', nonlinearity='relu', bn_type='LearnedBatchNorm', init='kaiming_normal', no_bn_decay=False, scale_fan=False, first_layer_dense=False, last_layer_dense=True, approx=False, zero=False, flip=False, bs=False, gumbel_sample=False, multiply_prob=False, no_multiply=False, multiply_cont=False, multiply_prob_bs=False, indiv=False, label_smoothing=None, first_layer_type=None, trainer='default', score_init_constant=1.0, K=1, update_freq=20, D=0.01, T=1, TA=True, TA2=False, TA_grow=False, center=False, straight_through=False, PLA_factor=0.1, PLA_patience=10, gradient_loss_para=0, abs_loss_para=0, thres=0.9, runs_name='name_random', resume_compare_loss1='', resume_compare_loss2='', init_weights='', trained_mask='', weight_rescaling=False, constrain_by_layer=False, weight_rescaling_data=False, use_running_stats=False, not_clipping=False, rescaling_para=False, lasso_para=0, dont_freeze_weights=False, iterative=True, prob_by_weight=False, rescale_at_fix_subnet=False, train_weights_at_the_same_time=False, sample_from_training_set=False, load_true_para=False, distill=False, finetune=False, stablize=False, prev_best=0, weight_opt_lr=0.0006, n=500, ts=0.28, te=0.6, d=20000, s=80, c=0.75, init_prob=False, thres_before=0.001, wide_ratio=0.001, noise=1, cal_p_q=False, just_finetune=False, snip=False, envs_num=2, l2_regularizer_weight=0.001, data_num=50000, env_type='linear', irm_type='irmv1', hidden_dim=390, penalty_anneal_iters=200, penalty_weight=10000.0, grayscale_model=0, weight_lr_schedule=False, fix_subnet=False, freeze_weight=False, step='ours', prior_sd_coef=0, dim_inv=2, variance_gamma=1.0, dim_spu=10, image_scale=32, cons_ratio='0.999_0.7_0.1', noise_ratio=0.2, step_gamma=0.1, step_round=3, inner_steps=1, use_pgd=True, z=15.0, pgd_anneal_iters=600, pgd_skip_steps=5, fraction_z=0.99)
=> Creating model 'ResNet18'
Here!!!!!!!!
==> Conv Type: DenseConv
==> BN Type: LearnedBatchNorm
<class 'torch.nn.modules.conv.Conv2d'>
<class 'torch.nn.modules.batchnorm.BatchNorm2d'>
==> Building first layer with <class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): Linear(in_features=512, out_features=1, bias=True)
)
=> Parallelizing on [0] gpus
<DEBUG> gradient to module.conv1.weight
<DEBUG> gradient to module.bn1.weight
<DEBUG> gradient to module.bn1.bias
<DEBUG> gradient to module.layer1.0.conv1.weight
<DEBUG> gradient to module.layer1.0.bn1.weight
<DEBUG> gradient to module.layer1.0.bn1.bias
<DEBUG> gradient to module.layer1.0.conv2.weight
<DEBUG> gradient to module.layer1.0.bn2.weight
<DEBUG> gradient to module.layer1.0.bn2.bias
<DEBUG> gradient to module.layer1.1.conv1.weight
<DEBUG> gradient to module.layer1.1.bn1.weight
<DEBUG> gradient to module.layer1.1.bn1.bias
<DEBUG> gradient to module.layer1.1.conv2.weight
<DEBUG> gradient to module.layer1.1.bn2.weight
<DEBUG> gradient to module.layer1.1.bn2.bias
<DEBUG> gradient to module.layer2.0.conv1.weight
<DEBUG> gradient to module.layer2.0.bn1.weight
<DEBUG> gradient to module.layer2.0.bn1.bias
<DEBUG> gradient to module.layer2.0.conv2.weight
<DEBUG> gradient to module.layer2.0.bn2.weight
<DEBUG> gradient to module.layer2.0.bn2.bias
<DEBUG> gradient to module.layer2.0.downsample.0.weight
<DEBUG> gradient to module.layer2.0.downsample.1.weight
<DEBUG> gradient to module.layer2.0.downsample.1.bias
<DEBUG> gradient to module.layer2.1.conv1.weight
<DEBUG> gradient to module.layer2.1.bn1.weight
<DEBUG> gradient to module.layer2.1.bn1.bias
<DEBUG> gradient to module.layer2.1.conv2.weight
<DEBUG> gradient to module.layer2.1.bn2.weight
<DEBUG> gradient to module.layer2.1.bn2.bias
<DEBUG> gradient to module.layer3.0.conv1.weight
<DEBUG> gradient to module.layer3.0.bn1.weight
<DEBUG> gradient to module.layer3.0.bn1.bias
<DEBUG> gradient to module.layer3.0.conv2.weight
<DEBUG> gradient to module.layer3.0.bn2.weight
<DEBUG> gradient to module.layer3.0.bn2.bias
<DEBUG> gradient to module.layer3.0.downsample.0.weight
<DEBUG> gradient to module.layer3.0.downsample.1.weight
<DEBUG> gradient to module.layer3.0.downsample.1.bias
<DEBUG> gradient to module.layer3.1.conv1.weight
<DEBUG> gradient to module.layer3.1.bn1.weight
<DEBUG> gradient to module.layer3.1.bn1.bias
<DEBUG> gradient to module.layer3.1.conv2.weight
<DEBUG> gradient to module.layer3.1.bn2.weight
<DEBUG> gradient to module.layer3.1.bn2.bias
<DEBUG> gradient to module.layer4.0.conv1.weight
<DEBUG> gradient to module.layer4.0.bn1.weight
<DEBUG> gradient to module.layer4.0.bn1.bias
<DEBUG> gradient to module.layer4.0.conv2.weight
<DEBUG> gradient to module.layer4.0.bn2.weight
<DEBUG> gradient to module.layer4.0.bn2.bias
<DEBUG> gradient to module.layer4.0.downsample.0.weight
<DEBUG> gradient to module.layer4.0.downsample.1.weight
<DEBUG> gradient to module.layer4.0.downsample.1.bias
<DEBUG> gradient to module.layer4.1.conv1.weight
<DEBUG> gradient to module.layer4.1.bn1.weight
<DEBUG> gradient to module.layer4.1.bn1.bias
<DEBUG> gradient to module.layer4.1.conv2.weight
<DEBUG> gradient to module.layer4.1.bn2.weight
<DEBUG> gradient to module.layer4.1.bn2.bias
<DEBUG> gradient to module.fc.weight
<DEBUG> gradient to module.fc.bias
Files already downloaded and verified
Files already downloaded and verified
Adding Noise to Label, len(Y)=12000, Label_noise=1274
Xmp (7877, 3, 32, 32) (6903, 3, 32, 32)
Xcp (5978, 3, 32, 32) (6022, 3, 32, 32)
env=0 2497 2497 3 3
xn 2500 xp 2500
env=1 1750 1750 750 750
xn 2500 xp 2500
env=2 50 50 450 450
xn 500 xp 500
=> Creating model 'EBD'
EBD(
  (embedings): Embedding(2, 1)
)
=> Parallelizing on [0] gpus
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:01<00:39,  1.58s/it] 19%|#9        | 5/26 [00:01<00:05,  3.85it/s] 35%|###4      | 9/26 [00:01<00:02,  7.48it/s] 50%|#####     | 13/26 [00:01<00:01, 11.47it/s] 65%|######5   | 17/26 [00:02<00:00, 15.54it/s] 81%|########  | 21/26 [00:02<00:00, 19.51it/s] 96%|#########6| 25/26 [00:02<00:00, 22.96it/s]100%|##########| 26/26 [00:02<00:00,  9.85it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 0 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 2 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 3 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 4 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 5 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 6 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 7 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 8 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 9 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 10 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 11 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 12 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 13 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 14 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 15 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 16 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 17 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 18 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 19 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 20 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 21 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 22 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 23 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 24 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 25 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [0][  26/  26]	Loss 0.398 (0.510)	train_nll   0.40 (  0.51)	train_penalty   0.08 (  0.24)	weight_norm  20.83 ( 18.11)	train_acc   0.87 (  0.82)	train_minacc   0.03 (  0.05)	train_majacc   1.00 (  0.96)	train_corr   0.00 (  0.00)	l1 6.8376 (7.9924)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.29it/s] 23%|##3       | 6/26 [00:00<00:00, 24.12it/s]                                               23%|##3       | 6/26 [00:00<00:00, 24.12it/s] 42%|####2     | 11/26 [00:00<00:00, 29.91it/s] 62%|######1   | 16/26 [00:00<00:00, 36.00it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.00it/s] 81%|########  | 21/26 [00:00<00:00, 38.61it/s]100%|##########| 26/26 [00:00<00:00, 41.28it/s]100%|##########| 26/26 [00:00<00:00, 32.47it/s]
Test: [   0/  26]	Loss 0.470 (0.470)	test_acc   0.84 (  0.84)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 0.470 (0.470)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  10/  26]	Loss 0.357 (0.410)	test_acc   0.87 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   0.99 (  1.00)	Loss_d 0.357 (0.410)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  20/  26]	Loss 0.418 (0.411)	test_acc   0.85 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.418 (0.411)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  26/  26]	Loss 0.390 (0.408)	test_acc   0.87 (  0.85)	test_minacc   0.03 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.390 (0.408)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.03 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00,  2.56it/s]100%|##########| 1/1 [00:00<00:00,  2.56it/s]
Test: [  0/  1]	Loss 2.016 (2.016)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 2.016 (2.016)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.97)
Test: [  1/  1]	Loss 2.016 (2.016)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 2.016 (2.016)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.97)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/171/checkpoints/model_best.pth
Overall Timing[  0/  1]	epoch_time 0.0800 (0.0800)	validation_time 0.0067 (0.0067)	train_time 0.0698 (0.0698)
record: (train_acc, test_acc) (0.8484000260829926, 0.10700000822544098)
last accs (train_acc, test_acc) (0.8484000260829926, 0.10700000822544098)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.84it/s] 19%|#9        | 5/26 [00:00<00:01, 19.64it/s] 35%|###4      | 9/26 [00:00<00:00, 26.04it/s] 50%|#####     | 13/26 [00:00<00:00, 29.56it/s] 65%|######5   | 17/26 [00:00<00:00, 31.77it/s] 81%|########  | 21/26 [00:00<00:00, 32.80it/s] 96%|#########6| 25/26 [00:00<00:00, 33.83it/s]100%|##########| 26/26 [00:00<00:00, 28.40it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 26 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 27 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 28 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 29 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 30 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 31 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 32 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 33 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 34 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 35 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 36 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 37 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 38 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 39 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 40 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 41 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 42 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 43 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 44 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 45 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 46 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 47 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 48 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 49 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 50 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 51 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [1][  26/  26]	Loss 0.391 (0.400)	train_nll   0.39 (  0.40)	train_penalty   0.07 (  0.06)	weight_norm  21.92 ( 21.58)	train_acc   0.86 (  0.85)	train_minacc   0.00 (  0.04)	train_majacc   0.99 (  0.99)	train_corr   0.00 (  0.00)	l1 6.5163 (6.4964)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.78it/s] 23%|##3       | 6/26 [00:00<00:00, 25.47it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.47it/s] 42%|####2     | 11/26 [00:00<00:00, 33.74it/s] 62%|######1   | 16/26 [00:00<00:00, 38.90it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.90it/s] 81%|########  | 21/26 [00:00<00:00, 38.15it/s]100%|##########| 26/26 [00:00<00:00, 41.54it/s]100%|##########| 26/26 [00:00<00:00, 33.94it/s]
Test: [   0/  26]	Loss 0.459 (0.459)	test_acc   0.83 (  0.83)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.459 (0.459)	test_acc_d   0.83 (  0.83)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  10/  26]	Loss 0.321 (0.379)	test_acc   0.87 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   0.99 (  1.00)	Loss_d 0.321 (0.379)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  20/  26]	Loss 0.378 (0.379)	test_acc   0.84 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.378 (0.379)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  26/  26]	Loss 0.367 (0.377)	test_acc   0.87 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.367 (0.377)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.15it/s]
Test: [  0/  1]	Loss 2.012 (2.012)	test_acc   0.10 (  0.10)	test_minacc   0.01 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 2.012 (2.012)	test_acc_d   0.10 (  0.10)	test_minacc_d   0.01 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.97)
Test: [  1/  1]	Loss 2.012 (2.012)	test_acc   0.10 (  0.10)	test_minacc   0.01 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 2.012 (2.012)	test_acc_d   0.10 (  0.10)	test_minacc_d   0.01 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.97)
Overall Timing[  1/  1]	epoch_time 0.0376 (0.0588)	validation_time 0.0003 (0.0035)	train_time 0.0372 (0.0535)
record: (train_acc, test_acc) (0.8484000260829926, 0.10700000822544098)
last accs (train_acc, test_acc) (0.8495000295042991, 0.10400000214576721)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.26it/s] 19%|#9        | 5/26 [00:00<00:01, 20.27it/s] 35%|###4      | 9/26 [00:00<00:00, 25.78it/s] 50%|#####     | 13/26 [00:00<00:00, 28.58it/s] 65%|######5   | 17/26 [00:00<00:00, 31.12it/s] 81%|########  | 21/26 [00:00<00:00, 32.92it/s] 96%|#########6| 25/26 [00:00<00:00, 33.80it/s]100%|##########| 26/26 [00:00<00:00, 28.31it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 52 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 53 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 54 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 55 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 56 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 57 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 58 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 59 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 60 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 61 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 62 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 63 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 64 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 65 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 66 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 67 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 68 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 69 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 70 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 71 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 72 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 73 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 74 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 75 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 76 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 77 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [2][  26/  26]	Loss 0.366 (0.371)	train_nll   0.37 (  0.37)	train_penalty   0.06 (  0.04)	weight_norm  22.06 ( 22.01)	train_acc   0.87 (  0.85)	train_minacc   0.12 (  0.11)	train_majacc   0.98 (  0.98)	train_corr   0.00 (  0.00)	l1 6.5435 (6.4020)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.74it/s] 27%|##6       | 7/26 [00:00<00:00, 31.71it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.71it/s] 46%|####6     | 12/26 [00:00<00:00, 36.89it/s] 65%|######5   | 17/26 [00:00<00:00, 40.12it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.12it/s] 85%|########4 | 22/26 [00:00<00:00, 42.35it/s]100%|##########| 26/26 [00:00<00:00, 36.29it/s]
Test: [   0/  26]	Loss 0.409 (0.409)	test_acc   0.84 (  0.84)	test_minacc   0.03 (  0.03)	test_majacc   0.99 (  0.99)	Loss_d 0.409 (0.409)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.03 (  0.03)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.96)
Test: [  10/  26]	Loss 0.298 (0.351)	test_acc   0.87 (  0.85)	test_minacc   0.02 (  0.04)	test_majacc   0.99 (  1.00)	Loss_d 0.298 (0.351)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.02 (  0.04)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.97 (  0.97)
Test: [  20/  26]	Loss 0.357 (0.351)	test_acc   0.84 (  0.85)	test_minacc   0.02 (  0.04)	test_majacc   0.99 (  1.00)	Loss_d 0.357 (0.351)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.02 (  0.04)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.97 (  0.96)
Test: [  26/  26]	Loss 0.335 (0.348)	test_acc   0.88 (  0.85)	test_minacc   0.03 (  0.04)	test_majacc   1.00 (  1.00)	Loss_d 0.335 (0.348)	test_acc_d   0.88 (  0.85)	test_minacc_d   0.03 (  0.04)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.56it/s]
Test: [  0/  1]	Loss 1.978 (1.978)	test_acc   0.12 (  0.12)	test_minacc   0.02 (  0.02)	test_majacc   0.99 (  0.99)	Loss_d 1.978 (1.978)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.02 (  0.02)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.93 (  0.93)
Test: [  1/  1]	Loss 1.978 (1.978)	test_acc   0.12 (  0.12)	test_minacc   0.02 (  0.02)	test_majacc   0.99 (  0.99)	Loss_d 1.978 (1.978)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.02 (  0.02)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.93 (  0.93)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/171/checkpoints/model_best.pth
Overall Timing[  2/  1]	epoch_time 0.0367 (0.0514)	validation_time 0.0005 (0.0025)	train_time 0.0362 (0.0477)
record: (train_acc, test_acc) (0.8529000260233879, 0.11800000816583633)
last accs (train_acc, test_acc) (0.8529000260233879, 0.11800000816583633)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.89it/s] 12%|#1        | 3/26 [00:00<00:01, 12.54it/s] 27%|##6       | 7/26 [00:00<00:00, 21.57it/s] 38%|###8      | 10/26 [00:00<00:00, 24.32it/s] 54%|#####3    | 14/26 [00:00<00:00, 27.38it/s] 69%|######9   | 18/26 [00:00<00:00, 29.80it/s] 85%|########4 | 22/26 [00:00<00:00, 31.78it/s]100%|##########| 26/26 [00:00<00:00, 32.79it/s]100%|##########| 26/26 [00:00<00:00, 26.07it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 78 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 79 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 80 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 81 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 82 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 83 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 84 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 85 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 86 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 87 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 88 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 89 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 90 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 91 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 92 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 93 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 94 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 95 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 96 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 97 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 98 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 99 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 100 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 101 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 102 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 103 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [3][  26/  26]	Loss 0.348 (0.345)	train_nll   0.35 (  0.35)	train_penalty   0.03 (  0.03)	weight_norm  22.13 ( 22.10)	train_acc   0.84 (  0.85)	train_minacc   0.16 (  0.20)	train_majacc   0.94 (  0.97)	train_corr   0.00 (  0.00)	l1 6.5878 (6.4494)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.30it/s] 23%|##3       | 6/26 [00:00<00:00, 26.67it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.67it/s] 42%|####2     | 11/26 [00:00<00:00, 33.19it/s] 62%|######1   | 16/26 [00:00<00:00, 37.97it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.97it/s] 81%|########  | 21/26 [00:00<00:00, 38.92it/s]100%|##########| 26/26 [00:00<00:00, 34.20it/s]
Test: [   0/  26]	Loss 0.385 (0.385)	test_acc   0.84 (  0.84)	test_minacc   0.16 (  0.16)	test_majacc   0.97 (  0.97)	Loss_d 0.385 (0.385)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.16 (  0.16)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.92 (  0.92)
Test: [  10/  26]	Loss 0.273 (0.325)	test_acc   0.89 (  0.86)	test_minacc   0.19 (  0.17)	test_majacc   0.99 (  0.99)	Loss_d 0.273 (0.325)	test_acc_d   0.89 (  0.86)	test_minacc_d   0.19 (  0.17)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.93 (  0.93)
Test: [  20/  26]	Loss 0.324 (0.322)	test_acc   0.86 (  0.87)	test_minacc   0.17 (  0.19)	test_majacc   0.99 (  0.99)	Loss_d 0.324 (0.322)	test_acc_d   0.86 (  0.87)	test_minacc_d   0.17 (  0.19)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.93 (  0.93)
Test: [  26/  26]	Loss 0.301 (0.318)	test_acc   0.87 (  0.87)	test_minacc   0.12 (  0.18)	test_majacc   0.98 (  0.99)	Loss_d 0.301 (0.318)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.12 (  0.18)	test_majacc_d   0.98 (  0.99)	test_corr_d   0.93 (  0.93)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.04it/s]
Test: [  0/  1]	Loss 1.824 (1.824)	test_acc   0.18 (  0.18)	test_minacc   0.09 (  0.09)	test_majacc   0.97 (  0.97)	Loss_d 1.824 (1.824)	test_acc_d   0.18 (  0.18)	test_minacc_d   0.09 (  0.09)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.85 (  0.85)
Test: [  1/  1]	Loss 1.824 (1.824)	test_acc   0.18 (  0.18)	test_minacc   0.09 (  0.09)	test_majacc   0.97 (  0.97)	Loss_d 1.824 (1.824)	test_acc_d   0.18 (  0.18)	test_minacc_d   0.09 (  0.09)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.85 (  0.85)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/171/checkpoints/model_best.pth
Overall Timing[  3/  1]	epoch_time 0.0408 (0.0488)	validation_time 0.0004 (0.0020)	train_time 0.0404 (0.0459)
record: (train_acc, test_acc) (0.8656000227332116, 0.1770000010728836)
last accs (train_acc, test_acc) (0.8656000227332116, 0.1770000010728836)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.97it/s] 15%|#5        | 4/26 [00:00<00:01, 17.53it/s] 31%|###       | 8/26 [00:00<00:00, 24.79it/s] 46%|####6     | 12/26 [00:00<00:00, 28.04it/s] 62%|######1   | 16/26 [00:00<00:00, 30.34it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.13it/s] 92%|#########2| 24/26 [00:00<00:00, 33.07it/s]100%|##########| 26/26 [00:00<00:00, 27.91it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 104 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 105 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 106 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 107 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 108 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 109 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 110 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 111 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 112 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 113 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 114 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 115 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 116 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 117 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 118 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 119 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 120 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 121 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 122 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 123 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 124 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 125 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 126 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 127 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 128 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 129 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [4][  26/  26]	Loss 0.326 (0.327)	train_nll   0.33 (  0.33)	train_penalty   0.02 (  0.02)	weight_norm  22.21 ( 22.17)	train_acc   0.85 (  0.86)	train_minacc   0.25 (  0.24)	train_majacc   0.94 (  0.97)	train_corr   0.00 (  0.00)	l1 6.7042 (6.5079)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.72it/s] 23%|##3       | 6/26 [00:00<00:00, 24.67it/s]                                               23%|##3       | 6/26 [00:00<00:00, 24.67it/s] 42%|####2     | 11/26 [00:00<00:00, 33.16it/s] 62%|######1   | 16/26 [00:00<00:00, 38.17it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.17it/s] 81%|########  | 21/26 [00:00<00:00, 37.76it/s]100%|##########| 26/26 [00:00<00:00, 41.23it/s]100%|##########| 26/26 [00:00<00:00, 33.42it/s]
Test: [   0/  26]	Loss 0.392 (0.392)	test_acc   0.83 (  0.83)	test_minacc   0.31 (  0.31)	test_majacc   0.93 (  0.93)	Loss_d 0.392 (0.392)	test_acc_d   0.83 (  0.83)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.85 (  0.85)
Test: [  10/  26]	Loss 0.261 (0.316)	test_acc   0.89 (  0.86)	test_minacc   0.40 (  0.39)	test_majacc   0.96 (  0.95)	Loss_d 0.261 (0.316)	test_acc_d   0.89 (  0.86)	test_minacc_d   0.40 (  0.39)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.87 (  0.86)
Test: [  20/  26]	Loss 0.309 (0.313)	test_acc   0.89 (  0.87)	test_minacc   0.47 (  0.41)	test_majacc   0.97 (  0.95)	Loss_d 0.309 (0.313)	test_acc_d   0.89 (  0.87)	test_minacc_d   0.47 (  0.41)	test_majacc_d   0.97 (  0.95)	test_corr_d   0.87 (  0.86)
Test: [  26/  26]	Loss 0.277 (0.307)	test_acc   0.87 (  0.87)	test_minacc   0.34 (  0.41)	test_majacc   0.95 (  0.95)	Loss_d 0.277 (0.307)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.34 (  0.41)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.88 (  0.86)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.36it/s]
Test: [  0/  1]	Loss 1.683 (1.683)	test_acc   0.34 (  0.34)	test_minacc   0.27 (  0.27)	test_majacc   0.96 (  0.96)	Loss_d 1.683 (1.683)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.64 (  0.64)
Test: [  1/  1]	Loss 1.683 (1.683)	test_acc   0.34 (  0.34)	test_minacc   0.27 (  0.27)	test_majacc   0.96 (  0.96)	Loss_d 1.683 (1.683)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.64 (  0.64)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/171/checkpoints/model_best.pth
Overall Timing[  4/  1]	epoch_time 0.0404 (0.0471)	validation_time 0.0004 (0.0017)	train_time 0.0399 (0.0447)
record: (train_acc, test_acc) (0.8707000212669372, 0.33500000834465027)
last accs (train_acc, test_acc) (0.8707000212669372, 0.33500000834465027)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.06it/s] 19%|#9        | 5/26 [00:00<00:00, 21.76it/s] 35%|###4      | 9/26 [00:00<00:00, 27.03it/s] 50%|#####     | 13/26 [00:00<00:00, 30.10it/s] 65%|######5   | 17/26 [00:00<00:00, 31.66it/s] 81%|########  | 21/26 [00:00<00:00, 32.41it/s] 96%|#########6| 25/26 [00:00<00:00, 33.32it/s]100%|##########| 26/26 [00:00<00:00, 28.40it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 130 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 131 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 132 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 133 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 134 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 135 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 136 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 137 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 138 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 139 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 140 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 141 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 142 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 143 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 144 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 145 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 146 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 147 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 148 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 149 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 150 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 151 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 152 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 153 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 154 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 155 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [5][  26/  26]	Loss 0.297 (0.310)	train_nll   0.30 (  0.31)	train_penalty   0.02 (  0.02)	weight_norm  22.30 ( 22.25)	train_acc   0.87 (  0.87)	train_minacc   0.28 (  0.32)	train_majacc   0.95 (  0.96)	train_corr   0.00 (  0.00)	l1 6.5948 (6.5650)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.93it/s] 23%|##3       | 6/26 [00:00<00:00, 27.63it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.63it/s] 42%|####2     | 11/26 [00:00<00:00, 34.92it/s] 62%|######1   | 16/26 [00:00<00:00, 40.01it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.01it/s] 81%|########  | 21/26 [00:00<00:00, 37.99it/s]100%|##########| 26/26 [00:00<00:00, 41.03it/s]100%|##########| 26/26 [00:00<00:00, 34.15it/s]
Test: [   0/  26]	Loss 0.347 (0.347)	test_acc   0.84 (  0.84)	test_minacc   0.28 (  0.28)	test_majacc   0.94 (  0.94)	Loss_d 0.347 (0.347)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.87 (  0.87)
Test: [  10/  26]	Loss 0.240 (0.290)	test_acc   0.91 (  0.87)	test_minacc   0.44 (  0.35)	test_majacc   0.97 (  0.97)	Loss_d 0.240 (0.290)	test_acc_d   0.91 (  0.87)	test_minacc_d   0.44 (  0.35)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.89 (  0.88)
Test: [  20/  26]	Loss 0.277 (0.285)	test_acc   0.87 (  0.88)	test_minacc   0.32 (  0.37)	test_majacc   0.97 (  0.97)	Loss_d 0.277 (0.285)	test_acc_d   0.87 (  0.88)	test_minacc_d   0.32 (  0.37)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.88 (  0.88)
Test: [  26/  26]	Loss 0.254 (0.279)	test_acc   0.89 (  0.88)	test_minacc   0.31 (  0.38)	test_majacc   0.97 (  0.97)	Loss_d 0.254 (0.279)	test_acc_d   0.89 (  0.88)	test_minacc_d   0.31 (  0.38)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.89 (  0.88)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.86it/s]
Test: [  0/  1]	Loss 1.749 (1.749)	test_acc   0.27 (  0.27)	test_minacc   0.19 (  0.19)	test_majacc   0.97 (  0.97)	Loss_d 1.749 (1.749)	test_acc_d   0.27 (  0.27)	test_minacc_d   0.19 (  0.19)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.72 (  0.72)
Test: [  1/  1]	Loss 1.749 (1.749)	test_acc   0.27 (  0.27)	test_minacc   0.19 (  0.19)	test_majacc   0.97 (  0.97)	Loss_d 1.749 (1.749)	test_acc_d   0.27 (  0.27)	test_minacc_d   0.19 (  0.19)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.72 (  0.72)
Overall Timing[  5/  1]	epoch_time 0.0395 (0.0458)	validation_time 0.0005 (0.0015)	train_time 0.0390 (0.0438)
record: (train_acc, test_acc) (0.8707000212669372, 0.33500000834465027)
last accs (train_acc, test_acc) (0.8804000203609467, 0.2670000195503235)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.39it/s] 15%|#5        | 4/26 [00:00<00:01, 16.05it/s] 31%|###       | 8/26 [00:00<00:00, 23.69it/s] 46%|####6     | 12/26 [00:00<00:00, 27.87it/s] 62%|######1   | 16/26 [00:00<00:00, 30.59it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.61it/s] 92%|#########2| 24/26 [00:00<00:00, 33.12it/s]100%|##########| 26/26 [00:00<00:00, 27.65it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 156 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 157 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 158 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 159 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 160 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 161 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 162 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 163 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 164 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 165 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 166 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 167 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 168 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 169 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 170 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 171 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 172 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 173 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 174 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 175 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 176 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 177 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 178 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 179 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 180 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 181 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [6][  26/  26]	Loss 0.298 (0.297)	train_nll   0.30 (  0.30)	train_penalty   0.01 (  0.02)	weight_norm  22.42 ( 22.36)	train_acc   0.85 (  0.87)	train_minacc   0.38 (  0.37)	train_majacc   0.92 (  0.96)	train_corr   0.00 (  0.00)	l1 6.7797 (6.7107)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.92it/s] 27%|##6       | 7/26 [00:00<00:00, 35.14it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.14it/s] 46%|####6     | 12/26 [00:00<00:00, 40.00it/s] 65%|######5   | 17/26 [00:00<00:00, 42.69it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.69it/s] 85%|########4 | 22/26 [00:00<00:00, 42.55it/s]100%|##########| 26/26 [00:00<00:00, 38.57it/s]
Test: [   0/  26]	Loss 0.356 (0.356)	test_acc   0.85 (  0.85)	test_minacc   0.38 (  0.38)	test_majacc   0.94 (  0.94)	Loss_d 0.356 (0.356)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.86 (  0.86)
Test: [  10/  26]	Loss 0.236 (0.287)	test_acc   0.89 (  0.87)	test_minacc   0.38 (  0.40)	test_majacc   0.96 (  0.96)	Loss_d 0.236 (0.287)	test_acc_d   0.89 (  0.87)	test_minacc_d   0.38 (  0.40)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.89 (  0.87)
Test: [  20/  26]	Loss 0.253 (0.281)	test_acc   0.90 (  0.88)	test_minacc   0.48 (  0.42)	test_majacc   0.98 (  0.96)	Loss_d 0.253 (0.281)	test_acc_d   0.90 (  0.88)	test_minacc_d   0.48 (  0.42)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.87 (  0.87)
Test: [  26/  26]	Loss 0.239 (0.274)	test_acc   0.89 (  0.88)	test_minacc   0.38 (  0.43)	test_majacc   0.97 (  0.96)	Loss_d 0.239 (0.274)	test_acc_d   0.89 (  0.88)	test_minacc_d   0.38 (  0.43)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.88 (  0.87)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.93it/s]
Test: [  0/  1]	Loss 1.849 (1.849)	test_acc   0.34 (  0.34)	test_minacc   0.27 (  0.27)	test_majacc   0.96 (  0.96)	Loss_d 1.849 (1.849)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.63 (  0.63)
Test: [  1/  1]	Loss 1.849 (1.849)	test_acc   0.34 (  0.34)	test_minacc   0.27 (  0.27)	test_majacc   0.96 (  0.96)	Loss_d 1.849 (1.849)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.63 (  0.63)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/171/checkpoints/model_best.pth
Overall Timing[  6/  1]	epoch_time 0.0377 (0.0447)	validation_time 0.0004 (0.0013)	train_time 0.0372 (0.0428)
record: (train_acc, test_acc) (0.881800022482872, 0.3410000205039978)
last accs (train_acc, test_acc) (0.881800022482872, 0.3410000205039978)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.47it/s] 19%|#9        | 5/26 [00:00<00:01, 18.78it/s] 35%|###4      | 9/26 [00:00<00:00, 25.26it/s] 50%|#####     | 13/26 [00:00<00:00, 29.68it/s] 65%|######5   | 17/26 [00:00<00:00, 31.30it/s] 81%|########  | 21/26 [00:00<00:00, 32.82it/s] 96%|#########6| 25/26 [00:00<00:00, 33.53it/s]100%|##########| 26/26 [00:00<00:00, 27.67it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 182 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 183 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 184 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 185 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 186 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 187 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 188 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 189 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 190 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 191 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 192 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 193 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 194 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 195 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 196 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 197 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 198 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 199 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 200 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 201 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 202 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 203 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 204 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 205 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 206 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 207 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [7][  26/  26]	Loss 0.013 (0.205)	train_nll   0.50 (  0.31)	train_penalty   0.01 (  0.01)	weight_norm  22.58 ( 22.50)	train_acc   0.74 (  0.86)	train_minacc   0.53 (  0.44)	train_majacc   0.77 (  0.94)	train_corr   0.00 (  0.00)	l1 6.1611 (6.6301)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:08,  2.88it/s] 27%|##6       | 7/26 [00:00<00:00, 19.02it/s]                                               27%|##6       | 7/26 [00:00<00:00, 19.02it/s] 50%|#####     | 13/26 [00:00<00:00, 29.38it/s] 73%|#######3  | 19/26 [00:00<00:00, 35.40it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 35.40it/s] 92%|#########2| 24/26 [00:00<00:00, 38.45it/s]100%|##########| 26/26 [00:00<00:00, 29.24it/s]
Test: [   0/  26]	Loss 0.461 (0.461)	test_acc   0.77 (  0.77)	test_minacc   0.55 (  0.55)	test_majacc   0.82 (  0.82)	Loss_d 0.461 (0.461)	test_acc_d   0.77 (  0.77)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.82 (  0.82)	test_corr_d   0.62 (  0.62)
Test: [  10/  26]	Loss 0.364 (0.390)	test_acc   0.82 (  0.81)	test_minacc   0.77 (  0.69)	test_majacc   0.83 (  0.84)	Loss_d 0.364 (0.390)	test_acc_d   0.82 (  0.81)	test_minacc_d   0.77 (  0.69)	test_majacc_d   0.83 (  0.84)	test_corr_d   0.64 (  0.63)
Test: [  20/  26]	Loss 0.380 (0.386)	test_acc   0.82 (  0.82)	test_minacc   0.70 (  0.71)	test_majacc   0.84 (  0.84)	Loss_d 0.380 (0.386)	test_acc_d   0.82 (  0.82)	test_minacc_d   0.70 (  0.71)	test_majacc_d   0.84 (  0.84)	test_corr_d   0.63 (  0.62)
Test: [  26/  26]	Loss 0.432 (0.385)	test_acc   0.78 (  0.82)	test_minacc   0.50 (  0.71)	test_majacc   0.82 (  0.84)	Loss_d 0.432 (0.385)	test_acc_d   0.78 (  0.82)	test_minacc_d   0.50 (  0.71)	test_majacc_d   0.82 (  0.84)	test_corr_d   0.65 (  0.62)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.05it/s]
Test: [  0/  1]	Loss 1.097 (1.097)	test_acc   0.54 (  0.54)	test_minacc   0.50 (  0.50)	test_majacc   0.90 (  0.90)	Loss_d 1.097 (1.097)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.19 (  0.19)
Test: [  1/  1]	Loss 1.097 (1.097)	test_acc   0.54 (  0.54)	test_minacc   0.50 (  0.50)	test_majacc   0.90 (  0.90)	Loss_d 1.097 (1.097)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.19 (  0.19)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/171/checkpoints/model_best.pth
Overall Timing[  7/  1]	epoch_time 0.0419 (0.0443)	validation_time 0.0004 (0.0012)	train_time 0.0415 (0.0427)
record: (train_acc, test_acc) (0.8195000205039978, 0.5390000343322754)
last accs (train_acc, test_acc) (0.8195000205039978, 0.5390000343322754)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.29it/s] 19%|#9        | 5/26 [00:00<00:00, 21.64it/s] 35%|###4      | 9/26 [00:00<00:00, 27.38it/s] 50%|#####     | 13/26 [00:00<00:00, 30.65it/s] 65%|######5   | 17/26 [00:00<00:00, 32.20it/s] 81%|########  | 21/26 [00:00<00:00, 33.08it/s] 96%|#########6| 25/26 [00:00<00:00, 33.23it/s]100%|##########| 26/26 [00:00<00:00, 28.71it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 208 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 209 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 210 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 211 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 212 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 213 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 214 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 215 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 216 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 217 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 218 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 219 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 220 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 221 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 222 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 223 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 224 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 225 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 226 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 227 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 228 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 229 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 230 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 231 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 232 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 233 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [8][  26/  26]	Loss 0.002 (0.004)	train_nll   0.57 (  0.49)	train_penalty   0.00 (  0.00)	weight_norm  22.66 ( 22.63)	train_acc   0.63 (  0.73)	train_minacc   0.56 (  0.73)	train_majacc   0.64 (  0.73)	train_corr   0.00 (  0.00)	l1 4.9811 (5.2358)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.84it/s] 23%|##3       | 6/26 [00:00<00:00, 30.56it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.56it/s] 42%|####2     | 11/26 [00:00<00:00, 37.73it/s] 62%|######1   | 16/26 [00:00<00:00, 37.48it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.48it/s] 81%|########  | 21/26 [00:00<00:00, 40.05it/s]100%|##########| 26/26 [00:00<00:00, 42.69it/s]100%|##########| 26/26 [00:00<00:00, 35.98it/s]
Test: [   0/  26]	Loss 0.592 (0.592)	test_acc   0.64 (  0.64)	test_minacc   0.59 (  0.59)	test_majacc   0.65 (  0.65)	Loss_d 0.592 (0.592)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.43 (  0.43)
Test: [  10/  26]	Loss 0.515 (0.535)	test_acc   0.71 (  0.69)	test_minacc   0.77 (  0.72)	test_majacc   0.70 (  0.69)	Loss_d 0.515 (0.535)	test_acc_d   0.71 (  0.69)	test_minacc_d   0.77 (  0.72)	test_majacc_d   0.70 (  0.69)	test_corr_d   0.46 (  0.44)
Test: [  20/  26]	Loss 0.503 (0.536)	test_acc   0.72 (  0.69)	test_minacc   0.78 (  0.72)	test_majacc   0.71 (  0.68)	Loss_d 0.503 (0.536)	test_acc_d   0.72 (  0.69)	test_minacc_d   0.78 (  0.72)	test_majacc_d   0.71 (  0.68)	test_corr_d   0.46 (  0.43)
Test: [  26/  26]	Loss 0.556 (0.536)	test_acc   0.65 (  0.69)	test_minacc   0.53 (  0.73)	test_majacc   0.67 (  0.68)	Loss_d 0.556 (0.536)	test_acc_d   0.65 (  0.69)	test_minacc_d   0.53 (  0.73)	test_majacc_d   0.67 (  0.68)	test_corr_d   0.45 (  0.43)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.77it/s]
Test: [  0/  1]	Loss 0.803 (0.803)	test_acc   0.62 (  0.62)	test_minacc   0.60 (  0.60)	test_majacc   0.78 (  0.78)	Loss_d 0.803 (0.803)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.06 (  0.06)
Test: [  1/  1]	Loss 0.803 (0.803)	test_acc   0.62 (  0.62)	test_minacc   0.60 (  0.60)	test_majacc   0.78 (  0.78)	Loss_d 0.803 (0.803)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.06 (  0.06)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/171/checkpoints/model_best.pth
Overall Timing[  8/  1]	epoch_time 0.0401 (0.0439)	validation_time 0.0004 (0.0011)	train_time 0.0396 (0.0423)
record: (train_acc, test_acc) (0.688800033390522, 0.6220000386238098)
last accs (train_acc, test_acc) (0.688800033390522, 0.6220000386238098)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.52it/s] 12%|#1        | 3/26 [00:00<00:02, 11.34it/s] 27%|##6       | 7/26 [00:00<00:00, 20.25it/s] 42%|####2     | 11/26 [00:00<00:00, 24.99it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.17it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.86it/s] 88%|########8 | 23/26 [00:00<00:00, 31.71it/s]100%|##########| 26/26 [00:01<00:00, 25.92it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 234 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 235 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 236 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 237 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 238 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 239 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 240 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 241 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 242 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 243 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 244 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 245 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 246 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 247 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 248 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 249 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 250 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 251 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 252 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 253 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 254 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 255 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 256 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 257 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 258 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 259 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [9][  26/  26]	Loss 0.001 (0.001)	train_nll   0.60 (  0.58)	train_penalty   0.00 (  0.00)	weight_norm  22.67 ( 22.67)	train_acc   0.63 (  0.65)	train_minacc   0.66 (  0.75)	train_majacc   0.63 (  0.63)	train_corr   0.00 (  0.00)	l1 4.8255 (4.8325)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.02it/s] 12%|#1        | 3/26 [00:00<00:02, 10.66it/s] 31%|###       | 8/26 [00:00<00:00, 24.45it/s]                                               31%|###       | 8/26 [00:00<00:00, 24.45it/s] 50%|#####     | 13/26 [00:00<00:00, 32.35it/s] 69%|######9   | 18/26 [00:00<00:00, 35.41it/s]                                                69%|######9   | 18/26 [00:00<00:00, 35.41it/s] 88%|########8 | 23/26 [00:00<00:00, 38.72it/s]100%|##########| 26/26 [00:00<00:00, 30.29it/s]
Test: [   0/  26]	Loss 0.612 (0.612)	test_acc   0.62 (  0.62)	test_minacc   0.64 (  0.64)	test_majacc   0.62 (  0.62)	Loss_d 0.612 (0.612)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.35 (  0.35)
Test: [  10/  26]	Loss 0.558 (0.575)	test_acc   0.69 (  0.66)	test_minacc   0.83 (  0.75)	test_majacc   0.67 (  0.64)	Loss_d 0.558 (0.575)	test_acc_d   0.69 (  0.66)	test_minacc_d   0.83 (  0.75)	test_majacc_d   0.67 (  0.64)	test_corr_d   0.39 (  0.36)
Test: [  20/  26]	Loss 0.557 (0.577)	test_acc   0.66 (  0.65)	test_minacc   0.77 (  0.73)	test_majacc   0.64 (  0.64)	Loss_d 0.557 (0.577)	test_acc_d   0.66 (  0.65)	test_minacc_d   0.77 (  0.73)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.37 (  0.36)
Test: [  26/  26]	Loss 0.589 (0.577)	test_acc   0.63 (  0.65)	test_minacc   0.59 (  0.74)	test_majacc   0.63 (  0.63)	Loss_d 0.589 (0.577)	test_acc_d   0.63 (  0.65)	test_minacc_d   0.59 (  0.74)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.37 (  0.35)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.38it/s]
Test: [  0/  1]	Loss 0.761 (0.761)	test_acc   0.64 (  0.64)	test_minacc   0.63 (  0.63)	test_majacc   0.74 (  0.74)	Loss_d 0.761 (0.761)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.00 (  0.00)
Test: [  1/  1]	Loss 0.761 (0.761)	test_acc   0.64 (  0.64)	test_minacc   0.63 (  0.63)	test_majacc   0.74 (  0.74)	Loss_d 0.761 (0.761)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.00 (  0.00)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/171/checkpoints/model_best.pth
Overall Timing[  9/  1]	epoch_time 0.0429 (0.0438)	validation_time 0.0011 (0.0011)	train_time 0.0419 (0.0423)
record: (train_acc, test_acc) (0.6496000196933747, 0.6430000066757202)
last accs (train_acc, test_acc) (0.6496000196933747, 0.6430000066757202)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.66it/s]  8%|7         | 2/26 [00:00<00:04,  5.69it/s] 23%|##3       | 6/26 [00:00<00:01, 15.89it/s] 38%|###8      | 10/26 [00:00<00:00, 22.24it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.47it/s] 69%|######9   | 18/26 [00:00<00:00, 28.89it/s] 85%|########4 | 22/26 [00:00<00:00, 30.41it/s]100%|##########| 26/26 [00:01<00:00, 31.74it/s]100%|##########| 26/26 [00:01<00:00, 23.13it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 260 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 261 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 262 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 263 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 264 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 265 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 266 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 267 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 268 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 269 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 270 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 271 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 272 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 273 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 274 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 275 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 276 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 277 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 278 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 279 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 280 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 281 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 282 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 283 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 284 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 285 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [10][  26/  26]	Loss 0.001 (0.001)	train_nll   0.59 (  0.58)	train_penalty   0.00 (  0.00)	weight_norm  22.68 ( 22.68)	train_acc   0.62 (  0.66)	train_minacc   0.47 (  0.69)	train_majacc   0.65 (  0.65)	train_corr   0.00 (  0.00)	l1 4.6546 (4.7468)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.59it/s] 27%|##6       | 7/26 [00:00<00:00, 28.27it/s]                                               27%|##6       | 7/26 [00:00<00:00, 28.27it/s] 42%|####2     | 11/26 [00:00<00:00, 32.23it/s] 65%|######5   | 17/26 [00:00<00:00, 37.11it/s]                                                65%|######5   | 17/26 [00:00<00:00, 37.11it/s] 85%|########4 | 22/26 [00:00<00:00, 40.13it/s]100%|##########| 26/26 [00:00<00:00, 33.39it/s]
Test: [   0/  26]	Loss 0.597 (0.597)	test_acc   0.66 (  0.66)	test_minacc   0.55 (  0.55)	test_majacc   0.68 (  0.68)	Loss_d 0.597 (0.597)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.68 (  0.68)	test_corr_d   0.47 (  0.47)
Test: [  10/  26]	Loss 0.538 (0.561)	test_acc   0.71 (  0.69)	test_minacc   0.62 (  0.62)	test_majacc   0.73 (  0.70)	Loss_d 0.538 (0.561)	test_acc_d   0.71 (  0.69)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.73 (  0.70)	test_corr_d   0.51 (  0.48)
Test: [  20/  26]	Loss 0.531 (0.561)	test_acc   0.74 (  0.69)	test_minacc   0.73 (  0.63)	test_majacc   0.74 (  0.70)	Loss_d 0.531 (0.561)	test_acc_d   0.74 (  0.69)	test_minacc_d   0.73 (  0.63)	test_majacc_d   0.74 (  0.70)	test_corr_d   0.48 (  0.47)
Test: [  26/  26]	Loss 0.580 (0.561)	test_acc   0.64 (  0.69)	test_minacc   0.50 (  0.64)	test_majacc   0.66 (  0.70)	Loss_d 0.580 (0.561)	test_acc_d   0.64 (  0.69)	test_minacc_d   0.50 (  0.64)	test_majacc_d   0.66 (  0.70)	test_corr_d   0.50 (  0.47)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.46it/s]
Test: [  0/  1]	Loss 0.809 (0.809)	test_acc   0.56 (  0.56)	test_minacc   0.54 (  0.54)	test_majacc   0.77 (  0.77)	Loss_d 0.809 (0.809)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.16 (  0.16)
Test: [  1/  1]	Loss 0.809 (0.809)	test_acc   0.56 (  0.56)	test_minacc   0.54 (  0.54)	test_majacc   0.77 (  0.77)	Loss_d 0.809 (0.809)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.16 (  0.16)
Overall Timing[ 10/  1]	epoch_time 0.0411 (0.0435)	validation_time 0.0003 (0.0010)	train_time 0.0407 (0.0421)
record: (train_acc, test_acc) (0.6496000196933747, 0.6430000066757202)
last accs (train_acc, test_acc) (0.6891000365614891, 0.5630000233650208)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.21it/s] 19%|#9        | 5/26 [00:00<00:01, 16.49it/s] 35%|###4      | 9/26 [00:00<00:00, 22.90it/s] 50%|#####     | 13/26 [00:00<00:00, 26.65it/s] 65%|######5   | 17/26 [00:00<00:00, 29.41it/s] 81%|########  | 21/26 [00:00<00:00, 30.96it/s] 96%|#########6| 25/26 [00:00<00:00, 31.74it/s]100%|##########| 26/26 [00:01<00:00, 25.51it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 286 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 287 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 288 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 289 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 290 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 291 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 292 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 293 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 294 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 295 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 296 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 297 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 298 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 299 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 300 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 301 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 302 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 303 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 304 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 305 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 306 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 307 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 308 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 309 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 310 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 311 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [11][  26/  26]	Loss 0.001 (0.001)	train_nll   0.60 (  0.59)	train_penalty   0.00 (  0.00)	weight_norm  22.68 ( 22.68)	train_acc   0.63 (  0.65)	train_minacc   0.50 (  0.69)	train_majacc   0.65 (  0.64)	train_corr   0.00 (  0.00)	l1 4.5304 (4.6206)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.04it/s] 12%|#1        | 3/26 [00:00<00:01, 13.19it/s] 31%|###       | 8/26 [00:00<00:00, 27.44it/s]                                               31%|###       | 8/26 [00:00<00:00, 27.44it/s] 50%|#####     | 13/26 [00:00<00:00, 34.48it/s] 69%|######9   | 18/26 [00:00<00:00, 38.63it/s]                                                69%|######9   | 18/26 [00:00<00:00, 38.63it/s] 88%|########8 | 23/26 [00:00<00:00, 38.52it/s]100%|##########| 26/26 [00:00<00:00, 32.92it/s]
Test: [   0/  26]	Loss 0.599 (0.599)	test_acc   0.65 (  0.65)	test_minacc   0.55 (  0.55)	test_majacc   0.67 (  0.67)	Loss_d 0.599 (0.599)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.67 (  0.67)	test_corr_d   0.48 (  0.48)
Test: [  10/  26]	Loss 0.540 (0.565)	test_acc   0.72 (  0.69)	test_minacc   0.58 (  0.61)	test_majacc   0.74 (  0.70)	Loss_d 0.540 (0.565)	test_acc_d   0.72 (  0.69)	test_minacc_d   0.58 (  0.61)	test_majacc_d   0.74 (  0.70)	test_corr_d   0.51 (  0.48)
Test: [  20/  26]	Loss 0.535 (0.564)	test_acc   0.74 (  0.69)	test_minacc   0.72 (  0.62)	test_majacc   0.74 (  0.70)	Loss_d 0.535 (0.564)	test_acc_d   0.74 (  0.69)	test_minacc_d   0.72 (  0.62)	test_majacc_d   0.74 (  0.70)	test_corr_d   0.48 (  0.48)
Test: [  26/  26]	Loss 0.580 (0.563)	test_acc   0.63 (  0.69)	test_minacc   0.47 (  0.63)	test_majacc   0.66 (  0.70)	Loss_d 0.580 (0.563)	test_acc_d   0.63 (  0.69)	test_minacc_d   0.47 (  0.63)	test_majacc_d   0.66 (  0.70)	test_corr_d   0.51 (  0.47)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.20it/s]
Test: [  0/  1]	Loss 0.810 (0.810)	test_acc   0.57 (  0.57)	test_minacc   0.55 (  0.55)	test_majacc   0.75 (  0.75)	Loss_d 0.810 (0.810)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.16 (  0.16)
Test: [  1/  1]	Loss 0.810 (0.810)	test_acc   0.57 (  0.57)	test_minacc   0.55 (  0.55)	test_majacc   0.75 (  0.75)	Loss_d 0.810 (0.810)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.16 (  0.16)
Overall Timing[ 11/  1]	epoch_time 0.0414 (0.0433)	validation_time 0.0004 (0.0010)	train_time 0.0410 (0.0420)
record: (train_acc, test_acc) (0.6496000196933747, 0.6430000066757202)
last accs (train_acc, test_acc) (0.6868000351190567, 0.5670000314712524)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.80it/s] 19%|#9        | 5/26 [00:00<00:01, 19.64it/s] 35%|###4      | 9/26 [00:00<00:00, 24.58it/s] 50%|#####     | 13/26 [00:00<00:00, 28.41it/s] 65%|######5   | 17/26 [00:00<00:00, 30.07it/s] 81%|########  | 21/26 [00:00<00:00, 31.75it/s] 96%|#########6| 25/26 [00:00<00:00, 32.68it/s]100%|##########| 26/26 [00:00<00:00, 27.27it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 312 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 313 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 314 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 315 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 316 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 317 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 318 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 319 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 320 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 321 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 322 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 323 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 324 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 325 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 326 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 327 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 328 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 329 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 330 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 331 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 332 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 333 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 334 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 335 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 336 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 337 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [12][  26/  26]	Loss 0.002 (0.002)	train_nll   0.62 (  0.59)	train_penalty   0.00 (  0.00)	weight_norm  22.69 ( 22.68)	train_acc   0.63 (  0.65)	train_minacc   0.59 (  0.70)	train_majacc   0.63 (  0.64)	train_corr   0.00 (  0.00)	l1 4.4125 (4.5069)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 12.46it/s] 27%|##6       | 7/26 [00:00<00:00, 28.85it/s]                                               27%|##6       | 7/26 [00:00<00:00, 28.85it/s] 46%|####6     | 12/26 [00:00<00:00, 35.70it/s] 69%|######9   | 18/26 [00:00<00:00, 39.17it/s]                                                69%|######9   | 18/26 [00:00<00:00, 39.17it/s] 88%|########8 | 23/26 [00:00<00:00, 42.26it/s]100%|##########| 26/26 [00:00<00:00, 36.28it/s]
Test: [   0/  26]	Loss 0.613 (0.613)	test_acc   0.65 (  0.65)	test_minacc   0.58 (  0.58)	test_majacc   0.66 (  0.66)	Loss_d 0.613 (0.613)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.66 (  0.66)	test_corr_d   0.45 (  0.45)
Test: [  10/  26]	Loss 0.558 (0.583)	test_acc   0.72 (  0.68)	test_minacc   0.58 (  0.60)	test_majacc   0.73 (  0.69)	Loss_d 0.558 (0.583)	test_acc_d   0.72 (  0.68)	test_minacc_d   0.58 (  0.60)	test_majacc_d   0.73 (  0.69)	test_corr_d   0.49 (  0.44)
Test: [  20/  26]	Loss 0.552 (0.581)	test_acc   0.73 (  0.68)	test_minacc   0.70 (  0.61)	test_majacc   0.73 (  0.69)	Loss_d 0.552 (0.581)	test_acc_d   0.73 (  0.68)	test_minacc_d   0.70 (  0.61)	test_majacc_d   0.73 (  0.69)	test_corr_d   0.45 (  0.44)
Test: [  26/  26]	Loss 0.595 (0.581)	test_acc   0.64 (  0.68)	test_minacc   0.56 (  0.62)	test_majacc   0.65 (  0.69)	Loss_d 0.595 (0.581)	test_acc_d   0.64 (  0.68)	test_minacc_d   0.56 (  0.62)	test_majacc_d   0.65 (  0.69)	test_corr_d   0.48 (  0.44)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.68it/s]
Test: [  0/  1]	Loss 0.783 (0.783)	test_acc   0.56 (  0.56)	test_minacc   0.54 (  0.54)	test_majacc   0.73 (  0.73)	Loss_d 0.783 (0.783)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 0.783 (0.783)	test_acc   0.56 (  0.56)	test_minacc   0.54 (  0.54)	test_majacc   0.73 (  0.73)	Loss_d 0.783 (0.783)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.11 (  0.11)
Overall Timing[ 12/  1]	epoch_time 0.0402 (0.0431)	validation_time 0.0004 (0.0009)	train_time 0.0398 (0.0419)
record: (train_acc, test_acc) (0.6496000196933747, 0.6430000066757202)
last accs (train_acc, test_acc) (0.6754000315666199, 0.562000036239624)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.41it/s] 15%|#5        | 4/26 [00:00<00:01, 16.83it/s] 31%|###       | 8/26 [00:00<00:00, 24.40it/s] 46%|####6     | 12/26 [00:00<00:00, 28.20it/s] 62%|######1   | 16/26 [00:00<00:00, 30.59it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.35it/s] 92%|#########2| 24/26 [00:00<00:00, 33.72it/s]100%|##########| 26/26 [00:00<00:00, 27.91it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 338 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 339 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 340 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 341 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 342 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 343 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 344 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 345 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 346 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 347 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 348 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 349 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 350 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 351 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 352 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 353 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 354 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 355 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 356 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 357 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 358 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 359 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 360 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 361 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 362 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 363 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [13][  26/  26]	Loss 0.000 (0.001)	train_nll   0.60 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  22.69 ( 22.69)	train_acc   0.61 (  0.63)	train_minacc   0.66 (  0.75)	train_majacc   0.60 (  0.60)	train_corr   0.00 (  0.00)	l1 4.4355 (4.3710)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.75it/s] 15%|#5        | 4/26 [00:00<00:01, 13.82it/s]                                               15%|#5        | 4/26 [00:00<00:01, 13.82it/s] 42%|####2     | 11/26 [00:00<00:00, 30.45it/s] 62%|######1   | 16/26 [00:00<00:00, 34.40it/s]                                                62%|######1   | 16/26 [00:00<00:00, 34.40it/s] 81%|########  | 21/26 [00:00<00:00, 38.58it/s]100%|##########| 26/26 [00:00<00:00, 31.79it/s]
Test: [   0/  26]	Loss 0.636 (0.636)	test_acc   0.60 (  0.60)	test_minacc   0.69 (  0.69)	test_majacc   0.58 (  0.58)	Loss_d 0.636 (0.636)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.58 (  0.58)	test_corr_d   0.27 (  0.27)
Test: [  10/  26]	Loss 0.591 (0.615)	test_acc   0.64 (  0.61)	test_minacc   0.79 (  0.75)	test_majacc   0.62 (  0.59)	Loss_d 0.591 (0.615)	test_acc_d   0.64 (  0.61)	test_minacc_d   0.79 (  0.75)	test_majacc_d   0.62 (  0.59)	test_corr_d   0.32 (  0.27)
Test: [  20/  26]	Loss 0.598 (0.614)	test_acc   0.63 (  0.61)	test_minacc   0.77 (  0.74)	test_majacc   0.60 (  0.59)	Loss_d 0.598 (0.614)	test_acc_d   0.63 (  0.61)	test_minacc_d   0.77 (  0.74)	test_majacc_d   0.60 (  0.59)	test_corr_d   0.28 (  0.27)
Test: [  26/  26]	Loss 0.605 (0.612)	test_acc   0.61 (  0.61)	test_minacc   0.66 (  0.75)	test_majacc   0.60 (  0.59)	Loss_d 0.605 (0.612)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.66 (  0.75)	test_majacc_d   0.60 (  0.59)	test_corr_d   0.31 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.93it/s]
Test: [  0/  1]	Loss 0.733 (0.733)	test_acc   0.67 (  0.67)	test_minacc   0.66 (  0.66)	test_majacc   0.69 (  0.69)	Loss_d 0.733 (0.733)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.69 (  0.69)	test_corr_d  -0.09 ( -0.09)
Test: [  1/  1]	Loss 0.733 (0.733)	test_acc   0.67 (  0.67)	test_minacc   0.66 (  0.66)	test_majacc   0.69 (  0.69)	Loss_d 0.733 (0.733)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.69 (  0.69)	test_corr_d  -0.09 ( -0.09)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/171/checkpoints/model_best.pth
Overall Timing[ 13/  1]	epoch_time 0.0458 (0.0433)	validation_time 0.0004 (0.0009)	train_time 0.0453 (0.0421)
record: (train_acc, test_acc) (0.6142000024914741, 0.6670000553131104)
last accs (train_acc, test_acc) (0.6142000024914741, 0.6670000553131104)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.70it/s] 19%|#9        | 5/26 [00:00<00:01, 15.26it/s] 35%|###4      | 9/26 [00:00<00:00, 21.94it/s] 50%|#####     | 13/26 [00:00<00:00, 25.79it/s] 65%|######5   | 17/26 [00:00<00:00, 28.38it/s] 81%|########  | 21/26 [00:00<00:00, 29.76it/s] 96%|#########6| 25/26 [00:00<00:00, 31.53it/s]100%|##########| 26/26 [00:01<00:00, 24.78it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 364 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 365 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 366 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 367 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 368 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 369 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 370 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 371 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 372 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 373 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 374 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 375 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 376 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 377 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 378 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 379 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 380 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 381 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 382 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 383 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 384 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 385 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 386 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 387 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 388 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 389 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [14][  26/  26]	Loss 0.000 (0.001)	train_nll   0.61 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm  22.69 ( 22.69)	train_acc   0.59 (  0.62)	train_minacc   0.69 (  0.73)	train_majacc   0.58 (  0.60)	train_corr   0.00 (  0.00)	l1 4.2366 (4.3463)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.13it/s] 23%|##3       | 6/26 [00:00<00:00, 23.72it/s]                                               23%|##3       | 6/26 [00:00<00:00, 23.72it/s] 42%|####2     | 11/26 [00:00<00:00, 32.58it/s] 62%|######1   | 16/26 [00:00<00:00, 36.68it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.68it/s] 81%|########  | 21/26 [00:00<00:00, 37.80it/s]100%|##########| 26/26 [00:00<00:00, 41.24it/s]100%|##########| 26/26 [00:00<00:00, 32.79it/s]
Test: [   0/  26]	Loss 0.637 (0.637)	test_acc   0.58 (  0.58)	test_minacc   0.69 (  0.69)	test_majacc   0.56 (  0.56)	Loss_d 0.637 (0.637)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.56 (  0.56)	test_corr_d   0.26 (  0.26)
Test: [  10/  26]	Loss 0.608 (0.624)	test_acc   0.63 (  0.60)	test_minacc   0.75 (  0.73)	test_majacc   0.62 (  0.57)	Loss_d 0.608 (0.624)	test_acc_d   0.63 (  0.60)	test_minacc_d   0.75 (  0.73)	test_majacc_d   0.62 (  0.57)	test_corr_d   0.30 (  0.26)
Test: [  20/  26]	Loss 0.609 (0.622)	test_acc   0.60 (  0.60)	test_minacc   0.73 (  0.73)	test_majacc   0.58 (  0.58)	Loss_d 0.609 (0.622)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.73 (  0.73)	test_majacc_d   0.58 (  0.58)	test_corr_d   0.27 (  0.26)
Test: [  26/  26]	Loss 0.621 (0.622)	test_acc   0.58 (  0.60)	test_minacc   0.69 (  0.73)	test_majacc   0.57 (  0.58)	Loss_d 0.621 (0.622)	test_acc_d   0.58 (  0.60)	test_minacc_d   0.69 (  0.73)	test_majacc_d   0.57 (  0.58)	test_corr_d   0.29 (  0.26)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.20it/s]
Test: [  0/  1]	Loss 0.716 (0.716)	test_acc   0.64 (  0.64)	test_minacc   0.64 (  0.64)	test_majacc   0.69 (  0.69)	Loss_d 0.716 (0.716)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.69 (  0.69)	test_corr_d  -0.03 ( -0.03)
Test: [  1/  1]	Loss 0.716 (0.716)	test_acc   0.64 (  0.64)	test_minacc   0.64 (  0.64)	test_majacc   0.69 (  0.69)	Loss_d 0.716 (0.716)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.69 (  0.69)	test_corr_d  -0.03 ( -0.03)
Overall Timing[ 14/  1]	epoch_time 0.0414 (0.0432)	validation_time 0.0004 (0.0009)	train_time 0.0410 (0.0420)
record: (train_acc, test_acc) (0.6142000024914741, 0.6670000553131104)
last accs (train_acc, test_acc) (0.602400010406971, 0.6440000534057617)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.91it/s] 19%|#9        | 5/26 [00:00<00:00, 21.55it/s] 35%|###4      | 9/26 [00:00<00:00, 27.53it/s] 50%|#####     | 13/26 [00:00<00:00, 30.18it/s] 65%|######5   | 17/26 [00:00<00:00, 31.80it/s] 81%|########  | 21/26 [00:00<00:00, 32.90it/s] 96%|#########6| 25/26 [00:00<00:00, 33.63it/s]100%|##########| 26/26 [00:00<00:00, 28.54it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 390 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 391 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 392 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 393 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 394 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 395 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 396 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 397 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 398 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 399 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 400 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 401 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 402 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 403 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 404 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 405 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 406 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 407 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 408 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 409 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 410 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 411 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 412 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 413 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 414 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 415 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [15][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  22.70 ( 22.70)	train_acc   0.58 (  0.59)	train_minacc   0.62 (  0.72)	train_majacc   0.57 (  0.57)	train_corr   0.00 (  0.00)	l1 4.2050 (4.2458)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:08,  2.82it/s] 23%|##3       | 6/26 [00:00<00:01, 16.26it/s]                                               23%|##3       | 6/26 [00:00<00:01, 16.26it/s] 42%|####2     | 11/26 [00:00<00:00, 25.21it/s] 62%|######1   | 16/26 [00:00<00:00, 31.60it/s]                                                62%|######1   | 16/26 [00:00<00:00, 31.60it/s] 81%|########  | 21/26 [00:00<00:00, 32.68it/s]100%|##########| 26/26 [00:00<00:00, 36.70it/s]100%|##########| 26/26 [00:00<00:00, 26.66it/s]
Test: [   0/  26]	Loss 0.646 (0.646)	test_acc   0.59 (  0.59)	test_minacc   0.67 (  0.67)	test_majacc   0.57 (  0.57)	Loss_d 0.646 (0.646)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.57 (  0.57)	test_corr_d   0.26 (  0.26)
Test: [  10/  26]	Loss 0.619 (0.632)	test_acc   0.61 (  0.61)	test_minacc   0.65 (  0.66)	test_majacc   0.61 (  0.60)	Loss_d 0.619 (0.632)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.65 (  0.66)	test_majacc_d   0.61 (  0.60)	test_corr_d   0.30 (  0.27)
Test: [  20/  26]	Loss 0.614 (0.629)	test_acc   0.63 (  0.61)	test_minacc   0.72 (  0.66)	test_majacc   0.61 (  0.60)	Loss_d 0.614 (0.629)	test_acc_d   0.63 (  0.61)	test_minacc_d   0.72 (  0.66)	test_majacc_d   0.61 (  0.60)	test_corr_d   0.28 (  0.27)
Test: [  26/  26]	Loss 0.638 (0.630)	test_acc   0.59 (  0.61)	test_minacc   0.66 (  0.66)	test_majacc   0.58 (  0.60)	Loss_d 0.638 (0.630)	test_acc_d   0.59 (  0.61)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.58 (  0.60)	test_corr_d   0.29 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.46it/s]
Test: [  0/  1]	Loss 0.727 (0.727)	test_acc   0.60 (  0.60)	test_minacc   0.59 (  0.59)	test_majacc   0.68 (  0.68)	Loss_d 0.727 (0.727)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.68 (  0.68)	test_corr_d   0.02 (  0.02)
Test: [  1/  1]	Loss 0.727 (0.727)	test_acc   0.60 (  0.60)	test_minacc   0.59 (  0.59)	test_majacc   0.68 (  0.68)	Loss_d 0.727 (0.727)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.68 (  0.68)	test_corr_d   0.02 (  0.02)
Overall Timing[ 15/  1]	epoch_time 0.0425 (0.0431)	validation_time 0.0003 (0.0008)	train_time 0.0422 (0.0420)
record: (train_acc, test_acc) (0.6142000024914741, 0.6670000553131104)
last accs (train_acc, test_acc) (0.6080000122785568, 0.5960000157356262)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:09,  2.55it/s] 15%|#5        | 4/26 [00:00<00:02,  9.70it/s] 31%|###       | 8/26 [00:00<00:01, 16.92it/s] 46%|####6     | 12/26 [00:00<00:00, 21.87it/s] 62%|######1   | 16/26 [00:00<00:00, 25.32it/s] 77%|#######6  | 20/26 [00:00<00:00, 27.95it/s] 92%|#########2| 24/26 [00:01<00:00, 30.19it/s]100%|##########| 26/26 [00:01<00:00, 21.81it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 416 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 417 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 418 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 419 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 420 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 421 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 422 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 423 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 424 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 425 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 426 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 427 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 428 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 429 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 430 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 431 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 432 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 433 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 434 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 435 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 436 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 437 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 438 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 439 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 440 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 441 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [16][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  22.70 ( 22.70)	train_acc   0.57 (  0.59)	train_minacc   0.66 (  0.68)	train_majacc   0.56 (  0.57)	train_corr   0.00 (  0.00)	l1 4.1648 (4.2074)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.30it/s] 15%|#5        | 4/26 [00:00<00:01, 15.89it/s]                                               15%|#5        | 4/26 [00:00<00:01, 15.89it/s] 42%|####2     | 11/26 [00:00<00:00, 35.19it/s] 62%|######1   | 16/26 [00:00<00:00, 36.25it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.25it/s] 85%|########4 | 22/26 [00:00<00:00, 42.02it/s]100%|##########| 26/26 [00:00<00:00, 35.99it/s]
Test: [   0/  26]	Loss 0.649 (0.649)	test_acc   0.58 (  0.58)	test_minacc   0.66 (  0.66)	test_majacc   0.56 (  0.56)	Loss_d 0.649 (0.649)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.56 (  0.56)	test_corr_d   0.25 (  0.25)
Test: [  10/  26]	Loss 0.626 (0.636)	test_acc   0.60 (  0.60)	test_minacc   0.62 (  0.65)	test_majacc   0.60 (  0.59)	Loss_d 0.626 (0.636)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.62 (  0.65)	test_majacc_d   0.60 (  0.59)	test_corr_d   0.29 (  0.26)
Test: [  20/  26]	Loss 0.620 (0.633)	test_acc   0.62 (  0.60)	test_minacc   0.70 (  0.66)	test_majacc   0.60 (  0.59)	Loss_d 0.620 (0.633)	test_acc_d   0.62 (  0.60)	test_minacc_d   0.70 (  0.66)	test_majacc_d   0.60 (  0.59)	test_corr_d   0.27 (  0.26)
Test: [  26/  26]	Loss 0.641 (0.634)	test_acc   0.57 (  0.60)	test_minacc   0.66 (  0.66)	test_majacc   0.56 (  0.59)	Loss_d 0.641 (0.634)	test_acc_d   0.57 (  0.60)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.56 (  0.59)	test_corr_d   0.27 (  0.26)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.27it/s]
Test: [  0/  1]	Loss 0.722 (0.722)	test_acc   0.59 (  0.59)	test_minacc   0.59 (  0.59)	test_majacc   0.66 (  0.66)	Loss_d 0.722 (0.722)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.66 (  0.66)	test_corr_d   0.02 (  0.02)
Test: [  1/  1]	Loss 0.722 (0.722)	test_acc   0.59 (  0.59)	test_minacc   0.59 (  0.59)	test_majacc   0.66 (  0.66)	Loss_d 0.722 (0.722)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.66 (  0.66)	test_corr_d   0.02 (  0.02)
Overall Timing[ 16/  1]	epoch_time 0.0467 (0.0433)	validation_time 0.0004 (0.0008)	train_time 0.0463 (0.0423)
record: (train_acc, test_acc) (0.6142000024914741, 0.6670000553131104)
last accs (train_acc, test_acc) (0.6009000084996223, 0.5940000414848328)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.59it/s] 19%|#9        | 5/26 [00:00<00:01, 19.44it/s] 35%|###4      | 9/26 [00:00<00:00, 25.72it/s] 50%|#####     | 13/26 [00:00<00:00, 29.22it/s] 65%|######5   | 17/26 [00:00<00:00, 31.58it/s] 81%|########  | 21/26 [00:00<00:00, 33.01it/s] 96%|#########6| 25/26 [00:00<00:00, 34.34it/s]100%|##########| 26/26 [00:00<00:00, 28.10it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 442 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 443 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 444 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 445 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 446 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 447 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 448 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 449 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 450 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 451 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 452 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 453 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 454 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 455 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 456 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 457 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 458 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 459 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 460 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 461 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 462 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 463 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 464 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 465 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 466 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 467 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [17][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  22.70 ( 22.70)	train_acc   0.56 (  0.58)	train_minacc   0.66 (  0.67)	train_majacc   0.54 (  0.56)	train_corr   0.00 (  0.00)	l1 4.1474 (4.1823)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.66it/s] 23%|##3       | 6/26 [00:00<00:00, 22.97it/s]                                               23%|##3       | 6/26 [00:00<00:00, 22.97it/s] 42%|####2     | 11/26 [00:00<00:00, 31.57it/s] 62%|######1   | 16/26 [00:00<00:00, 37.00it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.00it/s] 81%|########  | 21/26 [00:00<00:00, 39.66it/s]100%|##########| 26/26 [00:00<00:00, 42.17it/s]100%|##########| 26/26 [00:00<00:00, 33.42it/s]
Test: [   0/  26]	Loss 0.651 (0.651)	test_acc   0.57 (  0.57)	test_minacc   0.66 (  0.66)	test_majacc   0.56 (  0.56)	Loss_d 0.651 (0.651)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.56 (  0.56)	test_corr_d   0.24 (  0.24)
Test: [  10/  26]	Loss 0.631 (0.640)	test_acc   0.59 (  0.59)	test_minacc   0.60 (  0.66)	test_majacc   0.58 (  0.58)	Loss_d 0.631 (0.640)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.60 (  0.66)	test_majacc_d   0.58 (  0.58)	test_corr_d   0.27 (  0.24)
Test: [  20/  26]	Loss 0.626 (0.637)	test_acc   0.59 (  0.59)	test_minacc   0.70 (  0.67)	test_majacc   0.57 (  0.58)	Loss_d 0.626 (0.637)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.70 (  0.67)	test_majacc_d   0.57 (  0.58)	test_corr_d   0.26 (  0.25)
Test: [  26/  26]	Loss 0.643 (0.638)	test_acc   0.56 (  0.59)	test_minacc   0.66 (  0.67)	test_majacc   0.55 (  0.58)	Loss_d 0.643 (0.638)	test_acc_d   0.56 (  0.59)	test_minacc_d   0.66 (  0.67)	test_majacc_d   0.55 (  0.58)	test_corr_d   0.26 (  0.25)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.44it/s]
Test: [  0/  1]	Loss 0.719 (0.719)	test_acc   0.60 (  0.60)	test_minacc   0.59 (  0.59)	test_majacc   0.66 (  0.66)	Loss_d 0.719 (0.719)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.66 (  0.66)	test_corr_d   0.01 (  0.01)
Test: [  1/  1]	Loss 0.719 (0.719)	test_acc   0.60 (  0.60)	test_minacc   0.59 (  0.59)	test_majacc   0.66 (  0.66)	Loss_d 0.719 (0.719)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.66 (  0.66)	test_corr_d   0.01 (  0.01)
Overall Timing[ 17/  1]	epoch_time 0.0374 (0.0430)	validation_time 0.0004 (0.0008)	train_time 0.0369 (0.0420)
record: (train_acc, test_acc) (0.6142000024914741, 0.6670000553131104)
last accs (train_acc, test_acc) (0.5905000087022781, 0.597000002861023)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.28it/s] 19%|#9        | 5/26 [00:00<00:01, 20.10it/s] 35%|###4      | 9/26 [00:00<00:00, 26.08it/s] 50%|#####     | 13/26 [00:00<00:00, 29.52it/s] 65%|######5   | 17/26 [00:00<00:00, 31.53it/s] 81%|########  | 21/26 [00:00<00:00, 32.67it/s] 96%|#########6| 25/26 [00:00<00:00, 33.37it/s]100%|##########| 26/26 [00:00<00:00, 28.02it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 468 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 469 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 470 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 471 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 472 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 473 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 474 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 475 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 476 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 477 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 478 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 479 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 480 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 481 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 482 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 483 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 484 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 485 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 486 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 487 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 488 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 489 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 490 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 491 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 492 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 493 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [18][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm  22.70 ( 22.70)	train_acc   0.56 (  0.58)	train_minacc   0.69 (  0.68)	train_majacc   0.55 (  0.56)	train_corr   0.00 (  0.00)	l1 4.1417 (4.1694)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.42it/s] 23%|##3       | 6/26 [00:00<00:00, 29.43it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.43it/s] 42%|####2     | 11/26 [00:00<00:00, 36.29it/s] 62%|######1   | 16/26 [00:00<00:00, 40.65it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.65it/s] 81%|########  | 21/26 [00:00<00:00, 38.14it/s]100%|##########| 26/26 [00:00<00:00, 41.27it/s]100%|##########| 26/26 [00:00<00:00, 35.31it/s]
Test: [   0/  26]	Loss 0.653 (0.653)	test_acc   0.57 (  0.57)	test_minacc   0.66 (  0.66)	test_majacc   0.55 (  0.55)	Loss_d 0.653 (0.653)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.55 (  0.55)	test_corr_d   0.24 (  0.24)
Test: [  10/  26]	Loss 0.634 (0.642)	test_acc   0.59 (  0.58)	test_minacc   0.60 (  0.65)	test_majacc   0.58 (  0.57)	Loss_d 0.634 (0.642)	test_acc_d   0.59 (  0.58)	test_minacc_d   0.60 (  0.65)	test_majacc_d   0.58 (  0.57)	test_corr_d   0.27 (  0.24)
Test: [  20/  26]	Loss 0.629 (0.639)	test_acc   0.59 (  0.59)	test_minacc   0.68 (  0.66)	test_majacc   0.57 (  0.58)	Loss_d 0.629 (0.639)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.68 (  0.66)	test_majacc_d   0.57 (  0.58)	test_corr_d   0.26 (  0.25)
Test: [  26/  26]	Loss 0.646 (0.640)	test_acc   0.56 (  0.59)	test_minacc   0.66 (  0.66)	test_majacc   0.55 (  0.57)	Loss_d 0.646 (0.640)	test_acc_d   0.56 (  0.59)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.55 (  0.57)	test_corr_d   0.25 (  0.24)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.04it/s]
Test: [  0/  1]	Loss 0.719 (0.719)	test_acc   0.59 (  0.59)	test_minacc   0.58 (  0.58)	test_majacc   0.65 (  0.65)	Loss_d 0.719 (0.719)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.02 (  0.02)
Test: [  1/  1]	Loss 0.719 (0.719)	test_acc   0.59 (  0.59)	test_minacc   0.58 (  0.58)	test_majacc   0.65 (  0.65)	Loss_d 0.719 (0.719)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.02 (  0.02)
Overall Timing[ 18/  1]	epoch_time 0.0403 (0.0429)	validation_time 0.0004 (0.0008)	train_time 0.0398 (0.0419)
record: (train_acc, test_acc) (0.6142000024914741, 0.6670000553131104)
last accs (train_acc, test_acc) (0.5868000100851058, 0.5900000333786011)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.97it/s] 19%|#9        | 5/26 [00:00<00:01, 20.83it/s] 35%|###4      | 9/26 [00:00<00:00, 26.94it/s] 50%|#####     | 13/26 [00:00<00:00, 30.45it/s] 65%|######5   | 17/26 [00:00<00:00, 31.56it/s] 81%|########  | 21/26 [00:00<00:00, 32.82it/s] 96%|#########6| 25/26 [00:00<00:00, 34.02it/s]100%|##########| 26/26 [00:00<00:00, 28.81it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 494 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 495 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 496 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 497 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 498 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 499 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 500 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 501 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 502 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 503 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 504 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 505 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 506 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 507 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 508 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 509 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 510 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 511 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 512 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 513 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 514 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 515 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 516 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 517 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 518 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 519 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [19][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm  22.70 ( 22.70)	train_acc   0.56 (  0.57)	train_minacc   0.69 (  0.67)	train_majacc   0.55 (  0.56)	train_corr   0.00 (  0.00)	l1 4.1355 (4.1624)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.61it/s] 27%|##6       | 7/26 [00:00<00:00, 25.87it/s]                                               27%|##6       | 7/26 [00:00<00:00, 25.87it/s] 46%|####6     | 12/26 [00:00<00:00, 33.41it/s] 65%|######5   | 17/26 [00:00<00:00, 34.97it/s]                                                65%|######5   | 17/26 [00:00<00:00, 34.97it/s] 85%|########4 | 22/26 [00:00<00:00, 38.37it/s]100%|##########| 26/26 [00:00<00:00, 32.08it/s]
Test: [   0/  26]	Loss 0.654 (0.654)	test_acc   0.56 (  0.56)	test_minacc   0.64 (  0.64)	test_majacc   0.54 (  0.54)	Loss_d 0.654 (0.654)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.54 (  0.54)	test_corr_d   0.24 (  0.24)
Test: [  10/  26]	Loss 0.635 (0.644)	test_acc   0.59 (  0.58)	test_minacc   0.60 (  0.64)	test_majacc   0.58 (  0.57)	Loss_d 0.635 (0.644)	test_acc_d   0.59 (  0.58)	test_minacc_d   0.60 (  0.64)	test_majacc_d   0.58 (  0.57)	test_corr_d   0.27 (  0.24)
Test: [  20/  26]	Loss 0.631 (0.640)	test_acc   0.59 (  0.59)	test_minacc   0.68 (  0.66)	test_majacc   0.58 (  0.58)	Loss_d 0.631 (0.640)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.68 (  0.66)	test_majacc_d   0.58 (  0.58)	test_corr_d   0.26 (  0.25)
Test: [  26/  26]	Loss 0.647 (0.641)	test_acc   0.56 (  0.59)	test_minacc   0.66 (  0.66)	test_majacc   0.55 (  0.57)	Loss_d 0.647 (0.641)	test_acc_d   0.56 (  0.59)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.55 (  0.57)	test_corr_d   0.25 (  0.24)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.44it/s]
Test: [  0/  1]	Loss 0.719 (0.719)	test_acc   0.59 (  0.59)	test_minacc   0.58 (  0.58)	test_majacc   0.65 (  0.65)	Loss_d 0.719 (0.719)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.02 (  0.02)
Test: [  1/  1]	Loss 0.719 (0.719)	test_acc   0.59 (  0.59)	test_minacc   0.58 (  0.58)	test_majacc   0.65 (  0.65)	Loss_d 0.719 (0.719)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.02 (  0.02)
Overall Timing[ 19/  1]	epoch_time 0.0387 (0.0427)	validation_time 0.0013 (0.0008)	train_time 0.0374 (0.0417)
record: (train_acc, test_acc) (0.6142000024914741, 0.6670000553131104)
last accs (train_acc, test_acc) (0.5858000078201294, 0.5879999995231628)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.47it/s] 12%|#1        | 3/26 [00:00<00:01, 13.62it/s] 27%|##6       | 7/26 [00:00<00:00, 23.65it/s] 42%|####2     | 11/26 [00:00<00:00, 27.79it/s] 58%|#####7    | 15/26 [00:00<00:00, 30.28it/s] 73%|#######3  | 19/26 [00:00<00:00, 31.86it/s] 88%|########8 | 23/26 [00:00<00:00, 33.13it/s]100%|##########| 26/26 [00:00<00:00, 28.24it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 520 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 521 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 522 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 523 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 524 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 525 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 526 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 527 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 528 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 529 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 530 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 531 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 532 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 533 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 534 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 535 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 536 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 537 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 538 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 539 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 540 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 541 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 542 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 543 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 544 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 545 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [20][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm  22.70 ( 22.70)	train_acc   0.57 (  0.57)	train_minacc   0.69 (  0.67)	train_majacc   0.55 (  0.56)	train_corr   0.00 (  0.00)	l1 4.1282 (4.1567)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.87it/s] 31%|###       | 8/26 [00:00<00:00, 38.70it/s]                                               31%|###       | 8/26 [00:00<00:00, 38.70it/s] 50%|#####     | 13/26 [00:00<00:00, 37.96it/s] 69%|######9   | 18/26 [00:00<00:00, 41.68it/s]                                                69%|######9   | 18/26 [00:00<00:00, 41.68it/s] 88%|########8 | 23/26 [00:00<00:00, 42.98it/s]100%|##########| 26/26 [00:00<00:00, 37.13it/s]
Test: [   0/  26]	Loss 0.654 (0.654)	test_acc   0.56 (  0.56)	test_minacc   0.64 (  0.64)	test_majacc   0.54 (  0.54)	Loss_d 0.654 (0.654)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.54 (  0.54)	test_corr_d   0.24 (  0.24)
Test: [  10/  26]	Loss 0.635 (0.644)	test_acc   0.59 (  0.58)	test_minacc   0.60 (  0.64)	test_majacc   0.58 (  0.56)	Loss_d 0.635 (0.644)	test_acc_d   0.59 (  0.58)	test_minacc_d   0.60 (  0.64)	test_majacc_d   0.58 (  0.56)	test_corr_d   0.27 (  0.24)
Test: [  20/  26]	Loss 0.632 (0.641)	test_acc   0.59 (  0.59)	test_minacc   0.68 (  0.65)	test_majacc   0.58 (  0.57)	Loss_d 0.632 (0.641)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.68 (  0.65)	test_majacc_d   0.58 (  0.57)	test_corr_d   0.26 (  0.25)
Test: [  26/  26]	Loss 0.647 (0.641)	test_acc   0.56 (  0.58)	test_minacc   0.66 (  0.65)	test_majacc   0.55 (  0.57)	Loss_d 0.647 (0.641)	test_acc_d   0.56 (  0.58)	test_minacc_d   0.66 (  0.65)	test_majacc_d   0.55 (  0.57)	test_corr_d   0.25 (  0.24)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.74it/s]
Test: [  0/  1]	Loss 0.720 (0.720)	test_acc   0.59 (  0.59)	test_minacc   0.58 (  0.58)	test_majacc   0.65 (  0.65)	Loss_d 0.720 (0.720)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.02 (  0.02)
Test: [  1/  1]	Loss 0.720 (0.720)	test_acc   0.59 (  0.59)	test_minacc   0.58 (  0.58)	test_majacc   0.65 (  0.65)	Loss_d 0.720 (0.720)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.02 (  0.02)
Overall Timing[ 20/  1]	epoch_time 0.0403 (0.0425)	validation_time 0.0003 (0.0008)	train_time 0.0399 (0.0416)
record: (train_acc, test_acc) (0.6142000024914741, 0.6670000553131104)
last accs (train_acc, test_acc) (0.584500009059906, 0.5850000381469727)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 19.55it/s] 27%|##6       | 7/26 [00:00<00:00, 25.31it/s] 42%|####2     | 11/26 [00:00<00:00, 27.95it/s] 58%|#####7    | 15/26 [00:00<00:00, 30.09it/s] 73%|#######3  | 19/26 [00:00<00:00, 31.93it/s] 88%|########8 | 23/26 [00:00<00:00, 33.16it/s]100%|##########| 26/26 [00:00<00:00, 28.93it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 546 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 547 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 548 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 549 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 550 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 551 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 552 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 553 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 554 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 555 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 556 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 557 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 558 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 559 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 560 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 561 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 562 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 563 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 564 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 565 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 566 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 567 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 568 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 569 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 570 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 571 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [21][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm  22.70 ( 22.70)	train_acc   0.56 (  0.57)	train_minacc   0.66 (  0.66)	train_majacc   0.55 (  0.56)	train_corr   0.00 (  0.00)	l1 4.1221 (4.1506)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.24it/s] 23%|##3       | 6/26 [00:00<00:00, 23.94it/s]                                               23%|##3       | 6/26 [00:00<00:00, 23.94it/s] 42%|####2     | 11/26 [00:00<00:00, 32.39it/s] 62%|######1   | 16/26 [00:00<00:00, 36.77it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.77it/s] 81%|########  | 21/26 [00:00<00:00, 37.89it/s]100%|##########| 26/26 [00:00<00:00, 41.11it/s]100%|##########| 26/26 [00:00<00:00, 32.62it/s]
Test: [   0/  26]	Loss 0.654 (0.654)	test_acc   0.56 (  0.56)	test_minacc   0.64 (  0.64)	test_majacc   0.55 (  0.55)	Loss_d 0.654 (0.654)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.55 (  0.55)	test_corr_d   0.24 (  0.24)
Test: [  10/  26]	Loss 0.636 (0.645)	test_acc   0.59 (  0.58)	test_minacc   0.60 (  0.64)	test_majacc   0.58 (  0.57)	Loss_d 0.636 (0.645)	test_acc_d   0.59 (  0.58)	test_minacc_d   0.60 (  0.64)	test_majacc_d   0.58 (  0.57)	test_corr_d   0.27 (  0.24)
Test: [  20/  26]	Loss 0.633 (0.641)	test_acc   0.60 (  0.59)	test_minacc   0.68 (  0.65)	test_majacc   0.58 (  0.58)	Loss_d 0.633 (0.641)	test_acc_d   0.60 (  0.59)	test_minacc_d   0.68 (  0.65)	test_majacc_d   0.58 (  0.58)	test_corr_d   0.26 (  0.25)
Test: [  26/  26]	Loss 0.648 (0.642)	test_acc   0.56 (  0.58)	test_minacc   0.62 (  0.65)	test_majacc   0.55 (  0.57)	Loss_d 0.648 (0.642)	test_acc_d   0.56 (  0.58)	test_minacc_d   0.62 (  0.65)	test_majacc_d   0.55 (  0.57)	test_corr_d   0.25 (  0.24)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.55it/s]
Test: [  0/  1]	Loss 0.720 (0.720)	test_acc   0.58 (  0.58)	test_minacc   0.58 (  0.58)	test_majacc   0.65 (  0.65)	Loss_d 0.720 (0.720)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.02 (  0.02)
Test: [  1/  1]	Loss 0.720 (0.720)	test_acc   0.58 (  0.58)	test_minacc   0.58 (  0.58)	test_majacc   0.65 (  0.65)	Loss_d 0.720 (0.720)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.02 (  0.02)
Overall Timing[ 21/  1]	epoch_time 0.0411 (0.0425)	validation_time 0.0005 (0.0008)	train_time 0.0406 (0.0415)
record: (train_acc, test_acc) (0.6142000024914741, 0.6670000553131104)
last accs (train_acc, test_acc) (0.584500009059906, 0.5840000510215759)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.51it/s] 12%|#1        | 3/26 [00:00<00:01, 12.87it/s] 27%|##6       | 7/26 [00:00<00:00, 22.17it/s] 42%|####2     | 11/26 [00:00<00:00, 26.89it/s] 58%|#####7    | 15/26 [00:00<00:00, 29.81it/s] 73%|#######3  | 19/26 [00:00<00:00, 31.51it/s] 88%|########8 | 23/26 [00:00<00:00, 32.83it/s]100%|##########| 26/26 [00:00<00:00, 27.10it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 572 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 573 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 574 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 575 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 576 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 577 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 578 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 579 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 580 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 581 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 582 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 583 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 584 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 585 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 586 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 587 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 588 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 589 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 590 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 591 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 592 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 593 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 594 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 595 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 596 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 597 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [22][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm  22.70 ( 22.70)	train_acc   0.56 (  0.57)	train_minacc   0.62 (  0.66)	train_majacc   0.55 (  0.56)	train_corr   0.00 (  0.00)	l1 4.1163 (4.1448)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.39it/s] 23%|##3       | 6/26 [00:00<00:00, 29.97it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.97it/s] 42%|####2     | 11/26 [00:00<00:00, 36.50it/s] 62%|######1   | 16/26 [00:00<00:00, 40.68it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.68it/s] 81%|########  | 21/26 [00:00<00:00, 38.68it/s]100%|##########| 26/26 [00:00<00:00, 35.51it/s]
Test: [   0/  26]	Loss 0.654 (0.654)	test_acc   0.56 (  0.56)	test_minacc   0.64 (  0.64)	test_majacc   0.55 (  0.55)	Loss_d 0.654 (0.654)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.55 (  0.55)	test_corr_d   0.24 (  0.24)
Test: [  10/  26]	Loss 0.637 (0.646)	test_acc   0.59 (  0.58)	test_minacc   0.60 (  0.63)	test_majacc   0.58 (  0.57)	Loss_d 0.637 (0.646)	test_acc_d   0.59 (  0.58)	test_minacc_d   0.60 (  0.63)	test_majacc_d   0.58 (  0.57)	test_corr_d   0.27 (  0.24)
Test: [  20/  26]	Loss 0.633 (0.641)	test_acc   0.60 (  0.59)	test_minacc   0.67 (  0.65)	test_majacc   0.59 (  0.58)	Loss_d 0.633 (0.641)	test_acc_d   0.60 (  0.59)	test_minacc_d   0.67 (  0.65)	test_majacc_d   0.59 (  0.58)	test_corr_d   0.26 (  0.25)
Test: [  26/  26]	Loss 0.648 (0.642)	test_acc   0.56 (  0.58)	test_minacc   0.62 (  0.65)	test_majacc   0.55 (  0.57)	Loss_d 0.648 (0.642)	test_acc_d   0.56 (  0.58)	test_minacc_d   0.62 (  0.65)	test_majacc_d   0.55 (  0.57)	test_corr_d   0.25 (  0.25)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.53it/s]
Test: [  0/  1]	Loss 0.720 (0.720)	test_acc   0.58 (  0.58)	test_minacc   0.58 (  0.58)	test_majacc   0.64 (  0.64)	Loss_d 0.720 (0.720)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.03 (  0.03)
Test: [  1/  1]	Loss 0.720 (0.720)	test_acc   0.58 (  0.58)	test_minacc   0.58 (  0.58)	test_majacc   0.64 (  0.64)	Loss_d 0.720 (0.720)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.03 (  0.03)
Overall Timing[ 22/  1]	epoch_time 0.0384 (0.0423)	validation_time 0.0004 (0.0007)	train_time 0.0379 (0.0414)
record: (train_acc, test_acc) (0.6142000024914741, 0.6670000553131104)
last accs (train_acc, test_acc) (0.5847000113725662, 0.5830000042915344)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.36it/s] 23%|##3       | 6/26 [00:00<00:00, 26.07it/s] 35%|###4      | 9/26 [00:00<00:00, 25.07it/s] 50%|#####     | 13/26 [00:00<00:00, 27.07it/s] 65%|######5   | 17/26 [00:00<00:00, 29.88it/s] 81%|########  | 21/26 [00:00<00:00, 30.10it/s] 96%|#########6| 25/26 [00:00<00:00, 30.15it/s]100%|##########| 26/26 [00:00<00:00, 27.45it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 598 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 599 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 600 200
penalty weights 10000.0
l1 at pgd_anneal_iters 4.107903480529785
set z to 4.066824445724487
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 601 200
penalty weights 10000.0
args.step pgd_anneal_iters 601 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 602 200
penalty weights 10000.0
args.step pgd_anneal_iters 602 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 603 200
penalty weights 10000.0
args.step pgd_anneal_iters 603 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 604 200
penalty weights 10000.0
args.step pgd_anneal_iters 604 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 605 200
penalty weights 10000.0
args.step pgd_anneal_iters 605 600
dim_v 512
rho, theta 390 tensor(-0.0061, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 606 200
penalty weights 10000.0
args.step pgd_anneal_iters 606 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 607 200
penalty weights 10000.0
args.step pgd_anneal_iters 607 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 608 200
penalty weights 10000.0
args.step pgd_anneal_iters 608 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 609 200
penalty weights 10000.0
args.step pgd_anneal_iters 609 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 610 200
penalty weights 10000.0
args.step pgd_anneal_iters 610 600
dim_v 512
rho, theta 259 tensor(0.0006, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 611 200
penalty weights 10000.0
args.step pgd_anneal_iters 611 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 612 200
penalty weights 10000.0
args.step pgd_anneal_iters 612 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 613 200
penalty weights 10000.0
args.step pgd_anneal_iters 613 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 614 200
penalty weights 10000.0
args.step pgd_anneal_iters 614 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 615 200
penalty weights 10000.0
args.step pgd_anneal_iters 615 600
dim_v 512
rho, theta 212 tensor(0.0171, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 616 200
penalty weights 10000.0
args.step pgd_anneal_iters 616 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 617 200
penalty weights 10000.0
args.step pgd_anneal_iters 617 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 618 200
penalty weights 10000.0
args.step pgd_anneal_iters 618 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 619 200
penalty weights 10000.0
args.step pgd_anneal_iters 619 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 620 200
penalty weights 10000.0
args.step pgd_anneal_iters 620 600
dim_v 512
rho, theta 197 tensor(0.0094, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 621 200
penalty weights 10000.0
args.step pgd_anneal_iters 621 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 622 200
penalty weights 10000.0
args.step pgd_anneal_iters 622 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 623 200
penalty weights 10000.0
args.step pgd_anneal_iters 623 600
final projection at end of training
dim_v 512
rho, theta 186 tensor(0.0037, device='cuda:0')
Epoch: [23][  26/  26]	Loss 0.000 (0.182)	train_nll   0.64 (  0.72)	train_penalty   0.00 (  0.18)	weight_norm  27.14 ( 23.94)	train_acc   0.55 (  0.59)	train_minacc   0.62 (  0.54)	train_majacc   0.54 (  0.60)	train_corr   0.00 (  0.00)	l1 5.4728 (5.4566)	zero_count 0.0000 (38.4540)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.31it/s] 23%|##3       | 6/26 [00:00<00:00, 27.25it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.25it/s] 42%|####2     | 11/26 [00:00<00:00, 34.82it/s] 62%|######1   | 16/26 [00:00<00:00, 39.06it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.06it/s] 81%|########  | 21/26 [00:00<00:00, 41.95it/s]100%|##########| 26/26 [00:00<00:00, 44.02it/s]100%|##########| 26/26 [00:00<00:00, 36.00it/s]
Test: [   0/  26]	Loss 0.712 (0.712)	test_acc   0.48 (  0.48)	test_minacc   0.56 (  0.56)	test_majacc   0.47 (  0.47)	Loss_d 0.712 (0.712)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.09 (  0.09)
Test: [  10/  26]	Loss 0.698 (0.700)	test_acc   0.51 (  0.50)	test_minacc   0.44 (  0.49)	test_majacc   0.52 (  0.50)	Loss_d 0.698 (0.700)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.44 (  0.49)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.13 (  0.12)
Test: [  20/  26]	Loss 0.696 (0.697)	test_acc   0.53 (  0.50)	test_minacc   0.57 (  0.50)	test_majacc   0.52 (  0.50)	Loss_d 0.696 (0.697)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.57 (  0.50)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.15 (  0.11)
Test: [  26/  26]	Loss 0.705 (0.696)	test_acc   0.46 (  0.50)	test_minacc   0.59 (  0.50)	test_majacc   0.44 (  0.50)	Loss_d 0.705 (0.696)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.59 (  0.50)	test_majacc_d   0.44 (  0.50)	test_corr_d   0.14 (  0.12)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.35it/s]
Test: [  0/  1]	Loss 0.709 (0.709)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.709 (0.709)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.11 ( -0.11)
Test: [  1/  1]	Loss 0.709 (0.709)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.709 (0.709)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.11 ( -0.11)
Overall Timing[ 23/  1]	epoch_time 0.0416 (0.0423)	validation_time 0.0004 (0.0007)	train_time 0.0412 (0.0414)
record: (train_acc, test_acc) (0.6142000024914741, 0.6670000553131104)
last accs (train_acc, test_acc) (0.5000000082850456, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.04it/s] 15%|#5        | 4/26 [00:00<00:01, 14.81it/s] 27%|##6       | 7/26 [00:00<00:00, 19.75it/s] 42%|####2     | 11/26 [00:00<00:00, 24.91it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.13it/s] 65%|######5   | 17/26 [00:00<00:00, 27.20it/s] 81%|########  | 21/26 [00:00<00:00, 30.38it/s] 96%|#########6| 25/26 [00:00<00:00, 30.62it/s]100%|##########| 26/26 [00:01<00:00, 24.62it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 624 200
penalty weights 10000.0
args.step pgd_anneal_iters 624 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 625 200
penalty weights 10000.0
args.step pgd_anneal_iters 625 600
dim_v 512
rho, theta 183 tensor(0.0019, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 626 200
penalty weights 10000.0
args.step pgd_anneal_iters 626 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 627 200
penalty weights 10000.0
args.step pgd_anneal_iters 627 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 628 200
penalty weights 10000.0
args.step pgd_anneal_iters 628 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 629 200
penalty weights 10000.0
args.step pgd_anneal_iters 629 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 630 200
penalty weights 10000.0
args.step pgd_anneal_iters 630 600
dim_v 512
rho, theta 178 tensor(0.0032, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 631 200
penalty weights 10000.0
args.step pgd_anneal_iters 631 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 632 200
penalty weights 10000.0
args.step pgd_anneal_iters 632 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 633 200
penalty weights 10000.0
args.step pgd_anneal_iters 633 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 634 200
penalty weights 10000.0
args.step pgd_anneal_iters 634 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 635 200
penalty weights 10000.0
args.step pgd_anneal_iters 635 600
dim_v 512
rho, theta 173 tensor(0.0020, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 636 200
penalty weights 10000.0
args.step pgd_anneal_iters 636 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 637 200
penalty weights 10000.0
args.step pgd_anneal_iters 637 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 638 200
penalty weights 10000.0
args.step pgd_anneal_iters 638 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 639 200
penalty weights 10000.0
args.step pgd_anneal_iters 639 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 640 200
penalty weights 10000.0
args.step pgd_anneal_iters 640 600
dim_v 512
rho, theta 172 tensor(0.0012, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 641 200
penalty weights 10000.0
args.step pgd_anneal_iters 641 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 642 200
penalty weights 10000.0
args.step pgd_anneal_iters 642 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 643 200
penalty weights 10000.0
args.step pgd_anneal_iters 643 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 644 200
penalty weights 10000.0
args.step pgd_anneal_iters 644 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 645 200
penalty weights 10000.0
args.step pgd_anneal_iters 645 600
dim_v 512
rho, theta 171 tensor(0.0007, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 646 200
penalty weights 10000.0
args.step pgd_anneal_iters 646 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 647 200
penalty weights 10000.0
args.step pgd_anneal_iters 647 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 648 200
penalty weights 10000.0
args.step pgd_anneal_iters 648 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 649 200
penalty weights 10000.0
args.step pgd_anneal_iters 649 600
final projection at end of training
dim_v 512
rho, theta 171 tensor(0.0003, device='cuda:0')
Epoch: [24][  26/  26]	Loss 0.000 (0.001)	train_nll   0.69 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm  29.86 ( 29.04)	train_acc   0.48 (  0.55)	train_minacc   0.69 (  0.56)	train_majacc   0.44 (  0.55)	train_corr   0.00 (  0.00)	l1 4.3120 (4.4867)	zero_count 0.0000 (78.1170)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.12it/s] 23%|##3       | 6/26 [00:00<00:00, 29.49it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.49it/s] 42%|####2     | 11/26 [00:00<00:00, 35.64it/s] 62%|######1   | 16/26 [00:00<00:00, 39.93it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.93it/s] 81%|########  | 21/26 [00:00<00:00, 40.97it/s]100%|##########| 26/26 [00:00<00:00, 42.93it/s]100%|##########| 26/26 [00:00<00:00, 35.81it/s]
Test: [   0/  26]	Loss 0.703 (0.703)	test_acc   0.48 (  0.48)	test_minacc   0.56 (  0.56)	test_majacc   0.47 (  0.47)	Loss_d 0.703 (0.703)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.47 (  0.47)	test_corr_d  -0.07 ( -0.07)
Test: [  10/  26]	Loss 0.705 (0.703)	test_acc   0.51 (  0.50)	test_minacc   0.44 (  0.49)	test_majacc   0.52 (  0.50)	Loss_d 0.705 (0.703)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.44 (  0.49)	test_majacc_d   0.52 (  0.50)	test_corr_d  -0.08 ( -0.07)
Test: [  20/  26]	Loss 0.697 (0.701)	test_acc   0.53 (  0.50)	test_minacc   0.57 (  0.50)	test_majacc   0.52 (  0.50)	Loss_d 0.697 (0.701)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.57 (  0.50)	test_majacc_d   0.52 (  0.50)	test_corr_d  -0.00 ( -0.07)
Test: [  26/  26]	Loss 0.706 (0.701)	test_acc   0.46 (  0.50)	test_minacc   0.59 (  0.50)	test_majacc   0.44 (  0.50)	Loss_d 0.706 (0.701)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.59 (  0.50)	test_majacc_d   0.44 (  0.50)	test_corr_d  -0.13 ( -0.06)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.31it/s]
Test: [  0/  1]	Loss 0.685 (0.685)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.685 (0.685)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.18 ( -0.18)
Test: [  1/  1]	Loss 0.685 (0.685)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.685 (0.685)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.18 ( -0.18)
Overall Timing[ 24/  1]	epoch_time 0.0394 (0.0422)	validation_time 0.0004 (0.0007)	train_time 0.0390 (0.0413)
record: (train_acc, test_acc) (0.6142000024914741, 0.6670000553131104)
last accs (train_acc, test_acc) (0.5000000082850456, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.36it/s] 15%|#5        | 4/26 [00:00<00:01, 14.78it/s] 27%|##6       | 7/26 [00:00<00:00, 20.19it/s] 42%|####2     | 11/26 [00:00<00:00, 24.61it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.20it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.20it/s] 85%|########4 | 22/26 [00:00<00:00, 29.29it/s]100%|##########| 26/26 [00:00<00:00, 29.29it/s]100%|##########| 26/26 [00:01<00:00, 25.19it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 650 200
penalty weights 10000.0
args.step pgd_anneal_iters 650 600
dim_v 512
rho, theta 170 tensor(5.2527e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 651 200
penalty weights 10000.0
args.step pgd_anneal_iters 651 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 652 200
penalty weights 10000.0
args.step pgd_anneal_iters 652 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 653 200
penalty weights 10000.0
args.step pgd_anneal_iters 653 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 654 200
penalty weights 10000.0
args.step pgd_anneal_iters 654 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 655 200
penalty weights 10000.0
args.step pgd_anneal_iters 655 600
dim_v 512
rho, theta 171 tensor(0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 656 200
penalty weights 10000.0
args.step pgd_anneal_iters 656 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 657 200
penalty weights 10000.0
args.step pgd_anneal_iters 657 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 658 200
penalty weights 10000.0
args.step pgd_anneal_iters 658 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 659 200
penalty weights 10000.0
args.step pgd_anneal_iters 659 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 660 200
penalty weights 10000.0
args.step pgd_anneal_iters 660 600
dim_v 512
rho, theta 171 tensor(8.8237e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 661 200
penalty weights 10000.0
args.step pgd_anneal_iters 661 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 662 200
penalty weights 10000.0
args.step pgd_anneal_iters 662 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 663 200
penalty weights 10000.0
args.step pgd_anneal_iters 663 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 664 200
penalty weights 10000.0
args.step pgd_anneal_iters 664 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 665 200
penalty weights 10000.0
args.step pgd_anneal_iters 665 600
dim_v 512
rho, theta 171 tensor(5.1706e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 666 200
penalty weights 10000.0
args.step pgd_anneal_iters 666 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 667 200
penalty weights 10000.0
args.step pgd_anneal_iters 667 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 668 200
penalty weights 10000.0
args.step pgd_anneal_iters 668 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 669 200
penalty weights 10000.0
args.step pgd_anneal_iters 669 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 670 200
penalty weights 10000.0
args.step pgd_anneal_iters 670 600
dim_v 512
rho, theta 174 tensor(2.4809e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 671 200
penalty weights 10000.0
args.step pgd_anneal_iters 671 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 672 200
penalty weights 10000.0
args.step pgd_anneal_iters 672 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 673 200
penalty weights 10000.0
args.step pgd_anneal_iters 673 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 674 200
penalty weights 10000.0
args.step pgd_anneal_iters 674 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 675 200
penalty weights 10000.0
args.step pgd_anneal_iters 675 600
dim_v 512
rho, theta 177 tensor(1.1712e-05, device='cuda:0')
final projection at end of training
dim_v 512
rho, theta 177 tensor(6.4293e-08, device='cuda:0')
Epoch: [25][  26/  26]	Loss 0.000 (0.000)	train_nll   0.70 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  30.07 ( 30.01)	train_acc   0.46 (  0.51)	train_minacc   0.59 (  0.51)	train_majacc   0.44 (  0.51)	train_corr   0.00 (  0.00)	l1 4.1200 (4.1423)	zero_count 0.0000 (79.4820)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 26.80it/s] 31%|###       | 8/26 [00:00<00:00, 37.88it/s]                                               31%|###       | 8/26 [00:00<00:00, 37.88it/s] 50%|#####     | 13/26 [00:00<00:00, 40.52it/s] 69%|######9   | 18/26 [00:00<00:00, 42.64it/s]                                                69%|######9   | 18/26 [00:00<00:00, 42.64it/s] 88%|########8 | 23/26 [00:00<00:00, 40.41it/s]100%|##########| 26/26 [00:00<00:00, 38.80it/s]
Test: [   0/  26]	Loss 0.696 (0.696)	test_acc   0.48 (  0.48)	test_minacc   0.56 (  0.56)	test_majacc   0.47 (  0.47)	Loss_d 0.696 (0.696)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.02 (  0.02)
Test: [  10/  26]	Loss 0.694 (0.694)	test_acc   0.51 (  0.50)	test_minacc   0.44 (  0.49)	test_majacc   0.52 (  0.50)	Loss_d 0.694 (0.694)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.44 (  0.49)	test_majacc_d   0.52 (  0.50)	test_corr_d  -0.00 (  0.02)
Test: [  20/  26]	Loss 0.691 (0.693)	test_acc   0.53 (  0.50)	test_minacc   0.57 (  0.50)	test_majacc   0.52 (  0.50)	Loss_d 0.691 (0.693)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.57 (  0.50)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.06 (  0.01)
Test: [  26/  26]	Loss 0.699 (0.693)	test_acc   0.46 (  0.50)	test_minacc   0.59 (  0.50)	test_majacc   0.44 (  0.50)	Loss_d 0.699 (0.693)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.59 (  0.50)	test_majacc_d   0.44 (  0.50)	test_corr_d  -0.03 (  0.02)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.84it/s]
Test: [  0/  1]	Loss 0.688 (0.688)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.688 (0.688)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.14 ( -0.14)
Test: [  1/  1]	Loss 0.688 (0.688)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.688 (0.688)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.14 ( -0.14)
Overall Timing[ 25/  1]	epoch_time 0.0433 (0.0422)	validation_time 0.0004 (0.0007)	train_time 0.0429 (0.0413)
record: (train_acc, test_acc) (0.6142000024914741, 0.6670000553131104)
last accs (train_acc, test_acc) (0.5000000082850456, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.54it/s] 19%|#9        | 5/26 [00:00<00:00, 21.30it/s] 35%|###4      | 9/26 [00:00<00:00, 27.57it/s] 50%|#####     | 13/26 [00:00<00:00, 28.95it/s] 65%|######5   | 17/26 [00:00<00:00, 29.95it/s] 81%|########  | 21/26 [00:00<00:00, 30.46it/s] 96%|#########6| 25/26 [00:00<00:00, 30.68it/s]100%|##########| 26/26 [00:00<00:00, 27.41it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 676 200
penalty weights 10000.0
args.step pgd_anneal_iters 676 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 677 200
penalty weights 10000.0
args.step pgd_anneal_iters 677 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 678 200
penalty weights 10000.0
args.step pgd_anneal_iters 678 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 679 200
penalty weights 10000.0
args.step pgd_anneal_iters 679 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 680 200
penalty weights 10000.0
args.step pgd_anneal_iters 680 600
dim_v 512
rho, theta 189 tensor(-5.8701e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 681 200
penalty weights 10000.0
args.step pgd_anneal_iters 681 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 682 200
penalty weights 10000.0
args.step pgd_anneal_iters 682 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 683 200
penalty weights 10000.0
args.step pgd_anneal_iters 683 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 684 200
penalty weights 10000.0
args.step pgd_anneal_iters 684 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 685 200
penalty weights 10000.0
args.step pgd_anneal_iters 685 600
dim_v 512
rho, theta 196 tensor(-1.0367e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 686 200
penalty weights 10000.0
args.step pgd_anneal_iters 686 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 687 200
penalty weights 10000.0
args.step pgd_anneal_iters 687 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 688 200
penalty weights 10000.0
args.step pgd_anneal_iters 688 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 689 200
penalty weights 10000.0
args.step pgd_anneal_iters 689 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 690 200
penalty weights 10000.0
args.step pgd_anneal_iters 690 600
dim_v 512
rho, theta 199 tensor(-8.3733e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 691 200
penalty weights 10000.0
args.step pgd_anneal_iters 691 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 692 200
penalty weights 10000.0
args.step pgd_anneal_iters 692 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 693 200
penalty weights 10000.0
args.step pgd_anneal_iters 693 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 694 200
penalty weights 10000.0
args.step pgd_anneal_iters 694 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 695 200
penalty weights 10000.0
args.step pgd_anneal_iters 695 600
dim_v 512
rho, theta 200 tensor(-7.1170e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 696 200
penalty weights 10000.0
args.step pgd_anneal_iters 696 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 697 200
penalty weights 10000.0
args.step pgd_anneal_iters 697 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 698 200
penalty weights 10000.0
args.step pgd_anneal_iters 698 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 699 200
penalty weights 10000.0
args.step pgd_anneal_iters 699 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 700 200
penalty weights 10000.0
args.step pgd_anneal_iters 700 600
dim_v 512
rho, theta 201 tensor(-5.4081e-06, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 701 200
penalty weights 10000.0
args.step pgd_anneal_iters 701 600
final projection at end of training
dim_v 512
rho, theta 202 tensor(-1.9238e-06, device='cuda:0')
Epoch: [26][  26/  26]	Loss 0.000 (0.000)	train_nll   0.70 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  30.09 ( 30.08)	train_acc   0.46 (  0.50)	train_minacc   0.59 (  0.50)	train_majacc   0.44 (  0.50)	train_corr   0.00 (  0.00)	l1 4.0668 (4.0903)	zero_count 310.0000 (69.8770)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.50it/s] 12%|#1        | 3/26 [00:00<00:02,  8.88it/s] 31%|###       | 8/26 [00:00<00:00, 21.54it/s]                                               31%|###       | 8/26 [00:00<00:00, 21.54it/s] 50%|#####     | 13/26 [00:00<00:00, 29.11it/s] 69%|######9   | 18/26 [00:00<00:00, 32.09it/s]                                                69%|######9   | 18/26 [00:00<00:00, 32.09it/s] 88%|########8 | 23/26 [00:00<00:00, 35.93it/s]100%|##########| 26/26 [00:00<00:00, 27.41it/s]
Test: [   0/  26]	Loss 0.695 (0.695)	test_acc   0.48 (  0.48)	test_minacc   0.56 (  0.56)	test_majacc   0.47 (  0.47)	Loss_d 0.695 (0.695)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.04 (  0.04)
Test: [  10/  26]	Loss 0.693 (0.693)	test_acc   0.51 (  0.50)	test_minacc   0.44 (  0.49)	test_majacc   0.52 (  0.50)	Loss_d 0.693 (0.693)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.44 (  0.49)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.02 (  0.04)
Test: [  20/  26]	Loss 0.690 (0.692)	test_acc   0.53 (  0.50)	test_minacc   0.57 (  0.50)	test_majacc   0.52 (  0.50)	Loss_d 0.690 (0.692)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.57 (  0.50)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.08 (  0.03)
Test: [  26/  26]	Loss 0.697 (0.692)	test_acc   0.46 (  0.50)	test_minacc   0.59 (  0.50)	test_majacc   0.44 (  0.50)	Loss_d 0.697 (0.692)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.59 (  0.50)	test_majacc_d   0.44 (  0.50)	test_corr_d   0.00 (  0.04)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.88it/s]
Test: [  0/  1]	Loss 0.689 (0.689)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.689 (0.689)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.13 ( -0.13)
Test: [  1/  1]	Loss 0.689 (0.689)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.689 (0.689)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.13 ( -0.13)
Overall Timing[ 26/  1]	epoch_time 0.0424 (0.0422)	validation_time 0.0003 (0.0007)	train_time 0.0420 (0.0414)
record: (train_acc, test_acc) (0.6142000024914741, 0.6670000553131104)
last accs (train_acc, test_acc) (0.5000000082850456, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.08it/s] 19%|#9        | 5/26 [00:00<00:00, 24.21it/s] 35%|###4      | 9/26 [00:00<00:00, 27.35it/s] 50%|#####     | 13/26 [00:00<00:00, 30.40it/s] 65%|######5   | 17/26 [00:00<00:00, 30.68it/s] 81%|########  | 21/26 [00:00<00:00, 28.51it/s] 92%|#########2| 24/26 [00:00<00:00, 28.80it/s]100%|##########| 26/26 [00:00<00:00, 27.35it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 702 200
penalty weights 10000.0
args.step pgd_anneal_iters 702 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 703 200
penalty weights 10000.0
args.step pgd_anneal_iters 703 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 704 200
penalty weights 10000.0
args.step pgd_anneal_iters 704 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 705 200
penalty weights 10000.0
args.step pgd_anneal_iters 705 600
dim_v 512
rho, theta 201 tensor(-1.0559e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 706 200
penalty weights 10000.0
args.step pgd_anneal_iters 706 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 707 200
penalty weights 10000.0
args.step pgd_anneal_iters 707 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 708 200
penalty weights 10000.0
args.step pgd_anneal_iters 708 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 709 200
penalty weights 10000.0
args.step pgd_anneal_iters 709 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 710 200
penalty weights 10000.0
args.step pgd_anneal_iters 710 600
dim_v 512
rho, theta 201 tensor(-1.1569e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 711 200
penalty weights 10000.0
args.step pgd_anneal_iters 711 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 712 200
penalty weights 10000.0
args.step pgd_anneal_iters 712 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 713 200
penalty weights 10000.0
args.step pgd_anneal_iters 713 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 714 200
penalty weights 10000.0
args.step pgd_anneal_iters 714 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 715 200
penalty weights 10000.0
args.step pgd_anneal_iters 715 600
dim_v 512
rho, theta 201 tensor(-1.0271e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 716 200
penalty weights 10000.0
args.step pgd_anneal_iters 716 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 717 200
penalty weights 10000.0
args.step pgd_anneal_iters 717 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 718 200
penalty weights 10000.0
args.step pgd_anneal_iters 718 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 719 200
penalty weights 10000.0
args.step pgd_anneal_iters 719 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 720 200
penalty weights 10000.0
args.step pgd_anneal_iters 720 600
dim_v 512
rho, theta 201 tensor(-6.8575e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 721 200
penalty weights 10000.0
args.step pgd_anneal_iters 721 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 722 200
penalty weights 10000.0
args.step pgd_anneal_iters 722 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 723 200
penalty weights 10000.0
args.step pgd_anneal_iters 723 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 724 200
penalty weights 10000.0
args.step pgd_anneal_iters 724 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 725 200
penalty weights 10000.0
args.step pgd_anneal_iters 725 600
dim_v 512
rho, theta 202 tensor(-5.3063e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 726 200
penalty weights 10000.0
args.step pgd_anneal_iters 726 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 727 200
penalty weights 10000.0
args.step pgd_anneal_iters 727 600
final projection at end of training
dim_v 512
rho, theta 202 tensor(-2.8211e-06, device='cuda:0')
Epoch: [27][  26/  26]	Loss 0.000 (0.000)	train_nll   0.70 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  30.09 ( 30.09)	train_acc   0.46 (  0.50)	train_minacc   0.59 (  0.50)	train_majacc   0.44 (  0.50)	train_corr   0.00 (  0.00)	l1 4.0711 (4.0807)	zero_count 0.0000 (72.4620)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.63it/s] 27%|##6       | 7/26 [00:00<00:00, 33.32it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.32it/s] 46%|####6     | 12/26 [00:00<00:00, 38.63it/s] 65%|######5   | 17/26 [00:00<00:00, 41.64it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.64it/s] 85%|########4 | 22/26 [00:00<00:00, 42.17it/s]100%|##########| 26/26 [00:00<00:00, 37.71it/s]
Test: [   0/  26]	Loss 0.694 (0.694)	test_acc   0.48 (  0.48)	test_minacc   0.56 (  0.56)	test_majacc   0.47 (  0.47)	Loss_d 0.694 (0.694)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.05 (  0.05)
Test: [  10/  26]	Loss 0.692 (0.692)	test_acc   0.51 (  0.50)	test_minacc   0.44 (  0.49)	test_majacc   0.52 (  0.50)	Loss_d 0.692 (0.692)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.44 (  0.49)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.02 (  0.04)
Test: [  20/  26]	Loss 0.690 (0.692)	test_acc   0.53 (  0.50)	test_minacc   0.57 (  0.50)	test_majacc   0.52 (  0.50)	Loss_d 0.690 (0.692)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.57 (  0.50)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.08 (  0.04)
Test: [  26/  26]	Loss 0.697 (0.692)	test_acc   0.46 (  0.50)	test_minacc   0.59 (  0.50)	test_majacc   0.44 (  0.50)	Loss_d 0.697 (0.692)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.59 (  0.50)	test_majacc_d   0.44 (  0.50)	test_corr_d   0.02 (  0.05)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.88it/s]
Test: [  0/  1]	Loss 0.690 (0.690)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.690 (0.690)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.11 ( -0.11)
Test: [  1/  1]	Loss 0.690 (0.690)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.690 (0.690)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.11 ( -0.11)
Overall Timing[ 27/  1]	epoch_time 0.0412 (0.0422)	validation_time 0.0005 (0.0007)	train_time 0.0406 (0.0413)
record: (train_acc, test_acc) (0.6142000024914741, 0.6670000553131104)
last accs (train_acc, test_acc) (0.5000000082850456, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.24it/s] 15%|#5        | 4/26 [00:00<00:01, 14.77it/s] 31%|###       | 8/26 [00:00<00:00, 21.34it/s] 46%|####6     | 12/26 [00:00<00:00, 26.07it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.89it/s] 69%|######9   | 18/26 [00:00<00:00, 26.00it/s] 85%|########4 | 22/26 [00:00<00:00, 28.30it/s]100%|##########| 26/26 [00:01<00:00, 29.56it/s]100%|##########| 26/26 [00:01<00:00, 24.32it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 728 200
penalty weights 10000.0
args.step pgd_anneal_iters 728 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 729 200
penalty weights 10000.0
args.step pgd_anneal_iters 729 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 730 200
penalty weights 10000.0
args.step pgd_anneal_iters 730 600
dim_v 512
rho, theta 202 tensor(-6.6264e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 731 200
penalty weights 10000.0
args.step pgd_anneal_iters 731 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 732 200
penalty weights 10000.0
args.step pgd_anneal_iters 732 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 733 200
penalty weights 10000.0
args.step pgd_anneal_iters 733 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 734 200
penalty weights 10000.0
args.step pgd_anneal_iters 734 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 735 200
penalty weights 10000.0
args.step pgd_anneal_iters 735 600
dim_v 512
rho, theta 202 tensor(-1.0450e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 736 200
penalty weights 10000.0
args.step pgd_anneal_iters 736 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 737 200
penalty weights 10000.0
args.step pgd_anneal_iters 737 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 738 200
penalty weights 10000.0
args.step pgd_anneal_iters 738 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 739 200
penalty weights 10000.0
args.step pgd_anneal_iters 739 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 740 200
penalty weights 10000.0
args.step pgd_anneal_iters 740 600
dim_v 512
rho, theta 201 tensor(-8.2337e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 741 200
penalty weights 10000.0
args.step pgd_anneal_iters 741 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 742 200
penalty weights 10000.0
args.step pgd_anneal_iters 742 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 743 200
penalty weights 10000.0
args.step pgd_anneal_iters 743 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 744 200
penalty weights 10000.0
args.step pgd_anneal_iters 744 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 745 200
penalty weights 10000.0
args.step pgd_anneal_iters 745 600
dim_v 512
rho, theta 200 tensor(-6.1514e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 746 200
penalty weights 10000.0
args.step pgd_anneal_iters 746 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 747 200
penalty weights 10000.0
args.step pgd_anneal_iters 747 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 748 200
penalty weights 10000.0
args.step pgd_anneal_iters 748 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 749 200
penalty weights 10000.0
args.step pgd_anneal_iters 749 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 750 200
penalty weights 10000.0
args.step pgd_anneal_iters 750 600
dim_v 512
rho, theta 201 tensor(-4.5724e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 751 200
penalty weights 10000.0
args.step pgd_anneal_iters 751 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 752 200
penalty weights 10000.0
args.step pgd_anneal_iters 752 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 753 200
penalty weights 10000.0
args.step pgd_anneal_iters 753 600
final projection at end of training
dim_v 512
rho, theta 201 tensor(-2.8587e-06, device='cuda:0')
Epoch: [28][  26/  26]	Loss 0.000 (0.000)	train_nll   0.70 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  30.09 ( 30.09)	train_acc   0.46 (  0.50)	train_minacc   0.59 (  0.50)	train_majacc   0.44 (  0.50)	train_corr   0.00 (  0.00)	l1 4.0719 (4.0777)	zero_count 0.0000 (72.4620)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.28it/s] 23%|##3       | 6/26 [00:00<00:00, 20.96it/s]                                               23%|##3       | 6/26 [00:00<00:00, 20.96it/s] 42%|####2     | 11/26 [00:00<00:00, 29.76it/s] 62%|######1   | 16/26 [00:00<00:00, 35.53it/s]                                                62%|######1   | 16/26 [00:00<00:00, 35.53it/s] 81%|########  | 21/26 [00:00<00:00, 36.56it/s]100%|##########| 26/26 [00:00<00:00, 31.48it/s]
Test: [   0/  26]	Loss 0.694 (0.694)	test_acc   0.48 (  0.48)	test_minacc   0.56 (  0.56)	test_majacc   0.47 (  0.47)	Loss_d 0.694 (0.694)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.05 (  0.05)
Test: [  10/  26]	Loss 0.692 (0.692)	test_acc   0.51 (  0.50)	test_minacc   0.44 (  0.49)	test_majacc   0.52 (  0.50)	Loss_d 0.692 (0.692)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.44 (  0.49)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.03 (  0.05)
Test: [  20/  26]	Loss 0.690 (0.692)	test_acc   0.53 (  0.50)	test_minacc   0.57 (  0.50)	test_majacc   0.52 (  0.50)	Loss_d 0.690 (0.692)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.57 (  0.50)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.08 (  0.04)
Test: [  26/  26]	Loss 0.696 (0.692)	test_acc   0.46 (  0.50)	test_minacc   0.59 (  0.50)	test_majacc   0.44 (  0.50)	Loss_d 0.696 (0.692)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.59 (  0.50)	test_majacc_d   0.44 (  0.50)	test_corr_d   0.02 (  0.05)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.93it/s]
Test: [  0/  1]	Loss 0.691 (0.691)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.691 (0.691)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.09 ( -0.09)
Test: [  1/  1]	Loss 0.691 (0.691)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.691 (0.691)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.09 ( -0.09)
Overall Timing[ 28/  1]	epoch_time 0.0401 (0.0421)	validation_time 0.0005 (0.0007)	train_time 0.0396 (0.0413)
record: (train_acc, test_acc) (0.6142000024914741, 0.6670000553131104)
last accs (train_acc, test_acc) (0.5000000082850456, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.07it/s] 12%|#1        | 3/26 [00:00<00:01, 11.73it/s] 27%|##6       | 7/26 [00:00<00:00, 20.39it/s] 42%|####2     | 11/26 [00:00<00:00, 25.78it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.13it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.26it/s] 85%|########4 | 22/26 [00:00<00:00, 29.38it/s]100%|##########| 26/26 [00:00<00:00, 30.65it/s]100%|##########| 26/26 [00:01<00:00, 25.05it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 754 200
penalty weights 10000.0
args.step pgd_anneal_iters 754 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 755 200
penalty weights 10000.0
args.step pgd_anneal_iters 755 600
dim_v 512
rho, theta 201 tensor(-3.3237e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 756 200
penalty weights 10000.0
args.step pgd_anneal_iters 756 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 757 200
penalty weights 10000.0
args.step pgd_anneal_iters 757 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 758 200
penalty weights 10000.0
args.step pgd_anneal_iters 758 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 759 200
penalty weights 10000.0
args.step pgd_anneal_iters 759 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 760 200
penalty weights 10000.0
args.step pgd_anneal_iters 760 600
dim_v 512
rho, theta 200 tensor(-9.1524e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 761 200
penalty weights 10000.0
args.step pgd_anneal_iters 761 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 762 200
penalty weights 10000.0
args.step pgd_anneal_iters 762 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 763 200
penalty weights 10000.0
args.step pgd_anneal_iters 763 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 764 200
penalty weights 10000.0
args.step pgd_anneal_iters 764 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 765 200
penalty weights 10000.0
args.step pgd_anneal_iters 765 600
dim_v 512
rho, theta 199 tensor(-7.5197e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 766 200
penalty weights 10000.0
args.step pgd_anneal_iters 766 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 767 200
penalty weights 10000.0
args.step pgd_anneal_iters 767 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 768 200
penalty weights 10000.0
args.step pgd_anneal_iters 768 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 769 200
penalty weights 10000.0
args.step pgd_anneal_iters 769 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 770 200
penalty weights 10000.0
args.step pgd_anneal_iters 770 600
dim_v 512
rho, theta 198 tensor(-5.5375e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 771 200
penalty weights 10000.0
args.step pgd_anneal_iters 771 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 772 200
penalty weights 10000.0
args.step pgd_anneal_iters 772 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 773 200
penalty weights 10000.0
args.step pgd_anneal_iters 773 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 774 200
penalty weights 10000.0
args.step pgd_anneal_iters 774 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 775 200
penalty weights 10000.0
args.step pgd_anneal_iters 775 600
dim_v 512
rho, theta 199 tensor(-4.3488e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 776 200
penalty weights 10000.0
args.step pgd_anneal_iters 776 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 777 200
penalty weights 10000.0
args.step pgd_anneal_iters 777 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 778 200
penalty weights 10000.0
args.step pgd_anneal_iters 778 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 779 200
penalty weights 10000.0
args.step pgd_anneal_iters 779 600
final projection at end of training
dim_v 512
rho, theta 200 tensor(-3.2525e-06, device='cuda:0')
Epoch: [29][  26/  26]	Loss 0.000 (0.000)	train_nll   0.70 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  30.09 ( 30.09)	train_acc   0.46 (  0.50)	train_minacc   0.59 (  0.50)	train_majacc   0.44 (  0.50)	train_corr   0.00 (  0.00)	l1 4.0744 (4.0774)	zero_count 0.0000 (72.8520)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.02it/s] 23%|##3       | 6/26 [00:00<00:00, 28.45it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.45it/s] 42%|####2     | 11/26 [00:00<00:00, 36.19it/s] 62%|######1   | 16/26 [00:00<00:00, 40.16it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.16it/s] 81%|########  | 21/26 [00:00<00:00, 40.78it/s]100%|##########| 26/26 [00:00<00:00, 43.24it/s]100%|##########| 26/26 [00:00<00:00, 35.81it/s]
Test: [   0/  26]	Loss 0.694 (0.694)	test_acc   0.48 (  0.48)	test_minacc   0.56 (  0.56)	test_majacc   0.47 (  0.47)	Loss_d 0.694 (0.694)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.05 (  0.05)
Test: [  10/  26]	Loss 0.692 (0.692)	test_acc   0.51 (  0.50)	test_minacc   0.44 (  0.49)	test_majacc   0.52 (  0.50)	Loss_d 0.692 (0.692)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.44 (  0.49)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.03 (  0.05)
Test: [  20/  26]	Loss 0.691 (0.692)	test_acc   0.53 (  0.50)	test_minacc   0.57 (  0.50)	test_majacc   0.52 (  0.50)	Loss_d 0.691 (0.692)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.57 (  0.50)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.08 (  0.04)
Test: [  26/  26]	Loss 0.696 (0.692)	test_acc   0.46 (  0.50)	test_minacc   0.59 (  0.50)	test_majacc   0.44 (  0.50)	Loss_d 0.696 (0.692)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.59 (  0.50)	test_majacc_d   0.44 (  0.50)	test_corr_d   0.03 (  0.05)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.61it/s]
Test: [  0/  1]	Loss 0.692 (0.692)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.692 (0.692)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.08 ( -0.08)
Test: [  1/  1]	Loss 0.692 (0.692)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.692 (0.692)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.08 ( -0.08)
Overall Timing[ 29/  1]	epoch_time 0.0417 (0.0421)	validation_time 0.0004 (0.0007)	train_time 0.0412 (0.0413)
record: (train_acc, test_acc) (0.6142000024914741, 0.6670000553131104)
last accs (train_acc, test_acc) (0.5000000082850456, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.25it/s] 19%|#9        | 5/26 [00:00<00:01, 20.61it/s] 31%|###       | 8/26 [00:00<00:00, 22.94it/s] 42%|####2     | 11/26 [00:00<00:00, 24.28it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.69it/s] 69%|######9   | 18/26 [00:00<00:00, 28.25it/s] 85%|########4 | 22/26 [00:00<00:00, 29.49it/s]100%|##########| 26/26 [00:00<00:00, 30.87it/s]100%|##########| 26/26 [00:01<00:00, 25.89it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 780 200
penalty weights 10000.0
args.step pgd_anneal_iters 780 600
dim_v 512
rho, theta 201 tensor(-1.3101e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 781 200
penalty weights 10000.0
args.step pgd_anneal_iters 781 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 782 200
penalty weights 10000.0
args.step pgd_anneal_iters 782 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 783 200
penalty weights 10000.0
args.step pgd_anneal_iters 783 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 784 200
penalty weights 10000.0
args.step pgd_anneal_iters 784 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 785 200
penalty weights 10000.0
args.step pgd_anneal_iters 785 600
dim_v 512
rho, theta 200 tensor(-7.7789e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 786 200
penalty weights 10000.0
args.step pgd_anneal_iters 786 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 787 200
penalty weights 10000.0
args.step pgd_anneal_iters 787 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 788 200
penalty weights 10000.0
args.step pgd_anneal_iters 788 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 789 200
penalty weights 10000.0
args.step pgd_anneal_iters 789 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 790 200
penalty weights 10000.0
args.step pgd_anneal_iters 790 600
dim_v 512
rho, theta 199 tensor(-7.3314e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 791 200
penalty weights 10000.0
args.step pgd_anneal_iters 791 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 792 200
penalty weights 10000.0
args.step pgd_anneal_iters 792 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 793 200
penalty weights 10000.0
args.step pgd_anneal_iters 793 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 794 200
penalty weights 10000.0
args.step pgd_anneal_iters 794 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 795 200
penalty weights 10000.0
args.step pgd_anneal_iters 795 600
dim_v 512
rho, theta 198 tensor(-5.4058e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 796 200
penalty weights 10000.0
args.step pgd_anneal_iters 796 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 797 200
penalty weights 10000.0
args.step pgd_anneal_iters 797 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 798 200
penalty weights 10000.0
args.step pgd_anneal_iters 798 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 799 200
penalty weights 10000.0
args.step pgd_anneal_iters 799 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 800 200
penalty weights 10000.0
args.step pgd_anneal_iters 800 600
dim_v 512
rho, theta 200 tensor(-4.3556e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 801 200
penalty weights 10000.0
args.step pgd_anneal_iters 801 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 802 200
penalty weights 10000.0
args.step pgd_anneal_iters 802 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 803 200
penalty weights 10000.0
args.step pgd_anneal_iters 803 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 804 200
penalty weights 10000.0
args.step pgd_anneal_iters 804 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 805 200
penalty weights 10000.0
args.step pgd_anneal_iters 805 600
dim_v 512
rho, theta 200 tensor(-3.5514e-06, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [30][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  30.09 ( 30.09)	train_acc   0.46 (  0.50)	train_minacc   0.59 (  0.50)	train_majacc   0.44 (  0.50)	train_corr   0.00 (  0.00)	l1 4.0763 (4.0769)	zero_count 0.0000 (72.8520)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.21it/s] 23%|##3       | 6/26 [00:00<00:00, 28.17it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.17it/s] 42%|####2     | 11/26 [00:00<00:00, 35.97it/s] 62%|######1   | 16/26 [00:00<00:00, 40.42it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.42it/s] 81%|########  | 21/26 [00:00<00:00, 39.06it/s]100%|##########| 26/26 [00:00<00:00, 42.02it/s]100%|##########| 26/26 [00:00<00:00, 34.63it/s]
Test: [   0/  26]	Loss 0.694 (0.694)	test_acc   0.48 (  0.48)	test_minacc   0.56 (  0.56)	test_majacc   0.47 (  0.47)	Loss_d 0.694 (0.694)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.05 (  0.05)
Test: [  10/  26]	Loss 0.692 (0.692)	test_acc   0.51 (  0.50)	test_minacc   0.44 (  0.49)	test_majacc   0.52 (  0.50)	Loss_d 0.692 (0.692)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.44 (  0.49)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.03 (  0.05)
Test: [  20/  26]	Loss 0.691 (0.692)	test_acc   0.53 (  0.50)	test_minacc   0.57 (  0.50)	test_majacc   0.52 (  0.50)	Loss_d 0.691 (0.692)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.57 (  0.50)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.07 (  0.04)
Test: [  26/  26]	Loss 0.696 (0.692)	test_acc   0.46 (  0.50)	test_minacc   0.59 (  0.50)	test_majacc   0.44 (  0.50)	Loss_d 0.696 (0.692)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.59 (  0.50)	test_majacc_d   0.44 (  0.50)	test_corr_d   0.03 (  0.05)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.54it/s]
Test: [  0/  1]	Loss 0.692 (0.692)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.692 (0.692)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.07 ( -0.07)
Test: [  1/  1]	Loss 0.692 (0.692)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.692 (0.692)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.07 ( -0.07)
Overall Timing[ 30/  1]	epoch_time 0.0431 (0.0421)	validation_time 0.0005 (0.0007)	train_time 0.0426 (0.0413)
record: (train_acc, test_acc) (0.6142000024914741, 0.6670000553131104)
last accs (train_acc, test_acc) (0.5000000082850456, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.57it/s] 19%|#9        | 5/26 [00:00<00:01, 14.29it/s] 35%|###4      | 9/26 [00:00<00:00, 20.49it/s] 46%|####6     | 12/26 [00:00<00:00, 22.76it/s] 58%|#####7    | 15/26 [00:00<00:00, 24.58it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.78it/s] 88%|########8 | 23/26 [00:00<00:00, 28.93it/s]100%|##########| 26/26 [00:01<00:00, 22.96it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 806 200
penalty weights 10000.0
args.step pgd_anneal_iters 806 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 807 200
penalty weights 10000.0
args.step pgd_anneal_iters 807 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 808 200
penalty weights 10000.0
args.step pgd_anneal_iters 808 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 809 200
penalty weights 10000.0
args.step pgd_anneal_iters 809 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 810 200
penalty weights 10000.0
args.step pgd_anneal_iters 810 600
dim_v 512
rho, theta 201 tensor(-6.4420e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 811 200
penalty weights 10000.0
args.step pgd_anneal_iters 811 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 812 200
penalty weights 10000.0
args.step pgd_anneal_iters 812 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 813 200
penalty weights 10000.0
args.step pgd_anneal_iters 813 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 814 200
penalty weights 10000.0
args.step pgd_anneal_iters 814 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 815 200
penalty weights 10000.0
args.step pgd_anneal_iters 815 600
dim_v 512
rho, theta 200 tensor(-6.8679e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 816 200
penalty weights 10000.0
args.step pgd_anneal_iters 816 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 817 200
penalty weights 10000.0
args.step pgd_anneal_iters 817 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 818 200
penalty weights 10000.0
args.step pgd_anneal_iters 818 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 819 200
penalty weights 10000.0
args.step pgd_anneal_iters 819 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 820 200
penalty weights 10000.0
args.step pgd_anneal_iters 820 600
dim_v 512
rho, theta 198 tensor(-5.2812e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 821 200
penalty weights 10000.0
args.step pgd_anneal_iters 821 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 822 200
penalty weights 10000.0
args.step pgd_anneal_iters 822 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 823 200
penalty weights 10000.0
args.step pgd_anneal_iters 823 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 824 200
penalty weights 10000.0
args.step pgd_anneal_iters 824 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 825 200
penalty weights 10000.0
args.step pgd_anneal_iters 825 600
dim_v 512
rho, theta 199 tensor(-4.0698e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 826 200
penalty weights 10000.0
args.step pgd_anneal_iters 826 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 827 200
penalty weights 10000.0
args.step pgd_anneal_iters 827 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 828 200
penalty weights 10000.0
args.step pgd_anneal_iters 828 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 829 200
penalty weights 10000.0
args.step pgd_anneal_iters 829 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 830 200
penalty weights 10000.0
args.step pgd_anneal_iters 830 600
dim_v 512
rho, theta 200 tensor(-2.9274e-06, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 831 200
penalty weights 10000.0
args.step pgd_anneal_iters 831 600
final projection at end of training
dim_v 512
rho, theta 201 tensor(-9.5603e-07, device='cuda:0')
Epoch: [31][  26/  26]	Loss 0.000 (0.000)	train_nll   0.70 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  30.09 ( 30.09)	train_acc   0.46 (  0.50)	train_minacc   0.59 (  0.50)	train_majacc   0.44 (  0.50)	train_corr   0.00 (  0.00)	l1 4.0668 (4.0764)	zero_count 311.0000 (68.4980)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.45it/s] 23%|##3       | 6/26 [00:00<00:01, 18.46it/s]                                               23%|##3       | 6/26 [00:00<00:01, 18.46it/s] 42%|####2     | 11/26 [00:00<00:00, 27.34it/s] 62%|######1   | 16/26 [00:00<00:00, 33.59it/s]                                                62%|######1   | 16/26 [00:00<00:00, 33.59it/s] 81%|########  | 21/26 [00:00<00:00, 34.70it/s]100%|##########| 26/26 [00:00<00:00, 38.47it/s]100%|##########| 26/26 [00:00<00:00, 28.92it/s]
Test: [   0/  26]	Loss 0.694 (0.694)	test_acc   0.48 (  0.48)	test_minacc   0.56 (  0.56)	test_majacc   0.47 (  0.47)	Loss_d 0.694 (0.694)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.05 (  0.05)
Test: [  10/  26]	Loss 0.692 (0.693)	test_acc   0.51 (  0.50)	test_minacc   0.44 (  0.49)	test_majacc   0.52 (  0.50)	Loss_d 0.692 (0.693)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.44 (  0.49)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.03 (  0.05)
Test: [  20/  26]	Loss 0.691 (0.692)	test_acc   0.53 (  0.50)	test_minacc   0.57 (  0.50)	test_majacc   0.52 (  0.50)	Loss_d 0.691 (0.692)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.57 (  0.50)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.07 (  0.04)
Test: [  26/  26]	Loss 0.695 (0.692)	test_acc   0.46 (  0.50)	test_minacc   0.59 (  0.50)	test_majacc   0.44 (  0.50)	Loss_d 0.695 (0.692)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.59 (  0.50)	test_majacc_d   0.44 (  0.50)	test_corr_d   0.04 (  0.05)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.96it/s]
Test: [  0/  1]	Loss 0.693 (0.693)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.693 (0.693)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.06 ( -0.06)
Test: [  1/  1]	Loss 0.693 (0.693)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.693 (0.693)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.06 ( -0.06)
Overall Timing[ 31/  1]	epoch_time 0.0483 (0.0423)	validation_time 0.0003 (0.0007)	train_time 0.0480 (0.0415)
record: (train_acc, test_acc) (0.6142000024914741, 0.6670000553131104)
last accs (train_acc, test_acc) (0.5000000082850456, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.94it/s] 15%|#5        | 4/26 [00:00<00:01, 17.45it/s] 31%|###       | 8/26 [00:00<00:00, 24.24it/s] 42%|####2     | 11/26 [00:00<00:00, 26.05it/s] 54%|#####3    | 14/26 [00:00<00:00, 27.08it/s] 69%|######9   | 18/26 [00:00<00:00, 29.50it/s] 81%|########  | 21/26 [00:00<00:00, 29.07it/s] 96%|#########6| 25/26 [00:00<00:00, 29.71it/s]100%|##########| 26/26 [00:01<00:00, 25.71it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 832 200
penalty weights 10000.0
args.step pgd_anneal_iters 832 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 833 200
penalty weights 10000.0
args.step pgd_anneal_iters 833 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 834 200
penalty weights 10000.0
args.step pgd_anneal_iters 834 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 835 200
penalty weights 10000.0
args.step pgd_anneal_iters 835 600
dim_v 512
rho, theta 202 tensor(-4.9117e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 836 200
penalty weights 10000.0
args.step pgd_anneal_iters 836 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 837 200
penalty weights 10000.0
args.step pgd_anneal_iters 837 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 838 200
penalty weights 10000.0
args.step pgd_anneal_iters 838 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 839 200
penalty weights 10000.0
args.step pgd_anneal_iters 839 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 840 200
penalty weights 10000.0
args.step pgd_anneal_iters 840 600
dim_v 512
rho, theta 200 tensor(-5.8739e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 841 200
penalty weights 10000.0
args.step pgd_anneal_iters 841 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 842 200
penalty weights 10000.0
args.step pgd_anneal_iters 842 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 843 200
penalty weights 10000.0
args.step pgd_anneal_iters 843 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 844 200
penalty weights 10000.0
args.step pgd_anneal_iters 844 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 845 200
penalty weights 10000.0
args.step pgd_anneal_iters 845 600
dim_v 512
rho, theta 199 tensor(-5.6148e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 846 200
penalty weights 10000.0
args.step pgd_anneal_iters 846 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 847 200
penalty weights 10000.0
args.step pgd_anneal_iters 847 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 848 200
penalty weights 10000.0
args.step pgd_anneal_iters 848 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 849 200
penalty weights 10000.0
args.step pgd_anneal_iters 849 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 850 200
penalty weights 10000.0
args.step pgd_anneal_iters 850 600
dim_v 512
rho, theta 198 tensor(-4.0591e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 851 200
penalty weights 10000.0
args.step pgd_anneal_iters 851 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 852 200
penalty weights 10000.0
args.step pgd_anneal_iters 852 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 853 200
penalty weights 10000.0
args.step pgd_anneal_iters 853 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 854 200
penalty weights 10000.0
args.step pgd_anneal_iters 854 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 855 200
penalty weights 10000.0
args.step pgd_anneal_iters 855 600
dim_v 512
rho, theta 200 tensor(-2.7685e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 856 200
penalty weights 10000.0
args.step pgd_anneal_iters 856 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 857 200
penalty weights 10000.0
args.step pgd_anneal_iters 857 600
final projection at end of training
dim_v 512
rho, theta 201 tensor(-1.5438e-06, device='cuda:0')
Epoch: [32][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  30.09 ( 30.09)	train_acc   0.46 (  0.50)	train_minacc   0.59 (  0.50)	train_majacc   0.44 (  0.50)	train_corr   0.00 (  0.00)	l1 4.0699 (4.0754)	zero_count 0.0000 (72.7740)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.31it/s] 23%|##3       | 6/26 [00:00<00:00, 30.71it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.71it/s] 42%|####2     | 11/26 [00:00<00:00, 37.78it/s] 62%|######1   | 16/26 [00:00<00:00, 41.16it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.16it/s] 81%|########  | 21/26 [00:00<00:00, 40.22it/s]100%|##########| 26/26 [00:00<00:00, 36.84it/s]
Test: [   0/  26]	Loss 0.694 (0.694)	test_acc   0.48 (  0.48)	test_minacc   0.56 (  0.56)	test_majacc   0.47 (  0.47)	Loss_d 0.694 (0.694)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.05 (  0.05)
Test: [  10/  26]	Loss 0.692 (0.693)	test_acc   0.51 (  0.50)	test_minacc   0.44 (  0.49)	test_majacc   0.52 (  0.50)	Loss_d 0.692 (0.693)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.44 (  0.49)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.03 (  0.05)
Test: [  20/  26]	Loss 0.691 (0.692)	test_acc   0.53 (  0.50)	test_minacc   0.57 (  0.50)	test_majacc   0.52 (  0.50)	Loss_d 0.691 (0.692)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.57 (  0.50)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.07 (  0.04)
Test: [  26/  26]	Loss 0.695 (0.692)	test_acc   0.46 (  0.50)	test_minacc   0.59 (  0.50)	test_majacc   0.44 (  0.50)	Loss_d 0.695 (0.692)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.59 (  0.50)	test_majacc_d   0.44 (  0.50)	test_corr_d   0.04 (  0.05)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.21it/s]
Test: [  0/  1]	Loss 0.693 (0.693)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.693 (0.693)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.05 ( -0.05)
Test: [  1/  1]	Loss 0.693 (0.693)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.693 (0.693)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.05 ( -0.05)
Overall Timing[ 32/  1]	epoch_time 0.0432 (0.0423)	validation_time 0.0005 (0.0007)	train_time 0.0427 (0.0416)
record: (train_acc, test_acc) (0.6142000024914741, 0.6670000553131104)
last accs (train_acc, test_acc) (0.5000000082850456, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.48it/s] 15%|#5        | 4/26 [00:00<00:01, 11.98it/s] 31%|###       | 8/26 [00:00<00:00, 18.85it/s] 46%|####6     | 12/26 [00:00<00:00, 24.14it/s] 62%|######1   | 16/26 [00:00<00:00, 26.68it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.48it/s] 88%|########8 | 23/26 [00:00<00:00, 28.67it/s]100%|##########| 26/26 [00:01<00:00, 23.12it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 858 200
penalty weights 10000.0
args.step pgd_anneal_iters 858 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 859 200
penalty weights 10000.0
args.step pgd_anneal_iters 859 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 860 200
penalty weights 10000.0
args.step pgd_anneal_iters 860 600
dim_v 512
rho, theta 202 tensor(-3.4600e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 861 200
penalty weights 10000.0
args.step pgd_anneal_iters 861 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 862 200
penalty weights 10000.0
args.step pgd_anneal_iters 862 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 863 200
penalty weights 10000.0
args.step pgd_anneal_iters 863 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 864 200
penalty weights 10000.0
args.step pgd_anneal_iters 864 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 865 200
penalty weights 10000.0
args.step pgd_anneal_iters 865 600
dim_v 512
rho, theta 201 tensor(-5.7480e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 866 200
penalty weights 10000.0
args.step pgd_anneal_iters 866 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 867 200
penalty weights 10000.0
args.step pgd_anneal_iters 867 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 868 200
penalty weights 10000.0
args.step pgd_anneal_iters 868 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 869 200
penalty weights 10000.0
args.step pgd_anneal_iters 869 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 870 200
penalty weights 10000.0
args.step pgd_anneal_iters 870 600
dim_v 512
rho, theta 199 tensor(-4.9829e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 871 200
penalty weights 10000.0
args.step pgd_anneal_iters 871 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 872 200
penalty weights 10000.0
args.step pgd_anneal_iters 872 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 873 200
penalty weights 10000.0
args.step pgd_anneal_iters 873 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 874 200
penalty weights 10000.0
args.step pgd_anneal_iters 874 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 875 200
penalty weights 10000.0
args.step pgd_anneal_iters 875 600
dim_v 512
rho, theta 199 tensor(-3.8934e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 876 200
penalty weights 10000.0
args.step pgd_anneal_iters 876 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 877 200
penalty weights 10000.0
args.step pgd_anneal_iters 877 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 878 200
penalty weights 10000.0
args.step pgd_anneal_iters 878 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 879 200
penalty weights 10000.0
args.step pgd_anneal_iters 879 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 880 200
penalty weights 10000.0
args.step pgd_anneal_iters 880 600
dim_v 512
rho, theta 199 tensor(-2.8348e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 881 200
penalty weights 10000.0
args.step pgd_anneal_iters 881 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 882 200
penalty weights 10000.0
args.step pgd_anneal_iters 882 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 883 200
penalty weights 10000.0
args.step pgd_anneal_iters 883 600
final projection at end of training
dim_v 512
rho, theta 201 tensor(-1.7681e-06, device='cuda:0')
Epoch: [33][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  30.09 ( 30.09)	train_acc   0.46 (  0.50)	train_minacc   0.59 (  0.50)	train_majacc   0.44 (  0.50)	train_corr   0.00 (  0.00)	l1 4.0709 (4.0744)	zero_count 0.0000 (72.7350)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.85it/s] 27%|##6       | 7/26 [00:00<00:00, 32.13it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.13it/s] 46%|####6     | 12/26 [00:00<00:00, 37.27it/s] 65%|######5   | 17/26 [00:00<00:00, 40.31it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.31it/s] 85%|########4 | 22/26 [00:00<00:00, 40.04it/s]100%|##########| 26/26 [00:00<00:00, 36.84it/s]
Test: [   0/  26]	Loss 0.694 (0.694)	test_acc   0.48 (  0.48)	test_minacc   0.56 (  0.56)	test_majacc   0.47 (  0.47)	Loss_d 0.694 (0.694)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.05 (  0.05)
Test: [  10/  26]	Loss 0.692 (0.693)	test_acc   0.51 (  0.50)	test_minacc   0.44 (  0.49)	test_majacc   0.52 (  0.50)	Loss_d 0.692 (0.693)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.44 (  0.49)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.03 (  0.05)
Test: [  20/  26]	Loss 0.691 (0.692)	test_acc   0.53 (  0.50)	test_minacc   0.57 (  0.50)	test_majacc   0.52 (  0.50)	Loss_d 0.691 (0.692)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.57 (  0.50)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.07 (  0.04)
Test: [  26/  26]	Loss 0.695 (0.692)	test_acc   0.46 (  0.50)	test_minacc   0.59 (  0.50)	test_majacc   0.44 (  0.50)	Loss_d 0.695 (0.692)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.59 (  0.50)	test_majacc_d   0.44 (  0.50)	test_corr_d   0.05 (  0.05)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.12it/s]
Test: [  0/  1]	Loss 0.693 (0.693)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.693 (0.693)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.04 ( -0.04)
Test: [  1/  1]	Loss 0.693 (0.693)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.693 (0.693)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.04 ( -0.04)
Overall Timing[ 33/  1]	epoch_time 0.0435 (0.0424)	validation_time 0.0004 (0.0006)	train_time 0.0430 (0.0416)
record: (train_acc, test_acc) (0.6142000024914741, 0.6670000553131104)
last accs (train_acc, test_acc) (0.5000000082850456, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.12it/s] 15%|#5        | 4/26 [00:00<00:01, 15.10it/s] 27%|##6       | 7/26 [00:00<00:00, 20.11it/s] 42%|####2     | 11/26 [00:00<00:00, 25.42it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.63it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.02it/s] 85%|########4 | 22/26 [00:00<00:00, 29.22it/s]100%|##########| 26/26 [00:00<00:00, 31.37it/s]100%|##########| 26/26 [00:01<00:00, 25.01it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 884 200
penalty weights 10000.0
args.step pgd_anneal_iters 884 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 885 200
penalty weights 10000.0
args.step pgd_anneal_iters 885 600
dim_v 512
rho, theta 201 tensor(-1.9333e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 886 200
penalty weights 10000.0
args.step pgd_anneal_iters 886 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 887 200
penalty weights 10000.0
args.step pgd_anneal_iters 887 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 888 200
penalty weights 10000.0
args.step pgd_anneal_iters 888 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 889 200
penalty weights 10000.0
args.step pgd_anneal_iters 889 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 890 200
penalty weights 10000.0
args.step pgd_anneal_iters 890 600
dim_v 512
rho, theta 201 tensor(-5.4034e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 891 200
penalty weights 10000.0
args.step pgd_anneal_iters 891 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 892 200
penalty weights 10000.0
args.step pgd_anneal_iters 892 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 893 200
penalty weights 10000.0
args.step pgd_anneal_iters 893 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 894 200
penalty weights 10000.0
args.step pgd_anneal_iters 894 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 895 200
penalty weights 10000.0
args.step pgd_anneal_iters 895 600
dim_v 512
rho, theta 199 tensor(-4.8900e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 896 200
penalty weights 10000.0
args.step pgd_anneal_iters 896 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 897 200
penalty weights 10000.0
args.step pgd_anneal_iters 897 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 898 200
penalty weights 10000.0
args.step pgd_anneal_iters 898 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 899 200
penalty weights 10000.0
args.step pgd_anneal_iters 899 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 900 200
penalty weights 10000.0
args.step pgd_anneal_iters 900 600
dim_v 512
rho, theta 199 tensor(-3.7551e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 901 200
penalty weights 10000.0
args.step pgd_anneal_iters 901 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 902 200
penalty weights 10000.0
args.step pgd_anneal_iters 902 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 903 200
penalty weights 10000.0
args.step pgd_anneal_iters 903 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 904 200
penalty weights 10000.0
args.step pgd_anneal_iters 904 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 905 200
penalty weights 10000.0
args.step pgd_anneal_iters 905 600
dim_v 512
rho, theta 200 tensor(-2.9773e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 906 200
penalty weights 10000.0
args.step pgd_anneal_iters 906 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 907 200
penalty weights 10000.0
args.step pgd_anneal_iters 907 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 908 200
penalty weights 10000.0
args.step pgd_anneal_iters 908 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 909 200
penalty weights 10000.0
args.step pgd_anneal_iters 909 600
final projection at end of training
dim_v 512
rho, theta 201 tensor(-2.1977e-06, device='cuda:0')
Epoch: [34][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  30.09 ( 30.09)	train_acc   0.46 (  0.50)	train_minacc   0.59 (  0.50)	train_majacc   0.44 (  0.50)	train_corr   0.00 (  0.00)	l1 4.0731 (4.0746)	zero_count 0.0000 (72.7350)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.11it/s]  8%|7         | 2/26 [00:00<00:03,  7.61it/s] 27%|##6       | 7/26 [00:00<00:00, 24.00it/s]                                               27%|##6       | 7/26 [00:00<00:00, 24.00it/s] 46%|####6     | 12/26 [00:00<00:00, 32.76it/s] 65%|######5   | 17/26 [00:00<00:00, 37.07it/s]                                                65%|######5   | 17/26 [00:00<00:00, 37.07it/s] 85%|########4 | 22/26 [00:00<00:00, 39.13it/s]100%|##########| 26/26 [00:00<00:00, 31.78it/s]
Test: [   0/  26]	Loss 0.694 (0.694)	test_acc   0.48 (  0.48)	test_minacc   0.56 (  0.56)	test_majacc   0.47 (  0.47)	Loss_d 0.694 (0.694)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.06 (  0.06)
Test: [  10/  26]	Loss 0.692 (0.693)	test_acc   0.51 (  0.50)	test_minacc   0.44 (  0.49)	test_majacc   0.52 (  0.50)	Loss_d 0.692 (0.693)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.44 (  0.49)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.03 (  0.05)
Test: [  20/  26]	Loss 0.691 (0.692)	test_acc   0.53 (  0.50)	test_minacc   0.57 (  0.50)	test_majacc   0.52 (  0.50)	Loss_d 0.691 (0.692)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.57 (  0.50)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.06 (  0.04)
Test: [  26/  26]	Loss 0.695 (0.692)	test_acc   0.46 (  0.50)	test_minacc   0.59 (  0.50)	test_majacc   0.44 (  0.50)	Loss_d 0.695 (0.692)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.59 (  0.50)	test_majacc_d   0.44 (  0.50)	test_corr_d   0.05 (  0.05)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.30it/s]
Test: [  0/  1]	Loss 0.694 (0.694)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.694 (0.694)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.03 ( -0.03)
Test: [  1/  1]	Loss 0.694 (0.694)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.694 (0.694)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.03 ( -0.03)
Overall Timing[ 34/  1]	epoch_time 0.0439 (0.0424)	validation_time 0.0004 (0.0006)	train_time 0.0434 (0.0417)
record: (train_acc, test_acc) (0.6142000024914741, 0.6670000553131104)
last accs (train_acc, test_acc) (0.5000000082850456, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.62it/s] 19%|#9        | 5/26 [00:00<00:00, 21.16it/s] 31%|###       | 8/26 [00:00<00:00, 23.84it/s] 42%|####2     | 11/26 [00:00<00:00, 25.36it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.73it/s] 69%|######9   | 18/26 [00:00<00:00, 27.97it/s] 81%|########  | 21/26 [00:00<00:00, 28.16it/s] 96%|#########6| 25/26 [00:00<00:00, 30.19it/s]100%|##########| 26/26 [00:01<00:00, 25.55it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 910 200
penalty weights 10000.0
args.step pgd_anneal_iters 910 600
dim_v 512
rho, theta 203 tensor(-8.2745e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 911 200
penalty weights 10000.0
args.step pgd_anneal_iters 911 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 912 200
penalty weights 10000.0
args.step pgd_anneal_iters 912 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 913 200
penalty weights 10000.0
args.step pgd_anneal_iters 913 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 914 200
penalty weights 10000.0
args.step pgd_anneal_iters 914 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 915 200
penalty weights 10000.0
args.step pgd_anneal_iters 915 600
dim_v 512
rho, theta 201 tensor(-4.7778e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 916 200
penalty weights 10000.0
args.step pgd_anneal_iters 916 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 917 200
penalty weights 10000.0
args.step pgd_anneal_iters 917 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 918 200
penalty weights 10000.0
args.step pgd_anneal_iters 918 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 919 200
penalty weights 10000.0
args.step pgd_anneal_iters 919 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 920 200
penalty weights 10000.0
args.step pgd_anneal_iters 920 600
dim_v 512
rho, theta 199 tensor(-4.9949e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 921 200
penalty weights 10000.0
args.step pgd_anneal_iters 921 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 922 200
penalty weights 10000.0
args.step pgd_anneal_iters 922 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 923 200
penalty weights 10000.0
args.step pgd_anneal_iters 923 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 924 200
penalty weights 10000.0
args.step pgd_anneal_iters 924 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 925 200
penalty weights 10000.0
args.step pgd_anneal_iters 925 600
dim_v 512
rho, theta 199 tensor(-3.7742e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 926 200
penalty weights 10000.0
args.step pgd_anneal_iters 926 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 927 200
penalty weights 10000.0
args.step pgd_anneal_iters 927 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 928 200
penalty weights 10000.0
args.step pgd_anneal_iters 928 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 929 200
penalty weights 10000.0
args.step pgd_anneal_iters 929 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 930 200
penalty weights 10000.0
args.step pgd_anneal_iters 930 600
dim_v 512
rho, theta 200 tensor(-3.1813e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 931 200
penalty weights 10000.0
args.step pgd_anneal_iters 931 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 932 200
penalty weights 10000.0
args.step pgd_anneal_iters 932 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 933 200
penalty weights 10000.0
args.step pgd_anneal_iters 933 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 934 200
penalty weights 10000.0
args.step pgd_anneal_iters 934 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 935 200
penalty weights 10000.0
args.step pgd_anneal_iters 935 600
dim_v 512
rho, theta 200 tensor(-2.5099e-06, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [35][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  30.09 ( 30.09)	train_acc   0.46 (  0.50)	train_minacc   0.59 (  0.50)	train_majacc   0.44 (  0.50)	train_corr   0.00 (  0.00)	l1 4.0748 (4.0746)	zero_count 0.0000 (72.6570)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.18it/s] 23%|##3       | 6/26 [00:00<00:00, 29.73it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.73it/s] 42%|####2     | 11/26 [00:00<00:00, 36.51it/s] 62%|######1   | 16/26 [00:00<00:00, 41.31it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.31it/s] 81%|########  | 21/26 [00:00<00:00, 40.17it/s]100%|##########| 26/26 [00:00<00:00, 42.35it/s]100%|##########| 26/26 [00:00<00:00, 35.86it/s]
Test: [   0/  26]	Loss 0.694 (0.694)	test_acc   0.48 (  0.48)	test_minacc   0.56 (  0.56)	test_majacc   0.47 (  0.47)	Loss_d 0.694 (0.694)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.05 (  0.05)
Test: [  10/  26]	Loss 0.692 (0.693)	test_acc   0.51 (  0.50)	test_minacc   0.44 (  0.49)	test_majacc   0.52 (  0.50)	Loss_d 0.692 (0.693)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.44 (  0.49)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.03 (  0.05)
Test: [  20/  26]	Loss 0.691 (0.692)	test_acc   0.53 (  0.50)	test_minacc   0.57 (  0.50)	test_majacc   0.52 (  0.50)	Loss_d 0.691 (0.692)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.57 (  0.50)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.06 (  0.04)
Test: [  26/  26]	Loss 0.695 (0.692)	test_acc   0.46 (  0.50)	test_minacc   0.59 (  0.50)	test_majacc   0.44 (  0.50)	Loss_d 0.695 (0.692)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.59 (  0.50)	test_majacc_d   0.44 (  0.50)	test_corr_d   0.06 (  0.05)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.49it/s]
Test: [  0/  1]	Loss 0.694 (0.694)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.694 (0.694)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.02 ( -0.02)
Test: [  1/  1]	Loss 0.694 (0.694)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.694 (0.694)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.02 ( -0.02)
Overall Timing[ 35/  1]	epoch_time 0.0411 (0.0424)	validation_time 0.0005 (0.0006)	train_time 0.0406 (0.0416)
record: (train_acc, test_acc) (0.6142000024914741, 0.6670000553131104)
last accs (train_acc, test_acc) (0.5000000082850456, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.59it/s] 19%|#9        | 5/26 [00:00<00:01, 20.54it/s] 35%|###4      | 9/26 [00:00<00:00, 27.53it/s] 50%|#####     | 13/26 [00:00<00:00, 28.97it/s] 62%|######1   | 16/26 [00:00<00:00, 29.05it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.76it/s] 92%|#########2| 24/26 [00:00<00:00, 31.54it/s]100%|##########| 26/26 [00:00<00:00, 26.96it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 936 200
penalty weights 10000.0
args.step pgd_anneal_iters 936 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 937 200
penalty weights 10000.0
args.step pgd_anneal_iters 937 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 938 200
penalty weights 10000.0
args.step pgd_anneal_iters 938 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 939 200
penalty weights 10000.0
args.step pgd_anneal_iters 939 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 940 200
penalty weights 10000.0
args.step pgd_anneal_iters 940 600
dim_v 512
rho, theta 201 tensor(-4.1145e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 941 200
penalty weights 10000.0
args.step pgd_anneal_iters 941 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 942 200
penalty weights 10000.0
args.step pgd_anneal_iters 942 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 943 200
penalty weights 10000.0
args.step pgd_anneal_iters 943 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 944 200
penalty weights 10000.0
args.step pgd_anneal_iters 944 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 945 200
penalty weights 10000.0
args.step pgd_anneal_iters 945 600
dim_v 512
rho, theta 199 tensor(-4.8470e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 946 200
penalty weights 10000.0
args.step pgd_anneal_iters 946 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 947 200
penalty weights 10000.0
args.step pgd_anneal_iters 947 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 948 200
penalty weights 10000.0
args.step pgd_anneal_iters 948 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 949 200
penalty weights 10000.0
args.step pgd_anneal_iters 949 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 950 200
penalty weights 10000.0
args.step pgd_anneal_iters 950 600
dim_v 512
rho, theta 199 tensor(-3.7503e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 951 200
penalty weights 10000.0
args.step pgd_anneal_iters 951 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 952 200
penalty weights 10000.0
args.step pgd_anneal_iters 952 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 953 200
penalty weights 10000.0
args.step pgd_anneal_iters 953 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 954 200
penalty weights 10000.0
args.step pgd_anneal_iters 954 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 955 200
penalty weights 10000.0
args.step pgd_anneal_iters 955 600
dim_v 512
rho, theta 199 tensor(-3.1972e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 956 200
penalty weights 10000.0
args.step pgd_anneal_iters 956 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 957 200
penalty weights 10000.0
args.step pgd_anneal_iters 957 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 958 200
penalty weights 10000.0
args.step pgd_anneal_iters 958 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 959 200
penalty weights 10000.0
args.step pgd_anneal_iters 959 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 960 200
penalty weights 10000.0
args.step pgd_anneal_iters 960 600
dim_v 512
rho, theta 200 tensor(-2.1991e-06, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 961 200
penalty weights 10000.0
args.step pgd_anneal_iters 961 600
final projection at end of training
dim_v 512
rho, theta 201 tensor(-6.4916e-07, device='cuda:0')
Epoch: [36][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  30.09 ( 30.09)	train_acc   0.46 (  0.50)	train_minacc   0.59 (  0.50)	train_majacc   0.44 (  0.50)	train_corr   0.00 (  0.00)	l1 4.0668 (4.0745)	zero_count 311.0000 (68.4590)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.59it/s] 31%|###       | 8/26 [00:00<00:00, 37.85it/s]                                               31%|###       | 8/26 [00:00<00:00, 37.85it/s] 50%|#####     | 13/26 [00:00<00:00, 39.45it/s] 69%|######9   | 18/26 [00:00<00:00, 42.63it/s]                                                69%|######9   | 18/26 [00:00<00:00, 42.63it/s] 88%|########8 | 23/26 [00:00<00:00, 40.46it/s]100%|##########| 26/26 [00:00<00:00, 39.31it/s]
Test: [   0/  26]	Loss 0.694 (0.694)	test_acc   0.48 (  0.48)	test_minacc   0.56 (  0.56)	test_majacc   0.47 (  0.47)	Loss_d 0.694 (0.694)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.05 (  0.05)
Test: [  10/  26]	Loss 0.692 (0.693)	test_acc   0.51 (  0.50)	test_minacc   0.44 (  0.49)	test_majacc   0.52 (  0.50)	Loss_d 0.692 (0.693)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.44 (  0.49)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.03 (  0.05)
Test: [  20/  26]	Loss 0.692 (0.693)	test_acc   0.53 (  0.50)	test_minacc   0.57 (  0.50)	test_majacc   0.52 (  0.50)	Loss_d 0.692 (0.693)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.57 (  0.50)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.06 (  0.04)
Test: [  26/  26]	Loss 0.694 (0.693)	test_acc   0.46 (  0.50)	test_minacc   0.59 (  0.50)	test_majacc   0.44 (  0.50)	Loss_d 0.694 (0.693)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.59 (  0.50)	test_majacc_d   0.44 (  0.50)	test_corr_d   0.06 (  0.05)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.52it/s]
Test: [  0/  1]	Loss 0.694 (0.694)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.694 (0.694)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.02 ( -0.02)
Test: [  1/  1]	Loss 0.694 (0.694)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.694 (0.694)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.02 ( -0.02)
Overall Timing[ 36/  1]	epoch_time 0.0390 (0.0423)	validation_time 0.0005 (0.0006)	train_time 0.0384 (0.0415)
record: (train_acc, test_acc) (0.6142000024914741, 0.6670000553131104)
last accs (train_acc, test_acc) (0.5000000082850456, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.65it/s] 15%|#5        | 4/26 [00:00<00:01, 15.96it/s] 31%|###       | 8/26 [00:00<00:00, 23.81it/s] 42%|####2     | 11/26 [00:00<00:00, 25.77it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.65it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.15it/s] 88%|########8 | 23/26 [00:00<00:00, 30.99it/s]100%|##########| 26/26 [00:01<00:00, 25.73it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 962 200
penalty weights 10000.0
args.step pgd_anneal_iters 962 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 963 200
penalty weights 10000.0
args.step pgd_anneal_iters 963 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 964 200
penalty weights 10000.0
args.step pgd_anneal_iters 964 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 965 200
penalty weights 10000.0
args.step pgd_anneal_iters 965 600
dim_v 512
rho, theta 202 tensor(-3.2627e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 966 200
penalty weights 10000.0
args.step pgd_anneal_iters 966 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 967 200
penalty weights 10000.0
args.step pgd_anneal_iters 967 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 968 200
penalty weights 10000.0
args.step pgd_anneal_iters 968 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 969 200
penalty weights 10000.0
args.step pgd_anneal_iters 969 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 970 200
penalty weights 10000.0
args.step pgd_anneal_iters 970 600
dim_v 512
rho, theta 199 tensor(-4.2129e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 971 200
penalty weights 10000.0
args.step pgd_anneal_iters 971 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 972 200
penalty weights 10000.0
args.step pgd_anneal_iters 972 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 973 200
penalty weights 10000.0
args.step pgd_anneal_iters 973 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 974 200
penalty weights 10000.0
args.step pgd_anneal_iters 974 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 975 200
penalty weights 10000.0
args.step pgd_anneal_iters 975 600
dim_v 512
rho, theta 199 tensor(-4.1986e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 976 200
penalty weights 10000.0
args.step pgd_anneal_iters 976 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 977 200
penalty weights 10000.0
args.step pgd_anneal_iters 977 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 978 200
penalty weights 10000.0
args.step pgd_anneal_iters 978 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 979 200
penalty weights 10000.0
args.step pgd_anneal_iters 979 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 980 200
penalty weights 10000.0
args.step pgd_anneal_iters 980 600
dim_v 512
rho, theta 199 tensor(-3.0971e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 981 200
penalty weights 10000.0
args.step pgd_anneal_iters 981 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 982 200
penalty weights 10000.0
args.step pgd_anneal_iters 982 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 983 200
penalty weights 10000.0
args.step pgd_anneal_iters 983 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 984 200
penalty weights 10000.0
args.step pgd_anneal_iters 984 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 985 200
penalty weights 10000.0
args.step pgd_anneal_iters 985 600
dim_v 512
rho, theta 200 tensor(-2.2490e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 986 200
penalty weights 10000.0
args.step pgd_anneal_iters 986 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 987 200
penalty weights 10000.0
args.step pgd_anneal_iters 987 600
final projection at end of training
dim_v 512
rho, theta 201 tensor(-1.1402e-06, device='cuda:0')
Epoch: [37][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  30.09 ( 30.09)	train_acc   0.46 (  0.50)	train_minacc   0.59 (  0.50)	train_majacc   0.44 (  0.50)	train_corr   0.00 (  0.00)	l1 4.0697 (4.0739)	zero_count 0.0000 (72.7350)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 15%|#5        | 4/26 [00:00<00:00, 30.77it/s] 35%|###4      | 9/26 [00:00<00:00, 39.30it/s]                                               35%|###4      | 9/26 [00:00<00:00, 39.30it/s] 58%|#####7    | 15/26 [00:00<00:00, 45.78it/s] 77%|#######6  | 20/26 [00:00<00:00, 41.01it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 41.01it/s] 96%|#########6| 25/26 [00:00<00:00, 42.77it/s]100%|##########| 26/26 [00:00<00:00, 39.63it/s]
Test: [   0/  26]	Loss 0.694 (0.694)	test_acc   0.48 (  0.48)	test_minacc   0.56 (  0.56)	test_majacc   0.47 (  0.47)	Loss_d 0.694 (0.694)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.05 (  0.05)
Test: [  10/  26]	Loss 0.692 (0.693)	test_acc   0.51 (  0.50)	test_minacc   0.44 (  0.49)	test_majacc   0.52 (  0.50)	Loss_d 0.692 (0.693)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.44 (  0.49)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.03 (  0.05)
Test: [  20/  26]	Loss 0.692 (0.693)	test_acc   0.53 (  0.50)	test_minacc   0.57 (  0.50)	test_majacc   0.52 (  0.50)	Loss_d 0.692 (0.693)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.57 (  0.50)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.06 (  0.04)
Test: [  26/  26]	Loss 0.694 (0.693)	test_acc   0.46 (  0.50)	test_minacc   0.59 (  0.50)	test_majacc   0.44 (  0.50)	Loss_d 0.694 (0.693)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.59 (  0.50)	test_majacc_d   0.44 (  0.50)	test_corr_d   0.06 (  0.05)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.91it/s]
Test: [  0/  1]	Loss 0.694 (0.694)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.694 (0.694)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.01 ( -0.01)
Test: [  1/  1]	Loss 0.694 (0.694)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.694 (0.694)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.01 ( -0.01)
Overall Timing[ 37/  1]	epoch_time 0.0405 (0.0422)	validation_time 0.0003 (0.0006)	train_time 0.0402 (0.0415)
record: (train_acc, test_acc) (0.6142000024914741, 0.6670000553131104)
last accs (train_acc, test_acc) (0.5000000082850456, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.52it/s] 15%|#5        | 4/26 [00:00<00:01, 14.29it/s] 31%|###       | 8/26 [00:00<00:00, 21.11it/s] 46%|####6     | 12/26 [00:00<00:00, 25.96it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.88it/s] 69%|######9   | 18/26 [00:00<00:00, 27.80it/s] 85%|########4 | 22/26 [00:00<00:00, 30.92it/s]100%|##########| 26/26 [00:00<00:00, 32.54it/s]100%|##########| 26/26 [00:01<00:00, 25.05it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 988 200
penalty weights 10000.0
args.step pgd_anneal_iters 988 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 989 200
penalty weights 10000.0
args.step pgd_anneal_iters 989 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 990 200
penalty weights 10000.0
args.step pgd_anneal_iters 990 600
dim_v 512
rho, theta 202 tensor(-2.4006e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 991 200
penalty weights 10000.0
args.step pgd_anneal_iters 991 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 992 200
penalty weights 10000.0
args.step pgd_anneal_iters 992 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 993 200
penalty weights 10000.0
args.step pgd_anneal_iters 993 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 994 200
penalty weights 10000.0
args.step pgd_anneal_iters 994 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 995 200
penalty weights 10000.0
args.step pgd_anneal_iters 995 600
dim_v 512
rho, theta 200 tensor(-4.1682e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 996 200
penalty weights 10000.0
args.step pgd_anneal_iters 996 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 997 200
penalty weights 10000.0
args.step pgd_anneal_iters 997 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 998 200
penalty weights 10000.0
args.step pgd_anneal_iters 998 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 999 200
penalty weights 10000.0
args.step pgd_anneal_iters 999 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1000 200
penalty weights 10000.0
args.step pgd_anneal_iters 1000 600
dim_v 512
rho, theta 199 tensor(-3.8600e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1001 200
penalty weights 10000.0
args.step pgd_anneal_iters 1001 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1002 200
penalty weights 10000.0
args.step pgd_anneal_iters 1002 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1003 200
penalty weights 10000.0
args.step pgd_anneal_iters 1003 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1004 200
penalty weights 10000.0
args.step pgd_anneal_iters 1004 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1005 200
penalty weights 10000.0
args.step pgd_anneal_iters 1005 600
dim_v 512
rho, theta 199 tensor(-3.1352e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1006 200
penalty weights 10000.0
args.step pgd_anneal_iters 1006 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1007 200
penalty weights 10000.0
args.step pgd_anneal_iters 1007 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1008 200
penalty weights 10000.0
args.step pgd_anneal_iters 1008 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1009 200
penalty weights 10000.0
args.step pgd_anneal_iters 1009 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1010 200
penalty weights 10000.0
args.step pgd_anneal_iters 1010 600
dim_v 512
rho, theta 199 tensor(-2.2960e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1011 200
penalty weights 10000.0
args.step pgd_anneal_iters 1011 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1012 200
penalty weights 10000.0
args.step pgd_anneal_iters 1012 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1013 200
penalty weights 10000.0
args.step pgd_anneal_iters 1013 600
final projection at end of training
dim_v 512
rho, theta 200 tensor(-1.3522e-06, device='cuda:0')
Epoch: [38][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  30.09 ( 30.09)	train_acc   0.46 (  0.50)	train_minacc   0.59 (  0.50)	train_majacc   0.44 (  0.50)	train_corr   0.00 (  0.00)	l1 4.0707 (4.0733)	zero_count 0.0000 (72.7740)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.17it/s] 15%|#5        | 4/26 [00:00<00:01, 18.56it/s] 35%|###4      | 9/26 [00:00<00:00, 30.63it/s]                                               35%|###4      | 9/26 [00:00<00:00, 30.63it/s] 58%|#####7    | 15/26 [00:00<00:00, 39.24it/s] 77%|#######6  | 20/26 [00:00<00:00, 42.45it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 42.45it/s] 96%|#########6| 25/26 [00:00<00:00, 42.59it/s]100%|##########| 26/26 [00:00<00:00, 35.03it/s]
Test: [   0/  26]	Loss 0.694 (0.694)	test_acc   0.48 (  0.48)	test_minacc   0.56 (  0.56)	test_majacc   0.47 (  0.47)	Loss_d 0.694 (0.694)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.05 (  0.05)
Test: [  10/  26]	Loss 0.692 (0.693)	test_acc   0.51 (  0.50)	test_minacc   0.44 (  0.49)	test_majacc   0.52 (  0.50)	Loss_d 0.692 (0.693)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.44 (  0.49)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.03 (  0.05)
Test: [  20/  26]	Loss 0.692 (0.693)	test_acc   0.53 (  0.50)	test_minacc   0.57 (  0.50)	test_majacc   0.52 (  0.50)	Loss_d 0.692 (0.693)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.57 (  0.50)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.05 (  0.04)
Test: [  26/  26]	Loss 0.694 (0.693)	test_acc   0.46 (  0.50)	test_minacc   0.59 (  0.50)	test_majacc   0.44 (  0.50)	Loss_d 0.694 (0.693)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.59 (  0.50)	test_majacc_d   0.44 (  0.50)	test_corr_d   0.07 (  0.05)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.25it/s]
Test: [  0/  1]	Loss 0.694 (0.694)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.694 (0.694)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.00 ( -0.00)
Test: [  1/  1]	Loss 0.694 (0.694)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.694 (0.694)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.00 ( -0.00)
Overall Timing[ 38/  1]	epoch_time 0.0404 (0.0422)	validation_time 0.0003 (0.0006)	train_time 0.0401 (0.0415)
record: (train_acc, test_acc) (0.6142000024914741, 0.6670000553131104)
last accs (train_acc, test_acc) (0.5000000082850456, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.20it/s] 15%|#5        | 4/26 [00:00<00:01, 16.01it/s] 27%|##6       | 7/26 [00:00<00:00, 21.15it/s] 42%|####2     | 11/26 [00:00<00:00, 26.41it/s] 54%|#####3    | 14/26 [00:00<00:00, 27.50it/s] 65%|######5   | 17/26 [00:00<00:00, 26.48it/s] 81%|########  | 21/26 [00:00<00:00, 28.15it/s] 92%|#########2| 24/26 [00:00<00:00, 28.04it/s]100%|##########| 26/26 [00:01<00:00, 24.83it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1014 200
penalty weights 10000.0
args.step pgd_anneal_iters 1014 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1015 200
penalty weights 10000.0
args.step pgd_anneal_iters 1015 600
dim_v 512
rho, theta 200 tensor(-1.3878e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1016 200
penalty weights 10000.0
args.step pgd_anneal_iters 1016 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1017 200
penalty weights 10000.0
args.step pgd_anneal_iters 1017 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1018 200
penalty weights 10000.0
args.step pgd_anneal_iters 1018 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1019 200
penalty weights 10000.0
args.step pgd_anneal_iters 1019 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1020 200
penalty weights 10000.0
args.step pgd_anneal_iters 1020 600
dim_v 512
rho, theta 199 tensor(-3.9792e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1021 200
penalty weights 10000.0
args.step pgd_anneal_iters 1021 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1022 200
penalty weights 10000.0
args.step pgd_anneal_iters 1022 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1023 200
penalty weights 10000.0
args.step pgd_anneal_iters 1023 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1024 200
penalty weights 10000.0
args.step pgd_anneal_iters 1024 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1025 200
penalty weights 10000.0
args.step pgd_anneal_iters 1025 600
dim_v 512
rho, theta 199 tensor(-3.8195e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1026 200
penalty weights 10000.0
args.step pgd_anneal_iters 1026 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1027 200
penalty weights 10000.0
args.step pgd_anneal_iters 1027 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1028 200
penalty weights 10000.0
args.step pgd_anneal_iters 1028 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1029 200
penalty weights 10000.0
args.step pgd_anneal_iters 1029 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1030 200
penalty weights 10000.0
args.step pgd_anneal_iters 1030 600
dim_v 512
rho, theta 199 tensor(-3.0565e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1031 200
penalty weights 10000.0
args.step pgd_anneal_iters 1031 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1032 200
penalty weights 10000.0
args.step pgd_anneal_iters 1032 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1033 200
penalty weights 10000.0
args.step pgd_anneal_iters 1033 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1034 200
penalty weights 10000.0
args.step pgd_anneal_iters 1034 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1035 200
penalty weights 10000.0
args.step pgd_anneal_iters 1035 600
dim_v 512
rho, theta 200 tensor(-2.4316e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1036 200
penalty weights 10000.0
args.step pgd_anneal_iters 1036 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1037 200
penalty weights 10000.0
args.step pgd_anneal_iters 1037 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1038 200
penalty weights 10000.0
args.step pgd_anneal_iters 1038 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1039 200
penalty weights 10000.0
args.step pgd_anneal_iters 1039 600
final projection at end of training
dim_v 512
rho, theta 200 tensor(-1.7840e-06, device='cuda:0')
Epoch: [39][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  30.09 ( 30.09)	train_acc   0.46 (  0.50)	train_minacc   0.59 (  0.50)	train_majacc   0.44 (  0.50)	train_corr   0.00 (  0.00)	l1 4.0729 (4.0736)	zero_count 0.0000 (72.8520)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 21.03it/s] 31%|###       | 8/26 [00:00<00:00, 33.50it/s]                                               31%|###       | 8/26 [00:00<00:00, 33.50it/s] 50%|#####     | 13/26 [00:00<00:00, 38.80it/s] 69%|######9   | 18/26 [00:00<00:00, 41.97it/s]                                                69%|######9   | 18/26 [00:00<00:00, 41.97it/s] 88%|########8 | 23/26 [00:00<00:00, 39.41it/s]100%|##########| 26/26 [00:00<00:00, 37.03it/s]
Test: [   0/  26]	Loss 0.694 (0.694)	test_acc   0.48 (  0.48)	test_minacc   0.56 (  0.56)	test_majacc   0.47 (  0.47)	Loss_d 0.694 (0.694)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.05 (  0.05)
Test: [  10/  26]	Loss 0.692 (0.693)	test_acc   0.51 (  0.50)	test_minacc   0.44 (  0.49)	test_majacc   0.52 (  0.50)	Loss_d 0.692 (0.693)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.44 (  0.49)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.03 (  0.05)
Test: [  20/  26]	Loss 0.692 (0.693)	test_acc   0.53 (  0.50)	test_minacc   0.57 (  0.50)	test_majacc   0.52 (  0.50)	Loss_d 0.692 (0.693)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.57 (  0.50)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.05 (  0.04)
Test: [  26/  26]	Loss 0.694 (0.693)	test_acc   0.46 (  0.50)	test_minacc   0.59 (  0.50)	test_majacc   0.44 (  0.50)	Loss_d 0.694 (0.693)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.59 (  0.50)	test_majacc_d   0.44 (  0.50)	test_corr_d   0.07 (  0.05)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.25it/s]
Test: [  0/  1]	Loss 0.694 (0.694)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.694 (0.694)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.00 (  0.00)
Test: [  1/  1]	Loss 0.694 (0.694)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.694 (0.694)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.00 (  0.00)
Overall Timing[ 39/  1]	epoch_time 0.0445 (0.0423)	validation_time 0.0004 (0.0006)	train_time 0.0441 (0.0415)
record: (train_acc, test_acc) (0.6142000024914741, 0.6670000553131104)
last accs (train_acc, test_acc) (0.5000000082850456, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.57it/s] 19%|#9        | 5/26 [00:00<00:01, 20.40it/s] 31%|###       | 8/26 [00:00<00:00, 23.48it/s] 42%|####2     | 11/26 [00:00<00:00, 25.31it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.98it/s] 69%|######9   | 18/26 [00:00<00:00, 27.95it/s] 81%|########  | 21/26 [00:00<00:00, 28.01it/s] 96%|#########6| 25/26 [00:00<00:00, 29.95it/s]100%|##########| 26/26 [00:01<00:00, 25.25it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1040 200
penalty weights 10000.0
args.step pgd_anneal_iters 1040 600
dim_v 512
rho, theta 202 tensor(-6.1543e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1041 200
penalty weights 10000.0
args.step pgd_anneal_iters 1041 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1042 200
penalty weights 10000.0
args.step pgd_anneal_iters 1042 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1043 200
penalty weights 10000.0
args.step pgd_anneal_iters 1043 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1044 200
penalty weights 10000.0
args.step pgd_anneal_iters 1044 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1045 200
penalty weights 10000.0
args.step pgd_anneal_iters 1045 600
dim_v 512
rho, theta 201 tensor(-3.5055e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1046 200
penalty weights 10000.0
args.step pgd_anneal_iters 1046 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1047 200
penalty weights 10000.0
args.step pgd_anneal_iters 1047 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1048 200
penalty weights 10000.0
args.step pgd_anneal_iters 1048 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1049 200
penalty weights 10000.0
args.step pgd_anneal_iters 1049 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1050 200
penalty weights 10000.0
args.step pgd_anneal_iters 1050 600
dim_v 512
rho, theta 199 tensor(-3.9935e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1051 200
penalty weights 10000.0
args.step pgd_anneal_iters 1051 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1052 200
penalty weights 10000.0
args.step pgd_anneal_iters 1052 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1053 200
penalty weights 10000.0
args.step pgd_anneal_iters 1053 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1054 200
penalty weights 10000.0
args.step pgd_anneal_iters 1054 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1055 200
penalty weights 10000.0
args.step pgd_anneal_iters 1055 600
dim_v 512
rho, theta 199 tensor(-3.0780e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1056 200
penalty weights 10000.0
args.step pgd_anneal_iters 1056 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1057 200
penalty weights 10000.0
args.step pgd_anneal_iters 1057 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1058 200
penalty weights 10000.0
args.step pgd_anneal_iters 1058 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1059 200
penalty weights 10000.0
args.step pgd_anneal_iters 1059 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1060 200
penalty weights 10000.0
args.step pgd_anneal_iters 1060 600
dim_v 512
rho, theta 199 tensor(-2.6870e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1061 200
penalty weights 10000.0
args.step pgd_anneal_iters 1061 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1062 200
penalty weights 10000.0
args.step pgd_anneal_iters 1062 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1063 200
penalty weights 10000.0
args.step pgd_anneal_iters 1063 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1064 200
penalty weights 10000.0
args.step pgd_anneal_iters 1064 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1065 200
penalty weights 10000.0
args.step pgd_anneal_iters 1065 600
dim_v 512
rho, theta 199 tensor(-2.0719e-06, device='cuda:0')
final projection at end of training
dim_v 512
rho, theta 200 tensor(4.5074e-08, device='cuda:0')
Epoch: [40][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  30.09 ( 30.09)	train_acc   0.46 (  0.50)	train_minacc   0.59 (  0.50)	train_majacc   0.44 (  0.50)	train_corr   0.00 (  0.00)	l1 4.0745 (4.0736)	zero_count 0.0000 (72.7350)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.77it/s] 31%|###       | 8/26 [00:00<00:00, 37.03it/s]                                               31%|###       | 8/26 [00:00<00:00, 37.03it/s] 50%|#####     | 13/26 [00:00<00:00, 41.26it/s] 69%|######9   | 18/26 [00:00<00:00, 44.16it/s]                                                69%|######9   | 18/26 [00:00<00:00, 44.16it/s] 88%|########8 | 23/26 [00:00<00:00, 40.15it/s]100%|##########| 26/26 [00:00<00:00, 38.84it/s]
Test: [   0/  26]	Loss 0.694 (0.694)	test_acc   0.48 (  0.48)	test_minacc   0.56 (  0.56)	test_majacc   0.47 (  0.47)	Loss_d 0.694 (0.694)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.05 (  0.05)
Test: [  10/  26]	Loss 0.693 (0.693)	test_acc   0.51 (  0.50)	test_minacc   0.44 (  0.49)	test_majacc   0.52 (  0.50)	Loss_d 0.693 (0.693)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.44 (  0.49)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.03 (  0.05)
Test: [  20/  26]	Loss 0.692 (0.693)	test_acc   0.53 (  0.50)	test_minacc   0.57 (  0.50)	test_majacc   0.52 (  0.50)	Loss_d 0.692 (0.693)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.57 (  0.50)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.05 (  0.04)
Test: [  26/  26]	Loss 0.694 (0.693)	test_acc   0.46 (  0.50)	test_minacc   0.59 (  0.50)	test_majacc   0.44 (  0.50)	Loss_d 0.694 (0.693)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.59 (  0.50)	test_majacc_d   0.44 (  0.50)	test_corr_d   0.07 (  0.05)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.14it/s]
Test: [  0/  1]	Loss 0.694 (0.694)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.694 (0.694)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.01 (  0.01)
Test: [  1/  1]	Loss 0.694 (0.694)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.694 (0.694)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.01 (  0.01)
Overall Timing[ 40/  1]	epoch_time 0.0412 (0.0422)	validation_time 0.0004 (0.0006)	train_time 0.0408 (0.0415)
record: (train_acc, test_acc) (0.6142000024914741, 0.6670000553131104)
last accs (train_acc, test_acc) (0.5000000082850456, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.67it/s] 19%|#9        | 5/26 [00:00<00:00, 22.06it/s] 35%|###4      | 9/26 [00:00<00:00, 26.95it/s] 46%|####6     | 12/26 [00:00<00:00, 27.89it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.71it/s] 73%|#######3  | 19/26 [00:00<00:00, 30.39it/s] 88%|########8 | 23/26 [00:00<00:00, 30.77it/s]100%|##########| 26/26 [00:00<00:00, 27.40it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1066 200
penalty weights 10000.0
args.step pgd_anneal_iters 1066 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1067 200
penalty weights 10000.0
args.step pgd_anneal_iters 1067 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1068 200
penalty weights 10000.0
args.step pgd_anneal_iters 1068 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1069 200
penalty weights 10000.0
args.step pgd_anneal_iters 1069 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1070 200
penalty weights 10000.0
args.step pgd_anneal_iters 1070 600
dim_v 512
rho, theta 200 tensor(-3.0508e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1071 200
penalty weights 10000.0
args.step pgd_anneal_iters 1071 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1072 200
penalty weights 10000.0
args.step pgd_anneal_iters 1072 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1073 200
penalty weights 10000.0
args.step pgd_anneal_iters 1073 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1074 200
penalty weights 10000.0
args.step pgd_anneal_iters 1074 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1075 200
penalty weights 10000.0
args.step pgd_anneal_iters 1075 600
dim_v 512
rho, theta 199 tensor(-3.9148e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1076 200
penalty weights 10000.0
args.step pgd_anneal_iters 1076 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1077 200
penalty weights 10000.0
args.step pgd_anneal_iters 1077 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1078 200
penalty weights 10000.0
args.step pgd_anneal_iters 1078 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1079 200
penalty weights 10000.0
args.step pgd_anneal_iters 1079 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1080 200
penalty weights 10000.0
args.step pgd_anneal_iters 1080 600
dim_v 512
rho, theta 199 tensor(-3.0613e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1081 200
penalty weights 10000.0
args.step pgd_anneal_iters 1081 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1082 200
penalty weights 10000.0
args.step pgd_anneal_iters 1082 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1083 200
penalty weights 10000.0
args.step pgd_anneal_iters 1083 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1084 200
penalty weights 10000.0
args.step pgd_anneal_iters 1084 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1085 200
penalty weights 10000.0
args.step pgd_anneal_iters 1085 600
dim_v 512
rho, theta 199 tensor(-2.7466e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1086 200
penalty weights 10000.0
args.step pgd_anneal_iters 1086 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1087 200
penalty weights 10000.0
args.step pgd_anneal_iters 1087 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1088 200
penalty weights 10000.0
args.step pgd_anneal_iters 1088 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1089 200
penalty weights 10000.0
args.step pgd_anneal_iters 1089 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1090 200
penalty weights 10000.0
args.step pgd_anneal_iters 1090 600
dim_v 512
rho, theta 199 tensor(-1.9050e-06, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1091 200
penalty weights 10000.0
args.step pgd_anneal_iters 1091 600
final projection at end of training
dim_v 512
rho, theta 200 tensor(-4.3414e-07, device='cuda:0')
Epoch: [41][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  30.09 ( 30.09)	train_acc   0.46 (  0.50)	train_minacc   0.59 (  0.50)	train_majacc   0.44 (  0.50)	train_corr   0.00 (  0.00)	l1 4.0668 (4.0737)	zero_count 311.0000 (68.5370)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.31it/s] 27%|##6       | 7/26 [00:00<00:00, 32.88it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.88it/s] 46%|####6     | 12/26 [00:00<00:00, 38.62it/s] 65%|######5   | 17/26 [00:00<00:00, 41.63it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.63it/s] 85%|########4 | 22/26 [00:00<00:00, 39.59it/s]100%|##########| 26/26 [00:00<00:00, 37.73it/s]
Test: [   0/  26]	Loss 0.694 (0.694)	test_acc   0.48 (  0.48)	test_minacc   0.56 (  0.56)	test_majacc   0.47 (  0.47)	Loss_d 0.694 (0.694)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.05 (  0.05)
Test: [  10/  26]	Loss 0.693 (0.693)	test_acc   0.51 (  0.50)	test_minacc   0.44 (  0.49)	test_majacc   0.52 (  0.50)	Loss_d 0.693 (0.693)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.44 (  0.49)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.03 (  0.04)
Test: [  20/  26]	Loss 0.692 (0.693)	test_acc   0.53 (  0.50)	test_minacc   0.57 (  0.50)	test_majacc   0.52 (  0.50)	Loss_d 0.692 (0.693)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.57 (  0.50)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.05 (  0.04)
Test: [  26/  26]	Loss 0.694 (0.693)	test_acc   0.46 (  0.50)	test_minacc   0.59 (  0.50)	test_majacc   0.44 (  0.50)	Loss_d 0.694 (0.693)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.59 (  0.50)	test_majacc_d   0.44 (  0.50)	test_corr_d   0.07 (  0.05)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.25it/s]
Test: [  0/  1]	Loss 0.694 (0.694)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.694 (0.694)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.01 (  0.01)
Test: [  1/  1]	Loss 0.694 (0.694)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.694 (0.694)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.01 (  0.01)
Overall Timing[ 41/  1]	epoch_time 0.0465 (0.0423)	validation_time 0.0004 (0.0006)	train_time 0.0460 (0.0416)
record: (train_acc, test_acc) (0.6142000024914741, 0.6670000553131104)
last accs (train_acc, test_acc) (0.5000000082850456, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.26it/s] 19%|#9        | 5/26 [00:00<00:00, 24.04it/s] 35%|###4      | 9/26 [00:00<00:00, 26.98it/s] 50%|#####     | 13/26 [00:00<00:00, 29.62it/s] 62%|######1   | 16/26 [00:00<00:00, 27.17it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.18it/s] 88%|########8 | 23/26 [00:00<00:00, 29.78it/s]100%|##########| 26/26 [00:00<00:00, 27.17it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1092 200
penalty weights 10000.0
args.step pgd_anneal_iters 1092 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1093 200
penalty weights 10000.0
args.step pgd_anneal_iters 1093 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1094 200
penalty weights 10000.0
args.step pgd_anneal_iters 1094 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1095 200
penalty weights 10000.0
args.step pgd_anneal_iters 1095 600
dim_v 512
rho, theta 201 tensor(-2.4715e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1096 200
penalty weights 10000.0
args.step pgd_anneal_iters 1096 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1097 200
penalty weights 10000.0
args.step pgd_anneal_iters 1097 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1098 200
penalty weights 10000.0
args.step pgd_anneal_iters 1098 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1099 200
penalty weights 10000.0
args.step pgd_anneal_iters 1099 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1100 200
penalty weights 10000.0
args.step pgd_anneal_iters 1100 600
dim_v 512
rho, theta 199 tensor(-3.4189e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1101 200
penalty weights 10000.0
args.step pgd_anneal_iters 1101 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1102 200
penalty weights 10000.0
args.step pgd_anneal_iters 1102 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1103 200
penalty weights 10000.0
args.step pgd_anneal_iters 1103 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1104 200
penalty weights 10000.0
args.step pgd_anneal_iters 1104 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1105 200
penalty weights 10000.0
args.step pgd_anneal_iters 1105 600
dim_v 512
rho, theta 199 tensor(-3.4666e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1106 200
penalty weights 10000.0
args.step pgd_anneal_iters 1106 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1107 200
penalty weights 10000.0
args.step pgd_anneal_iters 1107 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1108 200
penalty weights 10000.0
args.step pgd_anneal_iters 1108 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1109 200
penalty weights 10000.0
args.step pgd_anneal_iters 1109 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1110 200
penalty weights 10000.0
args.step pgd_anneal_iters 1110 600
dim_v 512
rho, theta 199 tensor(-2.6584e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1111 200
penalty weights 10000.0
args.step pgd_anneal_iters 1111 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1112 200
penalty weights 10000.0
args.step pgd_anneal_iters 1112 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1113 200
penalty weights 10000.0
args.step pgd_anneal_iters 1113 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1114 200
penalty weights 10000.0
args.step pgd_anneal_iters 1114 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1115 200
penalty weights 10000.0
args.step pgd_anneal_iters 1115 600
dim_v 512
rho, theta 199 tensor(-1.9622e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1116 200
penalty weights 10000.0
args.step pgd_anneal_iters 1116 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1117 200
penalty weights 10000.0
args.step pgd_anneal_iters 1117 600
final projection at end of training
dim_v 512
rho, theta 200 tensor(-8.7064e-07, device='cuda:0')
Epoch: [42][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  30.09 ( 30.09)	train_acc   0.46 (  0.50)	train_minacc   0.59 (  0.50)	train_majacc   0.44 (  0.50)	train_corr   0.00 (  0.00)	l1 4.0696 (4.0732)	zero_count 0.0000 (72.8520)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.62it/s] 35%|###4      | 9/26 [00:00<00:00, 41.59it/s]                                               35%|###4      | 9/26 [00:00<00:00, 41.59it/s] 54%|#####3    | 14/26 [00:00<00:00, 41.71it/s] 73%|#######3  | 19/26 [00:00<00:00, 44.00it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 44.00it/s] 92%|#########2| 24/26 [00:00<00:00, 44.20it/s]100%|##########| 26/26 [00:00<00:00, 40.60it/s]
Test: [   0/  26]	Loss 0.694 (0.694)	test_acc   0.48 (  0.48)	test_minacc   0.56 (  0.56)	test_majacc   0.47 (  0.47)	Loss_d 0.694 (0.694)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.05 (  0.05)
Test: [  10/  26]	Loss 0.693 (0.693)	test_acc   0.51 (  0.50)	test_minacc   0.44 (  0.49)	test_majacc   0.52 (  0.50)	Loss_d 0.693 (0.693)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.44 (  0.49)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.03 (  0.04)
Test: [  20/  26]	Loss 0.692 (0.693)	test_acc   0.53 (  0.50)	test_minacc   0.57 (  0.50)	test_majacc   0.52 (  0.50)	Loss_d 0.692 (0.693)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.57 (  0.50)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.04 (  0.04)
Test: [  26/  26]	Loss 0.694 (0.693)	test_acc   0.46 (  0.50)	test_minacc   0.59 (  0.50)	test_majacc   0.44 (  0.50)	Loss_d 0.694 (0.693)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.59 (  0.50)	test_majacc_d   0.44 (  0.50)	test_corr_d   0.07 (  0.04)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.53it/s]
Test: [  0/  1]	Loss 0.694 (0.694)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.694 (0.694)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.01 (  0.01)
Test: [  1/  1]	Loss 0.694 (0.694)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.694 (0.694)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.01 (  0.01)
Overall Timing[ 42/  1]	epoch_time 0.0472 (0.0424)	validation_time 0.0003 (0.0006)	train_time 0.0469 (0.0417)
record: (train_acc, test_acc) (0.6142000024914741, 0.6670000553131104)
last accs (train_acc, test_acc) (0.5000000082850456, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.03it/s] 19%|#9        | 5/26 [00:00<00:01, 20.74it/s] 35%|###4      | 9/26 [00:00<00:00, 25.89it/s] 50%|#####     | 13/26 [00:00<00:00, 28.35it/s] 65%|######5   | 17/26 [00:00<00:00, 30.00it/s] 81%|########  | 21/26 [00:00<00:00, 30.63it/s] 96%|#########6| 25/26 [00:00<00:00, 30.94it/s]100%|##########| 26/26 [00:00<00:00, 27.04it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1118 200
penalty weights 10000.0
args.step pgd_anneal_iters 1118 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1119 200
penalty weights 10000.0
args.step pgd_anneal_iters 1119 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1120 200
penalty weights 10000.0
args.step pgd_anneal_iters 1120 600
dim_v 512
rho, theta 201 tensor(-1.8578e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1121 200
penalty weights 10000.0
args.step pgd_anneal_iters 1121 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1122 200
penalty weights 10000.0
args.step pgd_anneal_iters 1122 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1123 200
penalty weights 10000.0
args.step pgd_anneal_iters 1123 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1124 200
penalty weights 10000.0
args.step pgd_anneal_iters 1124 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1125 200
penalty weights 10000.0
args.step pgd_anneal_iters 1125 600
dim_v 512
rho, theta 199 tensor(-3.4118e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1126 200
penalty weights 10000.0
args.step pgd_anneal_iters 1126 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1127 200
penalty weights 10000.0
args.step pgd_anneal_iters 1127 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1128 200
penalty weights 10000.0
args.step pgd_anneal_iters 1128 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1129 200
penalty weights 10000.0
args.step pgd_anneal_iters 1129 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1130 200
penalty weights 10000.0
args.step pgd_anneal_iters 1130 600
dim_v 512
rho, theta 199 tensor(-3.1877e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1131 200
penalty weights 10000.0
args.step pgd_anneal_iters 1131 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1132 200
penalty weights 10000.0
args.step pgd_anneal_iters 1132 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1133 200
penalty weights 10000.0
args.step pgd_anneal_iters 1133 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1134 200
penalty weights 10000.0
args.step pgd_anneal_iters 1134 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1135 200
penalty weights 10000.0
args.step pgd_anneal_iters 1135 600
dim_v 512
rho, theta 199 tensor(-2.6917e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1136 200
penalty weights 10000.0
args.step pgd_anneal_iters 1136 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1137 200
penalty weights 10000.0
args.step pgd_anneal_iters 1137 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1138 200
penalty weights 10000.0
args.step pgd_anneal_iters 1138 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1139 200
penalty weights 10000.0
args.step pgd_anneal_iters 1139 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1140 200
penalty weights 10000.0
args.step pgd_anneal_iters 1140 600
dim_v 512
rho, theta 199 tensor(-1.9956e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1141 200
penalty weights 10000.0
args.step pgd_anneal_iters 1141 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1142 200
penalty weights 10000.0
args.step pgd_anneal_iters 1142 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1143 200
penalty weights 10000.0
args.step pgd_anneal_iters 1143 600
final projection at end of training
dim_v 512
rho, theta 199 tensor(-1.1659e-06, device='cuda:0')
Epoch: [43][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  30.09 ( 30.09)	train_acc   0.46 (  0.50)	train_minacc   0.59 (  0.50)	train_majacc   0.44 (  0.50)	train_corr   0.00 (  0.00)	l1 4.0707 (4.0726)	zero_count 0.0000 (72.8520)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.31it/s] 23%|##3       | 6/26 [00:00<00:00, 30.08it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.08it/s] 42%|####2     | 11/26 [00:00<00:00, 36.93it/s] 62%|######1   | 16/26 [00:00<00:00, 40.76it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.76it/s] 81%|########  | 21/26 [00:00<00:00, 38.43it/s]100%|##########| 26/26 [00:00<00:00, 41.74it/s]100%|##########| 26/26 [00:00<00:00, 35.75it/s]
Test: [   0/  26]	Loss 0.694 (0.694)	test_acc   0.48 (  0.48)	test_minacc   0.56 (  0.56)	test_majacc   0.47 (  0.47)	Loss_d 0.694 (0.694)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.05 (  0.05)
Test: [  10/  26]	Loss 0.693 (0.693)	test_acc   0.51 (  0.50)	test_minacc   0.44 (  0.49)	test_majacc   0.52 (  0.50)	Loss_d 0.693 (0.693)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.44 (  0.49)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.03 (  0.04)
Test: [  20/  26]	Loss 0.692 (0.693)	test_acc   0.53 (  0.50)	test_minacc   0.57 (  0.50)	test_majacc   0.52 (  0.50)	Loss_d 0.692 (0.693)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.57 (  0.50)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.04 (  0.04)
Test: [  26/  26]	Loss 0.694 (0.693)	test_acc   0.46 (  0.50)	test_minacc   0.59 (  0.50)	test_majacc   0.44 (  0.50)	Loss_d 0.694 (0.693)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.59 (  0.50)	test_majacc_d   0.44 (  0.50)	test_corr_d   0.08 (  0.04)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.12it/s]
Test: [  0/  1]	Loss 0.694 (0.694)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.694 (0.694)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.02 (  0.02)
Test: [  1/  1]	Loss 0.694 (0.694)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.694 (0.694)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.02 (  0.02)
Overall Timing[ 43/  1]	epoch_time 0.0395 (0.0424)	validation_time 0.0004 (0.0006)	train_time 0.0390 (0.0417)
record: (train_acc, test_acc) (0.6142000024914741, 0.6670000553131104)
last accs (train_acc, test_acc) (0.5000000082850456, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.41it/s] 15%|#5        | 4/26 [00:00<00:01, 17.34it/s] 27%|##6       | 7/26 [00:00<00:00, 21.18it/s] 42%|####2     | 11/26 [00:00<00:00, 26.23it/s] 54%|#####3    | 14/26 [00:00<00:00, 27.34it/s] 65%|######5   | 17/26 [00:00<00:00, 27.80it/s] 81%|########  | 21/26 [00:00<00:00, 29.94it/s] 96%|#########6| 25/26 [00:00<00:00, 29.44it/s]100%|##########| 26/26 [00:01<00:00, 25.30it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1144 200
penalty weights 10000.0
args.step pgd_anneal_iters 1144 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1145 200
penalty weights 10000.0
args.step pgd_anneal_iters 1145 600
dim_v 512
rho, theta 200 tensor(-1.0011e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1146 200
penalty weights 10000.0
args.step pgd_anneal_iters 1146 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1147 200
penalty weights 10000.0
args.step pgd_anneal_iters 1147 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1148 200
penalty weights 10000.0
args.step pgd_anneal_iters 1148 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1149 200
penalty weights 10000.0
args.step pgd_anneal_iters 1149 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1150 200
penalty weights 10000.0
args.step pgd_anneal_iters 1150 600
dim_v 512
rho, theta 199 tensor(-3.2258e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1151 200
penalty weights 10000.0
args.step pgd_anneal_iters 1151 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1152 200
penalty weights 10000.0
args.step pgd_anneal_iters 1152 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1153 200
penalty weights 10000.0
args.step pgd_anneal_iters 1153 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1154 200
penalty weights 10000.0
args.step pgd_anneal_iters 1154 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1155 200
penalty weights 10000.0
args.step pgd_anneal_iters 1155 600
dim_v 512
rho, theta 199 tensor(-3.1757e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1156 200
penalty weights 10000.0
args.step pgd_anneal_iters 1156 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1157 200
penalty weights 10000.0
args.step pgd_anneal_iters 1157 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1158 200
penalty weights 10000.0
args.step pgd_anneal_iters 1158 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1159 200
penalty weights 10000.0
args.step pgd_anneal_iters 1159 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1160 200
penalty weights 10000.0
args.step pgd_anneal_iters 1160 600
dim_v 512
rho, theta 199 tensor(-2.6155e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1161 200
penalty weights 10000.0
args.step pgd_anneal_iters 1161 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1162 200
penalty weights 10000.0
args.step pgd_anneal_iters 1162 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1163 200
penalty weights 10000.0
args.step pgd_anneal_iters 1163 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1164 200
penalty weights 10000.0
args.step pgd_anneal_iters 1164 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1165 200
penalty weights 10000.0
args.step pgd_anneal_iters 1165 600
dim_v 512
rho, theta 199 tensor(-2.1553e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1166 200
penalty weights 10000.0
args.step pgd_anneal_iters 1166 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1167 200
penalty weights 10000.0
args.step pgd_anneal_iters 1167 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1168 200
penalty weights 10000.0
args.step pgd_anneal_iters 1168 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1169 200
penalty weights 10000.0
args.step pgd_anneal_iters 1169 600
final projection at end of training
dim_v 512
rho, theta 199 tensor(-1.5283e-06, device='cuda:0')
Epoch: [44][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  30.09 ( 30.09)	train_acc   0.46 (  0.50)	train_minacc   0.59 (  0.50)	train_majacc   0.44 (  0.50)	train_corr   0.00 (  0.00)	l1 4.0728 (4.0729)	zero_count 0.0000 (72.9300)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 15%|#5        | 4/26 [00:00<00:00, 22.08it/s] 38%|###8      | 10/26 [00:00<00:00, 36.88it/s]                                                38%|###8      | 10/26 [00:00<00:00, 36.88it/s] 62%|######1   | 16/26 [00:00<00:00, 41.84it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.84it/s] 85%|########4 | 22/26 [00:00<00:00, 46.26it/s]100%|##########| 26/26 [00:00<00:00, 39.48it/s]
Test: [   0/  26]	Loss 0.694 (0.694)	test_acc   0.48 (  0.48)	test_minacc   0.56 (  0.56)	test_majacc   0.47 (  0.47)	Loss_d 0.694 (0.694)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.05 (  0.05)
Test: [  10/  26]	Loss 0.693 (0.693)	test_acc   0.51 (  0.50)	test_minacc   0.44 (  0.49)	test_majacc   0.52 (  0.50)	Loss_d 0.693 (0.693)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.44 (  0.49)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.03 (  0.04)
Test: [  20/  26]	Loss 0.692 (0.693)	test_acc   0.53 (  0.50)	test_minacc   0.57 (  0.50)	test_majacc   0.52 (  0.50)	Loss_d 0.692 (0.693)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.57 (  0.50)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.04 (  0.04)
Test: [  26/  26]	Loss 0.694 (0.693)	test_acc   0.46 (  0.50)	test_minacc   0.59 (  0.50)	test_majacc   0.44 (  0.50)	Loss_d 0.694 (0.693)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.59 (  0.50)	test_majacc_d   0.44 (  0.50)	test_corr_d   0.08 (  0.04)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.53it/s]
Test: [  0/  1]	Loss 0.694 (0.694)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.694 (0.694)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.02 (  0.02)
Test: [  1/  1]	Loss 0.694 (0.694)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.694 (0.694)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.02 (  0.02)
Overall Timing[ 44/  1]	epoch_time 0.0439 (0.0424)	validation_time 0.0005 (0.0006)	train_time 0.0433 (0.0417)
record: (train_acc, test_acc) (0.6142000024914741, 0.6670000553131104)
last accs (train_acc, test_acc) (0.5000000082850456, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.31it/s] 15%|#5        | 4/26 [00:00<00:01, 20.80it/s] 27%|##6       | 7/26 [00:00<00:00, 24.10it/s] 42%|####2     | 11/26 [00:00<00:00, 26.88it/s] 58%|#####7    | 15/26 [00:00<00:00, 29.67it/s] 73%|#######3  | 19/26 [00:00<00:00, 30.20it/s] 88%|########8 | 23/26 [00:00<00:00, 30.51it/s]100%|##########| 26/26 [00:00<00:00, 27.02it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1170 200
penalty weights 10000.0
args.step pgd_anneal_iters 1170 600
dim_v 512
rho, theta 200 tensor(-3.8906e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1171 200
penalty weights 10000.0
args.step pgd_anneal_iters 1171 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1172 200
penalty weights 10000.0
args.step pgd_anneal_iters 1172 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1173 200
penalty weights 10000.0
args.step pgd_anneal_iters 1173 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1174 200
penalty weights 10000.0
args.step pgd_anneal_iters 1174 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1175 200
penalty weights 10000.0
args.step pgd_anneal_iters 1175 600
dim_v 512
rho, theta 199 tensor(-2.8753e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1176 200
penalty weights 10000.0
args.step pgd_anneal_iters 1176 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1177 200
penalty weights 10000.0
args.step pgd_anneal_iters 1177 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1178 200
penalty weights 10000.0
args.step pgd_anneal_iters 1178 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1179 200
penalty weights 10000.0
args.step pgd_anneal_iters 1179 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1180 200
penalty weights 10000.0
args.step pgd_anneal_iters 1180 600
dim_v 512
rho, theta 199 tensor(-3.2783e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1181 200
penalty weights 10000.0
args.step pgd_anneal_iters 1181 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1182 200
penalty weights 10000.0
args.step pgd_anneal_iters 1182 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1183 200
penalty weights 10000.0
args.step pgd_anneal_iters 1183 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1184 200
penalty weights 10000.0
args.step pgd_anneal_iters 1184 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1185 200
penalty weights 10000.0
args.step pgd_anneal_iters 1185 600
dim_v 512
rho, theta 199 tensor(-2.6083e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1186 200
penalty weights 10000.0
args.step pgd_anneal_iters 1186 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1187 200
penalty weights 10000.0
args.step pgd_anneal_iters 1187 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1188 200
penalty weights 10000.0
args.step pgd_anneal_iters 1188 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1189 200
penalty weights 10000.0
args.step pgd_anneal_iters 1189 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1190 200
penalty weights 10000.0
args.step pgd_anneal_iters 1190 600
dim_v 512
rho, theta 199 tensor(-2.3365e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1191 200
penalty weights 10000.0
args.step pgd_anneal_iters 1191 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1192 200
penalty weights 10000.0
args.step pgd_anneal_iters 1192 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1193 200
penalty weights 10000.0
args.step pgd_anneal_iters 1193 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1194 200
penalty weights 10000.0
args.step pgd_anneal_iters 1194 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1195 200
penalty weights 10000.0
args.step pgd_anneal_iters 1195 600
dim_v 512
rho, theta 199 tensor(-1.7667e-06, device='cuda:0')
final projection at end of training
dim_v 512
rho, theta 199 tensor(-1.1921e-08, device='cuda:0')
Epoch: [45][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  30.09 ( 30.09)	train_acc   0.46 (  0.50)	train_minacc   0.59 (  0.50)	train_majacc   0.44 (  0.50)	train_corr   0.00 (  0.00)	l1 4.0742 (4.0730)	zero_count 0.0000 (72.9300)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.90it/s] 27%|##6       | 7/26 [00:00<00:00, 27.65it/s]                                               27%|##6       | 7/26 [00:00<00:00, 27.65it/s] 42%|####2     | 11/26 [00:00<00:00, 31.64it/s] 65%|######5   | 17/26 [00:00<00:00, 40.89it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.89it/s] 85%|########4 | 22/26 [00:00<00:00, 42.91it/s]100%|##########| 26/26 [00:00<00:00, 34.26it/s]
Test: [   0/  26]	Loss 0.694 (0.694)	test_acc   0.48 (  0.48)	test_minacc   0.56 (  0.56)	test_majacc   0.47 (  0.47)	Loss_d 0.694 (0.694)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.04 (  0.04)
Test: [  10/  26]	Loss 0.693 (0.693)	test_acc   0.51 (  0.50)	test_minacc   0.44 (  0.49)	test_majacc   0.52 (  0.50)	Loss_d 0.693 (0.693)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.44 (  0.49)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.03 (  0.04)
Test: [  20/  26]	Loss 0.692 (0.693)	test_acc   0.53 (  0.50)	test_minacc   0.57 (  0.50)	test_majacc   0.52 (  0.50)	Loss_d 0.692 (0.693)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.57 (  0.50)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.04 (  0.04)
Test: [  26/  26]	Loss 0.694 (0.693)	test_acc   0.46 (  0.50)	test_minacc   0.59 (  0.50)	test_majacc   0.44 (  0.50)	Loss_d 0.694 (0.693)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.59 (  0.50)	test_majacc_d   0.44 (  0.50)	test_corr_d   0.08 (  0.04)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.82it/s]
Test: [  0/  1]	Loss 0.694 (0.694)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.694 (0.694)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.02 (  0.02)
Test: [  1/  1]	Loss 0.694 (0.694)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.694 (0.694)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.02 (  0.02)
Overall Timing[ 45/  1]	epoch_time 0.0411 (0.0424)	validation_time 0.0004 (0.0006)	train_time 0.0407 (0.0417)
record: (train_acc, test_acc) (0.6142000024914741, 0.6670000553131104)
last accs (train_acc, test_acc) (0.5000000082850456, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  4.13it/s] 19%|#9        | 5/26 [00:00<00:01, 15.00it/s] 35%|###4      | 9/26 [00:00<00:00, 21.68it/s] 50%|#####     | 13/26 [00:00<00:00, 25.18it/s] 65%|######5   | 17/26 [00:00<00:00, 27.28it/s] 81%|########  | 21/26 [00:00<00:00, 28.68it/s] 96%|#########6| 25/26 [00:01<00:00, 30.19it/s]100%|##########| 26/26 [00:01<00:00, 24.23it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1196 200
penalty weights 10000.0
args.step pgd_anneal_iters 1196 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1197 200
penalty weights 10000.0
args.step pgd_anneal_iters 1197 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1198 200
penalty weights 10000.0
args.step pgd_anneal_iters 1198 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1199 200
penalty weights 10000.0
args.step pgd_anneal_iters 1199 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1200 200
penalty weights 10000.0
args.step pgd_anneal_iters 1200 600
dim_v 512
rho, theta 199 tensor(-2.4080e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1201 200
penalty weights 10000.0
args.step pgd_anneal_iters 1201 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1202 200
penalty weights 10000.0
args.step pgd_anneal_iters 1202 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1203 200
penalty weights 10000.0
args.step pgd_anneal_iters 1203 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1204 200
penalty weights 10000.0
args.step pgd_anneal_iters 1204 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1205 200
penalty weights 10000.0
args.step pgd_anneal_iters 1205 600
dim_v 512
rho, theta 199 tensor(-3.1996e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1206 200
penalty weights 10000.0
args.step pgd_anneal_iters 1206 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1207 200
penalty weights 10000.0
args.step pgd_anneal_iters 1207 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1208 200
penalty weights 10000.0
args.step pgd_anneal_iters 1208 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1209 200
penalty weights 10000.0
args.step pgd_anneal_iters 1209 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1210 200
penalty weights 10000.0
args.step pgd_anneal_iters 1210 600
dim_v 512
rho, theta 199 tensor(-2.5725e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1211 200
penalty weights 10000.0
args.step pgd_anneal_iters 1211 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1212 200
penalty weights 10000.0
args.step pgd_anneal_iters 1212 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1213 200
penalty weights 10000.0
args.step pgd_anneal_iters 1213 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1214 200
penalty weights 10000.0
args.step pgd_anneal_iters 1214 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1215 200
penalty weights 10000.0
args.step pgd_anneal_iters 1215 600
dim_v 512
rho, theta 199 tensor(-2.4080e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1216 200
penalty weights 10000.0
args.step pgd_anneal_iters 1216 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1217 200
penalty weights 10000.0
args.step pgd_anneal_iters 1217 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1218 200
penalty weights 10000.0
args.step pgd_anneal_iters 1218 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1219 200
penalty weights 10000.0
args.step pgd_anneal_iters 1219 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1220 200
penalty weights 10000.0
args.step pgd_anneal_iters 1220 600
dim_v 512
rho, theta 199 tensor(-1.6642e-06, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1221 200
penalty weights 10000.0
args.step pgd_anneal_iters 1221 600
final projection at end of training
dim_v 512
rho, theta 199 tensor(-4.0770e-07, device='cuda:0')
Epoch: [46][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  30.09 ( 30.09)	train_acc   0.46 (  0.50)	train_minacc   0.59 (  0.50)	train_majacc   0.44 (  0.50)	train_corr   0.00 (  0.00)	l1 4.0668 (4.0731)	zero_count 312.0000 (56.4330)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.32it/s] 23%|##3       | 6/26 [00:00<00:00, 28.84it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.84it/s] 42%|####2     | 11/26 [00:00<00:00, 35.75it/s] 62%|######1   | 16/26 [00:00<00:00, 36.71it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.71it/s] 81%|########  | 21/26 [00:00<00:00, 39.87it/s]100%|##########| 26/26 [00:00<00:00, 42.56it/s]100%|##########| 26/26 [00:00<00:00, 35.08it/s]
Test: [   0/  26]	Loss 0.694 (0.694)	test_acc   0.48 (  0.48)	test_minacc   0.56 (  0.56)	test_majacc   0.47 (  0.47)	Loss_d 0.694 (0.694)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.04 (  0.04)
Test: [  10/  26]	Loss 0.693 (0.693)	test_acc   0.51 (  0.50)	test_minacc   0.44 (  0.49)	test_majacc   0.52 (  0.50)	Loss_d 0.693 (0.693)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.44 (  0.49)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.03 (  0.04)
Test: [  20/  26]	Loss 0.692 (0.693)	test_acc   0.53 (  0.50)	test_minacc   0.57 (  0.50)	test_majacc   0.52 (  0.50)	Loss_d 0.692 (0.693)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.57 (  0.50)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.04 (  0.03)
Test: [  26/  26]	Loss 0.694 (0.693)	test_acc   0.46 (  0.50)	test_minacc   0.59 (  0.50)	test_majacc   0.44 (  0.50)	Loss_d 0.694 (0.693)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.59 (  0.50)	test_majacc_d   0.44 (  0.50)	test_corr_d   0.08 (  0.04)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.64it/s]
Test: [  0/  1]	Loss 0.694 (0.694)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.694 (0.694)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.02 (  0.02)
Test: [  1/  1]	Loss 0.694 (0.694)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.694 (0.694)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.02 (  0.02)
Overall Timing[ 46/  1]	epoch_time 0.0410 (0.0424)	validation_time 0.0004 (0.0006)	train_time 0.0406 (0.0417)
record: (train_acc, test_acc) (0.6142000024914741, 0.6670000553131104)
last accs (train_acc, test_acc) (0.5000000082850456, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.70it/s] 15%|#5        | 4/26 [00:00<00:01, 17.52it/s] 31%|###       | 8/26 [00:00<00:00, 24.36it/s] 42%|####2     | 11/26 [00:00<00:00, 25.53it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.18it/s] 69%|######9   | 18/26 [00:00<00:00, 28.64it/s] 81%|########  | 21/26 [00:00<00:00, 28.78it/s] 92%|#########2| 24/26 [00:00<00:00, 28.68it/s]100%|##########| 26/26 [00:01<00:00, 25.15it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1222 200
penalty weights 10000.0
args.step pgd_anneal_iters 1222 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1223 200
penalty weights 10000.0
args.step pgd_anneal_iters 1223 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1224 200
penalty weights 10000.0
args.step pgd_anneal_iters 1224 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1225 200
penalty weights 10000.0
args.step pgd_anneal_iters 1225 600
dim_v 512
rho, theta 200 tensor(-1.8409e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1226 200
penalty weights 10000.0
args.step pgd_anneal_iters 1226 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1227 200
penalty weights 10000.0
args.step pgd_anneal_iters 1227 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1228 200
penalty weights 10000.0
args.step pgd_anneal_iters 1228 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1229 200
penalty weights 10000.0
args.step pgd_anneal_iters 1229 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1230 200
penalty weights 10000.0
args.step pgd_anneal_iters 1230 600
dim_v 512
rho, theta 199 tensor(-2.9135e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1231 200
penalty weights 10000.0
args.step pgd_anneal_iters 1231 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1232 200
penalty weights 10000.0
args.step pgd_anneal_iters 1232 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1233 200
penalty weights 10000.0
args.step pgd_anneal_iters 1233 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1234 200
penalty weights 10000.0
args.step pgd_anneal_iters 1234 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1235 200
penalty weights 10000.0
args.step pgd_anneal_iters 1235 600
dim_v 512
rho, theta 199 tensor(-2.9087e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1236 200
penalty weights 10000.0
args.step pgd_anneal_iters 1236 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1237 200
penalty weights 10000.0
args.step pgd_anneal_iters 1237 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1238 200
penalty weights 10000.0
args.step pgd_anneal_iters 1238 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1239 200
penalty weights 10000.0
args.step pgd_anneal_iters 1239 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1240 200
penalty weights 10000.0
args.step pgd_anneal_iters 1240 600
dim_v 512
rho, theta 199 tensor(-2.3055e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1241 200
penalty weights 10000.0
args.step pgd_anneal_iters 1241 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1242 200
penalty weights 10000.0
args.step pgd_anneal_iters 1242 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1243 200
penalty weights 10000.0
args.step pgd_anneal_iters 1243 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1244 200
penalty weights 10000.0
args.step pgd_anneal_iters 1244 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1245 200
penalty weights 10000.0
args.step pgd_anneal_iters 1245 600
dim_v 512
rho, theta 199 tensor(-1.7166e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1246 200
penalty weights 10000.0
args.step pgd_anneal_iters 1246 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1247 200
penalty weights 10000.0
args.step pgd_anneal_iters 1247 600
final projection at end of training
dim_v 512
rho, theta 200 tensor(-7.1881e-07, device='cuda:0')
Epoch: [47][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  30.09 ( 30.09)	train_acc   0.46 (  0.50)	train_minacc   0.59 (  0.50)	train_majacc   0.44 (  0.50)	train_corr   0.00 (  0.00)	l1 4.0694 (4.0726)	zero_count 0.0000 (72.9300)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.65it/s] 23%|##3       | 6/26 [00:00<00:00, 31.22it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.22it/s] 42%|####2     | 11/26 [00:00<00:00, 37.10it/s] 62%|######1   | 16/26 [00:00<00:00, 39.58it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.58it/s] 81%|########  | 21/26 [00:00<00:00, 39.69it/s]100%|##########| 26/26 [00:00<00:00, 42.46it/s]100%|##########| 26/26 [00:00<00:00, 36.25it/s]
Test: [   0/  26]	Loss 0.694 (0.694)	test_acc   0.48 (  0.48)	test_minacc   0.56 (  0.56)	test_majacc   0.47 (  0.47)	Loss_d 0.694 (0.694)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.04 (  0.04)
Test: [  10/  26]	Loss 0.693 (0.693)	test_acc   0.51 (  0.50)	test_minacc   0.44 (  0.49)	test_majacc   0.52 (  0.50)	Loss_d 0.693 (0.693)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.44 (  0.49)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.02 (  0.04)
Test: [  20/  26]	Loss 0.692 (0.693)	test_acc   0.53 (  0.50)	test_minacc   0.57 (  0.50)	test_majacc   0.52 (  0.50)	Loss_d 0.692 (0.693)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.57 (  0.50)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.04 (  0.03)
Test: [  26/  26]	Loss 0.694 (0.693)	test_acc   0.46 (  0.50)	test_minacc   0.59 (  0.50)	test_majacc   0.44 (  0.50)	Loss_d 0.694 (0.693)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.59 (  0.50)	test_majacc_d   0.44 (  0.50)	test_corr_d   0.08 (  0.04)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 56.46it/s]
Test: [  0/  1]	Loss 0.694 (0.694)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.694 (0.694)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.02 (  0.02)
Test: [  1/  1]	Loss 0.694 (0.694)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.694 (0.694)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.02 (  0.02)
Overall Timing[ 47/  1]	epoch_time 0.0408 (0.0423)	validation_time 0.0005 (0.0006)	train_time 0.0403 (0.0416)
record: (train_acc, test_acc) (0.6142000024914741, 0.6670000553131104)
last accs (train_acc, test_acc) (0.5002000094354153, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.77it/s] 15%|#5        | 4/26 [00:00<00:01, 20.01it/s] 27%|##6       | 7/26 [00:00<00:00, 23.94it/s] 38%|###8      | 10/26 [00:00<00:00, 24.97it/s] 50%|#####     | 13/26 [00:00<00:00, 24.30it/s] 65%|######5   | 17/26 [00:00<00:00, 27.01it/s] 77%|#######6  | 20/26 [00:00<00:00, 27.54it/s] 88%|########8 | 23/26 [00:00<00:00, 28.07it/s]100%|##########| 26/26 [00:01<00:00, 25.46it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1248 200
penalty weights 10000.0
args.step pgd_anneal_iters 1248 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1249 200
penalty weights 10000.0
args.step pgd_anneal_iters 1249 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1250 200
penalty weights 10000.0
args.step pgd_anneal_iters 1250 600
dim_v 512
rho, theta 201 tensor(-1.5108e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1251 200
penalty weights 10000.0
args.step pgd_anneal_iters 1251 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1252 200
penalty weights 10000.0
args.step pgd_anneal_iters 1252 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1253 200
penalty weights 10000.0
args.step pgd_anneal_iters 1253 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1254 200
penalty weights 10000.0
args.step pgd_anneal_iters 1254 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1255 200
penalty weights 10000.0
args.step pgd_anneal_iters 1255 600
dim_v 512
rho, theta 198 tensor(-2.7436e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1256 200
penalty weights 10000.0
args.step pgd_anneal_iters 1256 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1257 200
penalty weights 10000.0
args.step pgd_anneal_iters 1257 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1258 200
penalty weights 10000.0
args.step pgd_anneal_iters 1258 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1259 200
penalty weights 10000.0
args.step pgd_anneal_iters 1259 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1260 200
penalty weights 10000.0
args.step pgd_anneal_iters 1260 600
dim_v 512
rho, theta 198 tensor(-2.6334e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1261 200
penalty weights 10000.0
args.step pgd_anneal_iters 1261 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1262 200
penalty weights 10000.0
args.step pgd_anneal_iters 1262 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1263 200
penalty weights 10000.0
args.step pgd_anneal_iters 1263 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1264 200
penalty weights 10000.0
args.step pgd_anneal_iters 1264 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1265 200
penalty weights 10000.0
args.step pgd_anneal_iters 1265 600
dim_v 512
rho, theta 197 tensor(-2.4348e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1266 200
penalty weights 10000.0
args.step pgd_anneal_iters 1266 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1267 200
penalty weights 10000.0
args.step pgd_anneal_iters 1267 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1268 200
penalty weights 10000.0
args.step pgd_anneal_iters 1268 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1269 200
penalty weights 10000.0
args.step pgd_anneal_iters 1269 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1270 200
penalty weights 10000.0
args.step pgd_anneal_iters 1270 600
dim_v 512
rho, theta 197 tensor(-1.7195e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1271 200
penalty weights 10000.0
args.step pgd_anneal_iters 1271 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1272 200
penalty weights 10000.0
args.step pgd_anneal_iters 1272 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1273 200
penalty weights 10000.0
args.step pgd_anneal_iters 1273 600
final projection at end of training
dim_v 512
rho, theta 197 tensor(-9.6572e-07, device='cuda:0')
Epoch: [48][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  30.09 ( 30.09)	train_acc   0.46 (  0.50)	train_minacc   0.59 (  0.50)	train_majacc   0.44 (  0.50)	train_corr   0.00 (  0.00)	l1 4.0705 (4.0722)	zero_count 0.0000 (73.1250)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.95it/s] 27%|##6       | 7/26 [00:00<00:00, 34.45it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.45it/s] 42%|####2     | 11/26 [00:00<00:00, 36.74it/s] 62%|######1   | 16/26 [00:00<00:00, 38.83it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.83it/s] 81%|########  | 21/26 [00:00<00:00, 40.02it/s]100%|##########| 26/26 [00:00<00:00, 42.60it/s]100%|##########| 26/26 [00:00<00:00, 36.54it/s]
Test: [   0/  26]	Loss 0.694 (0.694)	test_acc   0.48 (  0.48)	test_minacc   0.56 (  0.56)	test_majacc   0.47 (  0.47)	Loss_d 0.694 (0.694)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.04 (  0.04)
Test: [  10/  26]	Loss 0.693 (0.693)	test_acc   0.51 (  0.50)	test_minacc   0.44 (  0.49)	test_majacc   0.52 (  0.50)	Loss_d 0.693 (0.693)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.44 (  0.49)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.02 (  0.04)
Test: [  20/  26]	Loss 0.692 (0.693)	test_acc   0.53 (  0.50)	test_minacc   0.57 (  0.49)	test_majacc   0.52 (  0.50)	Loss_d 0.692 (0.693)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.57 (  0.49)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.03 (  0.03)
Test: [  26/  26]	Loss 0.693 (0.693)	test_acc   0.46 (  0.50)	test_minacc   0.59 (  0.50)	test_majacc   0.44 (  0.50)	Loss_d 0.693 (0.693)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.59 (  0.50)	test_majacc_d   0.44 (  0.50)	test_corr_d   0.08 (  0.04)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.65it/s]
Test: [  0/  1]	Loss 0.694 (0.694)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.694 (0.694)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.02 (  0.02)
Test: [  1/  1]	Loss 0.694 (0.694)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.694 (0.694)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.02 (  0.02)
Overall Timing[ 48/  1]	epoch_time 0.0430 (0.0423)	validation_time 0.0005 (0.0006)	train_time 0.0425 (0.0417)
record: (train_acc, test_acc) (0.6142000024914741, 0.6670000553131104)
last accs (train_acc, test_acc) (0.5004000094234944, 0.49900001287460327)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.97it/s] 15%|#5        | 4/26 [00:00<00:01, 19.58it/s] 31%|###       | 8/26 [00:00<00:00, 25.36it/s] 46%|####6     | 12/26 [00:00<00:00, 27.89it/s] 62%|######1   | 16/26 [00:00<00:00, 30.35it/s] 77%|#######6  | 20/26 [00:00<00:00, 31.15it/s] 92%|#########2| 24/26 [00:00<00:00, 31.21it/s]100%|##########| 26/26 [00:00<00:00, 27.19it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1274 200
penalty weights 10000.0
args.step pgd_anneal_iters 1274 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1275 200
penalty weights 10000.0
args.step pgd_anneal_iters 1275 600
dim_v 512
rho, theta 197 tensor(-8.5253e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1276 200
penalty weights 10000.0
args.step pgd_anneal_iters 1276 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1277 200
penalty weights 10000.0
args.step pgd_anneal_iters 1277 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1278 200
penalty weights 10000.0
args.step pgd_anneal_iters 1278 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1279 200
penalty weights 10000.0
args.step pgd_anneal_iters 1279 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1280 200
penalty weights 10000.0
args.step pgd_anneal_iters 1280 600
dim_v 512
rho, theta 197 tensor(-2.4877e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1281 200
penalty weights 10000.0
args.step pgd_anneal_iters 1281 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1282 200
penalty weights 10000.0
args.step pgd_anneal_iters 1282 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1283 200
penalty weights 10000.0
args.step pgd_anneal_iters 1283 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1284 200
penalty weights 10000.0
args.step pgd_anneal_iters 1284 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1285 200
penalty weights 10000.0
args.step pgd_anneal_iters 1285 600
dim_v 512
rho, theta 197 tensor(-2.6082e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1286 200
penalty weights 10000.0
args.step pgd_anneal_iters 1286 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1287 200
penalty weights 10000.0
args.step pgd_anneal_iters 1287 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1288 200
penalty weights 10000.0
args.step pgd_anneal_iters 1288 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1289 200
penalty weights 10000.0
args.step pgd_anneal_iters 1289 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1290 200
penalty weights 10000.0
args.step pgd_anneal_iters 1290 600
dim_v 512
rho, theta 197 tensor(-2.2108e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1291 200
penalty weights 10000.0
args.step pgd_anneal_iters 1291 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1292 200
penalty weights 10000.0
args.step pgd_anneal_iters 1292 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1293 200
penalty weights 10000.0
args.step pgd_anneal_iters 1293 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1294 200
penalty weights 10000.0
args.step pgd_anneal_iters 1294 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1295 200
penalty weights 10000.0
args.step pgd_anneal_iters 1295 600
dim_v 512
rho, theta 197 tensor(-1.8423e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1296 200
penalty weights 10000.0
args.step pgd_anneal_iters 1296 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1297 200
penalty weights 10000.0
args.step pgd_anneal_iters 1297 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1298 200
penalty weights 10000.0
args.step pgd_anneal_iters 1298 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1299 200
penalty weights 10000.0
args.step pgd_anneal_iters 1299 600
final projection at end of training
dim_v 512
rho, theta 197 tensor(-1.2836e-06, device='cuda:0')
Epoch: [49][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  30.09 ( 30.09)	train_acc   0.46 (  0.50)	train_minacc   0.59 (  0.50)	train_majacc   0.44 (  0.50)	train_corr   0.00 (  0.00)	l1 4.0726 (4.0725)	zero_count 0.0000 (73.4370)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 19.56it/s] 31%|###       | 8/26 [00:00<00:00, 30.03it/s]                                               31%|###       | 8/26 [00:00<00:00, 30.03it/s] 50%|#####     | 13/26 [00:00<00:00, 36.32it/s] 69%|######9   | 18/26 [00:00<00:00, 40.25it/s]                                                69%|######9   | 18/26 [00:00<00:00, 40.25it/s] 88%|########8 | 23/26 [00:00<00:00, 41.79it/s]100%|##########| 26/26 [00:00<00:00, 35.84it/s]
Test: [   0/  26]	Loss 0.694 (0.694)	test_acc   0.48 (  0.48)	test_minacc   0.56 (  0.56)	test_majacc   0.47 (  0.47)	Loss_d 0.694 (0.694)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.04 (  0.04)
Test: [  10/  26]	Loss 0.693 (0.693)	test_acc   0.51 (  0.50)	test_minacc   0.44 (  0.49)	test_majacc   0.52 (  0.50)	Loss_d 0.693 (0.693)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.44 (  0.49)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.02 (  0.04)
Test: [  20/  26]	Loss 0.692 (0.693)	test_acc   0.53 (  0.50)	test_minacc   0.57 (  0.49)	test_majacc   0.52 (  0.50)	Loss_d 0.692 (0.693)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.57 (  0.49)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.03 (  0.03)
Test: [  26/  26]	Loss 0.693 (0.693)	test_acc   0.46 (  0.50)	test_minacc   0.59 (  0.50)	test_majacc   0.44 (  0.50)	Loss_d 0.693 (0.693)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.59 (  0.50)	test_majacc_d   0.44 (  0.50)	test_corr_d   0.08 (  0.04)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.53it/s]
Test: [  0/  1]	Loss 0.694 (0.694)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.51 (  0.51)	Loss_d 0.694 (0.694)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.02 (  0.02)
Test: [  1/  1]	Loss 0.694 (0.694)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.51 (  0.51)	Loss_d 0.694 (0.694)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.02 (  0.02)
Overall Timing[ 49/  1]	epoch_time 0.0441 (0.0424)	validation_time 0.0004 (0.0006)	train_time 0.0437 (0.0417)
record: (train_acc, test_acc) (0.6142000024914741, 0.6670000553131104)
last accs (train_acc, test_acc) (0.5007000082433224, 0.5)
done saving aggregate.csv to ./aggregate.csv
wandb: - 0.167 MB of 0.167 MB uploadedwandb: \ 0.167 MB of 0.167 MB uploadedwandb: | 0.167 MB of 0.167 MB uploadedThread SenderThread:
Traceback (most recent call last):
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/internal_util.py", line 48, in run
    self._run()
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/internal_util.py", line 99, in _run
    self._process(record)
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/internal.py", line 327, in _process
    self._sm.send(record)
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/sender.py", line 398, in send
    send_handler(record)
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/sender.py", line 420, in send_request
    send_handler(record)
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/sender.py", line 654, in send_request_defer
    self._flush_job()
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/sender.py", line 1706, in _flush_job
    artifact = self._job_builder.build(api=self._api)
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/job_builder.py", line 552, in build
    artifact.add_file(
  File "/home/zd16/scratch/mypython3/wandb/sdk/artifacts/artifact.py", line 1196, in add_file
    return self._add_local_file(
  File "/home/zd16/scratch/mypython3/wandb/sdk/artifacts/artifact.py", line 1459, in _add_local_file
    with tempfile.NamedTemporaryFile(dir=get_staging_dir(), delete=False) as f:
  File "/usr/local/python/3.9.16/lib/python3.9/tempfile.py", line 545, in NamedTemporaryFile
    (fd, name) = _mkstemp_inner(dir, prefix, suffix, flags, output_type)
  File "/usr/local/python/3.9.16/lib/python3.9/tempfile.py", line 255, in _mkstemp_inner
    fd = _os.open(file, flags, 0o600)
OSError: [Errno 122] Disk quota exceeded: '/home/zd16/.local/share/wandb/artifacts/staging/tmpjt0md_dq'
wandb: ERROR Internal wandb error: file data was not synced
wandb: Currently logged in as: janezdu (janezdu-uiuc). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.17.9 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.7
wandb: Run data is saved locally in /scratch/users/zd16/sparseIRM-resnet-ver/wandb/run-20240907_210521-ltl3hqz2
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run name_random
wandb: ⭐️ View project at https://wandb.ai/janezdu-uiuc/irm
wandb: 🚀 View run at https://wandb.ai/janezdu-uiuc/irm/runs/ltl3hqz2
=> Reading YAML config from configs/smallscale/resnet18/resnet18-usc-unsigned.yaml
Namespace(data='dataset/', optimizer='adam', weight_opt='adam', set='mnistcifar', arch='ResNet18', config='configs/smallscale/resnet18/resnet18-usc-unsigned.yaml', log_dir=None, workers=4, epochs=50, start_epoch=None, batch_size=390, lr=0.006, warmup_length=0, momentum=0.9, weight_decay=0.0, print_freq=10, num_classes=1, resume='', resume_train_weights='', evaluate=False, pretrained=None, pretrained_distill=None, alpha_distill=0.95, T_distill=2, seed=0, multigpu=[0], lr_policy='cosine_lr', lr_adjust=30, lr_gamma=0.1, name='baseline', save_every=-1, prune_rate=1.0, param_prune_rate=0.0, pr_start=1.0, low_data=1, width_mult=1.0, nesterov=False, threetimes=False, random_subnet=False, one_batch=False, conv_type='DenseConv', freeze_weights=False, st=False, mode='fan_in', nonlinearity='relu', bn_type='LearnedBatchNorm', init='kaiming_normal', no_bn_decay=False, scale_fan=False, first_layer_dense=False, last_layer_dense=True, approx=False, zero=False, flip=False, bs=False, gumbel_sample=False, multiply_prob=False, no_multiply=False, multiply_cont=False, multiply_prob_bs=False, indiv=False, label_smoothing=None, first_layer_type=None, trainer='default', score_init_constant=1.0, K=1, update_freq=20, D=0.01, T=1, TA=True, TA2=False, TA_grow=False, center=False, straight_through=False, PLA_factor=0.1, PLA_patience=10, gradient_loss_para=0, abs_loss_para=0, thres=0.9, runs_name='name_random', resume_compare_loss1='', resume_compare_loss2='', init_weights='', trained_mask='', weight_rescaling=False, constrain_by_layer=False, weight_rescaling_data=False, use_running_stats=False, not_clipping=False, rescaling_para=False, lasso_para=0, dont_freeze_weights=False, iterative=True, prob_by_weight=False, rescale_at_fix_subnet=False, train_weights_at_the_same_time=False, sample_from_training_set=False, load_true_para=False, distill=False, finetune=False, stablize=False, prev_best=0, weight_opt_lr=0.0006, n=500, ts=0.28, te=0.6, d=20000, s=80, c=0.75, init_prob=False, thres_before=0.001, wide_ratio=0.001, noise=1, cal_p_q=False, just_finetune=False, snip=False, envs_num=2, l2_regularizer_weight=0.001, data_num=50000, env_type='linear', irm_type='irmv1', hidden_dim=390, penalty_anneal_iters=200, penalty_weight=10000.0, grayscale_model=0, weight_lr_schedule=False, fix_subnet=False, freeze_weight=False, step='ours', prior_sd_coef=0, dim_inv=2, variance_gamma=1.0, dim_spu=10, image_scale=32, cons_ratio='0.999_0.7_0.1', noise_ratio=0.2, step_gamma=0.1, step_round=3, inner_steps=1, use_pgd=True, z=15.0, pgd_anneal_iters=600, pgd_skip_steps=5, fraction_z=0.99)
=> Creating model 'ResNet18'
Here!!!!!!!!
==> Conv Type: DenseConv
==> BN Type: LearnedBatchNorm
<class 'torch.nn.modules.conv.Conv2d'>
<class 'torch.nn.modules.batchnorm.BatchNorm2d'>
==> Building first layer with <class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): Linear(in_features=512, out_features=1, bias=True)
)
=> Parallelizing on [0] gpus
<DEBUG> gradient to module.conv1.weight
<DEBUG> gradient to module.bn1.weight
<DEBUG> gradient to module.bn1.bias
<DEBUG> gradient to module.layer1.0.conv1.weight
<DEBUG> gradient to module.layer1.0.bn1.weight
<DEBUG> gradient to module.layer1.0.bn1.bias
<DEBUG> gradient to module.layer1.0.conv2.weight
<DEBUG> gradient to module.layer1.0.bn2.weight
<DEBUG> gradient to module.layer1.0.bn2.bias
<DEBUG> gradient to module.layer1.1.conv1.weight
<DEBUG> gradient to module.layer1.1.bn1.weight
<DEBUG> gradient to module.layer1.1.bn1.bias
<DEBUG> gradient to module.layer1.1.conv2.weight
<DEBUG> gradient to module.layer1.1.bn2.weight
<DEBUG> gradient to module.layer1.1.bn2.bias
<DEBUG> gradient to module.layer2.0.conv1.weight
<DEBUG> gradient to module.layer2.0.bn1.weight
<DEBUG> gradient to module.layer2.0.bn1.bias
<DEBUG> gradient to module.layer2.0.conv2.weight
<DEBUG> gradient to module.layer2.0.bn2.weight
<DEBUG> gradient to module.layer2.0.bn2.bias
<DEBUG> gradient to module.layer2.0.downsample.0.weight
<DEBUG> gradient to module.layer2.0.downsample.1.weight
<DEBUG> gradient to module.layer2.0.downsample.1.bias
<DEBUG> gradient to module.layer2.1.conv1.weight
<DEBUG> gradient to module.layer2.1.bn1.weight
<DEBUG> gradient to module.layer2.1.bn1.bias
<DEBUG> gradient to module.layer2.1.conv2.weight
<DEBUG> gradient to module.layer2.1.bn2.weight
<DEBUG> gradient to module.layer2.1.bn2.bias
<DEBUG> gradient to module.layer3.0.conv1.weight
<DEBUG> gradient to module.layer3.0.bn1.weight
<DEBUG> gradient to module.layer3.0.bn1.bias
<DEBUG> gradient to module.layer3.0.conv2.weight
<DEBUG> gradient to module.layer3.0.bn2.weight
<DEBUG> gradient to module.layer3.0.bn2.bias
<DEBUG> gradient to module.layer3.0.downsample.0.weight
<DEBUG> gradient to module.layer3.0.downsample.1.weight
<DEBUG> gradient to module.layer3.0.downsample.1.bias
<DEBUG> gradient to module.layer3.1.conv1.weight
<DEBUG> gradient to module.layer3.1.bn1.weight
<DEBUG> gradient to module.layer3.1.bn1.bias
<DEBUG> gradient to module.layer3.1.conv2.weight
<DEBUG> gradient to module.layer3.1.bn2.weight
<DEBUG> gradient to module.layer3.1.bn2.bias
<DEBUG> gradient to module.layer4.0.conv1.weight
<DEBUG> gradient to module.layer4.0.bn1.weight
<DEBUG> gradient to module.layer4.0.bn1.bias
<DEBUG> gradient to module.layer4.0.conv2.weight
<DEBUG> gradient to module.layer4.0.bn2.weight
<DEBUG> gradient to module.layer4.0.bn2.bias
<DEBUG> gradient to module.layer4.0.downsample.0.weight
<DEBUG> gradient to module.layer4.0.downsample.1.weight
<DEBUG> gradient to module.layer4.0.downsample.1.bias
<DEBUG> gradient to module.layer4.1.conv1.weight
<DEBUG> gradient to module.layer4.1.bn1.weight
<DEBUG> gradient to module.layer4.1.bn1.bias
<DEBUG> gradient to module.layer4.1.conv2.weight
<DEBUG> gradient to module.layer4.1.bn2.weight
<DEBUG> gradient to module.layer4.1.bn2.bias
<DEBUG> gradient to module.fc.weight
<DEBUG> gradient to module.fc.bias
Files already downloaded and verified
Files already downloaded and verified
Adding Noise to Label, len(Y)=12000, Label_noise=1195
Xmp (7877, 3, 32, 32) (6903, 3, 32, 32)
Xcp (5965, 3, 32, 32) (6035, 3, 32, 32)
env=0 2497 2497 3 3
xn 2500 xp 2500
env=1 1750 1750 750 750
xn 2500 xp 2500
env=2 50 50 450 450
xn 500 xp 500
=> Creating model 'EBD'
EBD(
  (embedings): Embedding(2, 1)
)
=> Parallelizing on [0] gpus
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:01<00:41,  1.67s/it] 19%|#9        | 5/26 [00:01<00:05,  3.69it/s] 35%|###4      | 9/26 [00:01<00:02,  7.30it/s] 50%|#####     | 13/26 [00:01<00:01, 11.27it/s] 65%|######5   | 17/26 [00:02<00:00, 15.05it/s] 81%|########  | 21/26 [00:02<00:00, 18.98it/s] 96%|#########6| 25/26 [00:02<00:00, 21.22it/s]100%|##########| 26/26 [00:02<00:00,  9.44it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 0 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 2 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 3 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 4 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 5 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 6 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 7 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 8 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 9 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 10 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 11 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 12 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 13 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 14 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 15 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 16 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 17 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 18 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 19 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 20 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 21 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 22 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 23 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 24 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 25 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [0][  26/  26]	Loss 0.414 (0.561)	train_nll   0.41 (  0.56)	train_penalty   0.07 (  0.23)	weight_norm  20.85 ( 18.08)	train_acc   0.85 (  0.78)	train_minacc   0.00 (  0.10)	train_majacc   1.00 (  0.91)	train_corr   0.00 (  0.00)	l1 7.4194 (7.7323)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.61it/s] 23%|##3       | 6/26 [00:00<00:00, 32.35it/s]                                               23%|##3       | 6/26 [00:00<00:00, 32.35it/s] 42%|####2     | 11/26 [00:00<00:00, 37.75it/s] 62%|######1   | 16/26 [00:00<00:00, 40.98it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.98it/s] 81%|########  | 21/26 [00:00<00:00, 39.00it/s]100%|##########| 26/26 [00:00<00:00, 41.32it/s]100%|##########| 26/26 [00:00<00:00, 35.10it/s]
Test: [   0/  26]	Loss 0.434 (0.434)	test_acc   0.84 (  0.84)	test_minacc   0.00 (  0.00)	test_majacc   0.99 (  0.99)	Loss_d 0.434 (0.434)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.00 (  0.00)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.98 (  0.98)
Test: [  10/  26]	Loss 0.409 (0.414)	test_acc   0.84 (  0.84)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  0.99)	Loss_d 0.409 (0.414)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.98 (  0.98)
Test: [  20/  26]	Loss 0.427 (0.412)	test_acc   0.84 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 0.427 (0.412)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.98 (  0.98)
Test: [  26/  26]	Loss 0.409 (0.414)	test_acc   0.85 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  0.99)	Loss_d 0.409 (0.414)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.99 (  0.98)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00,  2.53it/s]100%|##########| 1/1 [00:00<00:00,  2.53it/s]
Test: [  0/  1]	Loss 1.662 (1.662)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.662 (1.662)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
Test: [  1/  1]	Loss 1.662 (1.662)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.662 (1.662)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/173/checkpoints/model_best.pth
Overall Timing[  0/  1]	epoch_time 0.0765 (0.0765)	validation_time 0.0067 (0.0067)	train_time 0.0664 (0.0664)
record: (train_acc, test_acc) (0.8463000289797783, 0.1080000028014183)
last accs (train_acc, test_acc) (0.8463000289797783, 0.1080000028014183)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.64it/s]  8%|7         | 2/26 [00:00<00:05,  4.52it/s] 23%|##3       | 6/26 [00:00<00:01, 13.79it/s] 38%|###8      | 10/26 [00:00<00:00, 19.93it/s] 54%|#####3    | 14/26 [00:00<00:00, 24.49it/s] 69%|######9   | 18/26 [00:00<00:00, 27.94it/s] 85%|########4 | 22/26 [00:01<00:00, 30.35it/s]100%|##########| 26/26 [00:01<00:00, 32.29it/s]100%|##########| 26/26 [00:01<00:00, 21.75it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 26 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 27 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 28 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 29 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 30 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 31 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 32 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 33 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 34 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 35 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 36 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 37 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 38 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 39 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 40 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 41 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 42 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 43 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 44 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 45 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 46 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 47 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 48 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 49 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 50 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 51 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [1][  26/  26]	Loss 0.412 (0.415)	train_nll   0.41 (  0.41)	train_penalty   0.06 (  0.06)	weight_norm  21.97 ( 21.63)	train_acc   0.85 (  0.85)	train_minacc   0.00 (  0.01)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 7.7085 (7.6463)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.62it/s] 23%|##3       | 6/26 [00:00<00:00, 26.97it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.97it/s] 42%|####2     | 11/26 [00:00<00:00, 33.97it/s] 62%|######1   | 16/26 [00:00<00:00, 39.00it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.00it/s] 81%|########  | 21/26 [00:00<00:00, 37.85it/s]100%|##########| 26/26 [00:00<00:00, 40.72it/s]100%|##########| 26/26 [00:00<00:00, 33.02it/s]
Test: [   0/  26]	Loss 0.428 (0.428)	test_acc   0.84 (  0.84)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.428 (0.428)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  10/  26]	Loss 0.403 (0.403)	test_acc   0.84 (  0.85)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.403 (0.403)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  20/  26]	Loss 0.412 (0.399)	test_acc   0.84 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   0.99 (  1.00)	Loss_d 0.412 (0.399)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  26/  26]	Loss 0.403 (0.403)	test_acc   0.85 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.403 (0.403)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.99 (  0.98)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 53.96it/s]
Test: [  0/  1]	Loss 1.668 (1.668)	test_acc   0.10 (  0.10)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 1.668 (1.668)	test_acc_d   0.10 (  0.10)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
Test: [  1/  1]	Loss 1.668 (1.668)	test_acc   0.10 (  0.10)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 1.668 (1.668)	test_acc_d   0.10 (  0.10)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
Overall Timing[  1/  1]	epoch_time 0.0446 (0.0606)	validation_time 0.0007 (0.0037)	train_time 0.0439 (0.0551)
record: (train_acc, test_acc) (0.8463000289797783, 0.1080000028014183)
last accs (train_acc, test_acc) (0.8487000241875648, 0.10200000554323196)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.60it/s] 19%|#9        | 5/26 [00:00<00:01, 19.79it/s] 35%|###4      | 9/26 [00:00<00:00, 26.11it/s] 50%|#####     | 13/26 [00:00<00:00, 28.72it/s] 65%|######5   | 17/26 [00:00<00:00, 30.10it/s] 81%|########  | 21/26 [00:00<00:00, 30.74it/s] 96%|#########6| 25/26 [00:00<00:00, 31.86it/s]100%|##########| 26/26 [00:00<00:00, 26.66it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 52 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 53 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 54 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 55 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 56 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 57 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 58 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 59 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 60 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 61 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 62 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 63 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 64 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 65 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 66 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 67 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 68 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 69 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 70 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 71 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 72 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 73 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 74 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 75 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 76 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 77 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [2][  26/  26]	Loss 0.384 (0.403)	train_nll   0.38 (  0.40)	train_penalty   0.06 (  0.05)	weight_norm  22.09 ( 22.05)	train_acc   0.85 (  0.85)	train_minacc   0.00 (  0.02)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 7.7663 (7.7889)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.43it/s] 23%|##3       | 6/26 [00:00<00:00, 29.22it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.22it/s] 42%|####2     | 11/26 [00:00<00:00, 37.93it/s] 62%|######1   | 16/26 [00:00<00:00, 41.18it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.18it/s] 81%|########  | 21/26 [00:00<00:00, 40.06it/s]100%|##########| 26/26 [00:00<00:00, 42.99it/s]100%|##########| 26/26 [00:00<00:00, 35.26it/s]
Test: [   0/  26]	Loss 0.415 (0.415)	test_acc   0.84 (  0.84)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.415 (0.415)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  10/  26]	Loss 0.395 (0.389)	test_acc   0.85 (  0.85)	test_minacc   0.02 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.395 (0.389)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.02 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  20/  26]	Loss 0.398 (0.386)	test_acc   0.84 (  0.85)	test_minacc   0.02 (  0.01)	test_majacc   0.99 (  1.00)	Loss_d 0.398 (0.386)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.02 (  0.01)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.97 (  0.98)
Test: [  26/  26]	Loss 0.377 (0.389)	test_acc   0.85 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.377 (0.389)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.70it/s]
Test: [  0/  1]	Loss 1.758 (1.758)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.758 (1.758)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
Test: [  1/  1]	Loss 1.758 (1.758)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.758 (1.758)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
Overall Timing[  2/  1]	epoch_time 0.0421 (0.0544)	validation_time 0.0003 (0.0026)	train_time 0.0418 (0.0507)
record: (train_acc, test_acc) (0.8463000289797783, 0.1080000028014183)
last accs (train_acc, test_acc) (0.8492000253200531, 0.10500000417232513)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.69it/s] 19%|#9        | 5/26 [00:00<00:01, 19.20it/s] 35%|###4      | 9/26 [00:00<00:00, 25.31it/s] 50%|#####     | 13/26 [00:00<00:00, 28.54it/s] 65%|######5   | 17/26 [00:00<00:00, 30.56it/s] 81%|########  | 21/26 [00:00<00:00, 31.98it/s] 96%|#########6| 25/26 [00:00<00:00, 32.52it/s]100%|##########| 26/26 [00:00<00:00, 26.77it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 78 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 79 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 80 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 81 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 82 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 83 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 84 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 85 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 86 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 87 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 88 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 89 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 90 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 91 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 92 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 93 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 94 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 95 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 96 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 97 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 98 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 99 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 100 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 101 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 102 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 103 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [3][  26/  26]	Loss 0.386 (0.386)	train_nll   0.39 (  0.39)	train_penalty   0.05 (  0.05)	weight_norm  22.12 ( 22.11)	train_acc   0.86 (  0.85)	train_minacc   0.03 (  0.04)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 7.7366 (7.7814)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.60it/s] 23%|##3       | 6/26 [00:00<00:00, 29.94it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.94it/s] 42%|####2     | 11/26 [00:00<00:00, 37.17it/s] 62%|######1   | 16/26 [00:00<00:00, 41.07it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.07it/s] 81%|########  | 21/26 [00:00<00:00, 39.11it/s]100%|##########| 26/26 [00:00<00:00, 41.32it/s]100%|##########| 26/26 [00:00<00:00, 34.76it/s]
Test: [   0/  26]	Loss 0.381 (0.381)	test_acc   0.84 (  0.84)	test_minacc   0.05 (  0.05)	test_majacc   0.99 (  0.99)	Loss_d 0.381 (0.381)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.05 (  0.05)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.95 (  0.95)
Test: [  10/  26]	Loss 0.377 (0.369)	test_acc   0.84 (  0.85)	test_minacc   0.02 (  0.03)	test_majacc   1.00 (  1.00)	Loss_d 0.377 (0.369)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.02 (  0.03)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.96 (  0.96)
Test: [  20/  26]	Loss 0.363 (0.362)	test_acc   0.85 (  0.85)	test_minacc   0.03 (  0.03)	test_majacc   1.00 (  1.00)	Loss_d 0.363 (0.362)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.03 (  0.03)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.96 (  0.96)
Test: [  26/  26]	Loss 0.367 (0.365)	test_acc   0.85 (  0.85)	test_minacc   0.03 (  0.03)	test_majacc   1.00 (  1.00)	Loss_d 0.367 (0.365)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.03 (  0.03)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.96 (  0.96)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.11it/s]
Test: [  0/  1]	Loss 1.611 (1.611)	test_acc   0.12 (  0.12)	test_minacc   0.03 (  0.03)	test_majacc   0.99 (  0.99)	Loss_d 1.611 (1.611)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.03 (  0.03)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.91 (  0.91)
Test: [  1/  1]	Loss 1.611 (1.611)	test_acc   0.12 (  0.12)	test_minacc   0.03 (  0.03)	test_majacc   0.99 (  0.99)	Loss_d 1.611 (1.611)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.03 (  0.03)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.91 (  0.91)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/173/checkpoints/model_best.pth
Overall Timing[  3/  1]	epoch_time 0.0431 (0.0516)	validation_time 0.0004 (0.0020)	train_time 0.0427 (0.0487)
record: (train_acc, test_acc) (0.8518000274896622, 0.12400000542402267)
last accs (train_acc, test_acc) (0.8518000274896622, 0.12400000542402267)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.51it/s] 23%|##3       | 6/26 [00:00<00:00, 26.01it/s] 38%|###8      | 10/26 [00:00<00:00, 29.51it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.05it/s] 69%|######9   | 18/26 [00:00<00:00, 31.75it/s] 85%|########4 | 22/26 [00:00<00:00, 32.76it/s]100%|##########| 26/26 [00:00<00:00, 33.28it/s]100%|##########| 26/26 [00:00<00:00, 29.10it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 104 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 105 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 106 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 107 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 108 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 109 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 110 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 111 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 112 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 113 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 114 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 115 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 116 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 117 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 118 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 119 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 120 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 121 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 122 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 123 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 124 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 125 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 126 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 127 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 128 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 129 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [4][  26/  26]	Loss 0.335 (0.366)	train_nll   0.34 (  0.37)	train_penalty   0.04 (  0.04)	weight_norm  22.17 ( 22.15)	train_acc   0.86 (  0.85)	train_minacc   0.14 (  0.09)	train_majacc   0.99 (  0.98)	train_corr   0.00 (  0.00)	l1 7.9805 (7.7903)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.78it/s] 23%|##3       | 6/26 [00:00<00:00, 25.50it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.50it/s] 42%|####2     | 11/26 [00:00<00:00, 33.66it/s] 58%|#####7    | 15/26 [00:00<00:00, 35.43it/s] 77%|#######6  | 20/26 [00:00<00:00, 39.61it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 39.61it/s] 96%|#########6| 25/26 [00:00<00:00, 39.19it/s]100%|##########| 26/26 [00:00<00:00, 32.41it/s]
Test: [   0/  26]	Loss 0.371 (0.371)	test_acc   0.86 (  0.86)	test_minacc   0.18 (  0.18)	test_majacc   0.99 (  0.99)	Loss_d 0.371 (0.371)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.18 (  0.18)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.92 (  0.92)
Test: [  10/  26]	Loss 0.356 (0.359)	test_acc   0.86 (  0.86)	test_minacc   0.10 (  0.12)	test_majacc   1.00 (  0.99)	Loss_d 0.356 (0.359)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.10 (  0.12)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.94 (  0.93)
Test: [  20/  26]	Loss 0.345 (0.351)	test_acc   0.85 (  0.86)	test_minacc   0.12 (  0.12)	test_majacc   0.98 (  0.99)	Loss_d 0.345 (0.351)	test_acc_d   0.85 (  0.86)	test_minacc_d   0.12 (  0.12)	test_majacc_d   0.98 (  0.99)	test_corr_d   0.92 (  0.93)
Test: [  26/  26]	Loss 0.320 (0.353)	test_acc   0.87 (  0.85)	test_minacc   0.14 (  0.11)	test_majacc   1.00 (  0.98)	Loss_d 0.320 (0.353)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.14 (  0.11)	test_majacc_d   1.00 (  0.98)	test_corr_d   0.93 (  0.93)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.56it/s]
Test: [  0/  1]	Loss 1.767 (1.767)	test_acc   0.20 (  0.20)	test_minacc   0.11 (  0.11)	test_majacc   0.99 (  0.99)	Loss_d 1.767 (1.767)	test_acc_d   0.20 (  0.20)	test_minacc_d   0.11 (  0.11)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.84 (  0.84)
Test: [  1/  1]	Loss 1.767 (1.767)	test_acc   0.20 (  0.20)	test_minacc   0.11 (  0.11)	test_majacc   0.99 (  0.99)	Loss_d 1.767 (1.767)	test_acc_d   0.20 (  0.20)	test_minacc_d   0.11 (  0.11)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.84 (  0.84)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/173/checkpoints/model_best.pth
Overall Timing[  4/  1]	epoch_time 0.0422 (0.0497)	validation_time 0.0007 (0.0018)	train_time 0.0415 (0.0472)
record: (train_acc, test_acc) (0.8535000255703926, 0.19600000977516174)
last accs (train_acc, test_acc) (0.8535000255703926, 0.19600000977516174)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.57it/s] 19%|#9        | 5/26 [00:00<00:01, 17.11it/s] 35%|###4      | 9/26 [00:00<00:00, 23.55it/s] 50%|#####     | 13/26 [00:00<00:00, 27.50it/s] 65%|######5   | 17/26 [00:00<00:00, 29.75it/s] 81%|########  | 21/26 [00:00<00:00, 31.52it/s] 96%|#########6| 25/26 [00:00<00:00, 32.38it/s]100%|##########| 26/26 [00:01<00:00, 25.91it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 130 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 131 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 132 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 133 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 134 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 135 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 136 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 137 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 138 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 139 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 140 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 141 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 142 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 143 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 144 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 145 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 146 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 147 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 148 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 149 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 150 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 151 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 152 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 153 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 154 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 155 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [5][  26/  26]	Loss 0.311 (0.353)	train_nll   0.31 (  0.35)	train_penalty   0.02 (  0.03)	weight_norm  22.23 ( 22.20)	train_acc   0.88 (  0.85)	train_minacc   0.30 (  0.15)	train_majacc   0.98 (  0.98)	train_corr   0.00 (  0.00)	l1 8.1275 (7.8935)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 26.11it/s] 31%|###       | 8/26 [00:00<00:00, 37.25it/s]                                               31%|###       | 8/26 [00:00<00:00, 37.25it/s] 50%|#####     | 13/26 [00:00<00:00, 40.26it/s] 69%|######9   | 18/26 [00:00<00:00, 39.87it/s]                                                69%|######9   | 18/26 [00:00<00:00, 39.87it/s] 88%|########8 | 23/26 [00:00<00:00, 41.75it/s]100%|##########| 26/26 [00:00<00:00, 38.06it/s]
Test: [   0/  26]	Loss 0.337 (0.337)	test_acc   0.86 (  0.86)	test_minacc   0.34 (  0.34)	test_majacc   0.96 (  0.96)	Loss_d 0.337 (0.337)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.87 (  0.87)
Test: [  10/  26]	Loss 0.333 (0.341)	test_acc   0.85 (  0.86)	test_minacc   0.23 (  0.26)	test_majacc   0.96 (  0.96)	Loss_d 0.333 (0.341)	test_acc_d   0.85 (  0.86)	test_minacc_d   0.23 (  0.26)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.90 (  0.89)
Test: [  20/  26]	Loss 0.318 (0.333)	test_acc   0.87 (  0.86)	test_minacc   0.28 (  0.28)	test_majacc   0.97 (  0.96)	Loss_d 0.318 (0.333)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.89 (  0.89)
Test: [  26/  26]	Loss 0.290 (0.334)	test_acc   0.89 (  0.86)	test_minacc   0.35 (  0.28)	test_majacc   0.98 (  0.96)	Loss_d 0.290 (0.334)	test_acc_d   0.89 (  0.86)	test_minacc_d   0.35 (  0.28)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.89 (  0.89)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.15it/s]
Test: [  0/  1]	Loss 1.639 (1.639)	test_acc   0.31 (  0.31)	test_minacc   0.24 (  0.24)	test_majacc   0.93 (  0.93)	Loss_d 1.639 (1.639)	test_acc_d   0.31 (  0.31)	test_minacc_d   0.24 (  0.24)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.68 (  0.68)
Test: [  1/  1]	Loss 1.639 (1.639)	test_acc   0.31 (  0.31)	test_minacc   0.24 (  0.24)	test_majacc   0.93 (  0.93)	Loss_d 1.639 (1.639)	test_acc_d   0.31 (  0.31)	test_minacc_d   0.24 (  0.24)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.68 (  0.68)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/173/checkpoints/model_best.pth
Overall Timing[  5/  1]	epoch_time 0.0412 (0.0483)	validation_time 0.0004 (0.0015)	train_time 0.0408 (0.0462)
record: (train_acc, test_acc) (0.8613000273108482, 0.3060000240802765)
last accs (train_acc, test_acc) (0.8613000273108482, 0.3060000240802765)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.61it/s] 19%|#9        | 5/26 [00:00<00:01, 15.04it/s] 35%|###4      | 9/26 [00:00<00:00, 21.61it/s] 50%|#####     | 13/26 [00:00<00:00, 25.87it/s] 65%|######5   | 17/26 [00:00<00:00, 28.86it/s] 81%|########  | 21/26 [00:00<00:00, 31.09it/s] 96%|#########6| 25/26 [00:00<00:00, 32.51it/s]100%|##########| 26/26 [00:01<00:00, 24.80it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 156 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 157 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 158 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 159 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 160 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 161 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 162 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 163 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 164 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 165 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 166 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 167 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 168 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 169 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 170 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 171 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 172 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 173 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 174 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 175 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 176 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 177 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 178 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 179 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 180 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 181 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [6][  26/  26]	Loss 0.316 (0.335)	train_nll   0.32 (  0.34)	train_penalty   0.03 (  0.03)	weight_norm  22.29 ( 22.26)	train_acc   0.88 (  0.86)	train_minacc   0.22 (  0.22)	train_majacc   0.99 (  0.97)	train_corr   0.00 (  0.00)	l1 8.1070 (8.0205)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.79it/s] 27%|##6       | 7/26 [00:00<00:00, 31.77it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.77it/s] 46%|####6     | 12/26 [00:00<00:00, 39.07it/s] 65%|######5   | 17/26 [00:00<00:00, 41.52it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.52it/s] 85%|########4 | 22/26 [00:00<00:00, 39.61it/s]100%|##########| 26/26 [00:00<00:00, 35.82it/s]
Test: [   0/  26]	Loss 0.313 (0.313)	test_acc   0.86 (  0.86)	test_minacc   0.26 (  0.26)	test_majacc   0.98 (  0.98)	Loss_d 0.313 (0.313)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.26 (  0.26)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.89 (  0.89)
Test: [  10/  26]	Loss 0.329 (0.329)	test_acc   0.86 (  0.86)	test_minacc   0.26 (  0.25)	test_majacc   0.98 (  0.97)	Loss_d 0.329 (0.329)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.26 (  0.25)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.89 (  0.90)
Test: [  20/  26]	Loss 0.291 (0.321)	test_acc   0.87 (  0.87)	test_minacc   0.28 (  0.27)	test_majacc   0.98 (  0.97)	Loss_d 0.291 (0.321)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.28 (  0.27)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.90 (  0.90)
Test: [  26/  26]	Loss 0.294 (0.323)	test_acc   0.88 (  0.87)	test_minacc   0.32 (  0.26)	test_majacc   0.98 (  0.97)	Loss_d 0.294 (0.323)	test_acc_d   0.88 (  0.87)	test_minacc_d   0.32 (  0.26)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.90 (  0.90)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.38it/s]
Test: [  0/  1]	Loss 1.621 (1.621)	test_acc   0.26 (  0.26)	test_minacc   0.18 (  0.18)	test_majacc   0.96 (  0.96)	Loss_d 1.621 (1.621)	test_acc_d   0.26 (  0.26)	test_minacc_d   0.18 (  0.18)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.74 (  0.74)
Test: [  1/  1]	Loss 1.621 (1.621)	test_acc   0.26 (  0.26)	test_minacc   0.18 (  0.18)	test_majacc   0.96 (  0.96)	Loss_d 1.621 (1.621)	test_acc_d   0.26 (  0.26)	test_minacc_d   0.18 (  0.18)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.74 (  0.74)
Overall Timing[  6/  1]	epoch_time 0.0406 (0.0472)	validation_time 0.0004 (0.0014)	train_time 0.0401 (0.0453)
record: (train_acc, test_acc) (0.8613000273108482, 0.3060000240802765)
last accs (train_acc, test_acc) (0.8652000222206115, 0.2600000202655792)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.11it/s] 19%|#9        | 5/26 [00:00<00:01, 19.63it/s] 35%|###4      | 9/26 [00:00<00:00, 26.08it/s] 50%|#####     | 13/26 [00:00<00:00, 29.41it/s] 65%|######5   | 17/26 [00:00<00:00, 30.98it/s] 81%|########  | 21/26 [00:00<00:00, 32.47it/s] 96%|#########6| 25/26 [00:00<00:00, 33.34it/s]100%|##########| 26/26 [00:00<00:00, 28.18it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 182 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 183 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 184 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 185 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 186 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 187 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 188 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 189 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 190 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 191 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 192 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 193 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 194 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 195 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 196 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 197 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 198 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 199 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 200 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 201 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 202 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 203 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 204 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 205 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 206 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 207 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [7][  26/  26]	Loss 0.004 (0.228)	train_nll   0.54 (  0.35)	train_penalty   0.00 (  0.02)	weight_norm  22.38 ( 22.33)	train_acc   0.72 (  0.84)	train_minacc   0.78 (  0.37)	train_majacc   0.71 (  0.93)	train_corr   0.00 (  0.00)	l1 7.7386 (7.9893)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.11it/s] 23%|##3       | 6/26 [00:00<00:00, 32.13it/s]                                               23%|##3       | 6/26 [00:00<00:00, 32.13it/s] 42%|####2     | 11/26 [00:00<00:00, 37.31it/s] 62%|######1   | 16/26 [00:00<00:00, 41.34it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.34it/s] 81%|########  | 21/26 [00:00<00:00, 39.82it/s]100%|##########| 26/26 [00:00<00:00, 42.19it/s]100%|##########| 26/26 [00:00<00:00, 35.64it/s]
Test: [   0/  26]	Loss 0.561 (0.561)	test_acc   0.71 (  0.71)	test_minacc   0.84 (  0.84)	test_majacc   0.68 (  0.68)	Loss_d 0.561 (0.561)	test_acc_d   0.71 (  0.71)	test_minacc_d   0.84 (  0.84)	test_majacc_d   0.68 (  0.68)	test_corr_d   0.25 (  0.25)
Test: [  10/  26]	Loss 0.500 (0.545)	test_acc   0.77 (  0.72)	test_minacc   0.89 (  0.83)	test_majacc   0.75 (  0.70)	Loss_d 0.500 (0.545)	test_acc_d   0.77 (  0.72)	test_minacc_d   0.89 (  0.83)	test_majacc_d   0.75 (  0.70)	test_corr_d   0.36 (  0.31)
Test: [  20/  26]	Loss 0.539 (0.545)	test_acc   0.74 (  0.72)	test_minacc   0.87 (  0.84)	test_majacc   0.71 (  0.70)	Loss_d 0.539 (0.545)	test_acc_d   0.74 (  0.72)	test_minacc_d   0.87 (  0.84)	test_majacc_d   0.71 (  0.70)	test_corr_d   0.29 (  0.31)
Test: [  26/  26]	Loss 0.533 (0.546)	test_acc   0.73 (  0.72)	test_minacc   0.78 (  0.84)	test_majacc   0.72 (  0.70)	Loss_d 0.533 (0.546)	test_acc_d   0.73 (  0.72)	test_minacc_d   0.78 (  0.84)	test_majacc_d   0.72 (  0.70)	test_corr_d   0.32 (  0.30)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.76it/s]
Test: [  0/  1]	Loss 0.522 (0.522)	test_acc   0.77 (  0.77)	test_minacc   0.80 (  0.80)	test_majacc   0.58 (  0.58)	Loss_d 0.522 (0.522)	test_acc_d   0.77 (  0.77)	test_minacc_d   0.80 (  0.80)	test_majacc_d   0.58 (  0.58)	test_corr_d  -0.54 ( -0.54)
Test: [  1/  1]	Loss 0.522 (0.522)	test_acc   0.77 (  0.77)	test_minacc   0.80 (  0.80)	test_majacc   0.58 (  0.58)	Loss_d 0.522 (0.522)	test_acc_d   0.77 (  0.77)	test_minacc_d   0.80 (  0.80)	test_majacc_d   0.58 (  0.58)	test_corr_d  -0.54 ( -0.54)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/173/checkpoints/model_best.pth
Overall Timing[  7/  1]	epoch_time 0.0399 (0.0463)	validation_time 0.0003 (0.0012)	train_time 0.0396 (0.0446)
record: (train_acc, test_acc) (0.7227000323534012, 0.7740000486373901)
last accs (train_acc, test_acc) (0.7227000323534012, 0.7740000486373901)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.33it/s] 23%|##3       | 6/26 [00:00<00:00, 28.79it/s] 38%|###8      | 10/26 [00:00<00:00, 31.57it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.57it/s] 69%|######9   | 18/26 [00:00<00:00, 33.59it/s] 85%|########4 | 22/26 [00:00<00:00, 34.35it/s]100%|##########| 26/26 [00:00<00:00, 35.08it/s]100%|##########| 26/26 [00:00<00:00, 30.60it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 208 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 209 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 210 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 211 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 212 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 213 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 214 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 215 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 216 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 217 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 218 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 219 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 220 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 221 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 222 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 223 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 224 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 225 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 226 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 227 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 228 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 229 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 230 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 231 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 232 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 233 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [8][  26/  26]	Loss 0.001 (0.001)	train_nll   0.66 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  22.42 ( 22.41)	train_acc   0.64 (  0.64)	train_minacc   0.78 (  0.81)	train_majacc   0.62 (  0.61)	train_corr   0.00 (  0.00)	l1 6.8368 (7.1138)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.69it/s] 15%|#5        | 4/26 [00:00<00:01, 18.30it/s] 35%|###4      | 9/26 [00:00<00:00, 31.39it/s]                                               35%|###4      | 9/26 [00:00<00:00, 31.39it/s] 50%|#####     | 13/26 [00:00<00:00, 34.54it/s] 69%|######9   | 18/26 [00:00<00:00, 38.58it/s]                                                69%|######9   | 18/26 [00:00<00:00, 38.58it/s] 88%|########8 | 23/26 [00:00<00:00, 38.00it/s]100%|##########| 26/26 [00:00<00:00, 33.54it/s]
Test: [   0/  26]	Loss 0.710 (0.710)	test_acc   0.32 (  0.32)	test_minacc   0.94 (  0.94)	test_majacc   0.20 (  0.20)	Loss_d 0.710 (0.710)	test_acc_d   0.32 (  0.32)	test_minacc_d   0.94 (  0.94)	test_majacc_d   0.20 (  0.20)	test_corr_d  -0.31 ( -0.31)
Test: [  10/  26]	Loss 0.708 (0.709)	test_acc   0.36 (  0.36)	test_minacc   0.90 (  0.90)	test_majacc   0.26 (  0.26)	Loss_d 0.708 (0.709)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.90 (  0.90)	test_majacc_d   0.26 (  0.26)	test_corr_d  -0.29 ( -0.28)
Test: [  20/  26]	Loss 0.716 (0.712)	test_acc   0.33 (  0.35)	test_minacc   0.97 (  0.91)	test_majacc   0.21 (  0.25)	Loss_d 0.716 (0.712)	test_acc_d   0.33 (  0.35)	test_minacc_d   0.97 (  0.91)	test_majacc_d   0.21 (  0.25)	test_corr_d  -0.35 ( -0.29)
Test: [  26/  26]	Loss 0.690 (0.712)	test_acc   0.54 (  0.35)	test_minacc   0.89 (  0.91)	test_majacc   0.48 (  0.26)	Loss_d 0.690 (0.712)	test_acc_d   0.54 (  0.35)	test_minacc_d   0.89 (  0.91)	test_majacc_d   0.48 (  0.26)	test_corr_d  -0.13 ( -0.29)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.39it/s]
Test: [  0/  1]	Loss 0.614 (0.614)	test_acc   0.81 (  0.81)	test_minacc   0.89 (  0.89)	test_majacc   0.14 (  0.14)	Loss_d 0.614 (0.614)	test_acc_d   0.81 (  0.81)	test_minacc_d   0.89 (  0.89)	test_majacc_d   0.14 (  0.14)	test_corr_d  -0.74 ( -0.74)
Test: [  1/  1]	Loss 0.614 (0.614)	test_acc   0.81 (  0.81)	test_minacc   0.89 (  0.89)	test_majacc   0.14 (  0.14)	Loss_d 0.614 (0.614)	test_acc_d   0.81 (  0.81)	test_minacc_d   0.89 (  0.89)	test_majacc_d   0.14 (  0.14)	test_corr_d  -0.74 ( -0.74)
Overall Timing[  8/  1]	epoch_time 0.0415 (0.0458)	validation_time 0.0007 (0.0012)	train_time 0.0407 (0.0442)
record: (train_acc, test_acc) (0.7227000323534012, 0.7740000486373901)
last accs (train_acc, test_acc) (0.353700009316206, 0.812000036239624)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.43it/s] 19%|#9        | 5/26 [00:00<00:00, 21.68it/s] 35%|###4      | 9/26 [00:00<00:00, 27.07it/s] 50%|#####     | 13/26 [00:00<00:00, 29.77it/s] 65%|######5   | 17/26 [00:00<00:00, 31.70it/s] 81%|########  | 21/26 [00:00<00:00, 32.25it/s] 96%|#########6| 25/26 [00:00<00:00, 33.08it/s]100%|##########| 26/26 [00:00<00:00, 28.22it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 234 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 235 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 236 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 237 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 238 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 239 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 240 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 241 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 242 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 243 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 244 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 245 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 246 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 247 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 248 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 249 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 250 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 251 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 252 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 253 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 254 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 255 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 256 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 257 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 258 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 259 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [9][  26/  26]	Loss 0.001 (0.000)	train_nll   0.66 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm  22.43 ( 22.43)	train_acc   0.66 (  0.53)	train_minacc   0.57 (  0.63)	train_majacc   0.67 (  0.51)	train_corr   0.00 (  0.00)	l1 6.6895 (6.7416)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.05it/s] 27%|##6       | 7/26 [00:00<00:00, 33.80it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.80it/s] 46%|####6     | 12/26 [00:00<00:00, 39.19it/s] 65%|######5   | 17/26 [00:00<00:00, 42.00it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.00it/s] 85%|########4 | 22/26 [00:00<00:00, 39.98it/s]100%|##########| 26/26 [00:00<00:00, 37.48it/s]
Test: [   0/  26]	Loss 0.681 (0.681)	test_acc   0.42 (  0.42)	test_minacc   0.56 (  0.56)	test_majacc   0.39 (  0.39)	Loss_d 0.681 (0.681)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.39 (  0.39)	test_corr_d   0.07 (  0.07)
Test: [  10/  26]	Loss 0.689 (0.685)	test_acc   0.38 (  0.42)	test_minacc   0.52 (  0.57)	test_majacc   0.36 (  0.39)	Loss_d 0.689 (0.685)	test_acc_d   0.38 (  0.42)	test_minacc_d   0.52 (  0.57)	test_majacc_d   0.36 (  0.39)	test_corr_d   0.10 (  0.09)
Test: [  20/  26]	Loss 0.686 (0.688)	test_acc   0.43 (  0.41)	test_minacc   0.62 (  0.55)	test_majacc   0.39 (  0.39)	Loss_d 0.686 (0.688)	test_acc_d   0.43 (  0.41)	test_minacc_d   0.62 (  0.55)	test_majacc_d   0.39 (  0.39)	test_corr_d   0.06 (  0.09)
Test: [  26/  26]	Loss 0.674 (0.688)	test_acc   0.46 (  0.41)	test_minacc   0.70 (  0.56)	test_majacc   0.42 (  0.38)	Loss_d 0.674 (0.688)	test_acc_d   0.46 (  0.41)	test_minacc_d   0.70 (  0.56)	test_majacc_d   0.42 (  0.38)	test_corr_d   0.21 (  0.08)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.53it/s]
Test: [  0/  1]	Loss 0.692 (0.692)	test_acc   0.54 (  0.54)	test_minacc   0.57 (  0.57)	test_majacc   0.33 (  0.33)	Loss_d 0.692 (0.692)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.33 (  0.33)	test_corr_d  -0.16 ( -0.16)
Test: [  1/  1]	Loss 0.692 (0.692)	test_acc   0.54 (  0.54)	test_minacc   0.57 (  0.57)	test_majacc   0.33 (  0.33)	Loss_d 0.692 (0.692)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.33 (  0.33)	test_corr_d  -0.16 ( -0.16)
Overall Timing[  9/  1]	epoch_time 0.0392 (0.0451)	validation_time 0.0005 (0.0011)	train_time 0.0387 (0.0436)
record: (train_acc, test_acc) (0.7227000323534012, 0.7740000486373901)
last accs (train_acc, test_acc) (0.41040000548958777, 0.5440000295639038)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.87it/s] 15%|#5        | 4/26 [00:00<00:01, 18.25it/s] 31%|###       | 8/26 [00:00<00:00, 25.17it/s] 46%|####6     | 12/26 [00:00<00:00, 29.06it/s] 62%|######1   | 16/26 [00:00<00:00, 31.12it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.10it/s] 92%|#########2| 24/26 [00:00<00:00, 33.06it/s]100%|##########| 26/26 [00:00<00:00, 27.92it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 260 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 261 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 262 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 263 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 264 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 265 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 266 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 267 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 268 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 269 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 270 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 271 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 272 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 273 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 274 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 275 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 276 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 277 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 278 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 279 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 280 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 281 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 282 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 283 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 284 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 285 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [10][  26/  26]	Loss 0.000 (0.000)	train_nll   0.67 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  22.43 ( 22.43)	train_acc   0.62 (  0.54)	train_minacc   0.43 (  0.46)	train_majacc   0.65 (  0.56)	train_corr   0.00 (  0.00)	l1 6.6534 (6.6737)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.95it/s] 23%|##3       | 6/26 [00:00<00:00, 31.37it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.37it/s] 42%|####2     | 11/26 [00:00<00:00, 37.49it/s] 62%|######1   | 16/26 [00:00<00:00, 41.20it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.20it/s] 81%|########  | 21/26 [00:00<00:00, 40.56it/s]100%|##########| 26/26 [00:00<00:00, 42.96it/s]100%|##########| 26/26 [00:00<00:00, 36.02it/s]
Test: [   0/  26]	Loss 0.683 (0.683)	test_acc   0.62 (  0.62)	test_minacc   0.52 (  0.52)	test_majacc   0.64 (  0.64)	Loss_d 0.683 (0.683)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.08 (  0.08)
Test: [  10/  26]	Loss 0.679 (0.685)	test_acc   0.65 (  0.61)	test_minacc   0.52 (  0.47)	test_majacc   0.67 (  0.63)	Loss_d 0.679 (0.685)	test_acc_d   0.65 (  0.61)	test_minacc_d   0.52 (  0.47)	test_majacc_d   0.67 (  0.63)	test_corr_d   0.11 (  0.10)
Test: [  20/  26]	Loss 0.691 (0.687)	test_acc   0.59 (  0.60)	test_minacc   0.32 (  0.45)	test_majacc   0.64 (  0.63)	Loss_d 0.691 (0.687)	test_acc_d   0.59 (  0.60)	test_minacc_d   0.32 (  0.45)	test_majacc_d   0.64 (  0.63)	test_corr_d   0.07 (  0.10)
Test: [  26/  26]	Loss 0.679 (0.687)	test_acc   0.63 (  0.60)	test_minacc   0.43 (  0.45)	test_majacc   0.66 (  0.63)	Loss_d 0.679 (0.687)	test_acc_d   0.63 (  0.60)	test_minacc_d   0.43 (  0.45)	test_majacc_d   0.66 (  0.63)	test_corr_d   0.20 (  0.09)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.96it/s]
Test: [  0/  1]	Loss 0.691 (0.691)	test_acc   0.45 (  0.45)	test_minacc   0.45 (  0.45)	test_majacc   0.39 (  0.39)	Loss_d 0.691 (0.691)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.39 (  0.39)	test_corr_d  -0.12 ( -0.12)
Test: [  1/  1]	Loss 0.691 (0.691)	test_acc   0.45 (  0.45)	test_minacc   0.45 (  0.45)	test_majacc   0.39 (  0.39)	Loss_d 0.691 (0.691)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.39 (  0.39)	test_corr_d  -0.12 ( -0.12)
Overall Timing[ 10/  1]	epoch_time 0.0380 (0.0445)	validation_time 0.0004 (0.0011)	train_time 0.0376 (0.0431)
record: (train_acc, test_acc) (0.7227000323534012, 0.7740000486373901)
last accs (train_acc, test_acc) (0.604900009572506, 0.445000022649765)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 21.66it/s] 27%|##6       | 7/26 [00:00<00:00, 26.77it/s] 42%|####2     | 11/26 [00:00<00:00, 29.92it/s] 58%|#####7    | 15/26 [00:00<00:00, 31.07it/s] 73%|#######3  | 19/26 [00:00<00:00, 32.13it/s] 88%|########8 | 23/26 [00:00<00:00, 33.04it/s]100%|##########| 26/26 [00:00<00:00, 29.42it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 286 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 287 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 288 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 289 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 290 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 291 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 292 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 293 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 294 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 295 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 296 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 297 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 298 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 299 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 300 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 301 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 302 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 303 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 304 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 305 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 306 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 307 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 308 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 309 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 310 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 311 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [11][  26/  26]	Loss 0.000 (0.000)	train_nll   0.67 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  22.43 ( 22.43)	train_acc   0.61 (  0.56)	train_minacc   0.46 (  0.44)	train_majacc   0.63 (  0.58)	train_corr   0.00 (  0.00)	l1 6.6186 (6.6433)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.48it/s] 23%|##3       | 6/26 [00:00<00:00, 27.05it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.05it/s] 42%|####2     | 11/26 [00:00<00:00, 34.35it/s] 62%|######1   | 16/26 [00:00<00:00, 39.23it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.23it/s] 81%|########  | 21/26 [00:00<00:00, 39.64it/s]100%|##########| 26/26 [00:00<00:00, 42.20it/s]100%|##########| 26/26 [00:00<00:00, 34.18it/s]
Test: [   0/  26]	Loss 0.677 (0.677)	test_acc   0.60 (  0.60)	test_minacc   0.55 (  0.55)	test_majacc   0.61 (  0.61)	Loss_d 0.677 (0.677)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.61 (  0.61)	test_corr_d   0.17 (  0.17)
Test: [  10/  26]	Loss 0.671 (0.678)	test_acc   0.64 (  0.60)	test_minacc   0.59 (  0.53)	test_majacc   0.65 (  0.61)	Loss_d 0.671 (0.678)	test_acc_d   0.64 (  0.60)	test_minacc_d   0.59 (  0.53)	test_majacc_d   0.65 (  0.61)	test_corr_d   0.20 (  0.19)
Test: [  20/  26]	Loss 0.684 (0.680)	test_acc   0.60 (  0.60)	test_minacc   0.38 (  0.53)	test_majacc   0.64 (  0.61)	Loss_d 0.684 (0.680)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.38 (  0.53)	test_majacc_d   0.64 (  0.61)	test_corr_d   0.17 (  0.19)
Test: [  26/  26]	Loss 0.673 (0.680)	test_acc   0.61 (  0.60)	test_minacc   0.46 (  0.52)	test_majacc   0.63 (  0.61)	Loss_d 0.673 (0.680)	test_acc_d   0.61 (  0.60)	test_minacc_d   0.46 (  0.52)	test_majacc_d   0.63 (  0.61)	test_corr_d   0.29 (  0.18)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.99it/s]
Test: [  0/  1]	Loss 0.693 (0.693)	test_acc   0.40 (  0.40)	test_minacc   0.38 (  0.38)	test_majacc   0.55 (  0.55)	Loss_d 0.693 (0.693)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.55 (  0.55)	test_corr_d  -0.06 ( -0.06)
Test: [  1/  1]	Loss 0.693 (0.693)	test_acc   0.40 (  0.40)	test_minacc   0.38 (  0.38)	test_majacc   0.55 (  0.55)	Loss_d 0.693 (0.693)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.55 (  0.55)	test_corr_d  -0.06 ( -0.06)
Overall Timing[ 11/  1]	epoch_time 0.0429 (0.0443)	validation_time 0.0005 (0.0010)	train_time 0.0424 (0.0430)
record: (train_acc, test_acc) (0.7227000323534012, 0.7740000486373901)
last accs (train_acc, test_acc) (0.5994000103473663, 0.4010000228881836)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.01it/s] 19%|#9        | 5/26 [00:00<00:00, 21.69it/s] 35%|###4      | 9/26 [00:00<00:00, 26.88it/s] 50%|#####     | 13/26 [00:00<00:00, 29.72it/s] 65%|######5   | 17/26 [00:00<00:00, 31.26it/s] 81%|########  | 21/26 [00:00<00:00, 32.58it/s] 96%|#########6| 25/26 [00:00<00:00, 32.84it/s]100%|##########| 26/26 [00:00<00:00, 28.04it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 312 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 313 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 314 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 315 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 316 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 317 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 318 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 319 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 320 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 321 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 322 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 323 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 324 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 325 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 326 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 327 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 328 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 329 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 330 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 331 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 332 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 333 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 334 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 335 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 336 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 337 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [12][  26/  26]	Loss 0.000 (0.000)	train_nll   0.67 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  22.43 ( 22.43)	train_acc   0.59 (  0.56)	train_minacc   0.49 (  0.46)	train_majacc   0.61 (  0.58)	train_corr   0.00 (  0.00)	l1 6.5741 (6.6040)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.57it/s] 23%|##3       | 6/26 [00:00<00:00, 28.64it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.64it/s] 42%|####2     | 11/26 [00:00<00:00, 35.34it/s] 62%|######1   | 16/26 [00:00<00:00, 39.25it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.25it/s] 81%|########  | 21/26 [00:00<00:00, 38.33it/s]100%|##########| 26/26 [00:00<00:00, 34.39it/s]
Test: [   0/  26]	Loss 0.678 (0.678)	test_acc   0.57 (  0.57)	test_minacc   0.61 (  0.61)	test_majacc   0.56 (  0.56)	Loss_d 0.678 (0.678)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.56 (  0.56)	test_corr_d   0.19 (  0.19)
Test: [  10/  26]	Loss 0.670 (0.678)	test_acc   0.63 (  0.58)	test_minacc   0.67 (  0.59)	test_majacc   0.63 (  0.58)	Loss_d 0.670 (0.678)	test_acc_d   0.63 (  0.58)	test_minacc_d   0.67 (  0.59)	test_majacc_d   0.63 (  0.58)	test_corr_d   0.22 (  0.20)
Test: [  20/  26]	Loss 0.685 (0.680)	test_acc   0.56 (  0.58)	test_minacc   0.45 (  0.58)	test_majacc   0.58 (  0.58)	Loss_d 0.685 (0.680)	test_acc_d   0.56 (  0.58)	test_minacc_d   0.45 (  0.58)	test_majacc_d   0.58 (  0.58)	test_corr_d   0.20 (  0.20)
Test: [  26/  26]	Loss 0.674 (0.680)	test_acc   0.59 (  0.58)	test_minacc   0.46 (  0.58)	test_majacc   0.61 (  0.58)	Loss_d 0.674 (0.680)	test_acc_d   0.59 (  0.58)	test_minacc_d   0.46 (  0.58)	test_majacc_d   0.61 (  0.58)	test_corr_d   0.30 (  0.20)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.41it/s]
Test: [  0/  1]	Loss 0.694 (0.694)	test_acc   0.49 (  0.49)	test_minacc   0.48 (  0.48)	test_majacc   0.52 (  0.52)	Loss_d 0.694 (0.694)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.52 (  0.52)	test_corr_d  -0.05 ( -0.05)
Test: [  1/  1]	Loss 0.694 (0.694)	test_acc   0.49 (  0.49)	test_minacc   0.48 (  0.48)	test_majacc   0.52 (  0.52)	Loss_d 0.694 (0.694)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.52 (  0.52)	test_corr_d  -0.05 ( -0.05)
Overall Timing[ 12/  1]	epoch_time 0.0396 (0.0440)	validation_time 0.0003 (0.0010)	train_time 0.0392 (0.0427)
record: (train_acc, test_acc) (0.7227000323534012, 0.7740000486373901)
last accs (train_acc, test_acc) (0.5822000068426132, 0.4880000352859497)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.63it/s] 15%|#5        | 4/26 [00:00<00:01, 18.62it/s] 31%|###       | 8/26 [00:00<00:00, 26.43it/s] 46%|####6     | 12/26 [00:00<00:00, 30.02it/s] 62%|######1   | 16/26 [00:00<00:00, 32.29it/s] 77%|#######6  | 20/26 [00:00<00:00, 33.58it/s] 92%|#########2| 24/26 [00:00<00:00, 34.70it/s]100%|##########| 26/26 [00:00<00:00, 29.11it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 338 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 339 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 340 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 341 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 342 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 343 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 344 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 345 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 346 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 347 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 348 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 349 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 350 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 351 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 352 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 353 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 354 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 355 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 356 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 357 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 358 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 359 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 360 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 361 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 362 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 363 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [13][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  22.43 ( 22.43)	train_acc   0.60 (  0.56)	train_minacc   0.46 (  0.43)	train_majacc   0.62 (  0.58)	train_corr   0.00 (  0.00)	l1 6.5345 (6.5601)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.56it/s] 27%|##6       | 7/26 [00:00<00:00, 25.64it/s]                                               27%|##6       | 7/26 [00:00<00:00, 25.64it/s] 46%|####6     | 12/26 [00:00<00:00, 33.76it/s] 65%|######5   | 17/26 [00:00<00:00, 36.53it/s]                                                65%|######5   | 17/26 [00:00<00:00, 36.53it/s] 85%|########4 | 22/26 [00:00<00:00, 40.06it/s]100%|##########| 26/26 [00:00<00:00, 32.61it/s]
Test: [   0/  26]	Loss 0.679 (0.679)	test_acc   0.58 (  0.58)	test_minacc   0.63 (  0.63)	test_majacc   0.57 (  0.57)	Loss_d 0.679 (0.679)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.57 (  0.57)	test_corr_d   0.17 (  0.17)
Test: [  10/  26]	Loss 0.673 (0.679)	test_acc   0.63 (  0.58)	test_minacc   0.62 (  0.57)	test_majacc   0.63 (  0.59)	Loss_d 0.673 (0.679)	test_acc_d   0.63 (  0.58)	test_minacc_d   0.62 (  0.57)	test_majacc_d   0.63 (  0.59)	test_corr_d   0.20 (  0.19)
Test: [  20/  26]	Loss 0.685 (0.680)	test_acc   0.57 (  0.58)	test_minacc   0.42 (  0.57)	test_majacc   0.60 (  0.59)	Loss_d 0.685 (0.680)	test_acc_d   0.57 (  0.58)	test_minacc_d   0.42 (  0.57)	test_majacc_d   0.60 (  0.59)	test_corr_d   0.19 (  0.19)
Test: [  26/  26]	Loss 0.675 (0.681)	test_acc   0.59 (  0.58)	test_minacc   0.46 (  0.56)	test_majacc   0.61 (  0.59)	Loss_d 0.675 (0.681)	test_acc_d   0.59 (  0.58)	test_minacc_d   0.46 (  0.56)	test_majacc_d   0.61 (  0.59)	test_corr_d   0.29 (  0.19)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.68it/s]
Test: [  0/  1]	Loss 0.692 (0.692)	test_acc   0.48 (  0.48)	test_minacc   0.48 (  0.48)	test_majacc   0.54 (  0.54)	Loss_d 0.692 (0.692)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.54 (  0.54)	test_corr_d  -0.06 ( -0.06)
Test: [  1/  1]	Loss 0.692 (0.692)	test_acc   0.48 (  0.48)	test_minacc   0.48 (  0.48)	test_majacc   0.54 (  0.54)	Loss_d 0.692 (0.692)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.54 (  0.54)	test_corr_d  -0.06 ( -0.06)
Overall Timing[ 13/  1]	epoch_time 0.0433 (0.0439)	validation_time 0.0005 (0.0009)	train_time 0.0428 (0.0427)
record: (train_acc, test_acc) (0.7227000323534012, 0.7740000486373901)
last accs (train_acc, test_acc) (0.5845000148415566, 0.484000027179718)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.91it/s] 15%|#5        | 4/26 [00:00<00:01, 16.88it/s] 31%|###       | 8/26 [00:00<00:00, 24.89it/s] 46%|####6     | 12/26 [00:00<00:00, 28.50it/s] 62%|######1   | 16/26 [00:00<00:00, 29.70it/s] 77%|#######6  | 20/26 [00:00<00:00, 31.49it/s] 92%|#########2| 24/26 [00:00<00:00, 32.99it/s]100%|##########| 26/26 [00:00<00:00, 27.59it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 364 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 365 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 366 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 367 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 368 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 369 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 370 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 371 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 372 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 373 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 374 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 375 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 376 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 377 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 378 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 379 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 380 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 381 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 382 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 383 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 384 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 385 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 386 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 387 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 388 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 389 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [14][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  22.43 ( 22.43)	train_acc   0.60 (  0.54)	train_minacc   0.46 (  0.44)	train_majacc   0.62 (  0.56)	train_corr   0.00 (  0.00)	l1 6.5013 (6.5207)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.19it/s] 15%|#5        | 4/26 [00:00<00:01, 12.39it/s] 38%|###8      | 10/26 [00:00<00:00, 27.46it/s]                                                38%|###8      | 10/26 [00:00<00:00, 27.46it/s] 62%|######1   | 16/26 [00:00<00:00, 32.73it/s]                                                62%|######1   | 16/26 [00:00<00:00, 32.73it/s] 81%|########  | 21/26 [00:00<00:00, 36.49it/s]100%|##########| 26/26 [00:00<00:00, 39.87it/s]100%|##########| 26/26 [00:00<00:00, 30.78it/s]
Test: [   0/  26]	Loss 0.683 (0.683)	test_acc   0.59 (  0.59)	test_minacc   0.55 (  0.55)	test_majacc   0.60 (  0.60)	Loss_d 0.683 (0.683)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.11 (  0.11)
Test: [  10/  26]	Loss 0.680 (0.684)	test_acc   0.63 (  0.58)	test_minacc   0.56 (  0.52)	test_majacc   0.64 (  0.59)	Loss_d 0.680 (0.684)	test_acc_d   0.63 (  0.58)	test_minacc_d   0.56 (  0.52)	test_majacc_d   0.64 (  0.59)	test_corr_d   0.13 (  0.12)
Test: [  20/  26]	Loss 0.689 (0.685)	test_acc   0.56 (  0.59)	test_minacc   0.38 (  0.52)	test_majacc   0.59 (  0.60)	Loss_d 0.689 (0.685)	test_acc_d   0.56 (  0.59)	test_minacc_d   0.38 (  0.52)	test_majacc_d   0.59 (  0.60)	test_corr_d   0.12 (  0.12)
Test: [  26/  26]	Loss 0.680 (0.686)	test_acc   0.59 (  0.59)	test_minacc   0.43 (  0.51)	test_majacc   0.62 (  0.60)	Loss_d 0.680 (0.686)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.43 (  0.51)	test_majacc_d   0.62 (  0.60)	test_corr_d   0.22 (  0.12)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.57it/s]
Test: [  0/  1]	Loss 0.691 (0.691)	test_acc   0.47 (  0.47)	test_minacc   0.46 (  0.46)	test_majacc   0.54 (  0.54)	Loss_d 0.691 (0.691)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.46 (  0.46)	test_majacc_d   0.54 (  0.54)	test_corr_d  -0.08 ( -0.08)
Test: [  1/  1]	Loss 0.691 (0.691)	test_acc   0.47 (  0.47)	test_minacc   0.46 (  0.46)	test_majacc   0.54 (  0.54)	Loss_d 0.691 (0.691)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.46 (  0.46)	test_majacc_d   0.54 (  0.54)	test_corr_d  -0.08 ( -0.08)
Overall Timing[ 14/  1]	epoch_time 0.0434 (0.0439)	validation_time 0.0004 (0.0009)	train_time 0.0429 (0.0427)
record: (train_acc, test_acc) (0.7227000323534012, 0.7740000486373901)
last accs (train_acc, test_acc) (0.5859000068306923, 0.46800002455711365)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.84it/s] 15%|#5        | 4/26 [00:00<00:01, 12.55it/s] 31%|###       | 8/26 [00:00<00:00, 20.60it/s] 46%|####6     | 12/26 [00:00<00:00, 25.61it/s] 62%|######1   | 16/26 [00:00<00:00, 28.47it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.70it/s] 92%|#########2| 24/26 [00:00<00:00, 32.24it/s]100%|##########| 26/26 [00:01<00:00, 24.59it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 390 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 391 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 392 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 393 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 394 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 395 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 396 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 397 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 398 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 399 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 400 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 401 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 402 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 403 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 404 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 405 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 406 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 407 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 408 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 409 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 410 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 411 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 412 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 413 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 414 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 415 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [15][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  22.43 ( 22.43)	train_acc   0.63 (  0.52)	train_minacc   0.54 (  0.46)	train_majacc   0.65 (  0.53)	train_corr   0.00 (  0.00)	l1 6.4751 (6.4879)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.58it/s] 23%|##3       | 6/26 [00:00<00:00, 22.34it/s]                                               23%|##3       | 6/26 [00:00<00:00, 22.34it/s] 46%|####6     | 12/26 [00:00<00:00, 34.23it/s] 65%|######5   | 17/26 [00:00<00:00, 37.67it/s]                                                65%|######5   | 17/26 [00:00<00:00, 37.67it/s] 88%|########8 | 23/26 [00:00<00:00, 43.09it/s]100%|##########| 26/26 [00:00<00:00, 32.93it/s]
Test: [   0/  26]	Loss 0.686 (0.686)	test_acc   0.60 (  0.60)	test_minacc   0.52 (  0.52)	test_majacc   0.62 (  0.62)	Loss_d 0.686 (0.686)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.06 (  0.06)
Test: [  10/  26]	Loss 0.687 (0.688)	test_acc   0.58 (  0.59)	test_minacc   0.41 (  0.46)	test_majacc   0.62 (  0.61)	Loss_d 0.687 (0.688)	test_acc_d   0.58 (  0.59)	test_minacc_d   0.41 (  0.46)	test_majacc_d   0.62 (  0.61)	test_corr_d   0.06 (  0.07)
Test: [  20/  26]	Loss 0.692 (0.689)	test_acc   0.55 (  0.58)	test_minacc   0.37 (  0.42)	test_majacc   0.59 (  0.61)	Loss_d 0.692 (0.689)	test_acc_d   0.55 (  0.58)	test_minacc_d   0.37 (  0.42)	test_majacc_d   0.59 (  0.61)	test_corr_d   0.06 (  0.07)
Test: [  26/  26]	Loss 0.684 (0.689)	test_acc   0.64 (  0.58)	test_minacc   0.54 (  0.43)	test_majacc   0.66 (  0.61)	Loss_d 0.684 (0.689)	test_acc_d   0.64 (  0.58)	test_minacc_d   0.54 (  0.43)	test_majacc_d   0.66 (  0.61)	test_corr_d   0.15 (  0.06)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.01it/s]
Test: [  0/  1]	Loss 0.691 (0.691)	test_acc   0.42 (  0.42)	test_minacc   0.41 (  0.41)	test_majacc   0.49 (  0.49)	Loss_d 0.691 (0.691)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.49 (  0.49)	test_corr_d  -0.08 ( -0.08)
Test: [  1/  1]	Loss 0.691 (0.691)	test_acc   0.42 (  0.42)	test_minacc   0.41 (  0.41)	test_majacc   0.49 (  0.49)	Loss_d 0.691 (0.691)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.49 (  0.49)	test_corr_d  -0.08 ( -0.08)
Overall Timing[ 15/  1]	epoch_time 0.0451 (0.0439)	validation_time 0.0005 (0.0009)	train_time 0.0446 (0.0429)
record: (train_acc, test_acc) (0.7227000323534012, 0.7740000486373901)
last accs (train_acc, test_acc) (0.5821000094413757, 0.41600000858306885)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.32it/s] 19%|#9        | 5/26 [00:00<00:00, 24.69it/s] 35%|###4      | 9/26 [00:00<00:00, 29.49it/s] 50%|#####     | 13/26 [00:00<00:00, 31.96it/s] 65%|######5   | 17/26 [00:00<00:00, 31.96it/s] 81%|########  | 21/26 [00:00<00:00, 32.35it/s] 96%|#########6| 25/26 [00:00<00:00, 33.07it/s]100%|##########| 26/26 [00:00<00:00, 29.13it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 416 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 417 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 418 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 419 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 420 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 421 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 422 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 423 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 424 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 425 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 426 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 427 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 428 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 429 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 430 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 431 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 432 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 433 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 434 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 435 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 436 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 437 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 438 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 439 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 440 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 441 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [16][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  22.44 ( 22.43)	train_acc   0.62 (  0.55)	train_minacc   0.54 (  0.45)	train_majacc   0.63 (  0.57)	train_corr   0.00 (  0.00)	l1 6.4596 (6.4667)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.31it/s] 23%|##3       | 6/26 [00:00<00:00, 30.32it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.32it/s] 42%|####2     | 11/26 [00:00<00:00, 37.45it/s] 62%|######1   | 16/26 [00:00<00:00, 40.29it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.29it/s] 81%|########  | 21/26 [00:00<00:00, 38.88it/s]100%|##########| 26/26 [00:00<00:00, 41.77it/s]100%|##########| 26/26 [00:00<00:00, 34.65it/s]
Test: [   0/  26]	Loss 0.689 (0.689)	test_acc   0.55 (  0.55)	test_minacc   0.50 (  0.50)	test_majacc   0.56 (  0.56)	Loss_d 0.689 (0.689)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.56 (  0.56)	test_corr_d   0.03 (  0.03)
Test: [  10/  26]	Loss 0.691 (0.690)	test_acc   0.52 (  0.55)	test_minacc   0.43 (  0.45)	test_majacc   0.54 (  0.57)	Loss_d 0.691 (0.690)	test_acc_d   0.52 (  0.55)	test_minacc_d   0.43 (  0.45)	test_majacc_d   0.54 (  0.57)	test_corr_d   0.02 (  0.03)
Test: [  20/  26]	Loss 0.694 (0.691)	test_acc   0.49 (  0.54)	test_minacc   0.38 (  0.41)	test_majacc   0.51 (  0.56)	Loss_d 0.694 (0.691)	test_acc_d   0.49 (  0.54)	test_minacc_d   0.38 (  0.41)	test_majacc_d   0.51 (  0.56)	test_corr_d   0.02 (  0.03)
Test: [  26/  26]	Loss 0.687 (0.692)	test_acc   0.62 (  0.54)	test_minacc   0.51 (  0.41)	test_majacc   0.64 (  0.56)	Loss_d 0.687 (0.692)	test_acc_d   0.62 (  0.54)	test_minacc_d   0.51 (  0.41)	test_majacc_d   0.64 (  0.56)	test_corr_d   0.10 (  0.03)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.89it/s]
Test: [  0/  1]	Loss 0.692 (0.692)	test_acc   0.42 (  0.42)	test_minacc   0.42 (  0.42)	test_majacc   0.46 (  0.46)	Loss_d 0.692 (0.692)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.46 (  0.46)	test_corr_d  -0.06 ( -0.06)
Test: [  1/  1]	Loss 0.692 (0.692)	test_acc   0.42 (  0.42)	test_minacc   0.42 (  0.42)	test_majacc   0.46 (  0.46)	Loss_d 0.692 (0.692)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.46 (  0.46)	test_corr_d  -0.06 ( -0.06)
Overall Timing[ 16/  1]	epoch_time 0.0430 (0.0439)	validation_time 0.0004 (0.0008)	train_time 0.0425 (0.0428)
record: (train_acc, test_acc) (0.7227000323534012, 0.7740000486373901)
last accs (train_acc, test_acc) (0.5372000120282173, 0.42000001668930054)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.81it/s] 19%|#9        | 5/26 [00:00<00:00, 22.58it/s] 35%|###4      | 9/26 [00:00<00:00, 28.39it/s] 50%|#####     | 13/26 [00:00<00:00, 31.51it/s] 65%|######5   | 17/26 [00:00<00:00, 33.31it/s] 81%|########  | 21/26 [00:00<00:00, 33.61it/s] 96%|#########6| 25/26 [00:00<00:00, 34.65it/s]100%|##########| 26/26 [00:00<00:00, 29.43it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 442 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 443 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 444 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 445 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 446 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 447 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 448 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 449 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 450 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 451 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 452 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 453 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 454 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 455 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 456 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 457 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 458 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 459 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 460 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 461 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 462 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 463 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 464 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 465 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 466 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 467 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [17][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  22.44 ( 22.44)	train_acc   0.62 (  0.56)	train_minacc   0.54 (  0.43)	train_majacc   0.64 (  0.58)	train_corr   0.00 (  0.00)	l1 6.4497 (6.4544)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.14it/s] 23%|##3       | 6/26 [00:00<00:00, 28.40it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.40it/s] 42%|####2     | 11/26 [00:00<00:00, 36.06it/s] 65%|######5   | 17/26 [00:00<00:00, 39.13it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.13it/s] 85%|########4 | 22/26 [00:00<00:00, 42.21it/s]100%|##########| 26/26 [00:00<00:00, 34.90it/s]
Test: [   0/  26]	Loss 0.689 (0.689)	test_acc   0.58 (  0.58)	test_minacc   0.52 (  0.52)	test_majacc   0.59 (  0.59)	Loss_d 0.689 (0.689)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.03 (  0.03)
Test: [  10/  26]	Loss 0.691 (0.691)	test_acc   0.54 (  0.56)	test_minacc   0.43 (  0.45)	test_majacc   0.56 (  0.58)	Loss_d 0.691 (0.691)	test_acc_d   0.54 (  0.56)	test_minacc_d   0.43 (  0.45)	test_majacc_d   0.56 (  0.58)	test_corr_d   0.02 (  0.03)
Test: [  20/  26]	Loss 0.695 (0.692)	test_acc   0.50 (  0.54)	test_minacc   0.35 (  0.40)	test_majacc   0.53 (  0.57)	Loss_d 0.695 (0.692)	test_acc_d   0.50 (  0.54)	test_minacc_d   0.35 (  0.40)	test_majacc_d   0.53 (  0.57)	test_corr_d   0.02 (  0.04)
Test: [  26/  26]	Loss 0.687 (0.692)	test_acc   0.62 (  0.54)	test_minacc   0.54 (  0.41)	test_majacc   0.64 (  0.57)	Loss_d 0.687 (0.692)	test_acc_d   0.62 (  0.54)	test_minacc_d   0.54 (  0.41)	test_majacc_d   0.64 (  0.57)	test_corr_d   0.10 (  0.03)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.39it/s]
Test: [  0/  1]	Loss 0.693 (0.693)	test_acc   0.42 (  0.42)	test_minacc   0.41 (  0.41)	test_majacc   0.47 (  0.47)	Loss_d 0.693 (0.693)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.47 (  0.47)	test_corr_d  -0.05 ( -0.05)
Test: [  1/  1]	Loss 0.693 (0.693)	test_acc   0.42 (  0.42)	test_minacc   0.41 (  0.41)	test_majacc   0.47 (  0.47)	Loss_d 0.693 (0.693)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.47 (  0.47)	test_corr_d  -0.05 ( -0.05)
Overall Timing[ 17/  1]	epoch_time 0.0417 (0.0438)	validation_time 0.0004 (0.0008)	train_time 0.0413 (0.0427)
record: (train_acc, test_acc) (0.7227000323534012, 0.7740000486373901)
last accs (train_acc, test_acc) (0.5444000152945518, 0.4180000126361847)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.70it/s] 23%|##3       | 6/26 [00:00<00:00, 26.42it/s] 38%|###8      | 10/26 [00:00<00:00, 29.83it/s] 54%|#####3    | 14/26 [00:00<00:00, 30.90it/s] 69%|######9   | 18/26 [00:00<00:00, 31.16it/s] 85%|########4 | 22/26 [00:00<00:00, 32.54it/s]100%|##########| 26/26 [00:00<00:00, 33.56it/s]100%|##########| 26/26 [00:00<00:00, 29.12it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 468 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 469 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 470 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 471 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 472 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 473 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 474 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 475 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 476 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 477 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 478 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 479 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 480 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 481 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 482 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 483 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 484 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 485 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 486 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 487 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 488 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 489 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 490 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 491 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 492 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 493 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [18][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  22.44 ( 22.44)	train_acc   0.63 (  0.56)	train_minacc   0.57 (  0.43)	train_majacc   0.64 (  0.58)	train_corr   0.00 (  0.00)	l1 6.4421 (6.4461)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02, 10.21it/s] 27%|##6       | 7/26 [00:00<00:00, 26.19it/s]                                               27%|##6       | 7/26 [00:00<00:00, 26.19it/s] 46%|####6     | 12/26 [00:00<00:00, 33.89it/s] 65%|######5   | 17/26 [00:00<00:00, 38.13it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.13it/s] 85%|########4 | 22/26 [00:00<00:00, 37.63it/s]100%|##########| 26/26 [00:00<00:00, 33.30it/s]
Test: [   0/  26]	Loss 0.690 (0.690)	test_acc   0.58 (  0.58)	test_minacc   0.48 (  0.48)	test_majacc   0.60 (  0.60)	Loss_d 0.690 (0.690)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.03 (  0.03)
Test: [  10/  26]	Loss 0.691 (0.691)	test_acc   0.55 (  0.56)	test_minacc   0.43 (  0.45)	test_majacc   0.57 (  0.58)	Loss_d 0.691 (0.691)	test_acc_d   0.55 (  0.56)	test_minacc_d   0.43 (  0.45)	test_majacc_d   0.57 (  0.58)	test_corr_d   0.02 (  0.03)
Test: [  20/  26]	Loss 0.695 (0.692)	test_acc   0.51 (  0.55)	test_minacc   0.38 (  0.41)	test_majacc   0.53 (  0.57)	Loss_d 0.695 (0.692)	test_acc_d   0.51 (  0.55)	test_minacc_d   0.38 (  0.41)	test_majacc_d   0.53 (  0.57)	test_corr_d   0.02 (  0.03)
Test: [  26/  26]	Loss 0.688 (0.692)	test_acc   0.62 (  0.55)	test_minacc   0.54 (  0.41)	test_majacc   0.63 (  0.57)	Loss_d 0.688 (0.692)	test_acc_d   0.62 (  0.55)	test_minacc_d   0.54 (  0.41)	test_majacc_d   0.63 (  0.57)	test_corr_d   0.09 (  0.03)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.08it/s]
Test: [  0/  1]	Loss 0.693 (0.693)	test_acc   0.42 (  0.42)	test_minacc   0.41 (  0.41)	test_majacc   0.51 (  0.51)	Loss_d 0.693 (0.693)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.51 (  0.51)	test_corr_d  -0.05 ( -0.05)
Test: [  1/  1]	Loss 0.693 (0.693)	test_acc   0.42 (  0.42)	test_minacc   0.41 (  0.41)	test_majacc   0.51 (  0.51)	Loss_d 0.693 (0.693)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.51 (  0.51)	test_corr_d  -0.05 ( -0.05)
Overall Timing[ 18/  1]	epoch_time 0.0448 (0.0438)	validation_time 0.0004 (0.0008)	train_time 0.0444 (0.0428)
record: (train_acc, test_acc) (0.7227000323534012, 0.7740000486373901)
last accs (train_acc, test_acc) (0.5475000185072422, 0.4190000295639038)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 22.84it/s] 27%|##6       | 7/26 [00:00<00:00, 30.84it/s] 42%|####2     | 11/26 [00:00<00:00, 32.57it/s] 58%|#####7    | 15/26 [00:00<00:00, 34.93it/s] 73%|#######3  | 19/26 [00:00<00:00, 35.14it/s] 88%|########8 | 23/26 [00:00<00:00, 35.71it/s]100%|##########| 26/26 [00:00<00:00, 31.87it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 494 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 495 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 496 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 497 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 498 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 499 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 500 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 501 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 502 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 503 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 504 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 505 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 506 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 507 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 508 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 509 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 510 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 511 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 512 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 513 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 514 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 515 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 516 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 517 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 518 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 519 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [19][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  22.44 ( 22.44)	train_acc   0.62 (  0.56)	train_minacc   0.57 (  0.43)	train_majacc   0.63 (  0.58)	train_corr   0.00 (  0.00)	l1 6.4353 (6.4389)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.24it/s] 27%|##6       | 7/26 [00:00<00:00, 34.16it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.16it/s] 46%|####6     | 12/26 [00:00<00:00, 39.43it/s] 65%|######5   | 17/26 [00:00<00:00, 41.74it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.74it/s] 85%|########4 | 22/26 [00:00<00:00, 39.59it/s]100%|##########| 26/26 [00:00<00:00, 37.27it/s]
Test: [   0/  26]	Loss 0.690 (0.690)	test_acc   0.57 (  0.57)	test_minacc   0.45 (  0.45)	test_majacc   0.59 (  0.59)	Loss_d 0.690 (0.690)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.03 (  0.03)
Test: [  10/  26]	Loss 0.691 (0.691)	test_acc   0.54 (  0.56)	test_minacc   0.43 (  0.45)	test_majacc   0.56 (  0.57)	Loss_d 0.691 (0.691)	test_acc_d   0.54 (  0.56)	test_minacc_d   0.43 (  0.45)	test_majacc_d   0.56 (  0.57)	test_corr_d   0.01 (  0.03)
Test: [  20/  26]	Loss 0.695 (0.692)	test_acc   0.50 (  0.54)	test_minacc   0.40 (  0.41)	test_majacc   0.52 (  0.56)	Loss_d 0.695 (0.692)	test_acc_d   0.50 (  0.54)	test_minacc_d   0.40 (  0.41)	test_majacc_d   0.52 (  0.56)	test_corr_d   0.01 (  0.03)
Test: [  26/  26]	Loss 0.688 (0.692)	test_acc   0.62 (  0.54)	test_minacc   0.57 (  0.42)	test_majacc   0.62 (  0.56)	Loss_d 0.688 (0.692)	test_acc_d   0.62 (  0.54)	test_minacc_d   0.57 (  0.42)	test_majacc_d   0.62 (  0.56)	test_corr_d   0.09 (  0.03)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.31it/s]
Test: [  0/  1]	Loss 0.692 (0.692)	test_acc   0.42 (  0.42)	test_minacc   0.41 (  0.41)	test_majacc   0.51 (  0.51)	Loss_d 0.692 (0.692)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.51 (  0.51)	test_corr_d  -0.05 ( -0.05)
Test: [  1/  1]	Loss 0.692 (0.692)	test_acc   0.42 (  0.42)	test_minacc   0.41 (  0.41)	test_majacc   0.51 (  0.51)	Loss_d 0.692 (0.692)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.51 (  0.51)	test_corr_d  -0.05 ( -0.05)
Overall Timing[ 19/  1]	epoch_time 0.0414 (0.0437)	validation_time 0.0003 (0.0008)	train_time 0.0411 (0.0427)
record: (train_acc, test_acc) (0.7227000323534012, 0.7740000486373901)
last accs (train_acc, test_acc) (0.5409000107645988, 0.4190000295639038)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.46it/s] 15%|#5        | 4/26 [00:00<00:01, 20.89it/s] 31%|###       | 8/26 [00:00<00:00, 28.42it/s] 46%|####6     | 12/26 [00:00<00:00, 31.77it/s] 62%|######1   | 16/26 [00:00<00:00, 33.56it/s] 77%|#######6  | 20/26 [00:00<00:00, 34.34it/s] 92%|#########2| 24/26 [00:00<00:00, 34.78it/s]100%|##########| 26/26 [00:00<00:00, 30.00it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 520 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 521 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 522 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 523 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 524 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 525 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 526 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 527 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 528 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 529 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 530 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 531 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 532 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 533 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 534 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 535 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 536 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 537 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 538 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 539 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 540 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 541 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 542 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 543 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 544 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 545 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [20][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  22.44 ( 22.44)	train_acc   0.60 (  0.56)	train_minacc   0.54 (  0.44)	train_majacc   0.61 (  0.58)	train_corr   0.00 (  0.00)	l1 6.4292 (6.4324)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:09,  2.59it/s] 23%|##3       | 6/26 [00:00<00:01, 15.06it/s]                                               23%|##3       | 6/26 [00:00<00:01, 15.06it/s] 42%|####2     | 11/26 [00:00<00:00, 23.69it/s] 62%|######1   | 16/26 [00:00<00:00, 30.80it/s]                                                62%|######1   | 16/26 [00:00<00:00, 30.80it/s] 81%|########  | 21/26 [00:00<00:00, 33.17it/s]100%|##########| 26/26 [00:00<00:00, 37.23it/s]100%|##########| 26/26 [00:01<00:00, 25.73it/s]
Test: [   0/  26]	Loss 0.690 (0.690)	test_acc   0.56 (  0.56)	test_minacc   0.45 (  0.45)	test_majacc   0.58 (  0.58)	Loss_d 0.690 (0.690)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.58 (  0.58)	test_corr_d   0.03 (  0.03)
Test: [  10/  26]	Loss 0.692 (0.691)	test_acc   0.53 (  0.55)	test_minacc   0.44 (  0.46)	test_majacc   0.55 (  0.57)	Loss_d 0.692 (0.691)	test_acc_d   0.53 (  0.55)	test_minacc_d   0.44 (  0.46)	test_majacc_d   0.55 (  0.57)	test_corr_d   0.01 (  0.03)
Test: [  20/  26]	Loss 0.695 (0.692)	test_acc   0.49 (  0.54)	test_minacc   0.42 (  0.42)	test_majacc   0.51 (  0.56)	Loss_d 0.695 (0.692)	test_acc_d   0.49 (  0.54)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.51 (  0.56)	test_corr_d   0.01 (  0.03)
Test: [  26/  26]	Loss 0.689 (0.692)	test_acc   0.60 (  0.54)	test_minacc   0.54 (  0.42)	test_majacc   0.62 (  0.56)	Loss_d 0.689 (0.692)	test_acc_d   0.60 (  0.54)	test_minacc_d   0.54 (  0.42)	test_majacc_d   0.62 (  0.56)	test_corr_d   0.08 (  0.02)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.63it/s]
Test: [  0/  1]	Loss 0.692 (0.692)	test_acc   0.42 (  0.42)	test_minacc   0.41 (  0.41)	test_majacc   0.48 (  0.48)	Loss_d 0.692 (0.692)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.48 (  0.48)	test_corr_d  -0.06 ( -0.06)
Test: [  1/  1]	Loss 0.692 (0.692)	test_acc   0.42 (  0.42)	test_minacc   0.41 (  0.41)	test_majacc   0.48 (  0.48)	Loss_d 0.692 (0.692)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.48 (  0.48)	test_corr_d  -0.06 ( -0.06)
Overall Timing[ 20/  1]	epoch_time 0.0418 (0.0436)	validation_time 0.0003 (0.0007)	train_time 0.0415 (0.0427)
record: (train_acc, test_acc) (0.7227000323534012, 0.7740000486373901)
last accs (train_acc, test_acc) (0.5370000103712081, 0.4190000295639038)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 23.69it/s] 27%|##6       | 7/26 [00:00<00:00, 29.25it/s] 42%|####2     | 11/26 [00:00<00:00, 31.16it/s] 58%|#####7    | 15/26 [00:00<00:00, 31.45it/s] 73%|#######3  | 19/26 [00:00<00:00, 32.22it/s] 88%|########8 | 23/26 [00:00<00:00, 33.16it/s]100%|##########| 26/26 [00:00<00:00, 29.79it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 546 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 547 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 548 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 549 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 550 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 551 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 552 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 553 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 554 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 555 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 556 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 557 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 558 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 559 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 560 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 561 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 562 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 563 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 564 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 565 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 566 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 567 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 568 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 569 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 570 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 571 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [21][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  22.44 ( 22.44)	train_acc   0.60 (  0.56)	train_minacc   0.57 (  0.45)	train_majacc   0.61 (  0.57)	train_corr   0.00 (  0.00)	l1 6.4236 (6.4264)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.32it/s] 27%|##6       | 7/26 [00:00<00:00, 29.58it/s]                                               27%|##6       | 7/26 [00:00<00:00, 29.58it/s] 46%|####6     | 12/26 [00:00<00:00, 36.22it/s] 65%|######5   | 17/26 [00:00<00:00, 39.66it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.66it/s] 85%|########4 | 22/26 [00:00<00:00, 41.96it/s]100%|##########| 26/26 [00:00<00:00, 34.37it/s]
Test: [   0/  26]	Loss 0.690 (0.690)	test_acc   0.55 (  0.55)	test_minacc   0.45 (  0.45)	test_majacc   0.57 (  0.57)	Loss_d 0.690 (0.690)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.57 (  0.57)	test_corr_d   0.03 (  0.03)
Test: [  10/  26]	Loss 0.692 (0.691)	test_acc   0.54 (  0.55)	test_minacc   0.46 (  0.46)	test_majacc   0.55 (  0.57)	Loss_d 0.692 (0.691)	test_acc_d   0.54 (  0.55)	test_minacc_d   0.46 (  0.46)	test_majacc_d   0.55 (  0.57)	test_corr_d   0.01 (  0.02)
Test: [  20/  26]	Loss 0.695 (0.692)	test_acc   0.49 (  0.54)	test_minacc   0.42 (  0.42)	test_majacc   0.51 (  0.56)	Loss_d 0.695 (0.692)	test_acc_d   0.49 (  0.54)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.51 (  0.56)	test_corr_d   0.01 (  0.03)
Test: [  26/  26]	Loss 0.689 (0.693)	test_acc   0.59 (  0.53)	test_minacc   0.57 (  0.43)	test_majacc   0.60 (  0.55)	Loss_d 0.689 (0.693)	test_acc_d   0.59 (  0.53)	test_minacc_d   0.57 (  0.43)	test_majacc_d   0.60 (  0.55)	test_corr_d   0.07 (  0.02)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.61it/s]
Test: [  0/  1]	Loss 0.692 (0.692)	test_acc   0.42 (  0.42)	test_minacc   0.41 (  0.41)	test_majacc   0.48 (  0.48)	Loss_d 0.692 (0.692)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.48 (  0.48)	test_corr_d  -0.06 ( -0.06)
Test: [  1/  1]	Loss 0.692 (0.692)	test_acc   0.42 (  0.42)	test_minacc   0.41 (  0.41)	test_majacc   0.48 (  0.48)	Loss_d 0.692 (0.692)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.48 (  0.48)	test_corr_d  -0.06 ( -0.06)
Overall Timing[ 21/  1]	epoch_time 0.0402 (0.0435)	validation_time 0.0005 (0.0007)	train_time 0.0397 (0.0426)
record: (train_acc, test_acc) (0.7227000323534012, 0.7740000486373901)
last accs (train_acc, test_acc) (0.5348000122010708, 0.4190000295639038)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.47it/s] 19%|#9        | 5/26 [00:00<00:01, 19.23it/s] 35%|###4      | 9/26 [00:00<00:00, 25.19it/s] 50%|#####     | 13/26 [00:00<00:00, 28.25it/s] 65%|######5   | 17/26 [00:00<00:00, 30.46it/s] 81%|########  | 21/26 [00:00<00:00, 32.07it/s] 96%|#########6| 25/26 [00:00<00:00, 32.34it/s]100%|##########| 26/26 [00:00<00:00, 26.82it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 572 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 573 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 574 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 575 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 576 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 577 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 578 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 579 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 580 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 581 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 582 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 583 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 584 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 585 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 586 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 587 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 588 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 589 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 590 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 591 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 592 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 593 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 594 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 595 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 596 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 597 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [22][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  22.44 ( 22.44)	train_acc   0.59 (  0.55)	train_minacc   0.57 (  0.46)	train_majacc   0.60 (  0.57)	train_corr   0.00 (  0.00)	l1 6.4184 (6.4209)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.71it/s] 23%|##3       | 6/26 [00:00<00:00, 26.31it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.31it/s] 42%|####2     | 11/26 [00:00<00:00, 34.15it/s] 62%|######1   | 16/26 [00:00<00:00, 38.68it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.68it/s] 81%|########  | 21/26 [00:00<00:00, 37.58it/s]100%|##########| 26/26 [00:00<00:00, 40.63it/s]100%|##########| 26/26 [00:00<00:00, 32.96it/s]
Test: [   0/  26]	Loss 0.690 (0.690)	test_acc   0.55 (  0.55)	test_minacc   0.42 (  0.42)	test_majacc   0.57 (  0.57)	Loss_d 0.690 (0.690)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.57 (  0.57)	test_corr_d   0.03 (  0.03)
Test: [  10/  26]	Loss 0.692 (0.692)	test_acc   0.54 (  0.55)	test_minacc   0.46 (  0.46)	test_majacc   0.55 (  0.56)	Loss_d 0.692 (0.692)	test_acc_d   0.54 (  0.55)	test_minacc_d   0.46 (  0.46)	test_majacc_d   0.55 (  0.56)	test_corr_d   0.00 (  0.02)
Test: [  20/  26]	Loss 0.695 (0.692)	test_acc   0.49 (  0.53)	test_minacc   0.42 (  0.42)	test_majacc   0.51 (  0.55)	Loss_d 0.695 (0.692)	test_acc_d   0.49 (  0.53)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.51 (  0.55)	test_corr_d   0.01 (  0.02)
Test: [  26/  26]	Loss 0.690 (0.693)	test_acc   0.59 (  0.53)	test_minacc   0.57 (  0.43)	test_majacc   0.59 (  0.55)	Loss_d 0.690 (0.693)	test_acc_d   0.59 (  0.53)	test_minacc_d   0.57 (  0.43)	test_majacc_d   0.59 (  0.55)	test_corr_d   0.07 (  0.02)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.51it/s]
Test: [  0/  1]	Loss 0.692 (0.692)	test_acc   0.42 (  0.42)	test_minacc   0.42 (  0.42)	test_majacc   0.47 (  0.47)	Loss_d 0.692 (0.692)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.47 (  0.47)	test_corr_d  -0.06 ( -0.06)
Test: [  1/  1]	Loss 0.692 (0.692)	test_acc   0.42 (  0.42)	test_minacc   0.42 (  0.42)	test_majacc   0.47 (  0.47)	Loss_d 0.692 (0.692)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.47 (  0.47)	test_corr_d  -0.06 ( -0.06)
Overall Timing[ 22/  1]	epoch_time 0.0453 (0.0435)	validation_time 0.0005 (0.0007)	train_time 0.0448 (0.0427)
record: (train_acc, test_acc) (0.7227000323534012, 0.7740000486373901)
last accs (train_acc, test_acc) (0.5315000110268593, 0.4230000078678131)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.94it/s] 19%|#9        | 5/26 [00:00<00:00, 22.55it/s] 31%|###       | 8/26 [00:00<00:00, 23.53it/s] 46%|####6     | 12/26 [00:00<00:00, 27.54it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.78it/s] 69%|######9   | 18/26 [00:00<00:00, 27.19it/s] 85%|########4 | 22/26 [00:00<00:00, 29.67it/s] 96%|#########6| 25/26 [00:00<00:00, 29.69it/s]100%|##########| 26/26 [00:01<00:00, 25.75it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 598 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 599 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 600 200
penalty weights 10000.0
l1 at pgd_anneal_iters 6.419924259185791
set z to 6.355725016593933
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 601 200
penalty weights 10000.0
args.step pgd_anneal_iters 601 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 602 200
penalty weights 10000.0
args.step pgd_anneal_iters 602 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 603 200
penalty weights 10000.0
args.step pgd_anneal_iters 603 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 604 200
penalty weights 10000.0
args.step pgd_anneal_iters 604 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 605 200
penalty weights 10000.0
args.step pgd_anneal_iters 605 600
dim_v 512
rho, theta 382 tensor(-0.0110, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 606 200
penalty weights 10000.0
args.step pgd_anneal_iters 606 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 607 200
penalty weights 10000.0
args.step pgd_anneal_iters 607 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 608 200
penalty weights 10000.0
args.step pgd_anneal_iters 608 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 609 200
penalty weights 10000.0
args.step pgd_anneal_iters 609 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 610 200
penalty weights 10000.0
args.step pgd_anneal_iters 610 600
dim_v 512
rho, theta 390 tensor(-0.0161, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 611 200
penalty weights 10000.0
args.step pgd_anneal_iters 611 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 612 200
penalty weights 10000.0
args.step pgd_anneal_iters 612 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 613 200
penalty weights 10000.0
args.step pgd_anneal_iters 613 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 614 200
penalty weights 10000.0
args.step pgd_anneal_iters 614 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 615 200
penalty weights 10000.0
args.step pgd_anneal_iters 615 600
dim_v 512
rho, theta 281 tensor(0.0053, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 616 200
penalty weights 10000.0
args.step pgd_anneal_iters 616 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 617 200
penalty weights 10000.0
args.step pgd_anneal_iters 617 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 618 200
penalty weights 10000.0
args.step pgd_anneal_iters 618 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 619 200
penalty weights 10000.0
args.step pgd_anneal_iters 619 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 620 200
penalty weights 10000.0
args.step pgd_anneal_iters 620 600
dim_v 512
rho, theta 233 tensor(0.0045, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 621 200
penalty weights 10000.0
args.step pgd_anneal_iters 621 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 622 200
penalty weights 10000.0
args.step pgd_anneal_iters 622 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 623 200
penalty weights 10000.0
args.step pgd_anneal_iters 623 600
final projection at end of training
dim_v 512
rho, theta 223 tensor(0.0020, device='cuda:0')
Epoch: [23][  26/  26]	Loss 0.001 (0.661)	train_nll   0.59 (  0.90)	train_penalty   0.00 (  0.66)	weight_norm  35.16 ( 26.08)	train_acc   0.67 (  0.58)	train_minacc   0.24 (  0.44)	train_majacc   0.74 (  0.61)	train_corr   0.00 (  0.00)	l1 7.4047 (7.0950)	zero_count 0.0000 (29.5620)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.29it/s] 23%|##3       | 6/26 [00:00<00:00, 26.47it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.47it/s] 42%|####2     | 11/26 [00:00<00:00, 34.35it/s] 62%|######1   | 16/26 [00:00<00:00, 39.03it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.03it/s] 81%|########  | 21/26 [00:00<00:00, 37.35it/s]100%|##########| 26/26 [00:00<00:00, 40.67it/s]100%|##########| 26/26 [00:00<00:00, 32.76it/s]
Test: [   0/  26]	Loss 0.686 (0.686)	test_acc   0.48 (  0.48)	test_minacc   0.52 (  0.52)	test_majacc   0.47 (  0.47)	Loss_d 0.686 (0.686)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.46 (  0.46)
Test: [  10/  26]	Loss 0.621 (0.688)	test_acc   0.54 (  0.50)	test_minacc   0.51 (  0.49)	test_majacc   0.55 (  0.50)	Loss_d 0.621 (0.688)	test_acc_d   0.54 (  0.50)	test_minacc_d   0.51 (  0.49)	test_majacc_d   0.55 (  0.50)	test_corr_d   0.41 (  0.45)
Test: [  20/  26]	Loss 0.689 (0.676)	test_acc   0.47 (  0.50)	test_minacc   0.43 (  0.50)	test_majacc   0.47 (  0.50)	Loss_d 0.689 (0.676)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.43 (  0.50)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.44 (  0.45)
Test: [  26/  26]	Loss 0.618 (0.669)	test_acc   0.48 (  0.50)	test_minacc   0.41 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.618 (0.669)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.41 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.45 (  0.45)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.42it/s]
Test: [  0/  1]	Loss 1.376 (1.376)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.376 (1.376)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.35 (  0.35)
Test: [  1/  1]	Loss 1.376 (1.376)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.376 (1.376)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.35 (  0.35)
Overall Timing[ 23/  1]	epoch_time 0.0439 (0.0436)	validation_time 0.0003 (0.0007)	train_time 0.0436 (0.0427)
record: (train_acc, test_acc) (0.7227000323534012, 0.7740000486373901)
last accs (train_acc, test_acc) (0.5002000099420547, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 20.24it/s] 23%|##3       | 6/26 [00:00<00:00, 24.31it/s] 35%|###4      | 9/26 [00:00<00:00, 26.59it/s] 50%|#####     | 13/26 [00:00<00:00, 28.48it/s] 65%|######5   | 17/26 [00:00<00:00, 29.83it/s] 81%|########  | 21/26 [00:00<00:00, 31.89it/s] 96%|#########6| 25/26 [00:00<00:00, 31.81it/s]100%|##########| 26/26 [00:00<00:00, 27.88it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 624 200
penalty weights 10000.0
args.step pgd_anneal_iters 624 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 625 200
penalty weights 10000.0
args.step pgd_anneal_iters 625 600
dim_v 512
rho, theta 219 tensor(0.0010, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 626 200
penalty weights 10000.0
args.step pgd_anneal_iters 626 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 627 200
penalty weights 10000.0
args.step pgd_anneal_iters 627 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 628 200
penalty weights 10000.0
args.step pgd_anneal_iters 628 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 629 200
penalty weights 10000.0
args.step pgd_anneal_iters 629 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 630 200
penalty weights 10000.0
args.step pgd_anneal_iters 630 600
dim_v 512
rho, theta 206 tensor(0.0014, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 631 200
penalty weights 10000.0
args.step pgd_anneal_iters 631 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 632 200
penalty weights 10000.0
args.step pgd_anneal_iters 632 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 633 200
penalty weights 10000.0
args.step pgd_anneal_iters 633 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 634 200
penalty weights 10000.0
args.step pgd_anneal_iters 634 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 635 200
penalty weights 10000.0
args.step pgd_anneal_iters 635 600
dim_v 512
rho, theta 205 tensor(0.0008, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 636 200
penalty weights 10000.0
args.step pgd_anneal_iters 636 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 637 200
penalty weights 10000.0
args.step pgd_anneal_iters 637 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 638 200
penalty weights 10000.0
args.step pgd_anneal_iters 638 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 639 200
penalty weights 10000.0
args.step pgd_anneal_iters 639 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 640 200
penalty weights 10000.0
args.step pgd_anneal_iters 640 600
dim_v 512
rho, theta 202 tensor(0.0005, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 641 200
penalty weights 10000.0
args.step pgd_anneal_iters 641 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 642 200
penalty weights 10000.0
args.step pgd_anneal_iters 642 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 643 200
penalty weights 10000.0
args.step pgd_anneal_iters 643 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 644 200
penalty weights 10000.0
args.step pgd_anneal_iters 644 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 645 200
penalty weights 10000.0
args.step pgd_anneal_iters 645 600
dim_v 512
rho, theta 195 tensor(0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 646 200
penalty weights 10000.0
args.step pgd_anneal_iters 646 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 647 200
penalty weights 10000.0
args.step pgd_anneal_iters 647 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 648 200
penalty weights 10000.0
args.step pgd_anneal_iters 648 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 649 200
penalty weights 10000.0
args.step pgd_anneal_iters 649 600
final projection at end of training
dim_v 512
rho, theta 193 tensor(9.4362e-05, device='cuda:0')
Epoch: [24][  26/  26]	Loss 0.000 (0.005)	train_nll   0.64 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  42.56 ( 40.33)	train_acc   0.48 (  0.56)	train_minacc   0.38 (  0.45)	train_majacc   0.50 (  0.58)	train_corr   0.00 (  0.00)	l1 6.4777 (6.6381)	zero_count 0.0000 (70.8240)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.42it/s] 27%|##6       | 7/26 [00:00<00:00, 35.90it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.90it/s] 50%|#####     | 13/26 [00:00<00:00, 43.27it/s] 69%|######9   | 18/26 [00:00<00:00, 44.87it/s]                                                69%|######9   | 18/26 [00:00<00:00, 44.87it/s] 88%|########8 | 23/26 [00:00<00:00, 45.77it/s]100%|##########| 26/26 [00:00<00:00, 37.90it/s]
Test: [   0/  26]	Loss 0.643 (0.643)	test_acc   0.48 (  0.48)	test_minacc   0.52 (  0.52)	test_majacc   0.48 (  0.48)	Loss_d 0.643 (0.643)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.40 (  0.40)
Test: [  10/  26]	Loss 0.638 (0.647)	test_acc   0.54 (  0.50)	test_minacc   0.51 (  0.50)	test_majacc   0.55 (  0.50)	Loss_d 0.638 (0.647)	test_acc_d   0.54 (  0.50)	test_minacc_d   0.51 (  0.50)	test_majacc_d   0.55 (  0.50)	test_corr_d   0.35 (  0.39)
Test: [  20/  26]	Loss 0.661 (0.645)	test_acc   0.47 (  0.50)	test_minacc   0.43 (  0.51)	test_majacc   0.47 (  0.50)	Loss_d 0.661 (0.645)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.43 (  0.51)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.38 (  0.40)
Test: [  26/  26]	Loss 0.639 (0.644)	test_acc   0.48 (  0.50)	test_minacc   0.41 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.639 (0.644)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.41 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.39 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.63it/s]
Test: [  0/  1]	Loss 1.016 (1.016)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.016 (1.016)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.24 (  0.24)
Test: [  1/  1]	Loss 1.016 (1.016)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.016 (1.016)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.24 (  0.24)
Overall Timing[ 24/  1]	epoch_time 0.0406 (0.0434)	validation_time 0.0007 (0.0007)	train_time 0.0399 (0.0426)
record: (train_acc, test_acc) (0.7227000323534012, 0.7740000486373901)
last accs (train_acc, test_acc) (0.5008000087440014, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.77it/s] 15%|#5        | 4/26 [00:00<00:01, 15.00it/s] 31%|###       | 8/26 [00:00<00:00, 22.14it/s] 42%|####2     | 11/26 [00:00<00:00, 24.48it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.06it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.35it/s] 88%|########8 | 23/26 [00:00<00:00, 29.91it/s]100%|##########| 26/26 [00:01<00:00, 24.41it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 650 200
penalty weights 10000.0
args.step pgd_anneal_iters 650 600
dim_v 512
rho, theta 193 tensor(1.8850e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 651 200
penalty weights 10000.0
args.step pgd_anneal_iters 651 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 652 200
penalty weights 10000.0
args.step pgd_anneal_iters 652 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 653 200
penalty weights 10000.0
args.step pgd_anneal_iters 653 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 654 200
penalty weights 10000.0
args.step pgd_anneal_iters 654 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 655 200
penalty weights 10000.0
args.step pgd_anneal_iters 655 600
dim_v 512
rho, theta 193 tensor(5.5969e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 656 200
penalty weights 10000.0
args.step pgd_anneal_iters 656 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 657 200
penalty weights 10000.0
args.step pgd_anneal_iters 657 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 658 200
penalty weights 10000.0
args.step pgd_anneal_iters 658 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 659 200
penalty weights 10000.0
args.step pgd_anneal_iters 659 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 660 200
penalty weights 10000.0
args.step pgd_anneal_iters 660 600
dim_v 512
rho, theta 195 tensor(2.8365e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 661 200
penalty weights 10000.0
args.step pgd_anneal_iters 661 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 662 200
penalty weights 10000.0
args.step pgd_anneal_iters 662 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 663 200
penalty weights 10000.0
args.step pgd_anneal_iters 663 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 664 200
penalty weights 10000.0
args.step pgd_anneal_iters 664 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 665 200
penalty weights 10000.0
args.step pgd_anneal_iters 665 600
dim_v 512
rho, theta 197 tensor(4.6480e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 666 200
penalty weights 10000.0
args.step pgd_anneal_iters 666 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 667 200
penalty weights 10000.0
args.step pgd_anneal_iters 667 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 668 200
penalty weights 10000.0
args.step pgd_anneal_iters 668 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 669 200
penalty weights 10000.0
args.step pgd_anneal_iters 669 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 670 200
penalty weights 10000.0
args.step pgd_anneal_iters 670 600
dim_v 512
rho, theta 202 tensor(-7.1831e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 671 200
penalty weights 10000.0
args.step pgd_anneal_iters 671 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 672 200
penalty weights 10000.0
args.step pgd_anneal_iters 672 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 673 200
penalty weights 10000.0
args.step pgd_anneal_iters 673 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 674 200
penalty weights 10000.0
args.step pgd_anneal_iters 674 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 675 200
penalty weights 10000.0
args.step pgd_anneal_iters 675 600
dim_v 512
rho, theta 215 tensor(-1.0312e-05, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [25][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  43.13 ( 42.97)	train_acc   0.49 (  0.50)	train_minacc   0.41 (  0.50)	train_majacc   0.51 (  0.50)	train_corr   0.00 (  0.00)	l1 6.3712 (6.3775)	zero_count 0.0000 (73.8270)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.88it/s] 23%|##3       | 6/26 [00:00<00:00, 32.53it/s]                                               23%|##3       | 6/26 [00:00<00:00, 32.53it/s] 42%|####2     | 11/26 [00:00<00:00, 39.51it/s] 62%|######1   | 16/26 [00:00<00:00, 42.10it/s]                                                62%|######1   | 16/26 [00:00<00:00, 42.10it/s] 81%|########  | 21/26 [00:00<00:00, 43.17it/s]100%|##########| 26/26 [00:00<00:00, 45.02it/s]100%|##########| 26/26 [00:00<00:00, 36.91it/s]
Test: [   0/  26]	Loss 0.649 (0.649)	test_acc   0.48 (  0.48)	test_minacc   0.52 (  0.52)	test_majacc   0.47 (  0.47)	Loss_d 0.649 (0.649)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.32 (  0.32)
Test: [  10/  26]	Loss 0.648 (0.655)	test_acc   0.54 (  0.50)	test_minacc   0.51 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.648 (0.655)	test_acc_d   0.54 (  0.50)	test_minacc_d   0.51 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.26 (  0.31)
Test: [  20/  26]	Loss 0.665 (0.654)	test_acc   0.47 (  0.50)	test_minacc   0.43 (  0.51)	test_majacc   0.47 (  0.50)	Loss_d 0.665 (0.654)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.43 (  0.51)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.30 (  0.31)
Test: [  26/  26]	Loss 0.649 (0.653)	test_acc   0.49 (  0.50)	test_minacc   0.41 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.649 (0.653)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.41 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.32 (  0.31)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.80it/s]
Test: [  0/  1]	Loss 1.024 (1.024)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.48 (  0.48)	Loss_d 1.024 (1.024)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.16 (  0.16)
Test: [  1/  1]	Loss 1.024 (1.024)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.48 (  0.48)	Loss_d 1.024 (1.024)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.16 (  0.16)
Overall Timing[ 25/  1]	epoch_time 0.0421 (0.0434)	validation_time 0.0005 (0.0007)	train_time 0.0417 (0.0425)
record: (train_acc, test_acc) (0.7227000323534012, 0.7740000486373901)
last accs (train_acc, test_acc) (0.5006000101268292, 0.49900001287460327)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.77it/s] 15%|#5        | 4/26 [00:00<00:01, 21.15it/s] 27%|##6       | 7/26 [00:00<00:00, 23.63it/s] 38%|###8      | 10/26 [00:00<00:00, 24.39it/s] 54%|#####3    | 14/26 [00:00<00:00, 27.48it/s] 65%|######5   | 17/26 [00:00<00:00, 27.08it/s] 77%|#######6  | 20/26 [00:00<00:00, 27.68it/s] 92%|#########2| 24/26 [00:00<00:00, 30.52it/s]100%|##########| 26/26 [00:01<00:00, 25.45it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 676 200
penalty weights 10000.0
args.step pgd_anneal_iters 676 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 677 200
penalty weights 10000.0
args.step pgd_anneal_iters 677 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 678 200
penalty weights 10000.0
args.step pgd_anneal_iters 678 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 679 200
penalty weights 10000.0
args.step pgd_anneal_iters 679 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 680 200
penalty weights 10000.0
args.step pgd_anneal_iters 680 600
dim_v 512
rho, theta 227 tensor(-1.0271e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 681 200
penalty weights 10000.0
args.step pgd_anneal_iters 681 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 682 200
penalty weights 10000.0
args.step pgd_anneal_iters 682 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 683 200
penalty weights 10000.0
args.step pgd_anneal_iters 683 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 684 200
penalty weights 10000.0
args.step pgd_anneal_iters 684 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 685 200
penalty weights 10000.0
args.step pgd_anneal_iters 685 600
dim_v 512
rho, theta 253 tensor(-3.3135e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 686 200
penalty weights 10000.0
args.step pgd_anneal_iters 686 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 687 200
penalty weights 10000.0
args.step pgd_anneal_iters 687 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 688 200
penalty weights 10000.0
args.step pgd_anneal_iters 688 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 689 200
penalty weights 10000.0
args.step pgd_anneal_iters 689 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 690 200
penalty weights 10000.0
args.step pgd_anneal_iters 690 600
dim_v 512
rho, theta 254 tensor(1.6493e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 691 200
penalty weights 10000.0
args.step pgd_anneal_iters 691 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 692 200
penalty weights 10000.0
args.step pgd_anneal_iters 692 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 693 200
penalty weights 10000.0
args.step pgd_anneal_iters 693 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 694 200
penalty weights 10000.0
args.step pgd_anneal_iters 694 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 695 200
penalty weights 10000.0
args.step pgd_anneal_iters 695 600
dim_v 512
rho, theta 254 tensor(7.3900e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 696 200
penalty weights 10000.0
args.step pgd_anneal_iters 696 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 697 200
penalty weights 10000.0
args.step pgd_anneal_iters 697 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 698 200
penalty weights 10000.0
args.step pgd_anneal_iters 698 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 699 200
penalty weights 10000.0
args.step pgd_anneal_iters 699 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 700 200
penalty weights 10000.0
args.step pgd_anneal_iters 700 600
dim_v 512
rho, theta 280 tensor(-2.8491e-06, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 701 200
penalty weights 10000.0
args.step pgd_anneal_iters 701 600
final projection at end of training
dim_v 512
rho, theta 344 tensor(-9.9099e-07, device='cuda:0')
Epoch: [26][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  43.17 ( 43.15)	train_acc   0.48 (  0.50)	train_minacc   0.41 (  0.51)	train_majacc   0.50 (  0.50)	train_corr   0.00 (  0.00)	l1 6.3557 (6.3584)	zero_count 231.0000 (58.5030)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.30it/s] 23%|##3       | 6/26 [00:00<00:00, 21.49it/s]                                               23%|##3       | 6/26 [00:00<00:00, 21.49it/s] 42%|####2     | 11/26 [00:00<00:00, 30.40it/s] 62%|######1   | 16/26 [00:00<00:00, 36.42it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.42it/s] 81%|########  | 21/26 [00:00<00:00, 35.40it/s]100%|##########| 26/26 [00:00<00:00, 30.35it/s]
Test: [   0/  26]	Loss 0.661 (0.661)	test_acc   0.48 (  0.48)	test_minacc   0.52 (  0.52)	test_majacc   0.47 (  0.47)	Loss_d 0.661 (0.661)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.25 (  0.25)
Test: [  10/  26]	Loss 0.660 (0.667)	test_acc   0.54 (  0.50)	test_minacc   0.51 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.660 (0.667)	test_acc_d   0.54 (  0.50)	test_minacc_d   0.51 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.19 (  0.24)
Test: [  20/  26]	Loss 0.676 (0.666)	test_acc   0.47 (  0.50)	test_minacc   0.43 (  0.51)	test_majacc   0.47 (  0.50)	Loss_d 0.676 (0.666)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.43 (  0.51)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.22 (  0.24)
Test: [  26/  26]	Loss 0.663 (0.665)	test_acc   0.48 (  0.50)	test_minacc   0.41 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.663 (0.665)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.41 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.24 (  0.24)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.63it/s]
Test: [  0/  1]	Loss 0.992 (0.992)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.49 (  0.49)	Loss_d 0.992 (0.992)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 0.992 (0.992)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.49 (  0.49)	Loss_d 0.992 (0.992)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.09 (  0.09)
Overall Timing[ 26/  1]	epoch_time 0.0422 (0.0433)	validation_time 0.0004 (0.0007)	train_time 0.0417 (0.0425)
record: (train_acc, test_acc) (0.7227000323534012, 0.7740000486373901)
last accs (train_acc, test_acc) (0.5000000087916852, 0.5020000338554382)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.28it/s] 15%|#5        | 4/26 [00:00<00:01, 16.71it/s] 31%|###       | 8/26 [00:00<00:00, 24.41it/s] 46%|####6     | 12/26 [00:00<00:00, 28.73it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.15it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.54it/s] 88%|########8 | 23/26 [00:00<00:00, 31.03it/s]100%|##########| 26/26 [00:01<00:00, 25.75it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 702 200
penalty weights 10000.0
args.step pgd_anneal_iters 702 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 703 200
penalty weights 10000.0
args.step pgd_anneal_iters 703 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 704 200
penalty weights 10000.0
args.step pgd_anneal_iters 704 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 705 200
penalty weights 10000.0
args.step pgd_anneal_iters 705 600
dim_v 512
rho, theta 385 tensor(-7.6121e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 706 200
penalty weights 10000.0
args.step pgd_anneal_iters 706 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 707 200
penalty weights 10000.0
args.step pgd_anneal_iters 707 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 708 200
penalty weights 10000.0
args.step pgd_anneal_iters 708 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 709 200
penalty weights 10000.0
args.step pgd_anneal_iters 709 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 710 200
penalty weights 10000.0
args.step pgd_anneal_iters 710 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 711 200
penalty weights 10000.0
args.step pgd_anneal_iters 711 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 712 200
penalty weights 10000.0
args.step pgd_anneal_iters 712 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 713 200
penalty weights 10000.0
args.step pgd_anneal_iters 713 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 714 200
penalty weights 10000.0
args.step pgd_anneal_iters 714 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 715 200
penalty weights 10000.0
args.step pgd_anneal_iters 715 600
dim_v 512
rho, theta 374 tensor(-1.5556e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 716 200
penalty weights 10000.0
args.step pgd_anneal_iters 716 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 717 200
penalty weights 10000.0
args.step pgd_anneal_iters 717 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 718 200
penalty weights 10000.0
args.step pgd_anneal_iters 718 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 719 200
penalty weights 10000.0
args.step pgd_anneal_iters 719 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 720 200
penalty weights 10000.0
args.step pgd_anneal_iters 720 600
dim_v 512
rho, theta 372 tensor(-2.6463e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 721 200
penalty weights 10000.0
args.step pgd_anneal_iters 721 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 722 200
penalty weights 10000.0
args.step pgd_anneal_iters 722 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 723 200
penalty weights 10000.0
args.step pgd_anneal_iters 723 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 724 200
penalty weights 10000.0
args.step pgd_anneal_iters 724 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 725 200
penalty weights 10000.0
args.step pgd_anneal_iters 725 600
dim_v 512
rho, theta 374 tensor(-5.0278e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 726 200
penalty weights 10000.0
args.step pgd_anneal_iters 726 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 727 200
penalty weights 10000.0
args.step pgd_anneal_iters 727 600
final projection at end of training
dim_v 512
rho, theta 374 tensor(-1.6556e-06, device='cuda:0')
Epoch: [27][  26/  26]	Loss 0.000 (0.000)	train_nll   0.67 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  43.17 ( 43.17)	train_acc   0.48 (  0.50)	train_minacc   0.41 (  0.50)	train_majacc   0.50 (  0.50)	train_corr   0.00 (  0.00)	l1 6.3559 (6.3559)	zero_count 0.0000 (27.5340)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.05it/s] 23%|##3       | 6/26 [00:00<00:00, 28.44it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.44it/s] 42%|####2     | 11/26 [00:00<00:00, 36.15it/s] 62%|######1   | 16/26 [00:00<00:00, 39.37it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.37it/s] 81%|########  | 21/26 [00:00<00:00, 41.40it/s]100%|##########| 26/26 [00:00<00:00, 43.72it/s]100%|##########| 26/26 [00:00<00:00, 35.79it/s]
Test: [   0/  26]	Loss 0.662 (0.662)	test_acc   0.48 (  0.48)	test_minacc   0.52 (  0.52)	test_majacc   0.47 (  0.47)	Loss_d 0.662 (0.662)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.26 (  0.26)
Test: [  10/  26]	Loss 0.661 (0.666)	test_acc   0.54 (  0.50)	test_minacc   0.51 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.661 (0.666)	test_acc_d   0.54 (  0.50)	test_minacc_d   0.51 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.19 (  0.24)
Test: [  20/  26]	Loss 0.674 (0.665)	test_acc   0.47 (  0.50)	test_minacc   0.43 (  0.51)	test_majacc   0.47 (  0.50)	Loss_d 0.674 (0.665)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.43 (  0.51)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.23 (  0.24)
Test: [  26/  26]	Loss 0.665 (0.664)	test_acc   0.48 (  0.50)	test_minacc   0.41 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.665 (0.664)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.41 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.25 (  0.25)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.44it/s]
Test: [  0/  1]	Loss 0.978 (0.978)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.49 (  0.49)	Loss_d 0.978 (0.978)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 0.978 (0.978)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.49 (  0.49)	Loss_d 0.978 (0.978)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.11 (  0.11)
Overall Timing[ 27/  1]	epoch_time 0.0439 (0.0434)	validation_time 0.0003 (0.0007)	train_time 0.0436 (0.0426)
record: (train_acc, test_acc) (0.7227000323534012, 0.7740000486373901)
last accs (train_acc, test_acc) (0.500000006467104, 0.5020000338554382)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.20it/s] 15%|#5        | 4/26 [00:00<00:01, 18.25it/s] 31%|###       | 8/26 [00:00<00:00, 23.59it/s] 46%|####6     | 12/26 [00:00<00:00, 27.92it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.66it/s] 69%|######9   | 18/26 [00:00<00:00, 27.70it/s] 85%|########4 | 22/26 [00:00<00:00, 30.06it/s]100%|##########| 26/26 [00:00<00:00, 29.84it/s]100%|##########| 26/26 [00:01<00:00, 25.39it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 728 200
penalty weights 10000.0
args.step pgd_anneal_iters 728 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 729 200
penalty weights 10000.0
args.step pgd_anneal_iters 729 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 730 200
penalty weights 10000.0
args.step pgd_anneal_iters 730 600
dim_v 512
rho, theta 376 tensor(-2.7611e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 731 200
penalty weights 10000.0
args.step pgd_anneal_iters 731 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 732 200
penalty weights 10000.0
args.step pgd_anneal_iters 732 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 733 200
penalty weights 10000.0
args.step pgd_anneal_iters 733 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 734 200
penalty weights 10000.0
args.step pgd_anneal_iters 734 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 735 200
penalty weights 10000.0
args.step pgd_anneal_iters 735 600
dim_v 512
rho, theta 366 tensor(-4.0083e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 736 200
penalty weights 10000.0
args.step pgd_anneal_iters 736 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 737 200
penalty weights 10000.0
args.step pgd_anneal_iters 737 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 738 200
penalty weights 10000.0
args.step pgd_anneal_iters 738 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 739 200
penalty weights 10000.0
args.step pgd_anneal_iters 739 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 740 200
penalty weights 10000.0
args.step pgd_anneal_iters 740 600
dim_v 512
rho, theta 360 tensor(-3.5043e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 741 200
penalty weights 10000.0
args.step pgd_anneal_iters 741 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 742 200
penalty weights 10000.0
args.step pgd_anneal_iters 742 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 743 200
penalty weights 10000.0
args.step pgd_anneal_iters 743 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 744 200
penalty weights 10000.0
args.step pgd_anneal_iters 744 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 745 200
penalty weights 10000.0
args.step pgd_anneal_iters 745 600
dim_v 512
rho, theta 369 tensor(-1.4743e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 746 200
penalty weights 10000.0
args.step pgd_anneal_iters 746 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 747 200
penalty weights 10000.0
args.step pgd_anneal_iters 747 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 748 200
penalty weights 10000.0
args.step pgd_anneal_iters 748 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 749 200
penalty weights 10000.0
args.step pgd_anneal_iters 749 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 750 200
penalty weights 10000.0
args.step pgd_anneal_iters 750 600
dim_v 512
rho, theta 363 tensor(-3.6247e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 751 200
penalty weights 10000.0
args.step pgd_anneal_iters 751 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 752 200
penalty weights 10000.0
args.step pgd_anneal_iters 752 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 753 200
penalty weights 10000.0
args.step pgd_anneal_iters 753 600
final projection at end of training
dim_v 512
rho, theta 368 tensor(-2.2188e-06, device='cuda:0')
Epoch: [28][  26/  26]	Loss 0.000 (0.000)	train_nll   0.67 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  43.17 ( 43.17)	train_acc   0.48 (  0.50)	train_minacc   0.41 (  0.50)	train_majacc   0.50 (  0.50)	train_corr   0.00 (  0.00)	l1 6.3562 (6.3562)	zero_count 0.0000 (33.4620)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.42it/s] 23%|##3       | 6/26 [00:00<00:00, 30.66it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.66it/s] 42%|####2     | 11/26 [00:00<00:00, 37.76it/s] 62%|######1   | 16/26 [00:00<00:00, 41.80it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.80it/s] 81%|########  | 21/26 [00:00<00:00, 40.81it/s]100%|##########| 26/26 [00:00<00:00, 43.63it/s]100%|##########| 26/26 [00:00<00:00, 35.96it/s]
Test: [   0/  26]	Loss 0.663 (0.663)	test_acc   0.48 (  0.48)	test_minacc   0.52 (  0.52)	test_majacc   0.47 (  0.47)	Loss_d 0.663 (0.663)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.25 (  0.25)
Test: [  10/  26]	Loss 0.661 (0.667)	test_acc   0.54 (  0.50)	test_minacc   0.51 (  0.50)	test_majacc   0.54 (  0.49)	Loss_d 0.661 (0.667)	test_acc_d   0.54 (  0.50)	test_minacc_d   0.51 (  0.50)	test_majacc_d   0.54 (  0.49)	test_corr_d   0.18 (  0.23)
Test: [  20/  26]	Loss 0.674 (0.666)	test_acc   0.47 (  0.50)	test_minacc   0.43 (  0.51)	test_majacc   0.47 (  0.50)	Loss_d 0.674 (0.666)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.43 (  0.51)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.22 (  0.24)
Test: [  26/  26]	Loss 0.666 (0.665)	test_acc   0.48 (  0.50)	test_minacc   0.41 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.666 (0.665)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.41 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.24 (  0.24)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.54it/s]
Test: [  0/  1]	Loss 0.985 (0.985)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.49 (  0.49)	Loss_d 0.985 (0.985)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 0.985 (0.985)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.49 (  0.49)	Loss_d 0.985 (0.985)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.11 (  0.11)
Overall Timing[ 28/  1]	epoch_time 0.0433 (0.0434)	validation_time 0.0004 (0.0007)	train_time 0.0428 (0.0426)
record: (train_acc, test_acc) (0.7227000323534012, 0.7740000486373901)
last accs (train_acc, test_acc) (0.4999000122845173, 0.5020000338554382)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.65it/s] 19%|#9        | 5/26 [00:00<00:00, 23.05it/s] 31%|###       | 8/26 [00:00<00:00, 23.39it/s] 46%|####6     | 12/26 [00:00<00:00, 25.47it/s] 62%|######1   | 16/26 [00:00<00:00, 28.79it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.11it/s] 85%|########4 | 22/26 [00:00<00:00, 27.81it/s]100%|##########| 26/26 [00:00<00:00, 30.17it/s]100%|##########| 26/26 [00:01<00:00, 25.87it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 754 200
penalty weights 10000.0
args.step pgd_anneal_iters 754 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 755 200
penalty weights 10000.0
args.step pgd_anneal_iters 755 600
dim_v 512
rho, theta 367 tensor(-1.3929e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 756 200
penalty weights 10000.0
args.step pgd_anneal_iters 756 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 757 200
penalty weights 10000.0
args.step pgd_anneal_iters 757 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 758 200
penalty weights 10000.0
args.step pgd_anneal_iters 758 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 759 200
penalty weights 10000.0
args.step pgd_anneal_iters 759 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 760 200
penalty weights 10000.0
args.step pgd_anneal_iters 760 600
dim_v 512
rho, theta 371 tensor(-3.5417e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 761 200
penalty weights 10000.0
args.step pgd_anneal_iters 761 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 762 200
penalty weights 10000.0
args.step pgd_anneal_iters 762 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 763 200
penalty weights 10000.0
args.step pgd_anneal_iters 763 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 764 200
penalty weights 10000.0
args.step pgd_anneal_iters 764 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 765 200
penalty weights 10000.0
args.step pgd_anneal_iters 765 600
dim_v 512
rho, theta 355 tensor(-1.9703e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 766 200
penalty weights 10000.0
args.step pgd_anneal_iters 766 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 767 200
penalty weights 10000.0
args.step pgd_anneal_iters 767 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 768 200
penalty weights 10000.0
args.step pgd_anneal_iters 768 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 769 200
penalty weights 10000.0
args.step pgd_anneal_iters 769 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 770 200
penalty weights 10000.0
args.step pgd_anneal_iters 770 600
dim_v 512
rho, theta 359 tensor(-6.7684e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 771 200
penalty weights 10000.0
args.step pgd_anneal_iters 771 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 772 200
penalty weights 10000.0
args.step pgd_anneal_iters 772 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 773 200
penalty weights 10000.0
args.step pgd_anneal_iters 773 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 774 200
penalty weights 10000.0
args.step pgd_anneal_iters 774 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 775 200
penalty weights 10000.0
args.step pgd_anneal_iters 775 600
dim_v 512
rho, theta 344 tensor(-1.8120e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 776 200
penalty weights 10000.0
args.step pgd_anneal_iters 776 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 777 200
penalty weights 10000.0
args.step pgd_anneal_iters 777 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 778 200
penalty weights 10000.0
args.step pgd_anneal_iters 778 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 779 200
penalty weights 10000.0
args.step pgd_anneal_iters 779 600
final projection at end of training
dim_v 512
rho, theta 364 tensor(-2.3372e-06, device='cuda:0')
Epoch: [29][  26/  26]	Loss 0.000 (0.000)	train_nll   0.67 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  43.17 ( 43.17)	train_acc   0.48 (  0.50)	train_minacc   0.41 (  0.51)	train_majacc   0.50 (  0.50)	train_corr   0.00 (  0.00)	l1 6.3565 (6.3562)	zero_count 0.0000 (35.1780)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.16it/s] 31%|###       | 8/26 [00:00<00:00, 39.47it/s]                                               31%|###       | 8/26 [00:00<00:00, 39.47it/s] 50%|#####     | 13/26 [00:00<00:00, 41.05it/s] 69%|######9   | 18/26 [00:00<00:00, 39.07it/s]                                                69%|######9   | 18/26 [00:00<00:00, 39.07it/s] 88%|########8 | 23/26 [00:00<00:00, 40.51it/s]100%|##########| 26/26 [00:00<00:00, 37.23it/s]
Test: [   0/  26]	Loss 0.664 (0.664)	test_acc   0.48 (  0.48)	test_minacc   0.52 (  0.52)	test_majacc   0.47 (  0.47)	Loss_d 0.664 (0.664)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.24 (  0.24)
Test: [  10/  26]	Loss 0.663 (0.668)	test_acc   0.54 (  0.50)	test_minacc   0.51 (  0.50)	test_majacc   0.54 (  0.49)	Loss_d 0.663 (0.668)	test_acc_d   0.54 (  0.50)	test_minacc_d   0.51 (  0.50)	test_majacc_d   0.54 (  0.49)	test_corr_d   0.17 (  0.22)
Test: [  20/  26]	Loss 0.674 (0.667)	test_acc   0.47 (  0.50)	test_minacc   0.43 (  0.51)	test_majacc   0.47 (  0.50)	Loss_d 0.674 (0.667)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.43 (  0.51)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.22 (  0.23)
Test: [  26/  26]	Loss 0.667 (0.666)	test_acc   0.48 (  0.50)	test_minacc   0.41 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.667 (0.666)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.41 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.23 (  0.23)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.66it/s]
Test: [  0/  1]	Loss 0.987 (0.987)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.49 (  0.49)	Loss_d 0.987 (0.987)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.10 (  0.10)
Test: [  1/  1]	Loss 0.987 (0.987)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.49 (  0.49)	Loss_d 0.987 (0.987)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.10 (  0.10)
Overall Timing[ 29/  1]	epoch_time 0.0479 (0.0435)	validation_time 0.0004 (0.0007)	train_time 0.0475 (0.0427)
record: (train_acc, test_acc) (0.7227000323534012, 0.7740000486373901)
last accs (train_acc, test_acc) (0.5000000122785568, 0.5020000338554382)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.37it/s] 19%|#9        | 5/26 [00:00<00:00, 21.74it/s] 31%|###       | 8/26 [00:00<00:00, 23.72it/s] 42%|####2     | 11/26 [00:00<00:00, 24.59it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.07it/s] 69%|######9   | 18/26 [00:00<00:00, 27.68it/s] 81%|########  | 21/26 [00:00<00:00, 27.27it/s] 96%|#########6| 25/26 [00:00<00:00, 29.90it/s]100%|##########| 26/26 [00:01<00:00, 24.62it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 780 200
penalty weights 10000.0
args.step pgd_anneal_iters 780 600
dim_v 512
rho, theta 365 tensor(-5.0159e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 781 200
penalty weights 10000.0
args.step pgd_anneal_iters 781 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 782 200
penalty weights 10000.0
args.step pgd_anneal_iters 782 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 783 200
penalty weights 10000.0
args.step pgd_anneal_iters 783 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 784 200
penalty weights 10000.0
args.step pgd_anneal_iters 784 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 785 200
penalty weights 10000.0
args.step pgd_anneal_iters 785 600
dim_v 512
rho, theta 377 tensor(-3.2609e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 786 200
penalty weights 10000.0
args.step pgd_anneal_iters 786 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 787 200
penalty weights 10000.0
args.step pgd_anneal_iters 787 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 788 200
penalty weights 10000.0
args.step pgd_anneal_iters 788 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 789 200
penalty weights 10000.0
args.step pgd_anneal_iters 789 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 790 200
penalty weights 10000.0
args.step pgd_anneal_iters 790 600
dim_v 512
rho, theta 354 tensor(-1.8979e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 791 200
penalty weights 10000.0
args.step pgd_anneal_iters 791 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 792 200
penalty weights 10000.0
args.step pgd_anneal_iters 792 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 793 200
penalty weights 10000.0
args.step pgd_anneal_iters 793 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 794 200
penalty weights 10000.0
args.step pgd_anneal_iters 794 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 795 200
penalty weights 10000.0
args.step pgd_anneal_iters 795 600
dim_v 512
rho, theta 345 tensor(-1.3051e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 796 200
penalty weights 10000.0
args.step pgd_anneal_iters 796 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 797 200
penalty weights 10000.0
args.step pgd_anneal_iters 797 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 798 200
penalty weights 10000.0
args.step pgd_anneal_iters 798 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 799 200
penalty weights 10000.0
args.step pgd_anneal_iters 799 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 800 200
penalty weights 10000.0
args.step pgd_anneal_iters 800 600
dim_v 512
rho, theta 343 tensor(-6.8615e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 801 200
penalty weights 10000.0
args.step pgd_anneal_iters 801 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 802 200
penalty weights 10000.0
args.step pgd_anneal_iters 802 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 803 200
penalty weights 10000.0
args.step pgd_anneal_iters 803 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 804 200
penalty weights 10000.0
args.step pgd_anneal_iters 804 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 805 200
penalty weights 10000.0
args.step pgd_anneal_iters 805 600
dim_v 512
rho, theta 360 tensor(-2.3221e-06, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [30][  26/  26]	Loss 0.000 (0.000)	train_nll   0.67 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  43.17 ( 43.17)	train_acc   0.48 (  0.50)	train_minacc   0.41 (  0.51)	train_majacc   0.50 (  0.50)	train_corr   0.00 (  0.00)	l1 6.3567 (6.3562)	zero_count 0.0000 (35.8020)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.59it/s] 23%|##3       | 6/26 [00:00<00:00, 23.91it/s]                                               23%|##3       | 6/26 [00:00<00:00, 23.91it/s] 42%|####2     | 11/26 [00:00<00:00, 32.26it/s] 62%|######1   | 16/26 [00:00<00:00, 37.24it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.24it/s] 81%|########  | 21/26 [00:00<00:00, 38.96it/s]100%|##########| 26/26 [00:00<00:00, 32.83it/s]
Test: [   0/  26]	Loss 0.664 (0.664)	test_acc   0.48 (  0.48)	test_minacc   0.52 (  0.52)	test_majacc   0.47 (  0.47)	Loss_d 0.664 (0.664)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.24 (  0.24)
Test: [  10/  26]	Loss 0.663 (0.669)	test_acc   0.54 (  0.50)	test_minacc   0.51 (  0.50)	test_majacc   0.54 (  0.49)	Loss_d 0.663 (0.669)	test_acc_d   0.54 (  0.50)	test_minacc_d   0.51 (  0.50)	test_majacc_d   0.54 (  0.49)	test_corr_d   0.17 (  0.22)
Test: [  20/  26]	Loss 0.674 (0.668)	test_acc   0.47 (  0.50)	test_minacc   0.43 (  0.51)	test_majacc   0.47 (  0.50)	Loss_d 0.674 (0.668)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.43 (  0.51)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.21 (  0.22)
Test: [  26/  26]	Loss 0.667 (0.667)	test_acc   0.48 (  0.50)	test_minacc   0.41 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.667 (0.667)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.41 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.22 (  0.22)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.37it/s]
Test: [  0/  1]	Loss 0.987 (0.987)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.48 (  0.48)	Loss_d 0.987 (0.987)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.10 (  0.10)
Test: [  1/  1]	Loss 0.987 (0.987)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.48 (  0.48)	Loss_d 0.987 (0.987)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.10 (  0.10)
Overall Timing[ 30/  1]	epoch_time 0.0464 (0.0436)	validation_time 0.0005 (0.0006)	train_time 0.0459 (0.0428)
record: (train_acc, test_acc) (0.7227000323534012, 0.7740000486373901)
last accs (train_acc, test_acc) (0.5001000099480152, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.67it/s] 19%|#9        | 5/26 [00:00<00:01, 15.63it/s] 35%|###4      | 9/26 [00:00<00:00, 22.57it/s] 46%|####6     | 12/26 [00:00<00:00, 24.00it/s] 58%|#####7    | 15/26 [00:00<00:00, 24.86it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.09it/s] 85%|########4 | 22/26 [00:00<00:00, 28.05it/s] 96%|#########6| 25/26 [00:01<00:00, 27.70it/s]100%|##########| 26/26 [00:01<00:00, 23.19it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 806 200
penalty weights 10000.0
args.step pgd_anneal_iters 806 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 807 200
penalty weights 10000.0
args.step pgd_anneal_iters 807 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 808 200
penalty weights 10000.0
args.step pgd_anneal_iters 808 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 809 200
penalty weights 10000.0
args.step pgd_anneal_iters 809 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 810 200
penalty weights 10000.0
args.step pgd_anneal_iters 810 600
dim_v 512
rho, theta 374 tensor(-2.6042e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 811 200
penalty weights 10000.0
args.step pgd_anneal_iters 811 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 812 200
penalty weights 10000.0
args.step pgd_anneal_iters 812 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 813 200
penalty weights 10000.0
args.step pgd_anneal_iters 813 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 814 200
penalty weights 10000.0
args.step pgd_anneal_iters 814 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 815 200
penalty weights 10000.0
args.step pgd_anneal_iters 815 600
dim_v 512
rho, theta 353 tensor(-1.6218e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 816 200
penalty weights 10000.0
args.step pgd_anneal_iters 816 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 817 200
penalty weights 10000.0
args.step pgd_anneal_iters 817 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 818 200
penalty weights 10000.0
args.step pgd_anneal_iters 818 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 819 200
penalty weights 10000.0
args.step pgd_anneal_iters 819 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 820 200
penalty weights 10000.0
args.step pgd_anneal_iters 820 600
dim_v 512
rho, theta 343 tensor(-1.4555e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 821 200
penalty weights 10000.0
args.step pgd_anneal_iters 821 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 822 200
penalty weights 10000.0
args.step pgd_anneal_iters 822 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 823 200
penalty weights 10000.0
args.step pgd_anneal_iters 823 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 824 200
penalty weights 10000.0
args.step pgd_anneal_iters 824 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 825 200
penalty weights 10000.0
args.step pgd_anneal_iters 825 600
dim_v 512
rho, theta 352 tensor(3.1069e-08, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 826 200
penalty weights 10000.0
args.step pgd_anneal_iters 826 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 827 200
penalty weights 10000.0
args.step pgd_anneal_iters 827 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 828 200
penalty weights 10000.0
args.step pgd_anneal_iters 828 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 829 200
penalty weights 10000.0
args.step pgd_anneal_iters 829 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 830 200
penalty weights 10000.0
args.step pgd_anneal_iters 830 600
dim_v 512
rho, theta 364 tensor(-2.3515e-06, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 831 200
penalty weights 10000.0
args.step pgd_anneal_iters 831 600
final projection at end of training
dim_v 512
rho, theta 370 tensor(-3.6373e-07, device='cuda:0')
Epoch: [31][  26/  26]	Loss 0.000 (0.000)	train_nll   0.67 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  43.17 ( 43.17)	train_acc   0.48 (  0.50)	train_minacc   0.41 (  0.51)	train_majacc   0.50 (  0.50)	train_corr   0.00 (  0.00)	l1 6.3557 (6.3562)	zero_count 147.0000 (33.8220)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.63it/s] 27%|##6       | 7/26 [00:00<00:00, 35.28it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.28it/s] 46%|####6     | 12/26 [00:00<00:00, 40.04it/s] 65%|######5   | 17/26 [00:00<00:00, 42.58it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.58it/s] 85%|########4 | 22/26 [00:00<00:00, 40.20it/s]100%|##########| 26/26 [00:00<00:00, 38.10it/s]
Test: [   0/  26]	Loss 0.664 (0.664)	test_acc   0.48 (  0.48)	test_minacc   0.52 (  0.52)	test_majacc   0.47 (  0.47)	Loss_d 0.664 (0.664)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.24 (  0.24)
Test: [  10/  26]	Loss 0.664 (0.669)	test_acc   0.54 (  0.50)	test_minacc   0.51 (  0.50)	test_majacc   0.54 (  0.49)	Loss_d 0.664 (0.669)	test_acc_d   0.54 (  0.50)	test_minacc_d   0.51 (  0.50)	test_majacc_d   0.54 (  0.49)	test_corr_d   0.17 (  0.21)
Test: [  20/  26]	Loss 0.674 (0.668)	test_acc   0.47 (  0.50)	test_minacc   0.43 (  0.51)	test_majacc   0.47 (  0.49)	Loss_d 0.674 (0.668)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.43 (  0.51)	test_majacc_d   0.47 (  0.49)	test_corr_d   0.21 (  0.22)
Test: [  26/  26]	Loss 0.668 (0.667)	test_acc   0.48 (  0.50)	test_minacc   0.41 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.668 (0.667)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.41 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.22 (  0.22)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.80it/s]
Test: [  0/  1]	Loss 0.989 (0.989)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.48 (  0.48)	Loss_d 0.989 (0.989)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.10 (  0.10)
Test: [  1/  1]	Loss 0.989 (0.989)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.48 (  0.48)	Loss_d 0.989 (0.989)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.10 (  0.10)
Overall Timing[ 31/  1]	epoch_time 0.0466 (0.0437)	validation_time 0.0004 (0.0006)	train_time 0.0461 (0.0429)
record: (train_acc, test_acc) (0.7227000323534012, 0.7740000486373901)
last accs (train_acc, test_acc) (0.49990000763535497, 0.5010000467300415)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.41it/s] 15%|#5        | 4/26 [00:00<00:01, 17.18it/s] 31%|###       | 8/26 [00:00<00:00, 24.41it/s] 42%|####2     | 11/26 [00:00<00:00, 25.26it/s] 54%|#####3    | 14/26 [00:00<00:00, 25.93it/s] 69%|######9   | 18/26 [00:00<00:00, 28.60it/s] 81%|########  | 21/26 [00:00<00:00, 27.60it/s] 92%|#########2| 24/26 [00:00<00:00, 27.25it/s]100%|##########| 26/26 [00:01<00:00, 24.50it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 832 200
penalty weights 10000.0
args.step pgd_anneal_iters 832 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 833 200
penalty weights 10000.0
args.step pgd_anneal_iters 833 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 834 200
penalty weights 10000.0
args.step pgd_anneal_iters 834 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 835 200
penalty weights 10000.0
args.step pgd_anneal_iters 835 600
dim_v 512
rho, theta 372 tensor(-1.8243e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 836 200
penalty weights 10000.0
args.step pgd_anneal_iters 836 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 837 200
penalty weights 10000.0
args.step pgd_anneal_iters 837 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 838 200
penalty weights 10000.0
args.step pgd_anneal_iters 838 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 839 200
penalty weights 10000.0
args.step pgd_anneal_iters 839 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 840 200
penalty weights 10000.0
args.step pgd_anneal_iters 840 600
dim_v 512
rho, theta 361 tensor(-1.5780e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 841 200
penalty weights 10000.0
args.step pgd_anneal_iters 841 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 842 200
penalty weights 10000.0
args.step pgd_anneal_iters 842 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 843 200
penalty weights 10000.0
args.step pgd_anneal_iters 843 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 844 200
penalty weights 10000.0
args.step pgd_anneal_iters 844 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 845 200
penalty weights 10000.0
args.step pgd_anneal_iters 845 600
dim_v 512
rho, theta 350 tensor(-1.5908e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 846 200
penalty weights 10000.0
args.step pgd_anneal_iters 846 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 847 200
penalty weights 10000.0
args.step pgd_anneal_iters 847 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 848 200
penalty weights 10000.0
args.step pgd_anneal_iters 848 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 849 200
penalty weights 10000.0
args.step pgd_anneal_iters 849 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 850 200
penalty weights 10000.0
args.step pgd_anneal_iters 850 600
dim_v 512
rho, theta 354 tensor(1.8133e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 851 200
penalty weights 10000.0
args.step pgd_anneal_iters 851 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 852 200
penalty weights 10000.0
args.step pgd_anneal_iters 852 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 853 200
penalty weights 10000.0
args.step pgd_anneal_iters 853 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 854 200
penalty weights 10000.0
args.step pgd_anneal_iters 854 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 855 200
penalty weights 10000.0
args.step pgd_anneal_iters 855 600
dim_v 512
rho, theta 363 tensor(-2.1615e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 856 200
penalty weights 10000.0
args.step pgd_anneal_iters 856 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 857 200
penalty weights 10000.0
args.step pgd_anneal_iters 857 600
final projection at end of training
dim_v 512
rho, theta 361 tensor(-6.5071e-07, device='cuda:0')
Epoch: [32][  26/  26]	Loss 0.000 (0.000)	train_nll   0.67 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  43.17 ( 43.17)	train_acc   0.48 (  0.50)	train_minacc   0.41 (  0.51)	train_majacc   0.49 (  0.50)	train_corr   0.00 (  0.00)	l1 6.3560 (6.3562)	zero_count 0.0000 (34.9440)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.41it/s] 27%|##6       | 7/26 [00:00<00:00, 31.43it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.43it/s] 46%|####6     | 12/26 [00:00<00:00, 38.69it/s] 65%|######5   | 17/26 [00:00<00:00, 41.58it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.58it/s] 85%|########4 | 22/26 [00:00<00:00, 42.34it/s]100%|##########| 26/26 [00:00<00:00, 36.89it/s]
Test: [   0/  26]	Loss 0.665 (0.665)	test_acc   0.47 (  0.47)	test_minacc   0.52 (  0.52)	test_majacc   0.47 (  0.47)	Loss_d 0.665 (0.665)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.23 (  0.23)
Test: [  10/  26]	Loss 0.664 (0.669)	test_acc   0.54 (  0.49)	test_minacc   0.51 (  0.50)	test_majacc   0.54 (  0.49)	Loss_d 0.664 (0.669)	test_acc_d   0.54 (  0.49)	test_minacc_d   0.51 (  0.50)	test_majacc_d   0.54 (  0.49)	test_corr_d   0.16 (  0.21)
Test: [  20/  26]	Loss 0.674 (0.668)	test_acc   0.47 (  0.50)	test_minacc   0.43 (  0.51)	test_majacc   0.47 (  0.49)	Loss_d 0.674 (0.668)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.43 (  0.51)	test_majacc_d   0.47 (  0.49)	test_corr_d   0.21 (  0.22)
Test: [  26/  26]	Loss 0.668 (0.667)	test_acc   0.48 (  0.50)	test_minacc   0.41 (  0.51)	test_majacc   0.49 (  0.50)	Loss_d 0.668 (0.667)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.41 (  0.51)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.22 (  0.22)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.59it/s]
Test: [  0/  1]	Loss 0.991 (0.991)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.48 (  0.48)	Loss_d 0.991 (0.991)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.10 (  0.10)
Test: [  1/  1]	Loss 0.991 (0.991)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.48 (  0.48)	Loss_d 0.991 (0.991)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.10 (  0.10)
Overall Timing[ 32/  1]	epoch_time 0.0436 (0.0437)	validation_time 0.0004 (0.0006)	train_time 0.0431 (0.0429)
record: (train_acc, test_acc) (0.7227000323534012, 0.7740000486373901)
last accs (train_acc, test_acc) (0.49950000977516174, 0.5020000338554382)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.22it/s] 15%|#5        | 4/26 [00:00<00:01, 13.07it/s] 31%|###       | 8/26 [00:00<00:00, 19.21it/s] 46%|####6     | 12/26 [00:00<00:00, 23.77it/s] 58%|#####7    | 15/26 [00:00<00:00, 24.36it/s] 69%|######9   | 18/26 [00:00<00:00, 24.67it/s] 85%|########4 | 22/26 [00:00<00:00, 27.50it/s] 96%|#########6| 25/26 [00:01<00:00, 27.01it/s]100%|##########| 26/26 [00:01<00:00, 22.11it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 858 200
penalty weights 10000.0
args.step pgd_anneal_iters 858 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 859 200
penalty weights 10000.0
args.step pgd_anneal_iters 859 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 860 200
penalty weights 10000.0
args.step pgd_anneal_iters 860 600
dim_v 512
rho, theta 360 tensor(-1.1254e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 861 200
penalty weights 10000.0
args.step pgd_anneal_iters 861 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 862 200
penalty weights 10000.0
args.step pgd_anneal_iters 862 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 863 200
penalty weights 10000.0
args.step pgd_anneal_iters 863 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 864 200
penalty weights 10000.0
args.step pgd_anneal_iters 864 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 865 200
penalty weights 10000.0
args.step pgd_anneal_iters 865 600
dim_v 512
rho, theta 362 tensor(-1.4594e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 866 200
penalty weights 10000.0
args.step pgd_anneal_iters 866 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 867 200
penalty weights 10000.0
args.step pgd_anneal_iters 867 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 868 200
penalty weights 10000.0
args.step pgd_anneal_iters 868 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 869 200
penalty weights 10000.0
args.step pgd_anneal_iters 869 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 870 200
penalty weights 10000.0
args.step pgd_anneal_iters 870 600
dim_v 512
rho, theta 347 tensor(-1.5018e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 871 200
penalty weights 10000.0
args.step pgd_anneal_iters 871 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 872 200
penalty weights 10000.0
args.step pgd_anneal_iters 872 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 873 200
penalty weights 10000.0
args.step pgd_anneal_iters 873 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 874 200
penalty weights 10000.0
args.step pgd_anneal_iters 874 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 875 200
penalty weights 10000.0
args.step pgd_anneal_iters 875 600
dim_v 512
rho, theta 353 tensor(-1.0237e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 876 200
penalty weights 10000.0
args.step pgd_anneal_iters 876 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 877 200
penalty weights 10000.0
args.step pgd_anneal_iters 877 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 878 200
penalty weights 10000.0
args.step pgd_anneal_iters 878 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 879 200
penalty weights 10000.0
args.step pgd_anneal_iters 879 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 880 200
penalty weights 10000.0
args.step pgd_anneal_iters 880 600
dim_v 512
rho, theta 342 tensor(-1.5459e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 881 200
penalty weights 10000.0
args.step pgd_anneal_iters 881 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 882 200
penalty weights 10000.0
args.step pgd_anneal_iters 882 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 883 200
penalty weights 10000.0
args.step pgd_anneal_iters 883 600
final projection at end of training
dim_v 512
rho, theta 358 tensor(-9.8422e-07, device='cuda:0')
Epoch: [33][  26/  26]	Loss 0.000 (0.000)	train_nll   0.67 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  43.17 ( 43.17)	train_acc   0.48 (  0.50)	train_minacc   0.41 (  0.51)	train_majacc   0.49 (  0.50)	train_corr   0.00 (  0.00)	l1 6.3562 (6.3562)	zero_count 0.0000 (36.6990)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.58it/s] 23%|##3       | 6/26 [00:00<00:00, 24.93it/s]                                               23%|##3       | 6/26 [00:00<00:00, 24.93it/s] 42%|####2     | 11/26 [00:00<00:00, 32.89it/s] 62%|######1   | 16/26 [00:00<00:00, 37.89it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.89it/s] 81%|########  | 21/26 [00:00<00:00, 37.44it/s]100%|##########| 26/26 [00:00<00:00, 40.57it/s]100%|##########| 26/26 [00:00<00:00, 32.48it/s]
Test: [   0/  26]	Loss 0.665 (0.665)	test_acc   0.47 (  0.47)	test_minacc   0.52 (  0.52)	test_majacc   0.47 (  0.47)	Loss_d 0.665 (0.665)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.23 (  0.23)
Test: [  10/  26]	Loss 0.664 (0.669)	test_acc   0.54 (  0.49)	test_minacc   0.51 (  0.50)	test_majacc   0.54 (  0.49)	Loss_d 0.664 (0.669)	test_acc_d   0.54 (  0.49)	test_minacc_d   0.51 (  0.50)	test_majacc_d   0.54 (  0.49)	test_corr_d   0.16 (  0.21)
Test: [  20/  26]	Loss 0.674 (0.668)	test_acc   0.47 (  0.50)	test_minacc   0.43 (  0.51)	test_majacc   0.47 (  0.49)	Loss_d 0.674 (0.668)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.43 (  0.51)	test_majacc_d   0.47 (  0.49)	test_corr_d   0.21 (  0.21)
Test: [  26/  26]	Loss 0.668 (0.667)	test_acc   0.48 (  0.50)	test_minacc   0.41 (  0.51)	test_majacc   0.49 (  0.50)	Loss_d 0.668 (0.667)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.41 (  0.51)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.22 (  0.22)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.42it/s]
Test: [  0/  1]	Loss 0.993 (0.993)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.48 (  0.48)	Loss_d 0.993 (0.993)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.10 (  0.10)
Test: [  1/  1]	Loss 0.993 (0.993)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.48 (  0.48)	Loss_d 0.993 (0.993)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.10 (  0.10)
Overall Timing[ 33/  1]	epoch_time 0.0438 (0.0437)	validation_time 0.0004 (0.0006)	train_time 0.0433 (0.0429)
record: (train_acc, test_acc) (0.7227000323534012, 0.7740000486373901)
last accs (train_acc, test_acc) (0.49900001096725466, 0.5020000338554382)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.14it/s] 15%|#5        | 4/26 [00:00<00:01, 16.09it/s] 27%|##6       | 7/26 [00:00<00:00, 20.35it/s] 42%|####2     | 11/26 [00:00<00:00, 26.01it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.35it/s] 65%|######5   | 17/26 [00:00<00:00, 26.11it/s] 81%|########  | 21/26 [00:00<00:00, 28.51it/s] 92%|#########2| 24/26 [00:00<00:00, 27.82it/s]100%|##########| 26/26 [00:01<00:00, 24.02it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 884 200
penalty weights 10000.0
args.step pgd_anneal_iters 884 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 885 200
penalty weights 10000.0
args.step pgd_anneal_iters 885 600
dim_v 512
rho, theta 356 tensor(-6.2109e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 886 200
penalty weights 10000.0
args.step pgd_anneal_iters 886 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 887 200
penalty weights 10000.0
args.step pgd_anneal_iters 887 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 888 200
penalty weights 10000.0
args.step pgd_anneal_iters 888 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 889 200
penalty weights 10000.0
args.step pgd_anneal_iters 889 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 890 200
penalty weights 10000.0
args.step pgd_anneal_iters 890 600
dim_v 512
rho, theta 373 tensor(-1.4815e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 891 200
penalty weights 10000.0
args.step pgd_anneal_iters 891 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 892 200
penalty weights 10000.0
args.step pgd_anneal_iters 892 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 893 200
penalty weights 10000.0
args.step pgd_anneal_iters 893 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 894 200
penalty weights 10000.0
args.step pgd_anneal_iters 894 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 895 200
penalty weights 10000.0
args.step pgd_anneal_iters 895 600
dim_v 512
rho, theta 350 tensor(-1.3110e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 896 200
penalty weights 10000.0
args.step pgd_anneal_iters 896 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 897 200
penalty weights 10000.0
args.step pgd_anneal_iters 897 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 898 200
penalty weights 10000.0
args.step pgd_anneal_iters 898 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 899 200
penalty weights 10000.0
args.step pgd_anneal_iters 899 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 900 200
penalty weights 10000.0
args.step pgd_anneal_iters 900 600
dim_v 512
rho, theta 346 tensor(-3.5316e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 901 200
penalty weights 10000.0
args.step pgd_anneal_iters 901 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 902 200
penalty weights 10000.0
args.step pgd_anneal_iters 902 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 903 200
penalty weights 10000.0
args.step pgd_anneal_iters 903 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 904 200
penalty weights 10000.0
args.step pgd_anneal_iters 904 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 905 200
penalty weights 10000.0
args.step pgd_anneal_iters 905 600
dim_v 512
rho, theta 340 tensor(-1.0362e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 906 200
penalty weights 10000.0
args.step pgd_anneal_iters 906 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 907 200
penalty weights 10000.0
args.step pgd_anneal_iters 907 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 908 200
penalty weights 10000.0
args.step pgd_anneal_iters 908 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 909 200
penalty weights 10000.0
args.step pgd_anneal_iters 909 600
final projection at end of training
dim_v 512
rho, theta 360 tensor(-1.3011e-06, device='cuda:0')
Epoch: [34][  26/  26]	Loss 0.000 (0.000)	train_nll   0.67 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  43.18 ( 43.17)	train_acc   0.48 (  0.50)	train_minacc   0.41 (  0.51)	train_majacc   0.49 (  0.50)	train_corr   0.00 (  0.00)	l1 6.3564 (6.3562)	zero_count 0.0000 (36.7770)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.49it/s] 23%|##3       | 6/26 [00:00<00:00, 28.77it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.77it/s] 42%|####2     | 11/26 [00:00<00:00, 33.98it/s] 65%|######5   | 17/26 [00:00<00:00, 37.64it/s]                                                65%|######5   | 17/26 [00:00<00:00, 37.64it/s] 85%|########4 | 22/26 [00:00<00:00, 40.91it/s]100%|##########| 26/26 [00:00<00:00, 34.61it/s]
Test: [   0/  26]	Loss 0.665 (0.665)	test_acc   0.47 (  0.47)	test_minacc   0.52 (  0.52)	test_majacc   0.47 (  0.47)	Loss_d 0.665 (0.665)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.23 (  0.23)
Test: [  10/  26]	Loss 0.664 (0.669)	test_acc   0.54 (  0.49)	test_minacc   0.51 (  0.50)	test_majacc   0.54 (  0.49)	Loss_d 0.664 (0.669)	test_acc_d   0.54 (  0.49)	test_minacc_d   0.51 (  0.50)	test_majacc_d   0.54 (  0.49)	test_corr_d   0.16 (  0.21)
Test: [  20/  26]	Loss 0.674 (0.668)	test_acc   0.47 (  0.50)	test_minacc   0.43 (  0.51)	test_majacc   0.47 (  0.49)	Loss_d 0.674 (0.668)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.43 (  0.51)	test_majacc_d   0.47 (  0.49)	test_corr_d   0.21 (  0.21)
Test: [  26/  26]	Loss 0.668 (0.667)	test_acc   0.48 (  0.50)	test_minacc   0.41 (  0.51)	test_majacc   0.49 (  0.50)	Loss_d 0.668 (0.667)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.41 (  0.51)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.21 (  0.21)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.08it/s]
Test: [  0/  1]	Loss 0.995 (0.995)	test_acc   0.50 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.48 (  0.48)	Loss_d 0.995 (0.995)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 0.995 (0.995)	test_acc   0.50 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.48 (  0.48)	Loss_d 0.995 (0.995)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.09 (  0.09)
Overall Timing[ 34/  1]	epoch_time 0.0437 (0.0437)	validation_time 0.0003 (0.0006)	train_time 0.0434 (0.0430)
record: (train_acc, test_acc) (0.7227000323534012, 0.7740000486373901)
last accs (train_acc, test_acc) (0.4990000132918358, 0.503000020980835)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.96it/s] 19%|#9        | 5/26 [00:00<00:01, 18.44it/s] 31%|###       | 8/26 [00:00<00:00, 21.58it/s] 42%|####2     | 11/26 [00:00<00:00, 23.07it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.29it/s] 69%|######9   | 18/26 [00:00<00:00, 26.23it/s] 81%|########  | 21/26 [00:00<00:00, 26.28it/s] 96%|#########6| 25/26 [00:01<00:00, 28.85it/s]100%|##########| 26/26 [00:01<00:00, 23.20it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 910 200
penalty weights 10000.0
args.step pgd_anneal_iters 910 600
dim_v 512
rho, theta 352 tensor(-2.6071e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 911 200
penalty weights 10000.0
args.step pgd_anneal_iters 911 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 912 200
penalty weights 10000.0
args.step pgd_anneal_iters 912 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 913 200
penalty weights 10000.0
args.step pgd_anneal_iters 913 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 914 200
penalty weights 10000.0
args.step pgd_anneal_iters 914 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 915 200
penalty weights 10000.0
args.step pgd_anneal_iters 915 600
dim_v 512
rho, theta 378 tensor(-1.4733e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 916 200
penalty weights 10000.0
args.step pgd_anneal_iters 916 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 917 200
penalty weights 10000.0
args.step pgd_anneal_iters 917 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 918 200
penalty weights 10000.0
args.step pgd_anneal_iters 918 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 919 200
penalty weights 10000.0
args.step pgd_anneal_iters 919 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 920 200
penalty weights 10000.0
args.step pgd_anneal_iters 920 600
dim_v 512
rho, theta 352 tensor(-1.1685e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 921 200
penalty weights 10000.0
args.step pgd_anneal_iters 921 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 922 200
penalty weights 10000.0
args.step pgd_anneal_iters 922 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 923 200
penalty weights 10000.0
args.step pgd_anneal_iters 923 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 924 200
penalty weights 10000.0
args.step pgd_anneal_iters 924 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 925 200
penalty weights 10000.0
args.step pgd_anneal_iters 925 600
dim_v 512
rho, theta 347 tensor(-8.2350e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 926 200
penalty weights 10000.0
args.step pgd_anneal_iters 926 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 927 200
penalty weights 10000.0
args.step pgd_anneal_iters 927 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 928 200
penalty weights 10000.0
args.step pgd_anneal_iters 928 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 929 200
penalty weights 10000.0
args.step pgd_anneal_iters 929 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 930 200
penalty weights 10000.0
args.step pgd_anneal_iters 930 600
dim_v 512
rho, theta 342 tensor(-4.2818e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 931 200
penalty weights 10000.0
args.step pgd_anneal_iters 931 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 932 200
penalty weights 10000.0
args.step pgd_anneal_iters 932 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 933 200
penalty weights 10000.0
args.step pgd_anneal_iters 933 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 934 200
penalty weights 10000.0
args.step pgd_anneal_iters 934 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 935 200
penalty weights 10000.0
args.step pgd_anneal_iters 935 600
dim_v 512
rho, theta 361 tensor(-1.5293e-06, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [35][  26/  26]	Loss 0.000 (0.000)	train_nll   0.67 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  43.18 ( 43.18)	train_acc   0.48 (  0.50)	train_minacc   0.41 (  0.51)	train_majacc   0.49 (  0.50)	train_corr   0.00 (  0.00)	l1 6.3566 (6.3562)	zero_count 0.0000 (36.4650)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.77it/s] 27%|##6       | 7/26 [00:00<00:00, 34.16it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.16it/s] 50%|#####     | 13/26 [00:00<00:00, 38.85it/s] 69%|######9   | 18/26 [00:00<00:00, 41.51it/s]                                                69%|######9   | 18/26 [00:00<00:00, 41.51it/s] 88%|########8 | 23/26 [00:00<00:00, 42.22it/s]100%|##########| 26/26 [00:00<00:00, 36.63it/s]
Test: [   0/  26]	Loss 0.665 (0.665)	test_acc   0.47 (  0.47)	test_minacc   0.52 (  0.52)	test_majacc   0.47 (  0.47)	Loss_d 0.665 (0.665)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.23 (  0.23)
Test: [  10/  26]	Loss 0.664 (0.669)	test_acc   0.54 (  0.49)	test_minacc   0.51 (  0.50)	test_majacc   0.54 (  0.49)	Loss_d 0.664 (0.669)	test_acc_d   0.54 (  0.49)	test_minacc_d   0.51 (  0.50)	test_majacc_d   0.54 (  0.49)	test_corr_d   0.16 (  0.21)
Test: [  20/  26]	Loss 0.674 (0.668)	test_acc   0.46 (  0.50)	test_minacc   0.43 (  0.51)	test_majacc   0.47 (  0.49)	Loss_d 0.674 (0.668)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.43 (  0.51)	test_majacc_d   0.47 (  0.49)	test_corr_d   0.21 (  0.21)
Test: [  26/  26]	Loss 0.668 (0.667)	test_acc   0.48 (  0.50)	test_minacc   0.41 (  0.51)	test_majacc   0.49 (  0.50)	Loss_d 0.668 (0.667)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.41 (  0.51)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.21 (  0.21)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.59it/s]
Test: [  0/  1]	Loss 0.997 (0.997)	test_acc   0.50 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.48 (  0.48)	Loss_d 0.997 (0.997)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 0.997 (0.997)	test_acc   0.50 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.48 (  0.48)	Loss_d 0.997 (0.997)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.09 (  0.09)
Overall Timing[ 35/  1]	epoch_time 0.0466 (0.0438)	validation_time 0.0004 (0.0006)	train_time 0.0462 (0.0431)
record: (train_acc, test_acc) (0.7227000323534012, 0.7740000486373901)
last accs (train_acc, test_acc) (0.49890001329779626, 0.503000020980835)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.05it/s] 12%|#1        | 3/26 [00:00<00:01, 13.21it/s] 23%|##3       | 6/26 [00:00<00:01, 19.30it/s] 38%|###8      | 10/26 [00:00<00:00, 23.07it/s] 54%|#####3    | 14/26 [00:00<00:00, 27.52it/s] 65%|######5   | 17/26 [00:00<00:00, 27.59it/s] 77%|#######6  | 20/26 [00:00<00:00, 27.52it/s] 92%|#########2| 24/26 [00:00<00:00, 29.66it/s]100%|##########| 26/26 [00:01<00:00, 23.94it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 936 200
penalty weights 10000.0
args.step pgd_anneal_iters 936 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 937 200
penalty weights 10000.0
args.step pgd_anneal_iters 937 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 938 200
penalty weights 10000.0
args.step pgd_anneal_iters 938 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 939 200
penalty weights 10000.0
args.step pgd_anneal_iters 939 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 940 200
penalty weights 10000.0
args.step pgd_anneal_iters 940 600
dim_v 512
rho, theta 373 tensor(-1.3387e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 941 200
penalty weights 10000.0
args.step pgd_anneal_iters 941 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 942 200
penalty weights 10000.0
args.step pgd_anneal_iters 942 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 943 200
penalty weights 10000.0
args.step pgd_anneal_iters 943 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 944 200
penalty weights 10000.0
args.step pgd_anneal_iters 944 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 945 200
penalty weights 10000.0
args.step pgd_anneal_iters 945 600
dim_v 512
rho, theta 353 tensor(-9.7388e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 946 200
penalty weights 10000.0
args.step pgd_anneal_iters 946 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 947 200
penalty weights 10000.0
args.step pgd_anneal_iters 947 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 948 200
penalty weights 10000.0
args.step pgd_anneal_iters 948 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 949 200
penalty weights 10000.0
args.step pgd_anneal_iters 949 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 950 200
penalty weights 10000.0
args.step pgd_anneal_iters 950 600
dim_v 512
rho, theta 347 tensor(-1.0044e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 951 200
penalty weights 10000.0
args.step pgd_anneal_iters 951 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 952 200
penalty weights 10000.0
args.step pgd_anneal_iters 952 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 953 200
penalty weights 10000.0
args.step pgd_anneal_iters 953 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 954 200
penalty weights 10000.0
args.step pgd_anneal_iters 954 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 955 200
penalty weights 10000.0
args.step pgd_anneal_iters 955 600
dim_v 512
rho, theta 352 tensor(1.4724e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 956 200
penalty weights 10000.0
args.step pgd_anneal_iters 956 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 957 200
penalty weights 10000.0
args.step pgd_anneal_iters 957 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 958 200
penalty weights 10000.0
args.step pgd_anneal_iters 958 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 959 200
penalty weights 10000.0
args.step pgd_anneal_iters 959 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 960 200
penalty weights 10000.0
args.step pgd_anneal_iters 960 600
dim_v 512
rho, theta 366 tensor(-1.7670e-06, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 961 200
penalty weights 10000.0
args.step pgd_anneal_iters 961 600
final projection at end of training
dim_v 512
rho, theta 374 tensor(-2.2507e-07, device='cuda:0')
Epoch: [36][  26/  26]	Loss 0.000 (0.000)	train_nll   0.67 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  43.18 ( 43.18)	train_acc   0.48 (  0.50)	train_minacc   0.41 (  0.51)	train_majacc   0.49 (  0.50)	train_corr   0.00 (  0.00)	l1 6.3557 (6.3562)	zero_count 145.0000 (33.6160)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.73it/s] 27%|##6       | 7/26 [00:00<00:00, 32.94it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.94it/s] 46%|####6     | 12/26 [00:00<00:00, 37.66it/s] 65%|######5   | 17/26 [00:00<00:00, 40.56it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.56it/s] 85%|########4 | 22/26 [00:00<00:00, 39.19it/s]100%|##########| 26/26 [00:00<00:00, 36.35it/s]
Test: [   0/  26]	Loss 0.665 (0.665)	test_acc   0.47 (  0.47)	test_minacc   0.52 (  0.52)	test_majacc   0.47 (  0.47)	Loss_d 0.665 (0.665)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.23 (  0.23)
Test: [  10/  26]	Loss 0.665 (0.669)	test_acc   0.54 (  0.49)	test_minacc   0.51 (  0.50)	test_majacc   0.54 (  0.49)	Loss_d 0.665 (0.669)	test_acc_d   0.54 (  0.49)	test_minacc_d   0.51 (  0.50)	test_majacc_d   0.54 (  0.49)	test_corr_d   0.16 (  0.20)
Test: [  20/  26]	Loss 0.674 (0.668)	test_acc   0.46 (  0.50)	test_minacc   0.43 (  0.51)	test_majacc   0.47 (  0.49)	Loss_d 0.674 (0.668)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.43 (  0.51)	test_majacc_d   0.47 (  0.49)	test_corr_d   0.21 (  0.21)
Test: [  26/  26]	Loss 0.668 (0.667)	test_acc   0.48 (  0.50)	test_minacc   0.41 (  0.51)	test_majacc   0.49 (  0.50)	Loss_d 0.668 (0.667)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.41 (  0.51)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.21 (  0.21)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.91it/s]
Test: [  0/  1]	Loss 0.999 (0.999)	test_acc   0.50 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.48 (  0.48)	Loss_d 0.999 (0.999)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 0.999 (0.999)	test_acc   0.50 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.48 (  0.48)	Loss_d 0.999 (0.999)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.09 (  0.09)
Overall Timing[ 36/  1]	epoch_time 0.0435 (0.0438)	validation_time 0.0003 (0.0006)	train_time 0.0431 (0.0431)
record: (train_acc, test_acc) (0.7227000323534012, 0.7740000486373901)
last accs (train_acc, test_acc) (0.4987000121474266, 0.5040000081062317)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.49it/s] 15%|#5        | 4/26 [00:00<00:01, 19.49it/s] 31%|###       | 8/26 [00:00<00:00, 25.73it/s] 42%|####2     | 11/26 [00:00<00:00, 26.04it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.57it/s] 69%|######9   | 18/26 [00:00<00:00, 29.61it/s] 81%|########  | 21/26 [00:00<00:00, 28.76it/s] 92%|#########2| 24/26 [00:00<00:00, 28.38it/s]100%|##########| 26/26 [00:01<00:00, 25.93it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 962 200
penalty weights 10000.0
args.step pgd_anneal_iters 962 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 963 200
penalty weights 10000.0
args.step pgd_anneal_iters 963 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 964 200
penalty weights 10000.0
args.step pgd_anneal_iters 964 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 965 200
penalty weights 10000.0
args.step pgd_anneal_iters 965 600
dim_v 512
rho, theta 368 tensor(-9.8598e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 966 200
penalty weights 10000.0
args.step pgd_anneal_iters 966 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 967 200
penalty weights 10000.0
args.step pgd_anneal_iters 967 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 968 200
penalty weights 10000.0
args.step pgd_anneal_iters 968 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 969 200
penalty weights 10000.0
args.step pgd_anneal_iters 969 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 970 200
penalty weights 10000.0
args.step pgd_anneal_iters 970 600
dim_v 512
rho, theta 358 tensor(-8.9125e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 971 200
penalty weights 10000.0
args.step pgd_anneal_iters 971 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 972 200
penalty weights 10000.0
args.step pgd_anneal_iters 972 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 973 200
penalty weights 10000.0
args.step pgd_anneal_iters 973 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 974 200
penalty weights 10000.0
args.step pgd_anneal_iters 974 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 975 200
penalty weights 10000.0
args.step pgd_anneal_iters 975 600
dim_v 512
rho, theta 351 tensor(-1.1040e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 976 200
penalty weights 10000.0
args.step pgd_anneal_iters 976 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 977 200
penalty weights 10000.0
args.step pgd_anneal_iters 977 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 978 200
penalty weights 10000.0
args.step pgd_anneal_iters 978 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 979 200
penalty weights 10000.0
args.step pgd_anneal_iters 979 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 980 200
penalty weights 10000.0
args.step pgd_anneal_iters 980 600
dim_v 512
rho, theta 354 tensor(2.3237e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 981 200
penalty weights 10000.0
args.step pgd_anneal_iters 981 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 982 200
penalty weights 10000.0
args.step pgd_anneal_iters 982 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 983 200
penalty weights 10000.0
args.step pgd_anneal_iters 983 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 984 200
penalty weights 10000.0
args.step pgd_anneal_iters 984 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 985 200
penalty weights 10000.0
args.step pgd_anneal_iters 985 600
dim_v 512
rho, theta 369 tensor(-1.7463e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 986 200
penalty weights 10000.0
args.step pgd_anneal_iters 986 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 987 200
penalty weights 10000.0
args.step pgd_anneal_iters 987 600
final projection at end of training
dim_v 512
rho, theta 365 tensor(-4.4948e-07, device='cuda:0')
Epoch: [37][  26/  26]	Loss 0.000 (0.000)	train_nll   0.67 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  43.18 ( 43.18)	train_acc   0.48 (  0.50)	train_minacc   0.41 (  0.51)	train_majacc   0.49 (  0.50)	train_corr   0.00 (  0.00)	l1 6.3559 (6.3562)	zero_count 0.0000 (34.7880)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.64it/s] 23%|##3       | 6/26 [00:00<00:00, 22.14it/s]                                               23%|##3       | 6/26 [00:00<00:00, 22.14it/s] 42%|####2     | 11/26 [00:00<00:00, 29.90it/s] 62%|######1   | 16/26 [00:00<00:00, 35.61it/s]                                                62%|######1   | 16/26 [00:00<00:00, 35.61it/s] 81%|########  | 21/26 [00:00<00:00, 36.74it/s]100%|##########| 26/26 [00:00<00:00, 40.00it/s]100%|##########| 26/26 [00:00<00:00, 30.86it/s]
Test: [   0/  26]	Loss 0.665 (0.665)	test_acc   0.47 (  0.47)	test_minacc   0.52 (  0.52)	test_majacc   0.47 (  0.47)	Loss_d 0.665 (0.665)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.23 (  0.23)
Test: [  10/  26]	Loss 0.665 (0.670)	test_acc   0.54 (  0.49)	test_minacc   0.51 (  0.50)	test_majacc   0.54 (  0.49)	Loss_d 0.665 (0.670)	test_acc_d   0.54 (  0.49)	test_minacc_d   0.51 (  0.50)	test_majacc_d   0.54 (  0.49)	test_corr_d   0.16 (  0.20)
Test: [  20/  26]	Loss 0.674 (0.668)	test_acc   0.46 (  0.50)	test_minacc   0.43 (  0.51)	test_majacc   0.47 (  0.49)	Loss_d 0.674 (0.668)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.43 (  0.51)	test_majacc_d   0.47 (  0.49)	test_corr_d   0.21 (  0.21)
Test: [  26/  26]	Loss 0.668 (0.668)	test_acc   0.48 (  0.50)	test_minacc   0.41 (  0.51)	test_majacc   0.49 (  0.50)	Loss_d 0.668 (0.668)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.41 (  0.51)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.21 (  0.21)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.21it/s]
Test: [  0/  1]	Loss 1.001 (1.001)	test_acc   0.50 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.48 (  0.48)	Loss_d 1.001 (1.001)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 1.001 (1.001)	test_acc   0.50 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.48 (  0.48)	Loss_d 1.001 (1.001)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.09 (  0.09)
Overall Timing[ 37/  1]	epoch_time 0.0409 (0.0437)	validation_time 0.0003 (0.0006)	train_time 0.0406 (0.0430)
record: (train_acc, test_acc) (0.7227000323534012, 0.7740000486373901)
last accs (train_acc, test_acc) (0.4987000121474266, 0.5040000081062317)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.50it/s] 15%|#5        | 4/26 [00:00<00:01, 19.58it/s] 31%|###       | 8/26 [00:00<00:00, 24.01it/s] 46%|####6     | 12/26 [00:00<00:00, 28.01it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.60it/s] 69%|######9   | 18/26 [00:00<00:00, 27.53it/s] 85%|########4 | 22/26 [00:00<00:00, 30.05it/s]100%|##########| 26/26 [00:00<00:00, 29.92it/s]100%|##########| 26/26 [00:01<00:00, 25.86it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 988 200
penalty weights 10000.0
args.step pgd_anneal_iters 988 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 989 200
penalty weights 10000.0
args.step pgd_anneal_iters 989 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 990 200
penalty weights 10000.0
args.step pgd_anneal_iters 990 600
dim_v 512
rho, theta 361 tensor(-6.8101e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 991 200
penalty weights 10000.0
args.step pgd_anneal_iters 991 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 992 200
penalty weights 10000.0
args.step pgd_anneal_iters 992 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 993 200
penalty weights 10000.0
args.step pgd_anneal_iters 993 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 994 200
penalty weights 10000.0
args.step pgd_anneal_iters 994 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 995 200
penalty weights 10000.0
args.step pgd_anneal_iters 995 600
dim_v 512
rho, theta 367 tensor(-8.7722e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 996 200
penalty weights 10000.0
args.step pgd_anneal_iters 996 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 997 200
penalty weights 10000.0
args.step pgd_anneal_iters 997 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 998 200
penalty weights 10000.0
args.step pgd_anneal_iters 998 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 999 200
penalty weights 10000.0
args.step pgd_anneal_iters 999 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1000 200
penalty weights 10000.0
args.step pgd_anneal_iters 1000 600
dim_v 512
rho, theta 351 tensor(-1.0553e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1001 200
penalty weights 10000.0
args.step pgd_anneal_iters 1001 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1002 200
penalty weights 10000.0
args.step pgd_anneal_iters 1002 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1003 200
penalty weights 10000.0
args.step pgd_anneal_iters 1003 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1004 200
penalty weights 10000.0
args.step pgd_anneal_iters 1004 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1005 200
penalty weights 10000.0
args.step pgd_anneal_iters 1005 600
dim_v 512
rho, theta 353 tensor(-3.0981e-08, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1006 200
penalty weights 10000.0
args.step pgd_anneal_iters 1006 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1007 200
penalty weights 10000.0
args.step pgd_anneal_iters 1007 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1008 200
penalty weights 10000.0
args.step pgd_anneal_iters 1008 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1009 200
penalty weights 10000.0
args.step pgd_anneal_iters 1009 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1010 200
penalty weights 10000.0
args.step pgd_anneal_iters 1010 600
dim_v 512
rho, theta 352 tensor(-1.3224e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1011 200
penalty weights 10000.0
args.step pgd_anneal_iters 1011 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1012 200
penalty weights 10000.0
args.step pgd_anneal_iters 1012 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1013 200
penalty weights 10000.0
args.step pgd_anneal_iters 1013 600
final projection at end of training
dim_v 512
rho, theta 366 tensor(-7.5618e-07, device='cuda:0')
Epoch: [38][  26/  26]	Loss 0.000 (0.000)	train_nll   0.67 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  43.18 ( 43.18)	train_acc   0.48 (  0.50)	train_minacc   0.41 (  0.51)	train_majacc   0.49 (  0.50)	train_corr   0.00 (  0.00)	l1 6.3562 (6.3562)	zero_count 0.0000 (35.7630)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.64it/s] 23%|##3       | 6/26 [00:00<00:00, 29.27it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.27it/s] 42%|####2     | 11/26 [00:00<00:00, 35.10it/s] 65%|######5   | 17/26 [00:00<00:00, 38.04it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.04it/s] 85%|########4 | 22/26 [00:00<00:00, 40.62it/s]100%|##########| 26/26 [00:00<00:00, 34.37it/s]
Test: [   0/  26]	Loss 0.665 (0.665)	test_acc   0.47 (  0.47)	test_minacc   0.52 (  0.52)	test_majacc   0.46 (  0.46)	Loss_d 0.665 (0.665)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.23 (  0.23)
Test: [  10/  26]	Loss 0.665 (0.670)	test_acc   0.54 (  0.49)	test_minacc   0.51 (  0.50)	test_majacc   0.54 (  0.49)	Loss_d 0.665 (0.670)	test_acc_d   0.54 (  0.49)	test_minacc_d   0.51 (  0.50)	test_majacc_d   0.54 (  0.49)	test_corr_d   0.16 (  0.20)
Test: [  20/  26]	Loss 0.674 (0.668)	test_acc   0.46 (  0.50)	test_minacc   0.43 (  0.51)	test_majacc   0.47 (  0.49)	Loss_d 0.674 (0.668)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.43 (  0.51)	test_majacc_d   0.47 (  0.49)	test_corr_d   0.20 (  0.21)
Test: [  26/  26]	Loss 0.668 (0.668)	test_acc   0.48 (  0.50)	test_minacc   0.41 (  0.51)	test_majacc   0.49 (  0.50)	Loss_d 0.668 (0.668)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.41 (  0.51)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.21 (  0.21)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.34it/s]
Test: [  0/  1]	Loss 1.002 (1.002)	test_acc   0.50 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.48 (  0.48)	Loss_d 1.002 (1.002)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 1.002 (1.002)	test_acc   0.50 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.48 (  0.48)	Loss_d 1.002 (1.002)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.09 (  0.09)
Overall Timing[ 38/  1]	epoch_time 0.0418 (0.0437)	validation_time 0.0005 (0.0006)	train_time 0.0413 (0.0429)
record: (train_acc, test_acc) (0.7227000323534012, 0.7740000486373901)
last accs (train_acc, test_acc) (0.4985000119507313, 0.5040000081062317)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.78it/s] 15%|#5        | 4/26 [00:00<00:01, 12.47it/s] 27%|##6       | 7/26 [00:00<00:01, 17.36it/s] 42%|####2     | 11/26 [00:00<00:00, 23.16it/s] 54%|#####3    | 14/26 [00:00<00:00, 24.45it/s] 65%|######5   | 17/26 [00:00<00:00, 25.02it/s] 81%|########  | 21/26 [00:00<00:00, 28.13it/s] 92%|#########2| 24/26 [00:01<00:00, 27.77it/s]100%|##########| 26/26 [00:01<00:00, 22.23it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1014 200
penalty weights 10000.0
args.step pgd_anneal_iters 1014 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1015 200
penalty weights 10000.0
args.step pgd_anneal_iters 1015 600
dim_v 512
rho, theta 356 tensor(-4.2207e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1016 200
penalty weights 10000.0
args.step pgd_anneal_iters 1016 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1017 200
penalty weights 10000.0
args.step pgd_anneal_iters 1017 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1018 200
penalty weights 10000.0
args.step pgd_anneal_iters 1018 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1019 200
penalty weights 10000.0
args.step pgd_anneal_iters 1019 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1020 200
penalty weights 10000.0
args.step pgd_anneal_iters 1020 600
dim_v 512
rho, theta 374 tensor(-8.9645e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1021 200
penalty weights 10000.0
args.step pgd_anneal_iters 1021 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1022 200
penalty weights 10000.0
args.step pgd_anneal_iters 1022 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1023 200
penalty weights 10000.0
args.step pgd_anneal_iters 1023 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1024 200
penalty weights 10000.0
args.step pgd_anneal_iters 1024 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1025 200
penalty weights 10000.0
args.step pgd_anneal_iters 1025 600
dim_v 512
rho, theta 352 tensor(-9.4422e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1026 200
penalty weights 10000.0
args.step pgd_anneal_iters 1026 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1027 200
penalty weights 10000.0
args.step pgd_anneal_iters 1027 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1028 200
penalty weights 10000.0
args.step pgd_anneal_iters 1028 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1029 200
penalty weights 10000.0
args.step pgd_anneal_iters 1029 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1030 200
penalty weights 10000.0
args.step pgd_anneal_iters 1030 600
dim_v 512
rho, theta 349 tensor(-2.1662e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1031 200
penalty weights 10000.0
args.step pgd_anneal_iters 1031 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1032 200
penalty weights 10000.0
args.step pgd_anneal_iters 1032 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1033 200
penalty weights 10000.0
args.step pgd_anneal_iters 1033 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1034 200
penalty weights 10000.0
args.step pgd_anneal_iters 1034 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1035 200
penalty weights 10000.0
args.step pgd_anneal_iters 1035 600
dim_v 512
rho, theta 341 tensor(-9.2858e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1036 200
penalty weights 10000.0
args.step pgd_anneal_iters 1036 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1037 200
penalty weights 10000.0
args.step pgd_anneal_iters 1037 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1038 200
penalty weights 10000.0
args.step pgd_anneal_iters 1038 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1039 200
penalty weights 10000.0
args.step pgd_anneal_iters 1039 600
final projection at end of training
dim_v 512
rho, theta 367 tensor(-1.0353e-06, device='cuda:0')
Epoch: [39][  26/  26]	Loss 0.000 (0.000)	train_nll   0.67 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  43.18 ( 43.18)	train_acc   0.47 (  0.50)	train_minacc   0.41 (  0.51)	train_majacc   0.48 (  0.50)	train_corr   0.00 (  0.00)	l1 6.3564 (6.3562)	zero_count 0.0000 (36.1920)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.12it/s] 23%|##3       | 6/26 [00:00<00:00, 23.58it/s]                                               23%|##3       | 6/26 [00:00<00:00, 23.58it/s] 42%|####2     | 11/26 [00:00<00:00, 31.76it/s] 62%|######1   | 16/26 [00:00<00:00, 36.96it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.96it/s] 81%|########  | 21/26 [00:00<00:00, 36.25it/s]100%|##########| 26/26 [00:00<00:00, 39.50it/s]100%|##########| 26/26 [00:00<00:00, 31.35it/s]
Test: [   0/  26]	Loss 0.665 (0.665)	test_acc   0.47 (  0.47)	test_minacc   0.52 (  0.52)	test_majacc   0.46 (  0.46)	Loss_d 0.665 (0.665)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.23 (  0.23)
Test: [  10/  26]	Loss 0.665 (0.670)	test_acc   0.54 (  0.49)	test_minacc   0.51 (  0.50)	test_majacc   0.54 (  0.49)	Loss_d 0.665 (0.670)	test_acc_d   0.54 (  0.49)	test_minacc_d   0.51 (  0.50)	test_majacc_d   0.54 (  0.49)	test_corr_d   0.16 (  0.20)
Test: [  20/  26]	Loss 0.673 (0.668)	test_acc   0.46 (  0.50)	test_minacc   0.43 (  0.51)	test_majacc   0.47 (  0.49)	Loss_d 0.673 (0.668)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.43 (  0.51)	test_majacc_d   0.47 (  0.49)	test_corr_d   0.20 (  0.21)
Test: [  26/  26]	Loss 0.668 (0.668)	test_acc   0.47 (  0.50)	test_minacc   0.41 (  0.51)	test_majacc   0.48 (  0.50)	Loss_d 0.668 (0.668)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.41 (  0.51)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.21 (  0.21)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.22it/s]
Test: [  0/  1]	Loss 1.004 (1.004)	test_acc   0.50 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.48 (  0.48)	Loss_d 1.004 (1.004)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 1.004 (1.004)	test_acc   0.50 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.48 (  0.48)	Loss_d 1.004 (1.004)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.09 (  0.09)
Overall Timing[ 39/  1]	epoch_time 0.0478 (0.0438)	validation_time 0.0004 (0.0006)	train_time 0.0474 (0.0431)
record: (train_acc, test_acc) (0.7227000323534012, 0.7740000486373901)
last accs (train_acc, test_acc) (0.49850001132488253, 0.5049999952316284)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.91it/s] 19%|#9        | 5/26 [00:00<00:00, 23.91it/s] 31%|###       | 8/26 [00:00<00:00, 25.09it/s] 42%|####2     | 11/26 [00:00<00:00, 25.66it/s] 58%|#####7    | 15/26 [00:00<00:00, 29.01it/s] 69%|######9   | 18/26 [00:00<00:00, 28.30it/s] 81%|########  | 21/26 [00:00<00:00, 27.64it/s] 96%|#########6| 25/26 [00:00<00:00, 29.82it/s]100%|##########| 26/26 [00:01<00:00, 25.15it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1040 200
penalty weights 10000.0
args.step pgd_anneal_iters 1040 600
dim_v 512
rho, theta 358 tensor(-1.9791e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1041 200
penalty weights 10000.0
args.step pgd_anneal_iters 1041 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1042 200
penalty weights 10000.0
args.step pgd_anneal_iters 1042 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1043 200
penalty weights 10000.0
args.step pgd_anneal_iters 1043 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1044 200
penalty weights 10000.0
args.step pgd_anneal_iters 1044 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1045 200
penalty weights 10000.0
args.step pgd_anneal_iters 1045 600
dim_v 512
rho, theta 377 tensor(-9.2466e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1046 200
penalty weights 10000.0
args.step pgd_anneal_iters 1046 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1047 200
penalty weights 10000.0
args.step pgd_anneal_iters 1047 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1048 200
penalty weights 10000.0
args.step pgd_anneal_iters 1048 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1049 200
penalty weights 10000.0
args.step pgd_anneal_iters 1049 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1050 200
penalty weights 10000.0
args.step pgd_anneal_iters 1050 600
dim_v 512
rho, theta 354 tensor(-8.3816e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1051 200
penalty weights 10000.0
args.step pgd_anneal_iters 1051 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1052 200
penalty weights 10000.0
args.step pgd_anneal_iters 1052 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1053 200
penalty weights 10000.0
args.step pgd_anneal_iters 1053 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1054 200
penalty weights 10000.0
args.step pgd_anneal_iters 1054 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1055 200
penalty weights 10000.0
args.step pgd_anneal_iters 1055 600
dim_v 512
rho, theta 348 tensor(-6.0254e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1056 200
penalty weights 10000.0
args.step pgd_anneal_iters 1056 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1057 200
penalty weights 10000.0
args.step pgd_anneal_iters 1057 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1058 200
penalty weights 10000.0
args.step pgd_anneal_iters 1058 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1059 200
penalty weights 10000.0
args.step pgd_anneal_iters 1059 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1060 200
penalty weights 10000.0
args.step pgd_anneal_iters 1060 600
dim_v 512
rho, theta 343 tensor(-3.5901e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1061 200
penalty weights 10000.0
args.step pgd_anneal_iters 1061 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1062 200
penalty weights 10000.0
args.step pgd_anneal_iters 1062 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1063 200
penalty weights 10000.0
args.step pgd_anneal_iters 1063 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1064 200
penalty weights 10000.0
args.step pgd_anneal_iters 1064 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1065 200
penalty weights 10000.0
args.step pgd_anneal_iters 1065 600
dim_v 512
rho, theta 372 tensor(-1.2873e-06, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [40][  26/  26]	Loss 0.000 (0.000)	train_nll   0.67 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  43.18 ( 43.18)	train_acc   0.47 (  0.50)	train_minacc   0.41 (  0.51)	train_majacc   0.48 (  0.50)	train_corr   0.00 (  0.00)	l1 6.3566 (6.3562)	zero_count 0.0000 (35.8410)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.72it/s] 23%|##3       | 6/26 [00:00<00:00, 30.56it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.56it/s] 42%|####2     | 11/26 [00:00<00:00, 36.88it/s] 62%|######1   | 16/26 [00:00<00:00, 41.22it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.22it/s] 81%|########  | 21/26 [00:00<00:00, 39.32it/s]100%|##########| 26/26 [00:00<00:00, 42.04it/s]100%|##########| 26/26 [00:00<00:00, 34.94it/s]
Test: [   0/  26]	Loss 0.665 (0.665)	test_acc   0.47 (  0.47)	test_minacc   0.52 (  0.52)	test_majacc   0.46 (  0.46)	Loss_d 0.665 (0.665)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.23 (  0.23)
Test: [  10/  26]	Loss 0.665 (0.670)	test_acc   0.53 (  0.49)	test_minacc   0.51 (  0.50)	test_majacc   0.54 (  0.49)	Loss_d 0.665 (0.670)	test_acc_d   0.53 (  0.49)	test_minacc_d   0.51 (  0.50)	test_majacc_d   0.54 (  0.49)	test_corr_d   0.16 (  0.20)
Test: [  20/  26]	Loss 0.673 (0.668)	test_acc   0.46 (  0.49)	test_minacc   0.43 (  0.51)	test_majacc   0.47 (  0.49)	Loss_d 0.673 (0.668)	test_acc_d   0.46 (  0.49)	test_minacc_d   0.43 (  0.51)	test_majacc_d   0.47 (  0.49)	test_corr_d   0.20 (  0.21)
Test: [  26/  26]	Loss 0.668 (0.668)	test_acc   0.47 (  0.50)	test_minacc   0.41 (  0.51)	test_majacc   0.48 (  0.50)	Loss_d 0.668 (0.668)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.41 (  0.51)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.21 (  0.21)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.59it/s]
Test: [  0/  1]	Loss 1.005 (1.005)	test_acc   0.50 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.48 (  0.48)	Loss_d 1.005 (1.005)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 1.005 (1.005)	test_acc   0.50 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.48 (  0.48)	Loss_d 1.005 (1.005)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.09 (  0.09)
Overall Timing[ 40/  1]	epoch_time 0.0440 (0.0438)	validation_time 0.0008 (0.0006)	train_time 0.0433 (0.0431)
record: (train_acc, test_acc) (0.7227000323534012, 0.7740000486373901)
last accs (train_acc, test_acc) (0.49850001016259193, 0.5049999952316284)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.55it/s] 15%|#5        | 4/26 [00:00<00:01, 19.26it/s] 27%|##6       | 7/26 [00:00<00:00, 22.31it/s] 38%|###8      | 10/26 [00:00<00:00, 24.28it/s] 54%|#####3    | 14/26 [00:00<00:00, 28.41it/s] 65%|######5   | 17/26 [00:00<00:00, 27.85it/s] 77%|#######6  | 20/26 [00:00<00:00, 27.70it/s] 92%|#########2| 24/26 [00:00<00:00, 30.04it/s]100%|##########| 26/26 [00:01<00:00, 25.00it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1066 200
penalty weights 10000.0
args.step pgd_anneal_iters 1066 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1067 200
penalty weights 10000.0
args.step pgd_anneal_iters 1067 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1068 200
penalty weights 10000.0
args.step pgd_anneal_iters 1068 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1069 200
penalty weights 10000.0
args.step pgd_anneal_iters 1069 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1070 200
penalty weights 10000.0
args.step pgd_anneal_iters 1070 600
dim_v 512
rho, theta 369 tensor(-9.3177e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1071 200
penalty weights 10000.0
args.step pgd_anneal_iters 1071 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1072 200
penalty weights 10000.0
args.step pgd_anneal_iters 1072 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1073 200
penalty weights 10000.0
args.step pgd_anneal_iters 1073 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1074 200
penalty weights 10000.0
args.step pgd_anneal_iters 1074 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1075 200
penalty weights 10000.0
args.step pgd_anneal_iters 1075 600
dim_v 512
rho, theta 356 tensor(-7.0925e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1076 200
penalty weights 10000.0
args.step pgd_anneal_iters 1076 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1077 200
penalty weights 10000.0
args.step pgd_anneal_iters 1077 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1078 200
penalty weights 10000.0
args.step pgd_anneal_iters 1078 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1079 200
penalty weights 10000.0
args.step pgd_anneal_iters 1079 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1080 200
penalty weights 10000.0
args.step pgd_anneal_iters 1080 600
dim_v 512
rho, theta 353 tensor(-7.8799e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1081 200
penalty weights 10000.0
args.step pgd_anneal_iters 1081 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1082 200
penalty weights 10000.0
args.step pgd_anneal_iters 1082 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1083 200
penalty weights 10000.0
args.step pgd_anneal_iters 1083 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1084 200
penalty weights 10000.0
args.step pgd_anneal_iters 1084 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1085 200
penalty weights 10000.0
args.step pgd_anneal_iters 1085 600
dim_v 512
rho, theta 353 tensor(1.3874e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1086 200
penalty weights 10000.0
args.step pgd_anneal_iters 1086 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1087 200
penalty weights 10000.0
args.step pgd_anneal_iters 1087 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1088 200
penalty weights 10000.0
args.step pgd_anneal_iters 1088 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1089 200
penalty weights 10000.0
args.step pgd_anneal_iters 1089 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1090 200
penalty weights 10000.0
args.step pgd_anneal_iters 1090 600
dim_v 512
rho, theta 374 tensor(-1.5144e-06, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1091 200
penalty weights 10000.0
args.step pgd_anneal_iters 1091 600
final projection at end of training
dim_v 512
rho, theta 377 tensor(-1.7534e-07, device='cuda:0')
Epoch: [41][  26/  26]	Loss 0.000 (0.000)	train_nll   0.67 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  43.18 ( 43.18)	train_acc   0.47 (  0.50)	train_minacc   0.41 (  0.51)	train_majacc   0.48 (  0.50)	train_corr   0.00 (  0.00)	l1 6.3557 (6.3562)	zero_count 137.0000 (32.7530)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.98it/s] 27%|##6       | 7/26 [00:00<00:00, 34.40it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.40it/s] 46%|####6     | 12/26 [00:00<00:00, 39.57it/s] 65%|######5   | 17/26 [00:00<00:00, 41.37it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.37it/s] 85%|########4 | 22/26 [00:00<00:00, 43.21it/s]100%|##########| 26/26 [00:00<00:00, 36.95it/s]
Test: [   0/  26]	Loss 0.665 (0.665)	test_acc   0.47 (  0.47)	test_minacc   0.52 (  0.52)	test_majacc   0.46 (  0.46)	Loss_d 0.665 (0.665)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.22 (  0.22)
Test: [  10/  26]	Loss 0.665 (0.670)	test_acc   0.53 (  0.49)	test_minacc   0.51 (  0.50)	test_majacc   0.54 (  0.49)	Loss_d 0.665 (0.670)	test_acc_d   0.53 (  0.49)	test_minacc_d   0.51 (  0.50)	test_majacc_d   0.54 (  0.49)	test_corr_d   0.16 (  0.20)
Test: [  20/  26]	Loss 0.673 (0.668)	test_acc   0.46 (  0.49)	test_minacc   0.43 (  0.51)	test_majacc   0.47 (  0.49)	Loss_d 0.673 (0.668)	test_acc_d   0.46 (  0.49)	test_minacc_d   0.43 (  0.51)	test_majacc_d   0.47 (  0.49)	test_corr_d   0.20 (  0.20)
Test: [  26/  26]	Loss 0.668 (0.668)	test_acc   0.47 (  0.50)	test_minacc   0.41 (  0.51)	test_majacc   0.48 (  0.50)	Loss_d 0.668 (0.668)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.41 (  0.51)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.21 (  0.21)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.51it/s]
Test: [  0/  1]	Loss 1.006 (1.006)	test_acc   0.50 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.48 (  0.48)	Loss_d 1.006 (1.006)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 1.006 (1.006)	test_acc   0.50 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.48 (  0.48)	Loss_d 1.006 (1.006)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.09 (  0.09)
Overall Timing[ 41/  1]	epoch_time 0.0452 (0.0438)	validation_time 0.0004 (0.0006)	train_time 0.0447 (0.0431)
record: (train_acc, test_acc) (0.7227000323534012, 0.7740000486373901)
last accs (train_acc, test_acc) (0.4986000124812126, 0.5049999952316284)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 14.08it/s] 23%|##3       | 6/26 [00:00<00:01, 19.11it/s] 35%|###4      | 9/26 [00:00<00:00, 21.60it/s] 50%|#####     | 13/26 [00:00<00:00, 26.09it/s] 62%|######1   | 16/26 [00:00<00:00, 26.36it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.02it/s] 88%|########8 | 23/26 [00:00<00:00, 28.85it/s]100%|##########| 26/26 [00:01<00:00, 24.38it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1092 200
penalty weights 10000.0
args.step pgd_anneal_iters 1092 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1093 200
penalty weights 10000.0
args.step pgd_anneal_iters 1093 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1094 200
penalty weights 10000.0
args.step pgd_anneal_iters 1094 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1095 200
penalty weights 10000.0
args.step pgd_anneal_iters 1095 600
dim_v 512
rho, theta 370 tensor(-7.2361e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1096 200
penalty weights 10000.0
args.step pgd_anneal_iters 1096 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1097 200
penalty weights 10000.0
args.step pgd_anneal_iters 1097 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1098 200
penalty weights 10000.0
args.step pgd_anneal_iters 1098 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1099 200
penalty weights 10000.0
args.step pgd_anneal_iters 1099 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1100 200
penalty weights 10000.0
args.step pgd_anneal_iters 1100 600
dim_v 512
rho, theta 360 tensor(-6.3798e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1101 200
penalty weights 10000.0
args.step pgd_anneal_iters 1101 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1102 200
penalty weights 10000.0
args.step pgd_anneal_iters 1102 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1103 200
penalty weights 10000.0
args.step pgd_anneal_iters 1103 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1104 200
penalty weights 10000.0
args.step pgd_anneal_iters 1104 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1105 200
penalty weights 10000.0
args.step pgd_anneal_iters 1105 600
dim_v 512
rho, theta 347 tensor(-8.7831e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1106 200
penalty weights 10000.0
args.step pgd_anneal_iters 1106 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1107 200
penalty weights 10000.0
args.step pgd_anneal_iters 1107 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1108 200
penalty weights 10000.0
args.step pgd_anneal_iters 1108 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1109 200
penalty weights 10000.0
args.step pgd_anneal_iters 1109 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1110 200
penalty weights 10000.0
args.step pgd_anneal_iters 1110 600
dim_v 512
rho, theta 359 tensor(2.7021e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1111 200
penalty weights 10000.0
args.step pgd_anneal_iters 1111 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1112 200
penalty weights 10000.0
args.step pgd_anneal_iters 1112 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1113 200
penalty weights 10000.0
args.step pgd_anneal_iters 1113 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1114 200
penalty weights 10000.0
args.step pgd_anneal_iters 1114 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1115 200
penalty weights 10000.0
args.step pgd_anneal_iters 1115 600
dim_v 512
rho, theta 374 tensor(-1.5373e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1116 200
penalty weights 10000.0
args.step pgd_anneal_iters 1116 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1117 200
penalty weights 10000.0
args.step pgd_anneal_iters 1117 600
final projection at end of training
dim_v 512
rho, theta 370 tensor(-3.7144e-07, device='cuda:0')
Epoch: [42][  26/  26]	Loss 0.000 (0.000)	train_nll   0.67 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  43.18 ( 43.18)	train_acc   0.47 (  0.50)	train_minacc   0.41 (  0.51)	train_majacc   0.48 (  0.50)	train_corr   0.00 (  0.00)	l1 6.3559 (6.3561)	zero_count 0.0000 (34.2810)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 15%|#5        | 4/26 [00:00<00:00, 37.99it/s] 35%|###4      | 9/26 [00:00<00:00, 40.79it/s]                                               35%|###4      | 9/26 [00:00<00:00, 40.79it/s] 54%|#####3    | 14/26 [00:00<00:00, 42.69it/s] 73%|#######3  | 19/26 [00:00<00:00, 43.77it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 43.77it/s] 92%|#########2| 24/26 [00:00<00:00, 45.00it/s]100%|##########| 26/26 [00:00<00:00, 39.35it/s]
Test: [   0/  26]	Loss 0.665 (0.665)	test_acc   0.47 (  0.47)	test_minacc   0.52 (  0.52)	test_majacc   0.46 (  0.46)	Loss_d 0.665 (0.665)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.22 (  0.22)
Test: [  10/  26]	Loss 0.665 (0.670)	test_acc   0.53 (  0.49)	test_minacc   0.51 (  0.50)	test_majacc   0.54 (  0.49)	Loss_d 0.665 (0.670)	test_acc_d   0.53 (  0.49)	test_minacc_d   0.51 (  0.50)	test_majacc_d   0.54 (  0.49)	test_corr_d   0.15 (  0.20)
Test: [  20/  26]	Loss 0.673 (0.668)	test_acc   0.46 (  0.50)	test_minacc   0.45 (  0.51)	test_majacc   0.47 (  0.49)	Loss_d 0.673 (0.668)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.45 (  0.51)	test_majacc_d   0.47 (  0.49)	test_corr_d   0.20 (  0.20)
Test: [  26/  26]	Loss 0.668 (0.668)	test_acc   0.47 (  0.50)	test_minacc   0.41 (  0.51)	test_majacc   0.48 (  0.50)	Loss_d 0.668 (0.668)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.41 (  0.51)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.20 (  0.20)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.22it/s]
Test: [  0/  1]	Loss 1.007 (1.007)	test_acc   0.50 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.48 (  0.48)	Loss_d 1.007 (1.007)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 1.007 (1.007)	test_acc   0.50 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.48 (  0.48)	Loss_d 1.007 (1.007)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.09 (  0.09)
Overall Timing[ 42/  1]	epoch_time 0.0459 (0.0438)	validation_time 0.0003 (0.0006)	train_time 0.0456 (0.0432)
record: (train_acc, test_acc) (0.7227000323534012, 0.7740000486373901)
last accs (train_acc, test_acc) (0.49900001361966134, 0.5040000081062317)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  5.00it/s] 15%|#5        | 4/26 [00:00<00:01, 14.51it/s] 31%|###       | 8/26 [00:00<00:00, 20.13it/s] 46%|####6     | 12/26 [00:00<00:00, 25.04it/s] 58%|#####7    | 15/26 [00:00<00:00, 25.48it/s] 69%|######9   | 18/26 [00:00<00:00, 26.10it/s] 85%|########4 | 22/26 [00:00<00:00, 28.66it/s] 96%|#########6| 25/26 [00:01<00:00, 27.98it/s]100%|##########| 26/26 [00:01<00:00, 23.25it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1118 200
penalty weights 10000.0
args.step pgd_anneal_iters 1118 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1119 200
penalty weights 10000.0
args.step pgd_anneal_iters 1119 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1120 200
penalty weights 10000.0
args.step pgd_anneal_iters 1120 600
dim_v 512
rho, theta 366 tensor(-5.1582e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1121 200
penalty weights 10000.0
args.step pgd_anneal_iters 1121 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1122 200
penalty weights 10000.0
args.step pgd_anneal_iters 1122 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1123 200
penalty weights 10000.0
args.step pgd_anneal_iters 1123 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1124 200
penalty weights 10000.0
args.step pgd_anneal_iters 1124 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1125 200
penalty weights 10000.0
args.step pgd_anneal_iters 1125 600
dim_v 512
rho, theta 367 tensor(-6.1160e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1126 200
penalty weights 10000.0
args.step pgd_anneal_iters 1126 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1127 200
penalty weights 10000.0
args.step pgd_anneal_iters 1127 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1128 200
penalty weights 10000.0
args.step pgd_anneal_iters 1128 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1129 200
penalty weights 10000.0
args.step pgd_anneal_iters 1129 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1130 200
penalty weights 10000.0
args.step pgd_anneal_iters 1130 600
dim_v 512
rho, theta 348 tensor(-8.4027e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1131 200
penalty weights 10000.0
args.step pgd_anneal_iters 1131 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1132 200
penalty weights 10000.0
args.step pgd_anneal_iters 1132 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1133 200
penalty weights 10000.0
args.step pgd_anneal_iters 1133 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1134 200
penalty weights 10000.0
args.step pgd_anneal_iters 1134 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1135 200
penalty weights 10000.0
args.step pgd_anneal_iters 1135 600
dim_v 512
rho, theta 355 tensor(6.1614e-08, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1136 200
penalty weights 10000.0
args.step pgd_anneal_iters 1136 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1137 200
penalty weights 10000.0
args.step pgd_anneal_iters 1137 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1138 200
penalty weights 10000.0
args.step pgd_anneal_iters 1138 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1139 200
penalty weights 10000.0
args.step pgd_anneal_iters 1139 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1140 200
penalty weights 10000.0
args.step pgd_anneal_iters 1140 600
dim_v 512
rho, theta 359 tensor(-1.1855e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1141 200
penalty weights 10000.0
args.step pgd_anneal_iters 1141 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1142 200
penalty weights 10000.0
args.step pgd_anneal_iters 1142 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1143 200
penalty weights 10000.0
args.step pgd_anneal_iters 1143 600
final projection at end of training
dim_v 512
rho, theta 373 tensor(-6.4641e-07, device='cuda:0')
Epoch: [43][  26/  26]	Loss 0.000 (0.000)	train_nll   0.67 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  43.18 ( 43.18)	train_acc   0.47 (  0.50)	train_minacc   0.41 (  0.51)	train_majacc   0.48 (  0.50)	train_corr   0.00 (  0.00)	l1 6.3561 (6.3561)	zero_count 0.0000 (35.1390)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.88it/s] 23%|##3       | 6/26 [00:00<00:00, 29.94it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.94it/s] 42%|####2     | 11/26 [00:00<00:00, 37.38it/s] 62%|######1   | 16/26 [00:00<00:00, 40.86it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.86it/s] 81%|########  | 21/26 [00:00<00:00, 39.42it/s]100%|##########| 26/26 [00:00<00:00, 42.26it/s]100%|##########| 26/26 [00:00<00:00, 35.57it/s]
Test: [   0/  26]	Loss 0.665 (0.665)	test_acc   0.47 (  0.47)	test_minacc   0.52 (  0.52)	test_majacc   0.46 (  0.46)	Loss_d 0.665 (0.665)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.22 (  0.22)
Test: [  10/  26]	Loss 0.665 (0.670)	test_acc   0.53 (  0.49)	test_minacc   0.51 (  0.50)	test_majacc   0.53 (  0.49)	Loss_d 0.665 (0.670)	test_acc_d   0.53 (  0.49)	test_minacc_d   0.51 (  0.50)	test_majacc_d   0.53 (  0.49)	test_corr_d   0.15 (  0.20)
Test: [  20/  26]	Loss 0.673 (0.669)	test_acc   0.46 (  0.50)	test_minacc   0.45 (  0.51)	test_majacc   0.47 (  0.49)	Loss_d 0.673 (0.669)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.45 (  0.51)	test_majacc_d   0.47 (  0.49)	test_corr_d   0.20 (  0.20)
Test: [  26/  26]	Loss 0.668 (0.668)	test_acc   0.47 (  0.50)	test_minacc   0.41 (  0.51)	test_majacc   0.48 (  0.50)	Loss_d 0.668 (0.668)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.41 (  0.51)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.20 (  0.20)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.32it/s]
Test: [  0/  1]	Loss 1.008 (1.008)	test_acc   0.50 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.48 (  0.48)	Loss_d 1.008 (1.008)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 1.008 (1.008)	test_acc   0.50 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.48 (  0.48)	Loss_d 1.008 (1.008)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.09 (  0.09)
Overall Timing[ 43/  1]	epoch_time 0.0430 (0.0438)	validation_time 0.0004 (0.0006)	train_time 0.0426 (0.0431)
record: (train_acc, test_acc) (0.7227000323534012, 0.7740000486373901)
last accs (train_acc, test_acc) (0.4988000124692917, 0.5049999952316284)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.54it/s] 15%|#5        | 4/26 [00:00<00:01, 18.00it/s] 27%|##6       | 7/26 [00:00<00:00, 19.47it/s] 42%|####2     | 11/26 [00:00<00:00, 24.89it/s] 54%|#####3    | 14/26 [00:00<00:00, 25.59it/s] 65%|######5   | 17/26 [00:00<00:00, 26.02it/s] 81%|########  | 21/26 [00:00<00:00, 29.05it/s] 92%|#########2| 24/26 [00:00<00:00, 28.67it/s]100%|##########| 26/26 [00:01<00:00, 24.55it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1144 200
penalty weights 10000.0
args.step pgd_anneal_iters 1144 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1145 200
penalty weights 10000.0
args.step pgd_anneal_iters 1145 600
dim_v 512
rho, theta 366 tensor(-3.3132e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1146 200
penalty weights 10000.0
args.step pgd_anneal_iters 1146 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1147 200
penalty weights 10000.0
args.step pgd_anneal_iters 1147 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1148 200
penalty weights 10000.0
args.step pgd_anneal_iters 1148 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1149 200
penalty weights 10000.0
args.step pgd_anneal_iters 1149 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1150 200
penalty weights 10000.0
args.step pgd_anneal_iters 1150 600
dim_v 512
rho, theta 374 tensor(-6.2561e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1151 200
penalty weights 10000.0
args.step pgd_anneal_iters 1151 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1152 200
penalty weights 10000.0
args.step pgd_anneal_iters 1152 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1153 200
penalty weights 10000.0
args.step pgd_anneal_iters 1153 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1154 200
penalty weights 10000.0
args.step pgd_anneal_iters 1154 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1155 200
penalty weights 10000.0
args.step pgd_anneal_iters 1155 600
dim_v 512
rho, theta 353 tensor(-7.4085e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1156 200
penalty weights 10000.0
args.step pgd_anneal_iters 1156 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1157 200
penalty weights 10000.0
args.step pgd_anneal_iters 1157 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1158 200
penalty weights 10000.0
args.step pgd_anneal_iters 1158 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1159 200
penalty weights 10000.0
args.step pgd_anneal_iters 1159 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1160 200
penalty weights 10000.0
args.step pgd_anneal_iters 1160 600
dim_v 512
rho, theta 353 tensor(-8.0820e-08, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1161 200
penalty weights 10000.0
args.step pgd_anneal_iters 1161 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1162 200
penalty weights 10000.0
args.step pgd_anneal_iters 1162 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1163 200
penalty weights 10000.0
args.step pgd_anneal_iters 1163 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1164 200
penalty weights 10000.0
args.step pgd_anneal_iters 1164 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1165 200
penalty weights 10000.0
args.step pgd_anneal_iters 1165 600
dim_v 512
rho, theta 342 tensor(-8.2717e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1166 200
penalty weights 10000.0
args.step pgd_anneal_iters 1166 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1167 200
penalty weights 10000.0
args.step pgd_anneal_iters 1167 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1168 200
penalty weights 10000.0
args.step pgd_anneal_iters 1168 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1169 200
penalty weights 10000.0
args.step pgd_anneal_iters 1169 600
final projection at end of training
dim_v 512
rho, theta 374 tensor(-9.0663e-07, device='cuda:0')
Epoch: [44][  26/  26]	Loss 0.000 (0.000)	train_nll   0.67 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  43.18 ( 43.18)	train_acc   0.48 (  0.50)	train_minacc   0.41 (  0.51)	train_majacc   0.49 (  0.50)	train_corr   0.00 (  0.00)	l1 6.3563 (6.3561)	zero_count 0.0000 (35.2560)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.51it/s] 23%|##3       | 6/26 [00:00<00:00, 25.00it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.00it/s] 42%|####2     | 11/26 [00:00<00:00, 33.73it/s] 62%|######1   | 16/26 [00:00<00:00, 39.10it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.10it/s] 81%|########  | 21/26 [00:00<00:00, 39.73it/s]100%|##########| 26/26 [00:00<00:00, 42.13it/s]100%|##########| 26/26 [00:00<00:00, 33.12it/s]
Test: [   0/  26]	Loss 0.665 (0.665)	test_acc   0.47 (  0.47)	test_minacc   0.52 (  0.52)	test_majacc   0.46 (  0.46)	Loss_d 0.665 (0.665)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.22 (  0.22)
Test: [  10/  26]	Loss 0.665 (0.670)	test_acc   0.53 (  0.49)	test_minacc   0.51 (  0.51)	test_majacc   0.53 (  0.49)	Loss_d 0.665 (0.670)	test_acc_d   0.53 (  0.49)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.53 (  0.49)	test_corr_d   0.15 (  0.20)
Test: [  20/  26]	Loss 0.673 (0.669)	test_acc   0.47 (  0.50)	test_minacc   0.45 (  0.52)	test_majacc   0.47 (  0.49)	Loss_d 0.673 (0.669)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.45 (  0.52)	test_majacc_d   0.47 (  0.49)	test_corr_d   0.20 (  0.20)
Test: [  26/  26]	Loss 0.669 (0.668)	test_acc   0.48 (  0.50)	test_minacc   0.41 (  0.51)	test_majacc   0.49 (  0.50)	Loss_d 0.669 (0.668)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.41 (  0.51)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.20 (  0.20)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.09it/s]
Test: [  0/  1]	Loss 1.009 (1.009)	test_acc   0.50 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.48 (  0.48)	Loss_d 1.009 (1.009)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 1.009 (1.009)	test_acc   0.50 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.48 (  0.48)	Loss_d 1.009 (1.009)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.09 (  0.09)
Overall Timing[ 44/  1]	epoch_time 0.0429 (0.0438)	validation_time 0.0003 (0.0006)	train_time 0.0426 (0.0431)
record: (train_acc, test_acc) (0.7227000323534012, 0.7740000486373901)
last accs (train_acc, test_acc) (0.4990000095963478, 0.5049999952316284)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.50it/s] 15%|#5        | 4/26 [00:00<00:01, 20.88it/s] 27%|##6       | 7/26 [00:00<00:00, 23.66it/s] 42%|####2     | 11/26 [00:00<00:00, 25.79it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.92it/s] 69%|######9   | 18/26 [00:00<00:00, 28.67it/s] 81%|########  | 21/26 [00:00<00:00, 28.39it/s] 96%|#########6| 25/26 [00:00<00:00, 30.76it/s]100%|##########| 26/26 [00:01<00:00, 25.57it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1170 200
penalty weights 10000.0
args.step pgd_anneal_iters 1170 600
dim_v 512
rho, theta 367 tensor(-1.6715e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1171 200
penalty weights 10000.0
args.step pgd_anneal_iters 1171 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1172 200
penalty weights 10000.0
args.step pgd_anneal_iters 1172 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1173 200
penalty weights 10000.0
args.step pgd_anneal_iters 1173 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1174 200
penalty weights 10000.0
args.step pgd_anneal_iters 1174 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1175 200
penalty weights 10000.0
args.step pgd_anneal_iters 1175 600
dim_v 512
rho, theta 373 tensor(-6.5406e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1176 200
penalty weights 10000.0
args.step pgd_anneal_iters 1176 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1177 200
penalty weights 10000.0
args.step pgd_anneal_iters 1177 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1178 200
penalty weights 10000.0
args.step pgd_anneal_iters 1178 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1179 200
penalty weights 10000.0
args.step pgd_anneal_iters 1179 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1180 200
penalty weights 10000.0
args.step pgd_anneal_iters 1180 600
dim_v 512
rho, theta 358 tensor(-6.5615e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1181 200
penalty weights 10000.0
args.step pgd_anneal_iters 1181 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1182 200
penalty weights 10000.0
args.step pgd_anneal_iters 1182 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1183 200
penalty weights 10000.0
args.step pgd_anneal_iters 1183 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1184 200
penalty weights 10000.0
args.step pgd_anneal_iters 1184 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1185 200
penalty weights 10000.0
args.step pgd_anneal_iters 1185 600
dim_v 512
rho, theta 350 tensor(-4.3336e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1186 200
penalty weights 10000.0
args.step pgd_anneal_iters 1186 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1187 200
penalty weights 10000.0
args.step pgd_anneal_iters 1187 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1188 200
penalty weights 10000.0
args.step pgd_anneal_iters 1188 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1189 200
penalty weights 10000.0
args.step pgd_anneal_iters 1189 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1190 200
penalty weights 10000.0
args.step pgd_anneal_iters 1190 600
dim_v 512
rho, theta 344 tensor(-2.8887e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1191 200
penalty weights 10000.0
args.step pgd_anneal_iters 1191 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1192 200
penalty weights 10000.0
args.step pgd_anneal_iters 1192 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1193 200
penalty weights 10000.0
args.step pgd_anneal_iters 1193 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1194 200
penalty weights 10000.0
args.step pgd_anneal_iters 1194 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1195 200
penalty weights 10000.0
args.step pgd_anneal_iters 1195 600
dim_v 512
rho, theta 376 tensor(-1.1320e-06, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [45][  26/  26]	Loss 0.000 (0.000)	train_nll   0.67 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  43.18 ( 43.18)	train_acc   0.48 (  0.50)	train_minacc   0.41 (  0.52)	train_majacc   0.49 (  0.50)	train_corr   0.00 (  0.00)	l1 6.3565 (6.3561)	zero_count 0.0000 (35.1000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.60it/s] 12%|#1        | 3/26 [00:00<00:01, 13.40it/s] 31%|###       | 8/26 [00:00<00:00, 27.64it/s]                                               31%|###       | 8/26 [00:00<00:00, 27.64it/s] 50%|#####     | 13/26 [00:00<00:00, 34.62it/s] 69%|######9   | 18/26 [00:00<00:00, 38.98it/s]                                                69%|######9   | 18/26 [00:00<00:00, 38.98it/s] 88%|########8 | 23/26 [00:00<00:00, 37.98it/s]100%|##########| 26/26 [00:00<00:00, 32.77it/s]
Test: [   0/  26]	Loss 0.665 (0.665)	test_acc   0.47 (  0.47)	test_minacc   0.52 (  0.52)	test_majacc   0.46 (  0.46)	Loss_d 0.665 (0.665)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.22 (  0.22)
Test: [  10/  26]	Loss 0.665 (0.670)	test_acc   0.53 (  0.49)	test_minacc   0.51 (  0.51)	test_majacc   0.53 (  0.49)	Loss_d 0.665 (0.670)	test_acc_d   0.53 (  0.49)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.53 (  0.49)	test_corr_d   0.15 (  0.20)
Test: [  20/  26]	Loss 0.673 (0.669)	test_acc   0.47 (  0.50)	test_minacc   0.45 (  0.52)	test_majacc   0.47 (  0.49)	Loss_d 0.673 (0.669)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.45 (  0.52)	test_majacc_d   0.47 (  0.49)	test_corr_d   0.20 (  0.20)
Test: [  26/  26]	Loss 0.669 (0.668)	test_acc   0.48 (  0.50)	test_minacc   0.41 (  0.52)	test_majacc   0.49 (  0.50)	Loss_d 0.669 (0.668)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.41 (  0.52)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.20 (  0.20)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 58.27it/s]
Test: [  0/  1]	Loss 1.010 (1.010)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.48 (  0.48)	Loss_d 1.010 (1.010)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 1.010 (1.010)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.48 (  0.48)	Loss_d 1.010 (1.010)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.09 (  0.09)
Overall Timing[ 45/  1]	epoch_time 0.0422 (0.0438)	validation_time 0.0004 (0.0006)	train_time 0.0418 (0.0431)
record: (train_acc, test_acc) (0.7227000323534012, 0.7740000486373901)
last accs (train_acc, test_acc) (0.49950001072883604, 0.5060000419616699)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 12.46it/s] 19%|#9        | 5/26 [00:00<00:01, 18.50it/s] 35%|###4      | 9/26 [00:00<00:00, 24.71it/s] 46%|####6     | 12/26 [00:00<00:00, 24.80it/s] 58%|#####7    | 15/26 [00:00<00:00, 25.05it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.01it/s] 85%|########4 | 22/26 [00:00<00:00, 27.87it/s] 96%|#########6| 25/26 [00:00<00:00, 27.54it/s]100%|##########| 26/26 [00:01<00:00, 24.34it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1196 200
penalty weights 10000.0
args.step pgd_anneal_iters 1196 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1197 200
penalty weights 10000.0
args.step pgd_anneal_iters 1197 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1198 200
penalty weights 10000.0
args.step pgd_anneal_iters 1198 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1199 200
penalty weights 10000.0
args.step pgd_anneal_iters 1199 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1200 200
penalty weights 10000.0
args.step pgd_anneal_iters 1200 600
dim_v 512
rho, theta 368 tensor(-7.0686e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1201 200
penalty weights 10000.0
args.step pgd_anneal_iters 1201 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1202 200
penalty weights 10000.0
args.step pgd_anneal_iters 1202 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1203 200
penalty weights 10000.0
args.step pgd_anneal_iters 1203 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1204 200
penalty weights 10000.0
args.step pgd_anneal_iters 1204 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1205 200
penalty weights 10000.0
args.step pgd_anneal_iters 1205 600
dim_v 512
rho, theta 362 tensor(-5.5434e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1206 200
penalty weights 10000.0
args.step pgd_anneal_iters 1206 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1207 200
penalty weights 10000.0
args.step pgd_anneal_iters 1207 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1208 200
penalty weights 10000.0
args.step pgd_anneal_iters 1208 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1209 200
penalty weights 10000.0
args.step pgd_anneal_iters 1209 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1210 200
penalty weights 10000.0
args.step pgd_anneal_iters 1210 600
dim_v 512
rho, theta 354 tensor(-6.3399e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1211 200
penalty weights 10000.0
args.step pgd_anneal_iters 1211 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1212 200
penalty weights 10000.0
args.step pgd_anneal_iters 1212 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1213 200
penalty weights 10000.0
args.step pgd_anneal_iters 1213 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1214 200
penalty weights 10000.0
args.step pgd_anneal_iters 1214 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1215 200
penalty weights 10000.0
args.step pgd_anneal_iters 1215 600
dim_v 512
rho, theta 356 tensor(1.6295e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1216 200
penalty weights 10000.0
args.step pgd_anneal_iters 1216 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1217 200
penalty weights 10000.0
args.step pgd_anneal_iters 1217 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1218 200
penalty weights 10000.0
args.step pgd_anneal_iters 1218 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1219 200
penalty weights 10000.0
args.step pgd_anneal_iters 1219 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1220 200
penalty weights 10000.0
args.step pgd_anneal_iters 1220 600
dim_v 512
rho, theta 380 tensor(-1.3229e-06, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1221 200
penalty weights 10000.0
args.step pgd_anneal_iters 1221 600
final projection at end of training
dim_v 512
rho, theta 382 tensor(-1.4816e-07, device='cuda:0')
Epoch: [46][  26/  26]	Loss 0.000 (0.000)	train_nll   0.67 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  43.18 ( 43.18)	train_acc   0.48 (  0.50)	train_minacc   0.41 (  0.52)	train_majacc   0.49 (  0.50)	train_corr   0.00 (  0.00)	l1 6.3557 (6.3561)	zero_count 131.0000 (32.0960)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.74it/s] 27%|##6       | 7/26 [00:00<00:00, 32.66it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.66it/s] 46%|####6     | 12/26 [00:00<00:00, 38.52it/s] 65%|######5   | 17/26 [00:00<00:00, 41.45it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.45it/s] 85%|########4 | 22/26 [00:00<00:00, 39.70it/s]100%|##########| 26/26 [00:00<00:00, 36.83it/s]
Test: [   0/  26]	Loss 0.664 (0.664)	test_acc   0.47 (  0.47)	test_minacc   0.52 (  0.52)	test_majacc   0.46 (  0.46)	Loss_d 0.664 (0.664)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.22 (  0.22)
Test: [  10/  26]	Loss 0.666 (0.670)	test_acc   0.53 (  0.49)	test_minacc   0.51 (  0.51)	test_majacc   0.53 (  0.49)	Loss_d 0.666 (0.670)	test_acc_d   0.53 (  0.49)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.53 (  0.49)	test_corr_d   0.15 (  0.20)
Test: [  20/  26]	Loss 0.673 (0.669)	test_acc   0.47 (  0.50)	test_minacc   0.45 (  0.52)	test_majacc   0.47 (  0.49)	Loss_d 0.673 (0.669)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.45 (  0.52)	test_majacc_d   0.47 (  0.49)	test_corr_d   0.20 (  0.20)
Test: [  26/  26]	Loss 0.669 (0.668)	test_acc   0.48 (  0.50)	test_minacc   0.41 (  0.52)	test_majacc   0.49 (  0.50)	Loss_d 0.669 (0.668)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.41 (  0.52)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.20 (  0.20)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.42it/s]
Test: [  0/  1]	Loss 1.011 (1.011)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.48 (  0.48)	Loss_d 1.011 (1.011)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 1.011 (1.011)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.48 (  0.48)	Loss_d 1.011 (1.011)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.09 (  0.09)
Overall Timing[ 46/  1]	epoch_time 0.0430 (0.0438)	validation_time 0.0006 (0.0006)	train_time 0.0424 (0.0431)
record: (train_acc, test_acc) (0.7227000323534012, 0.7740000486373901)
last accs (train_acc, test_acc) (0.49950001189112664, 0.5060000419616699)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.21it/s] 15%|#5        | 4/26 [00:00<00:01, 18.54it/s] 31%|###       | 8/26 [00:00<00:00, 24.77it/s] 42%|####2     | 11/26 [00:00<00:00, 25.19it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.13it/s] 69%|######9   | 18/26 [00:00<00:00, 29.11it/s] 81%|########  | 21/26 [00:00<00:00, 28.34it/s] 92%|#########2| 24/26 [00:00<00:00, 27.34it/s]100%|##########| 26/26 [00:01<00:00, 24.90it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1222 200
penalty weights 10000.0
args.step pgd_anneal_iters 1222 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1223 200
penalty weights 10000.0
args.step pgd_anneal_iters 1223 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1224 200
penalty weights 10000.0
args.step pgd_anneal_iters 1224 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1225 200
penalty weights 10000.0
args.step pgd_anneal_iters 1225 600
dim_v 512
rho, theta 370 tensor(-5.5524e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1226 200
penalty weights 10000.0
args.step pgd_anneal_iters 1226 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1227 200
penalty weights 10000.0
args.step pgd_anneal_iters 1227 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1228 200
penalty weights 10000.0
args.step pgd_anneal_iters 1228 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1229 200
penalty weights 10000.0
args.step pgd_anneal_iters 1229 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1230 200
penalty weights 10000.0
args.step pgd_anneal_iters 1230 600
dim_v 512
rho, theta 365 tensor(-4.8075e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1231 200
penalty weights 10000.0
args.step pgd_anneal_iters 1231 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1232 200
penalty weights 10000.0
args.step pgd_anneal_iters 1232 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1233 200
penalty weights 10000.0
args.step pgd_anneal_iters 1233 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1234 200
penalty weights 10000.0
args.step pgd_anneal_iters 1234 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1235 200
penalty weights 10000.0
args.step pgd_anneal_iters 1235 600
dim_v 512
rho, theta 349 tensor(-7.5885e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1236 200
penalty weights 10000.0
args.step pgd_anneal_iters 1236 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1237 200
penalty weights 10000.0
args.step pgd_anneal_iters 1237 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1238 200
penalty weights 10000.0
args.step pgd_anneal_iters 1238 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1239 200
penalty weights 10000.0
args.step pgd_anneal_iters 1239 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1240 200
penalty weights 10000.0
args.step pgd_anneal_iters 1240 600
dim_v 512
rho, theta 362 tensor(2.6797e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1241 200
penalty weights 10000.0
args.step pgd_anneal_iters 1241 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1242 200
penalty weights 10000.0
args.step pgd_anneal_iters 1242 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1243 200
penalty weights 10000.0
args.step pgd_anneal_iters 1243 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1244 200
penalty weights 10000.0
args.step pgd_anneal_iters 1244 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1245 200
penalty weights 10000.0
args.step pgd_anneal_iters 1245 600
dim_v 512
rho, theta 378 tensor(-1.3261e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1246 200
penalty weights 10000.0
args.step pgd_anneal_iters 1246 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1247 200
penalty weights 10000.0
args.step pgd_anneal_iters 1247 600
final projection at end of training
dim_v 512
rho, theta 371 tensor(-3.1789e-07, device='cuda:0')
Epoch: [47][  26/  26]	Loss 0.000 (0.000)	train_nll   0.67 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  43.18 ( 43.18)	train_acc   0.47 (  0.50)	train_minacc   0.41 (  0.52)	train_majacc   0.48 (  0.50)	train_corr   0.00 (  0.00)	l1 6.3559 (6.3561)	zero_count 0.0000 (33.5400)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02, 11.88it/s] 27%|##6       | 7/26 [00:00<00:00, 28.10it/s]                                               27%|##6       | 7/26 [00:00<00:00, 28.10it/s] 46%|####6     | 12/26 [00:00<00:00, 35.20it/s] 65%|######5   | 17/26 [00:00<00:00, 39.35it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.35it/s] 85%|########4 | 22/26 [00:00<00:00, 38.55it/s]100%|##########| 26/26 [00:00<00:00, 34.50it/s]
Test: [   0/  26]	Loss 0.664 (0.664)	test_acc   0.47 (  0.47)	test_minacc   0.52 (  0.52)	test_majacc   0.46 (  0.46)	Loss_d 0.664 (0.664)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.22 (  0.22)
Test: [  10/  26]	Loss 0.666 (0.670)	test_acc   0.53 (  0.49)	test_minacc   0.51 (  0.51)	test_majacc   0.53 (  0.49)	Loss_d 0.666 (0.670)	test_acc_d   0.53 (  0.49)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.53 (  0.49)	test_corr_d   0.15 (  0.19)
Test: [  20/  26]	Loss 0.673 (0.669)	test_acc   0.47 (  0.50)	test_minacc   0.45 (  0.52)	test_majacc   0.47 (  0.49)	Loss_d 0.673 (0.669)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.45 (  0.52)	test_majacc_d   0.47 (  0.49)	test_corr_d   0.20 (  0.20)
Test: [  26/  26]	Loss 0.669 (0.668)	test_acc   0.47 (  0.50)	test_minacc   0.41 (  0.52)	test_majacc   0.48 (  0.50)	Loss_d 0.669 (0.668)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.41 (  0.52)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.20 (  0.20)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.23it/s]
Test: [  0/  1]	Loss 1.012 (1.012)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.48 (  0.48)	Loss_d 1.012 (1.012)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 1.012 (1.012)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.48 (  0.48)	Loss_d 1.012 (1.012)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.09 (  0.09)
Overall Timing[ 47/  1]	epoch_time 0.0456 (0.0438)	validation_time 0.0003 (0.0006)	train_time 0.0453 (0.0431)
record: (train_acc, test_acc) (0.7227000323534012, 0.7740000486373901)
last accs (train_acc, test_acc) (0.4986000124812126, 0.5080000162124634)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.19it/s] 19%|#9        | 5/26 [00:00<00:00, 22.10it/s] 31%|###       | 8/26 [00:00<00:00, 24.38it/s] 46%|####6     | 12/26 [00:00<00:00, 28.45it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.01it/s] 69%|######9   | 18/26 [00:00<00:00, 27.38it/s] 85%|########4 | 22/26 [00:00<00:00, 29.94it/s] 96%|#########6| 25/26 [00:00<00:00, 29.09it/s]100%|##########| 26/26 [00:00<00:00, 26.15it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1248 200
penalty weights 10000.0
args.step pgd_anneal_iters 1248 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1249 200
penalty weights 10000.0
args.step pgd_anneal_iters 1249 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1250 200
penalty weights 10000.0
args.step pgd_anneal_iters 1250 600
dim_v 512
rho, theta 369 tensor(-4.0080e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1251 200
penalty weights 10000.0
args.step pgd_anneal_iters 1251 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1252 200
penalty weights 10000.0
args.step pgd_anneal_iters 1252 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1253 200
penalty weights 10000.0
args.step pgd_anneal_iters 1253 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1254 200
penalty weights 10000.0
args.step pgd_anneal_iters 1254 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1255 200
penalty weights 10000.0
args.step pgd_anneal_iters 1255 600
dim_v 512
rho, theta 368 tensor(-4.4712e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1256 200
penalty weights 10000.0
args.step pgd_anneal_iters 1256 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1257 200
penalty weights 10000.0
args.step pgd_anneal_iters 1257 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1258 200
penalty weights 10000.0
args.step pgd_anneal_iters 1258 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1259 200
penalty weights 10000.0
args.step pgd_anneal_iters 1259 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1260 200
penalty weights 10000.0
args.step pgd_anneal_iters 1260 600
dim_v 512
rho, theta 355 tensor(-7.1660e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1261 200
penalty weights 10000.0
args.step pgd_anneal_iters 1261 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1262 200
penalty weights 10000.0
args.step pgd_anneal_iters 1262 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1263 200
penalty weights 10000.0
args.step pgd_anneal_iters 1263 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1264 200
penalty weights 10000.0
args.step pgd_anneal_iters 1264 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1265 200
penalty weights 10000.0
args.step pgd_anneal_iters 1265 600
dim_v 512
rho, theta 359 tensor(9.6692e-08, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1266 200
penalty weights 10000.0
args.step pgd_anneal_iters 1266 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1267 200
penalty weights 10000.0
args.step pgd_anneal_iters 1267 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1268 200
penalty weights 10000.0
args.step pgd_anneal_iters 1268 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1269 200
penalty weights 10000.0
args.step pgd_anneal_iters 1269 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1270 200
penalty weights 10000.0
args.step pgd_anneal_iters 1270 600
dim_v 512
rho, theta 358 tensor(-1.0334e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1271 200
penalty weights 10000.0
args.step pgd_anneal_iters 1271 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1272 200
penalty weights 10000.0
args.step pgd_anneal_iters 1272 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1273 200
penalty weights 10000.0
args.step pgd_anneal_iters 1273 600
final projection at end of training
dim_v 512
rho, theta 375 tensor(-5.5927e-07, device='cuda:0')
Epoch: [48][  26/  26]	Loss 0.000 (0.000)	train_nll   0.67 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  43.18 ( 43.18)	train_acc   0.47 (  0.50)	train_minacc   0.41 (  0.51)	train_majacc   0.48 (  0.50)	train_corr   0.00 (  0.00)	l1 6.3561 (6.3561)	zero_count 0.0000 (34.5540)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.58it/s] 23%|##3       | 6/26 [00:00<00:00, 32.54it/s]                                               23%|##3       | 6/26 [00:00<00:00, 32.54it/s] 42%|####2     | 11/26 [00:00<00:00, 38.12it/s] 62%|######1   | 16/26 [00:00<00:00, 42.30it/s]                                                62%|######1   | 16/26 [00:00<00:00, 42.30it/s] 81%|########  | 21/26 [00:00<00:00, 41.78it/s]100%|##########| 26/26 [00:00<00:00, 37.05it/s]
Test: [   0/  26]	Loss 0.664 (0.664)	test_acc   0.47 (  0.47)	test_minacc   0.52 (  0.52)	test_majacc   0.46 (  0.46)	Loss_d 0.664 (0.664)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.22 (  0.22)
Test: [  10/  26]	Loss 0.666 (0.670)	test_acc   0.53 (  0.49)	test_minacc   0.51 (  0.51)	test_majacc   0.53 (  0.49)	Loss_d 0.666 (0.670)	test_acc_d   0.53 (  0.49)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.53 (  0.49)	test_corr_d   0.15 (  0.19)
Test: [  20/  26]	Loss 0.673 (0.669)	test_acc   0.47 (  0.49)	test_minacc   0.45 (  0.52)	test_majacc   0.47 (  0.49)	Loss_d 0.673 (0.669)	test_acc_d   0.47 (  0.49)	test_minacc_d   0.45 (  0.52)	test_majacc_d   0.47 (  0.49)	test_corr_d   0.20 (  0.20)
Test: [  26/  26]	Loss 0.669 (0.668)	test_acc   0.47 (  0.50)	test_minacc   0.41 (  0.51)	test_majacc   0.48 (  0.50)	Loss_d 0.669 (0.668)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.41 (  0.51)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.20 (  0.20)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.01it/s]
Test: [  0/  1]	Loss 1.013 (1.013)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.48 (  0.48)	Loss_d 1.013 (1.013)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 1.013 (1.013)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.48 (  0.48)	Loss_d 1.013 (1.013)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.09 (  0.09)
Overall Timing[ 48/  1]	epoch_time 0.0430 (0.0438)	validation_time 0.0004 (0.0006)	train_time 0.0425 (0.0431)
record: (train_acc, test_acc) (0.7227000323534012, 0.7740000486373901)
last accs (train_acc, test_acc) (0.4980000125169754, 0.5080000162124634)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.20it/s] 15%|#5        | 4/26 [00:00<00:01, 14.85it/s] 27%|##6       | 7/26 [00:00<00:00, 19.59it/s] 42%|####2     | 11/26 [00:00<00:00, 25.29it/s] 54%|#####3    | 14/26 [00:00<00:00, 25.89it/s] 65%|######5   | 17/26 [00:00<00:00, 26.13it/s] 81%|########  | 21/26 [00:00<00:00, 29.08it/s] 92%|#########2| 24/26 [00:00<00:00, 28.34it/s]100%|##########| 26/26 [00:01<00:00, 23.79it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1274 200
penalty weights 10000.0
args.step pgd_anneal_iters 1274 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1275 200
penalty weights 10000.0
args.step pgd_anneal_iters 1275 600
dim_v 512
rho, theta 366 tensor(-2.5986e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1276 200
penalty weights 10000.0
args.step pgd_anneal_iters 1276 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1277 200
penalty weights 10000.0
args.step pgd_anneal_iters 1277 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1278 200
penalty weights 10000.0
args.step pgd_anneal_iters 1278 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1279 200
penalty weights 10000.0
args.step pgd_anneal_iters 1279 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1280 200
penalty weights 10000.0
args.step pgd_anneal_iters 1280 600
dim_v 512
rho, theta 372 tensor(-4.1292e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1281 200
penalty weights 10000.0
args.step pgd_anneal_iters 1281 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1282 200
penalty weights 10000.0
args.step pgd_anneal_iters 1282 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1283 200
penalty weights 10000.0
args.step pgd_anneal_iters 1283 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1284 200
penalty weights 10000.0
args.step pgd_anneal_iters 1284 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1285 200
penalty weights 10000.0
args.step pgd_anneal_iters 1285 600
dim_v 512
rho, theta 357 tensor(-6.2202e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1286 200
penalty weights 10000.0
args.step pgd_anneal_iters 1286 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1287 200
penalty weights 10000.0
args.step pgd_anneal_iters 1287 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1288 200
penalty weights 10000.0
args.step pgd_anneal_iters 1288 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1289 200
penalty weights 10000.0
args.step pgd_anneal_iters 1289 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1290 200
penalty weights 10000.0
args.step pgd_anneal_iters 1290 600
dim_v 512
rho, theta 358 tensor(-4.6488e-08, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1291 200
penalty weights 10000.0
args.step pgd_anneal_iters 1291 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1292 200
penalty weights 10000.0
args.step pgd_anneal_iters 1292 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1293 200
penalty weights 10000.0
args.step pgd_anneal_iters 1293 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1294 200
penalty weights 10000.0
args.step pgd_anneal_iters 1294 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1295 200
penalty weights 10000.0
args.step pgd_anneal_iters 1295 600
dim_v 512
rho, theta 345 tensor(-7.2904e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1296 200
penalty weights 10000.0
args.step pgd_anneal_iters 1296 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1297 200
penalty weights 10000.0
args.step pgd_anneal_iters 1297 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1298 200
penalty weights 10000.0
args.step pgd_anneal_iters 1298 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1299 200
penalty weights 10000.0
args.step pgd_anneal_iters 1299 600
final projection at end of training
dim_v 512
rho, theta 375 tensor(-7.6979e-07, device='cuda:0')
Epoch: [49][  26/  26]	Loss 0.000 (0.000)	train_nll   0.67 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  43.18 ( 43.18)	train_acc   0.47 (  0.50)	train_minacc   0.41 (  0.52)	train_majacc   0.48 (  0.49)	train_corr   0.00 (  0.00)	l1 6.3563 (6.3561)	zero_count 0.0000 (34.8270)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02, 10.00it/s] 27%|##6       | 7/26 [00:00<00:00, 25.66it/s]                                               27%|##6       | 7/26 [00:00<00:00, 25.66it/s] 46%|####6     | 12/26 [00:00<00:00, 33.08it/s] 65%|######5   | 17/26 [00:00<00:00, 37.36it/s]                                                65%|######5   | 17/26 [00:00<00:00, 37.36it/s] 85%|########4 | 22/26 [00:00<00:00, 36.73it/s]100%|##########| 26/26 [00:00<00:00, 31.62it/s]
Test: [   0/  26]	Loss 0.665 (0.665)	test_acc   0.47 (  0.47)	test_minacc   0.52 (  0.52)	test_majacc   0.46 (  0.46)	Loss_d 0.665 (0.665)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.22 (  0.22)
Test: [  10/  26]	Loss 0.666 (0.670)	test_acc   0.53 (  0.49)	test_minacc   0.51 (  0.51)	test_majacc   0.53 (  0.49)	Loss_d 0.666 (0.670)	test_acc_d   0.53 (  0.49)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.53 (  0.49)	test_corr_d   0.15 (  0.19)
Test: [  20/  26]	Loss 0.673 (0.669)	test_acc   0.47 (  0.49)	test_minacc   0.45 (  0.52)	test_majacc   0.47 (  0.49)	Loss_d 0.673 (0.669)	test_acc_d   0.47 (  0.49)	test_minacc_d   0.45 (  0.52)	test_majacc_d   0.47 (  0.49)	test_corr_d   0.20 (  0.20)
Test: [  26/  26]	Loss 0.669 (0.668)	test_acc   0.47 (  0.50)	test_minacc   0.41 (  0.52)	test_majacc   0.48 (  0.49)	Loss_d 0.669 (0.668)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.41 (  0.52)	test_majacc_d   0.48 (  0.49)	test_corr_d   0.20 (  0.20)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.52it/s]
Test: [  0/  1]	Loss 1.014 (1.014)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.48 (  0.48)	Loss_d 1.014 (1.014)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 1.014 (1.014)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.48 (  0.48)	Loss_d 1.014 (1.014)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.09 (  0.09)
Overall Timing[ 49/  1]	epoch_time 0.0440 (0.0438)	validation_time 0.0003 (0.0006)	train_time 0.0437 (0.0431)
record: (train_acc, test_acc) (0.7227000323534012, 0.7740000486373901)
last accs (train_acc, test_acc) (0.4975000137090683, 0.5090000033378601)
done saving aggregate.csv to ./aggregate.csv
wandb: - 0.161 MB of 0.161 MB uploadedwandb: \ 0.161 MB of 0.161 MB uploadedwandb: | 0.161 MB of 0.161 MB uploadedwandb: / 0.161 MB of 0.161 MB uploadedwandb: - 0.161 MB of 0.161 MB uploadedwandb: \ 0.161 MB of 0.161 MB uploadedwandb: | 0.161 MB of 0.161 MB uploadedwandb: / 0.161 MB of 0.161 MB uploadedwandb: - 0.161 MB of 0.161 MB uploadedThread SenderThread:
Traceback (most recent call last):
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/internal_util.py", line 48, in run
    self._run()
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/internal_util.py", line 99, in _run
    self._process(record)
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/internal.py", line 327, in _process
    self._sm.send(record)
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/sender.py", line 398, in send
    send_handler(record)
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/sender.py", line 420, in send_request
    send_handler(record)
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/sender.py", line 654, in send_request_defer
    self._flush_job()
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/sender.py", line 1706, in _flush_job
    artifact = self._job_builder.build(api=self._api)
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/job_builder.py", line 552, in build
    artifact.add_file(
  File "/home/zd16/scratch/mypython3/wandb/sdk/artifacts/artifact.py", line 1196, in add_file
    return self._add_local_file(
  File "/home/zd16/scratch/mypython3/wandb/sdk/artifacts/artifact.py", line 1459, in _add_local_file
    with tempfile.NamedTemporaryFile(dir=get_staging_dir(), delete=False) as f:
  File "/usr/local/python/3.9.16/lib/python3.9/tempfile.py", line 545, in NamedTemporaryFile
    (fd, name) = _mkstemp_inner(dir, prefix, suffix, flags, output_type)
  File "/usr/local/python/3.9.16/lib/python3.9/tempfile.py", line 255, in _mkstemp_inner
    fd = _os.open(file, flags, 0o600)
OSError: [Errno 122] Disk quota exceeded: '/home/zd16/.local/share/wandb/artifacts/staging/tmp1z89j8a3'
wandb: ERROR Internal wandb error: file data was not synced
wandb: Currently logged in as: janezdu (janezdu-uiuc). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.17.9 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.7
wandb: Run data is saved locally in /scratch/users/zd16/sparseIRM-resnet-ver/wandb/run-20240907_210821-0eezn6ks
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run name_random
wandb: ⭐️ View project at https://wandb.ai/janezdu-uiuc/irm
wandb: 🚀 View run at https://wandb.ai/janezdu-uiuc/irm/runs/0eezn6ks
=> Reading YAML config from configs/smallscale/resnet18/resnet18-usc-unsigned.yaml
Namespace(data='dataset/', optimizer='adam', weight_opt='adam', set='mnistcifar', arch='ResNet18', config='configs/smallscale/resnet18/resnet18-usc-unsigned.yaml', log_dir=None, workers=4, epochs=50, start_epoch=None, batch_size=390, lr=0.006, warmup_length=0, momentum=0.9, weight_decay=0.0, print_freq=10, num_classes=1, resume='', resume_train_weights='', evaluate=False, pretrained=None, pretrained_distill=None, alpha_distill=0.95, T_distill=2, seed=0, multigpu=[0], lr_policy='cosine_lr', lr_adjust=30, lr_gamma=0.1, name='baseline', save_every=-1, prune_rate=1.0, param_prune_rate=0.0, pr_start=1.0, low_data=1, width_mult=1.0, nesterov=False, threetimes=False, random_subnet=False, one_batch=False, conv_type='DenseConv', freeze_weights=False, st=False, mode='fan_in', nonlinearity='relu', bn_type='LearnedBatchNorm', init='kaiming_normal', no_bn_decay=False, scale_fan=False, first_layer_dense=False, last_layer_dense=True, approx=False, zero=False, flip=False, bs=False, gumbel_sample=False, multiply_prob=False, no_multiply=False, multiply_cont=False, multiply_prob_bs=False, indiv=False, label_smoothing=None, first_layer_type=None, trainer='default', score_init_constant=1.0, K=1, update_freq=20, D=0.01, T=1, TA=True, TA2=False, TA_grow=False, center=False, straight_through=False, PLA_factor=0.1, PLA_patience=10, gradient_loss_para=0, abs_loss_para=0, thres=0.9, runs_name='name_random', resume_compare_loss1='', resume_compare_loss2='', init_weights='', trained_mask='', weight_rescaling=False, constrain_by_layer=False, weight_rescaling_data=False, use_running_stats=False, not_clipping=False, rescaling_para=False, lasso_para=0, dont_freeze_weights=False, iterative=True, prob_by_weight=False, rescale_at_fix_subnet=False, train_weights_at_the_same_time=False, sample_from_training_set=False, load_true_para=False, distill=False, finetune=False, stablize=False, prev_best=0, weight_opt_lr=0.0006, n=500, ts=0.28, te=0.6, d=20000, s=80, c=0.75, init_prob=False, thres_before=0.001, wide_ratio=0.001, noise=1, cal_p_q=False, just_finetune=False, snip=False, envs_num=2, l2_regularizer_weight=0.001, data_num=50000, env_type='linear', irm_type='irmv1', hidden_dim=390, penalty_anneal_iters=200, penalty_weight=10000.0, grayscale_model=0, weight_lr_schedule=False, fix_subnet=False, freeze_weight=False, step='ours', prior_sd_coef=0, dim_inv=2, variance_gamma=1.0, dim_spu=10, image_scale=32, cons_ratio='0.999_0.7_0.1', noise_ratio=0.2, step_gamma=0.1, step_round=3, inner_steps=1, use_pgd=True, z=15.0, pgd_anneal_iters=600, pgd_skip_steps=5, fraction_z=0.99)
=> Creating model 'ResNet18'
Here!!!!!!!!
==> Conv Type: DenseConv
==> BN Type: LearnedBatchNorm
<class 'torch.nn.modules.conv.Conv2d'>
<class 'torch.nn.modules.batchnorm.BatchNorm2d'>
==> Building first layer with <class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): Linear(in_features=512, out_features=1, bias=True)
)
=> Parallelizing on [0] gpus
<DEBUG> gradient to module.conv1.weight
<DEBUG> gradient to module.bn1.weight
<DEBUG> gradient to module.bn1.bias
<DEBUG> gradient to module.layer1.0.conv1.weight
<DEBUG> gradient to module.layer1.0.bn1.weight
<DEBUG> gradient to module.layer1.0.bn1.bias
<DEBUG> gradient to module.layer1.0.conv2.weight
<DEBUG> gradient to module.layer1.0.bn2.weight
<DEBUG> gradient to module.layer1.0.bn2.bias
<DEBUG> gradient to module.layer1.1.conv1.weight
<DEBUG> gradient to module.layer1.1.bn1.weight
<DEBUG> gradient to module.layer1.1.bn1.bias
<DEBUG> gradient to module.layer1.1.conv2.weight
<DEBUG> gradient to module.layer1.1.bn2.weight
<DEBUG> gradient to module.layer1.1.bn2.bias
<DEBUG> gradient to module.layer2.0.conv1.weight
<DEBUG> gradient to module.layer2.0.bn1.weight
<DEBUG> gradient to module.layer2.0.bn1.bias
<DEBUG> gradient to module.layer2.0.conv2.weight
<DEBUG> gradient to module.layer2.0.bn2.weight
<DEBUG> gradient to module.layer2.0.bn2.bias
<DEBUG> gradient to module.layer2.0.downsample.0.weight
<DEBUG> gradient to module.layer2.0.downsample.1.weight
<DEBUG> gradient to module.layer2.0.downsample.1.bias
<DEBUG> gradient to module.layer2.1.conv1.weight
<DEBUG> gradient to module.layer2.1.bn1.weight
<DEBUG> gradient to module.layer2.1.bn1.bias
<DEBUG> gradient to module.layer2.1.conv2.weight
<DEBUG> gradient to module.layer2.1.bn2.weight
<DEBUG> gradient to module.layer2.1.bn2.bias
<DEBUG> gradient to module.layer3.0.conv1.weight
<DEBUG> gradient to module.layer3.0.bn1.weight
<DEBUG> gradient to module.layer3.0.bn1.bias
<DEBUG> gradient to module.layer3.0.conv2.weight
<DEBUG> gradient to module.layer3.0.bn2.weight
<DEBUG> gradient to module.layer3.0.bn2.bias
<DEBUG> gradient to module.layer3.0.downsample.0.weight
<DEBUG> gradient to module.layer3.0.downsample.1.weight
<DEBUG> gradient to module.layer3.0.downsample.1.bias
<DEBUG> gradient to module.layer3.1.conv1.weight
<DEBUG> gradient to module.layer3.1.bn1.weight
<DEBUG> gradient to module.layer3.1.bn1.bias
<DEBUG> gradient to module.layer3.1.conv2.weight
<DEBUG> gradient to module.layer3.1.bn2.weight
<DEBUG> gradient to module.layer3.1.bn2.bias
<DEBUG> gradient to module.layer4.0.conv1.weight
<DEBUG> gradient to module.layer4.0.bn1.weight
<DEBUG> gradient to module.layer4.0.bn1.bias
<DEBUG> gradient to module.layer4.0.conv2.weight
<DEBUG> gradient to module.layer4.0.bn2.weight
<DEBUG> gradient to module.layer4.0.bn2.bias
<DEBUG> gradient to module.layer4.0.downsample.0.weight
<DEBUG> gradient to module.layer4.0.downsample.1.weight
<DEBUG> gradient to module.layer4.0.downsample.1.bias
<DEBUG> gradient to module.layer4.1.conv1.weight
<DEBUG> gradient to module.layer4.1.bn1.weight
<DEBUG> gradient to module.layer4.1.bn1.bias
<DEBUG> gradient to module.layer4.1.conv2.weight
<DEBUG> gradient to module.layer4.1.bn2.weight
<DEBUG> gradient to module.layer4.1.bn2.bias
<DEBUG> gradient to module.fc.weight
<DEBUG> gradient to module.fc.bias
Files already downloaded and verified
Files already downloaded and verified
Adding Noise to Label, len(Y)=12000, Label_noise=1198
Xmp (7877, 3, 32, 32) (6903, 3, 32, 32)
Xcp (6012, 3, 32, 32) (5988, 3, 32, 32)
env=0 2497 2497 3 3
xn 2500 xp 2500
env=1 1750 1750 750 750
xn 2500 xp 2500
env=2 50 50 450 450
xn 500 xp 500
=> Creating model 'EBD'
EBD(
  (embedings): Embedding(2, 1)
)
=> Parallelizing on [0] gpus
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:01<00:36,  1.46s/it] 19%|#9        | 5/26 [00:01<00:05,  4.15it/s] 35%|###4      | 9/26 [00:01<00:02,  8.04it/s] 50%|#####     | 13/26 [00:01<00:01, 12.20it/s] 65%|######5   | 17/26 [00:01<00:00, 16.62it/s] 81%|########  | 21/26 [00:01<00:00, 20.92it/s] 96%|#########6| 25/26 [00:02<00:00, 24.57it/s]100%|##########| 26/26 [00:02<00:00, 10.47it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 0 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 2 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 3 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 4 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 5 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 6 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 7 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 8 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 9 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 10 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 11 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 12 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 13 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 14 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 15 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 16 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 17 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 18 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 19 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 20 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 21 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 22 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 23 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 24 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 25 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [0][  26/  26]	Loss 0.403 (0.552)	train_nll   0.40 (  0.55)	train_penalty   0.05 (  0.33)	weight_norm  20.84 ( 18.10)	train_acc   0.84 (  0.81)	train_minacc   0.03 (  0.05)	train_majacc   0.99 (  0.94)	train_corr   0.00 (  0.00)	l1 7.1375 (8.3163)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 29.74it/s] 31%|###       | 8/26 [00:00<00:00, 41.46it/s]                                               31%|###       | 8/26 [00:00<00:00, 41.46it/s] 50%|#####     | 13/26 [00:00<00:00, 43.82it/s] 69%|######9   | 18/26 [00:00<00:00, 45.05it/s]                                                69%|######9   | 18/26 [00:00<00:00, 45.05it/s] 88%|########8 | 23/26 [00:00<00:00, 45.21it/s]100%|##########| 26/26 [00:00<00:00, 40.24it/s]
Test: [   0/  26]	Loss 0.426 (0.426)	test_acc   0.84 (  0.84)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.426 (0.426)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  10/  26]	Loss 0.415 (0.420)	test_acc   0.85 (  0.84)	test_minacc   0.00 (  0.02)	test_majacc   1.00 (  0.99)	Loss_d 0.415 (0.420)	test_acc_d   0.85 (  0.84)	test_minacc_d   0.00 (  0.02)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.99 (  0.98)
Test: [  20/  26]	Loss 0.339 (0.411)	test_acc   0.88 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.339 (0.411)	test_acc_d   0.88 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.99 (  0.98)
Test: [  26/  26]	Loss 0.399 (0.407)	test_acc   0.85 (  0.85)	test_minacc   0.03 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.399 (0.407)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.03 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00,  2.56it/s]100%|##########| 1/1 [00:00<00:00,  2.56it/s]
Test: [  0/  1]	Loss 1.859 (1.859)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.859 (1.859)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
Test: [  1/  1]	Loss 1.859 (1.859)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.859 (1.859)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/175/checkpoints/model_best.pth
Overall Timing[  0/  1]	epoch_time 0.0740 (0.0740)	validation_time 0.0067 (0.0067)	train_time 0.0653 (0.0653)
record: (train_acc, test_acc) (0.847700027525425, 0.10900000482797623)
last accs (train_acc, test_acc) (0.847700027525425, 0.10900000482797623)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 24.98it/s] 23%|##3       | 6/26 [00:00<00:00, 23.97it/s] 38%|###8      | 10/26 [00:00<00:00, 28.02it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.37it/s] 69%|######9   | 18/26 [00:00<00:00, 33.47it/s] 85%|########4 | 22/26 [00:00<00:00, 35.06it/s]100%|##########| 26/26 [00:00<00:00, 34.94it/s]100%|##########| 26/26 [00:00<00:00, 30.05it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 26 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 27 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 28 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 29 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 30 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 31 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 32 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 33 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 34 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 35 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 36 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 37 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 38 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 39 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 40 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 41 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 42 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 43 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 44 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 45 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 46 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 47 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 48 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 49 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 50 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 51 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [1][  26/  26]	Loss 0.384 (0.403)	train_nll   0.38 (  0.40)	train_penalty   0.03 (  0.05)	weight_norm  21.94 ( 21.60)	train_acc   0.85 (  0.85)	train_minacc   0.11 (  0.02)	train_majacc   0.99 (  0.99)	train_corr   0.00 (  0.00)	l1 6.8693 (6.9435)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.18it/s] 15%|#5        | 4/26 [00:00<00:01, 18.13it/s] 35%|###4      | 9/26 [00:00<00:00, 30.35it/s]                                               35%|###4      | 9/26 [00:00<00:00, 30.35it/s] 54%|#####3    | 14/26 [00:00<00:00, 36.94it/s] 73%|#######3  | 19/26 [00:00<00:00, 40.35it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 40.35it/s] 92%|#########2| 24/26 [00:00<00:00, 39.08it/s]100%|##########| 26/26 [00:00<00:00, 32.84it/s]
Test: [   0/  26]	Loss 0.407 (0.407)	test_acc   0.84 (  0.84)	test_minacc   0.05 (  0.05)	test_majacc   0.99 (  0.99)	Loss_d 0.407 (0.407)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.05 (  0.05)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.97)
Test: [  10/  26]	Loss 0.399 (0.405)	test_acc   0.85 (  0.84)	test_minacc   0.03 (  0.05)	test_majacc   0.99 (  0.99)	Loss_d 0.399 (0.405)	test_acc_d   0.85 (  0.84)	test_minacc_d   0.03 (  0.05)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.96)
Test: [  20/  26]	Loss 0.330 (0.394)	test_acc   0.88 (  0.85)	test_minacc   0.05 (  0.05)	test_majacc   0.99 (  0.99)	Loss_d 0.330 (0.394)	test_acc_d   0.88 (  0.85)	test_minacc_d   0.05 (  0.05)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.96)
Test: [  26/  26]	Loss 0.380 (0.391)	test_acc   0.85 (  0.85)	test_minacc   0.11 (  0.05)	test_majacc   0.99 (  0.99)	Loss_d 0.380 (0.391)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.11 (  0.05)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.96)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.58it/s]
Test: [  0/  1]	Loss 1.810 (1.810)	test_acc   0.13 (  0.13)	test_minacc   0.03 (  0.03)	test_majacc   0.99 (  0.99)	Loss_d 1.810 (1.810)	test_acc_d   0.13 (  0.13)	test_minacc_d   0.03 (  0.03)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.94 (  0.94)
Test: [  1/  1]	Loss 1.810 (1.810)	test_acc   0.13 (  0.13)	test_minacc   0.03 (  0.03)	test_majacc   0.99 (  0.99)	Loss_d 1.810 (1.810)	test_acc_d   0.13 (  0.13)	test_minacc_d   0.03 (  0.03)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.94 (  0.94)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/175/checkpoints/model_best.pth
Overall Timing[  1/  1]	epoch_time 0.0423 (0.0581)	validation_time 0.0004 (0.0036)	train_time 0.0419 (0.0536)
record: (train_acc, test_acc) (0.8476000230908394, 0.1300000101327896)
last accs (train_acc, test_acc) (0.8476000230908394, 0.1300000101327896)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.78it/s] 12%|#1        | 3/26 [00:00<00:01, 14.03it/s] 27%|##6       | 7/26 [00:00<00:00, 23.46it/s] 42%|####2     | 11/26 [00:00<00:00, 28.09it/s] 58%|#####7    | 15/26 [00:00<00:00, 30.24it/s] 73%|#######3  | 19/26 [00:00<00:00, 31.32it/s] 88%|########8 | 23/26 [00:00<00:00, 32.49it/s]100%|##########| 26/26 [00:00<00:00, 27.47it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 52 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 53 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 54 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 55 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 56 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 57 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 58 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 59 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 60 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 61 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 62 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 63 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 64 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 65 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 66 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 67 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 68 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 69 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 70 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 71 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 72 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 73 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 74 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 75 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 76 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 77 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [2][  26/  26]	Loss 0.357 (0.382)	train_nll   0.36 (  0.38)	train_penalty   0.03 (  0.04)	weight_norm  22.08 ( 22.03)	train_acc   0.86 (  0.85)	train_minacc   0.16 (  0.05)	train_majacc   0.99 (  0.99)	train_corr   0.00 (  0.00)	l1 6.9289 (6.8917)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.42it/s] 27%|##6       | 7/26 [00:00<00:00, 31.89it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.89it/s] 46%|####6     | 12/26 [00:00<00:00, 37.94it/s] 65%|######5   | 17/26 [00:00<00:00, 41.28it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.28it/s] 85%|########4 | 22/26 [00:00<00:00, 41.00it/s]100%|##########| 26/26 [00:00<00:00, 37.05it/s]
Test: [   0/  26]	Loss 0.350 (0.350)	test_acc   0.84 (  0.84)	test_minacc   0.13 (  0.13)	test_majacc   0.98 (  0.98)	Loss_d 0.350 (0.350)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.13 (  0.13)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.93 (  0.93)
Test: [  10/  26]	Loss 0.369 (0.368)	test_acc   0.85 (  0.84)	test_minacc   0.10 (  0.14)	test_majacc   0.98 (  0.97)	Loss_d 0.369 (0.368)	test_acc_d   0.85 (  0.84)	test_minacc_d   0.10 (  0.14)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.94 (  0.92)
Test: [  20/  26]	Loss 0.289 (0.355)	test_acc   0.89 (  0.85)	test_minacc   0.16 (  0.14)	test_majacc   0.99 (  0.98)	Loss_d 0.289 (0.355)	test_acc_d   0.89 (  0.85)	test_minacc_d   0.16 (  0.14)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.94 (  0.92)
Test: [  26/  26]	Loss 0.340 (0.352)	test_acc   0.86 (  0.85)	test_minacc   0.16 (  0.13)	test_majacc   0.99 (  0.98)	Loss_d 0.340 (0.352)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.16 (  0.13)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.92 (  0.92)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.76it/s]
Test: [  0/  1]	Loss 1.810 (1.810)	test_acc   0.17 (  0.17)	test_minacc   0.08 (  0.08)	test_majacc   0.98 (  0.98)	Loss_d 1.810 (1.810)	test_acc_d   0.17 (  0.17)	test_minacc_d   0.08 (  0.08)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.86 (  0.86)
Test: [  1/  1]	Loss 1.810 (1.810)	test_acc   0.17 (  0.17)	test_minacc   0.08 (  0.08)	test_majacc   0.98 (  0.98)	Loss_d 1.810 (1.810)	test_acc_d   0.17 (  0.17)	test_minacc_d   0.08 (  0.08)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.86 (  0.86)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/175/checkpoints/model_best.pth
Overall Timing[  2/  1]	epoch_time 0.0389 (0.0517)	validation_time 0.0003 (0.0025)	train_time 0.0386 (0.0486)
record: (train_acc, test_acc) (0.8523000275492668, 0.16900001466274261)
last accs (train_acc, test_acc) (0.8523000275492668, 0.16900001466274261)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.07it/s] 12%|#1        | 3/26 [00:00<00:01, 13.05it/s] 27%|##6       | 7/26 [00:00<00:00, 22.79it/s] 42%|####2     | 11/26 [00:00<00:00, 27.02it/s] 58%|#####7    | 15/26 [00:00<00:00, 29.23it/s] 73%|#######3  | 19/26 [00:00<00:00, 30.66it/s] 88%|########8 | 23/26 [00:00<00:00, 32.13it/s]100%|##########| 26/26 [00:00<00:00, 26.38it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 78 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 79 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 80 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 81 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 82 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 83 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 84 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 85 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 86 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 87 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 88 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 89 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 90 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 91 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 92 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 93 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 94 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 95 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 96 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 97 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 98 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 99 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 100 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 101 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 102 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 103 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [3][  26/  26]	Loss 0.324 (0.358)	train_nll   0.32 (  0.36)	train_penalty   0.02 (  0.03)	weight_norm  22.15 ( 22.12)	train_acc   0.85 (  0.85)	train_minacc   0.18 (  0.13)	train_majacc   0.97 (  0.98)	train_corr   0.00 (  0.00)	l1 6.8720 (6.8952)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.21it/s] 23%|##3       | 6/26 [00:00<00:00, 20.90it/s] 38%|###8      | 10/26 [00:00<00:00, 27.40it/s]                                                38%|###8      | 10/26 [00:00<00:00, 27.40it/s] 58%|#####7    | 15/26 [00:00<00:00, 34.10it/s] 77%|#######6  | 20/26 [00:00<00:00, 38.38it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 38.38it/s] 96%|#########6| 25/26 [00:00<00:00, 37.50it/s]100%|##########| 26/26 [00:00<00:00, 29.99it/s]
Test: [   0/  26]	Loss 0.342 (0.342)	test_acc   0.85 (  0.85)	test_minacc   0.13 (  0.13)	test_majacc   0.99 (  0.99)	Loss_d 0.342 (0.342)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.13 (  0.13)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.93 (  0.93)
Test: [  10/  26]	Loss 0.356 (0.352)	test_acc   0.85 (  0.85)	test_minacc   0.03 (  0.14)	test_majacc   1.00 (  0.98)	Loss_d 0.356 (0.352)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.03 (  0.14)	test_majacc_d   1.00 (  0.98)	test_corr_d   0.95 (  0.93)
Test: [  20/  26]	Loss 0.273 (0.341)	test_acc   0.90 (  0.85)	test_minacc   0.18 (  0.14)	test_majacc   0.99 (  0.98)	Loss_d 0.273 (0.341)	test_acc_d   0.90 (  0.85)	test_minacc_d   0.18 (  0.14)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.95 (  0.93)
Test: [  26/  26]	Loss 0.314 (0.337)	test_acc   0.87 (  0.86)	test_minacc   0.16 (  0.14)	test_majacc   1.00 (  0.98)	Loss_d 0.314 (0.337)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.16 (  0.14)	test_majacc_d   1.00 (  0.98)	test_corr_d   0.93 (  0.93)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.37it/s]
Test: [  0/  1]	Loss 1.924 (1.924)	test_acc   0.16 (  0.16)	test_minacc   0.07 (  0.07)	test_majacc   0.99 (  0.99)	Loss_d 1.924 (1.924)	test_acc_d   0.16 (  0.16)	test_minacc_d   0.07 (  0.07)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.86 (  0.86)
Test: [  1/  1]	Loss 1.924 (1.924)	test_acc   0.16 (  0.16)	test_minacc   0.07 (  0.07)	test_majacc   0.99 (  0.99)	Loss_d 1.924 (1.924)	test_acc_d   0.16 (  0.16)	test_minacc_d   0.07 (  0.07)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.86 (  0.86)
Overall Timing[  3/  1]	epoch_time 0.0447 (0.0500)	validation_time 0.0007 (0.0020)	train_time 0.0440 (0.0474)
record: (train_acc, test_acc) (0.8523000275492668, 0.16900001466274261)
last accs (train_acc, test_acc) (0.85660002887249, 0.16200000047683716)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.24it/s] 19%|#9        | 5/26 [00:00<00:00, 23.57it/s] 35%|###4      | 9/26 [00:00<00:00, 29.86it/s] 50%|#####     | 13/26 [00:00<00:00, 33.14it/s] 65%|######5   | 17/26 [00:00<00:00, 33.70it/s] 81%|########  | 21/26 [00:00<00:00, 33.81it/s] 96%|#########6| 25/26 [00:00<00:00, 33.98it/s]100%|##########| 26/26 [00:00<00:00, 29.70it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 104 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 105 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 106 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 107 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 108 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 109 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 110 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 111 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 112 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 113 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 114 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 115 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 116 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 117 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 118 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 119 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 120 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 121 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 122 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 123 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 124 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 125 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 126 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 127 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 128 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 129 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [4][  26/  26]	Loss 0.291 (0.337)	train_nll   0.29 (  0.34)	train_penalty   0.01 (  0.03)	weight_norm  22.23 ( 22.19)	train_acc   0.88 (  0.86)	train_minacc   0.29 (  0.19)	train_majacc   0.98 (  0.97)	train_corr   0.00 (  0.00)	l1 7.0037 (6.8477)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.38it/s] 19%|#9        | 5/26 [00:00<00:00, 23.72it/s] 38%|###8      | 10/26 [00:00<00:00, 32.77it/s]                                                38%|###8      | 10/26 [00:00<00:00, 32.77it/s] 58%|#####7    | 15/26 [00:00<00:00, 34.94it/s] 77%|#######6  | 20/26 [00:00<00:00, 39.13it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 39.13it/s] 96%|#########6| 25/26 [00:00<00:00, 41.30it/s]100%|##########| 26/26 [00:00<00:00, 34.05it/s]
Test: [   0/  26]	Loss 0.316 (0.316)	test_acc   0.87 (  0.87)	test_minacc   0.30 (  0.30)	test_majacc   0.98 (  0.98)	Loss_d 0.316 (0.316)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.90 (  0.90)
Test: [  10/  26]	Loss 0.332 (0.327)	test_acc   0.87 (  0.85)	test_minacc   0.28 (  0.27)	test_majacc   0.98 (  0.96)	Loss_d 0.332 (0.327)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.28 (  0.27)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.92 (  0.89)
Test: [  20/  26]	Loss 0.252 (0.318)	test_acc   0.91 (  0.86)	test_minacc   0.30 (  0.29)	test_majacc   0.99 (  0.97)	Loss_d 0.252 (0.318)	test_acc_d   0.91 (  0.86)	test_minacc_d   0.30 (  0.29)	test_majacc_d   0.99 (  0.97)	test_corr_d   0.92 (  0.90)
Test: [  26/  26]	Loss 0.278 (0.314)	test_acc   0.88 (  0.86)	test_minacc   0.37 (  0.29)	test_majacc   0.98 (  0.97)	Loss_d 0.278 (0.314)	test_acc_d   0.88 (  0.86)	test_minacc_d   0.37 (  0.29)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.90 (  0.90)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.46it/s]
Test: [  0/  1]	Loss 1.932 (1.932)	test_acc   0.23 (  0.23)	test_minacc   0.15 (  0.15)	test_majacc   0.98 (  0.98)	Loss_d 1.932 (1.932)	test_acc_d   0.23 (  0.23)	test_minacc_d   0.15 (  0.15)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.76 (  0.76)
Test: [  1/  1]	Loss 1.932 (1.932)	test_acc   0.23 (  0.23)	test_minacc   0.15 (  0.15)	test_majacc   0.98 (  0.98)	Loss_d 1.932 (1.932)	test_acc_d   0.23 (  0.23)	test_minacc_d   0.15 (  0.15)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.76 (  0.76)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/175/checkpoints/model_best.pth
Overall Timing[  4/  1]	epoch_time 0.0377 (0.0475)	validation_time 0.0003 (0.0017)	train_time 0.0374 (0.0454)
record: (train_acc, test_acc) (0.8644000245928765, 0.23400001227855682)
last accs (train_acc, test_acc) (0.8644000245928765, 0.23400001227855682)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02, 11.05it/s] 23%|##3       | 6/26 [00:00<00:00, 21.83it/s] 38%|###8      | 10/26 [00:00<00:00, 26.46it/s] 54%|#####3    | 14/26 [00:00<00:00, 29.23it/s] 69%|######9   | 18/26 [00:00<00:00, 30.94it/s] 85%|########4 | 22/26 [00:00<00:00, 32.31it/s]100%|##########| 26/26 [00:00<00:00, 33.33it/s]100%|##########| 26/26 [00:00<00:00, 27.61it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 130 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 131 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 132 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 133 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 134 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 135 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 136 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 137 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 138 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 139 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 140 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 141 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 142 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 143 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 144 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 145 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 146 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 147 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 148 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 149 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 150 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 151 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 152 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 153 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 154 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 155 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [5][  26/  26]	Loss 0.272 (0.318)	train_nll   0.27 (  0.32)	train_penalty   0.01 (  0.02)	weight_norm  22.33 ( 22.28)	train_acc   0.88 (  0.86)	train_minacc   0.34 (  0.30)	train_majacc   0.98 (  0.96)	train_corr   0.00 (  0.00)	l1 7.0013 (6.9182)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.31it/s] 27%|##6       | 7/26 [00:00<00:00, 33.57it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.57it/s] 46%|####6     | 12/26 [00:00<00:00, 38.93it/s] 65%|######5   | 17/26 [00:00<00:00, 38.67it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.67it/s] 85%|########4 | 22/26 [00:00<00:00, 41.28it/s]100%|##########| 26/26 [00:00<00:00, 35.84it/s]
Test: [   0/  26]	Loss 0.285 (0.285)	test_acc   0.89 (  0.89)	test_minacc   0.43 (  0.43)	test_majacc   0.98 (  0.98)	Loss_d 0.285 (0.285)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.88 (  0.88)
Test: [  10/  26]	Loss 0.300 (0.306)	test_acc   0.87 (  0.86)	test_minacc   0.30 (  0.32)	test_majacc   0.98 (  0.96)	Loss_d 0.300 (0.306)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.30 (  0.32)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.90 (  0.88)
Test: [  20/  26]	Loss 0.236 (0.298)	test_acc   0.91 (  0.87)	test_minacc   0.41 (  0.35)	test_majacc   0.98 (  0.96)	Loss_d 0.236 (0.298)	test_acc_d   0.91 (  0.87)	test_minacc_d   0.41 (  0.35)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.91 (  0.88)
Test: [  26/  26]	Loss 0.251 (0.293)	test_acc   0.88 (  0.87)	test_minacc   0.32 (  0.34)	test_majacc   0.98 (  0.96)	Loss_d 0.251 (0.293)	test_acc_d   0.88 (  0.87)	test_minacc_d   0.32 (  0.34)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.89 (  0.88)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.84it/s]
Test: [  0/  1]	Loss 1.949 (1.949)	test_acc   0.22 (  0.22)	test_minacc   0.13 (  0.13)	test_majacc   0.98 (  0.98)	Loss_d 1.949 (1.949)	test_acc_d   0.22 (  0.22)	test_minacc_d   0.13 (  0.13)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.78 (  0.78)
Test: [  1/  1]	Loss 1.949 (1.949)	test_acc   0.22 (  0.22)	test_minacc   0.13 (  0.13)	test_majacc   0.98 (  0.98)	Loss_d 1.949 (1.949)	test_acc_d   0.22 (  0.22)	test_minacc_d   0.13 (  0.13)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.78 (  0.78)
Overall Timing[  5/  1]	epoch_time 0.0405 (0.0464)	validation_time 0.0004 (0.0015)	train_time 0.0400 (0.0445)
record: (train_acc, test_acc) (0.8644000245928765, 0.23400001227855682)
last accs (train_acc, test_acc) (0.8692000229358673, 0.2160000056028366)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02,  9.71it/s] 23%|##3       | 6/26 [00:00<00:00, 21.01it/s] 38%|###8      | 10/26 [00:00<00:00, 26.64it/s] 54%|#####3    | 14/26 [00:00<00:00, 28.78it/s] 69%|######9   | 18/26 [00:00<00:00, 29.21it/s] 85%|########4 | 22/26 [00:00<00:00, 31.23it/s]100%|##########| 26/26 [00:00<00:00, 32.69it/s]100%|##########| 26/26 [00:00<00:00, 26.86it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 156 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 157 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 158 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 159 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 160 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 161 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 162 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 163 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 164 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 165 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 166 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 167 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 168 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 169 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 170 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 171 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 172 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 173 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 174 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 175 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 176 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 177 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 178 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 179 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 180 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 181 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [6][  26/  26]	Loss 0.275 (0.312)	train_nll   0.27 (  0.31)	train_penalty   0.01 (  0.02)	weight_norm  22.46 ( 22.39)	train_acc   0.90 (  0.87)	train_minacc   0.34 (  0.36)	train_majacc   1.00 (  0.96)	train_corr   0.00 (  0.00)	l1 6.7369 (6.8946)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.77it/s] 27%|##6       | 7/26 [00:00<00:00, 35.82it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.82it/s] 46%|####6     | 12/26 [00:00<00:00, 40.82it/s] 65%|######5   | 17/26 [00:00<00:00, 38.98it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.98it/s] 85%|########4 | 22/26 [00:00<00:00, 41.94it/s]100%|##########| 26/26 [00:00<00:00, 36.80it/s]
Test: [   0/  26]	Loss 0.289 (0.289)	test_acc   0.89 (  0.89)	test_minacc   0.35 (  0.35)	test_majacc   0.99 (  0.99)	Loss_d 0.289 (0.289)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.91 (  0.91)
Test: [  10/  26]	Loss 0.309 (0.307)	test_acc   0.86 (  0.87)	test_minacc   0.23 (  0.30)	test_majacc   0.97 (  0.97)	Loss_d 0.309 (0.307)	test_acc_d   0.86 (  0.87)	test_minacc_d   0.23 (  0.30)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.92 (  0.91)
Test: [  20/  26]	Loss 0.232 (0.298)	test_acc   0.92 (  0.87)	test_minacc   0.36 (  0.32)	test_majacc   0.99 (  0.97)	Loss_d 0.232 (0.298)	test_acc_d   0.92 (  0.87)	test_minacc_d   0.36 (  0.32)	test_majacc_d   0.99 (  0.97)	test_corr_d   0.93 (  0.90)
Test: [  26/  26]	Loss 0.253 (0.294)	test_acc   0.89 (  0.87)	test_minacc   0.39 (  0.32)	test_majacc   0.98 (  0.97)	Loss_d 0.253 (0.294)	test_acc_d   0.89 (  0.87)	test_minacc_d   0.39 (  0.32)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.90 (  0.90)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.21it/s]
Test: [  0/  1]	Loss 2.018 (2.018)	test_acc   0.24 (  0.24)	test_minacc   0.15 (  0.15)	test_majacc   0.99 (  0.99)	Loss_d 2.018 (2.018)	test_acc_d   0.24 (  0.24)	test_minacc_d   0.15 (  0.15)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.80 (  0.80)
Test: [  1/  1]	Loss 2.018 (2.018)	test_acc   0.24 (  0.24)	test_minacc   0.15 (  0.15)	test_majacc   0.99 (  0.99)	Loss_d 2.018 (2.018)	test_acc_d   0.24 (  0.24)	test_minacc_d   0.15 (  0.15)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.80 (  0.80)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/175/checkpoints/model_best.pth
Overall Timing[  6/  1]	epoch_time 0.0417 (0.0457)	validation_time 0.0003 (0.0013)	train_time 0.0413 (0.0441)
record: (train_acc, test_acc) (0.8723000218868255, 0.23500001430511475)
last accs (train_acc, test_acc) (0.8723000218868255, 0.23500001430511475)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.68it/s] 15%|#5        | 4/26 [00:00<00:01, 17.09it/s] 31%|###       | 8/26 [00:00<00:00, 24.11it/s] 46%|####6     | 12/26 [00:00<00:00, 27.57it/s] 62%|######1   | 16/26 [00:00<00:00, 29.73it/s] 77%|#######6  | 20/26 [00:00<00:00, 31.23it/s] 92%|#########2| 24/26 [00:00<00:00, 32.01it/s]100%|##########| 26/26 [00:00<00:00, 26.49it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 182 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 183 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 184 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 185 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 186 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 187 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 188 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 189 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 190 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 191 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 192 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 193 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 194 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 195 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 196 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 197 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 198 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 199 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 200 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 201 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 202 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 203 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 204 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 205 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 206 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 207 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [7][  26/  26]	Loss 0.000 (0.217)	train_nll   0.45 (  0.33)	train_penalty   0.00 (  0.02)	weight_norm  22.62 ( 22.54)	train_acc   0.77 (  0.85)	train_minacc   0.74 (  0.48)	train_majacc   0.78 (  0.92)	train_corr   0.00 (  0.00)	l1 5.6065 (6.9031)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.81it/s] 27%|##6       | 7/26 [00:00<00:00, 36.88it/s]                                               27%|##6       | 7/26 [00:00<00:00, 36.88it/s] 46%|####6     | 12/26 [00:00<00:00, 42.10it/s] 65%|######5   | 17/26 [00:00<00:00, 43.51it/s]                                                65%|######5   | 17/26 [00:00<00:00, 43.51it/s] 88%|########8 | 23/26 [00:00<00:00, 47.56it/s]100%|##########| 26/26 [00:00<00:00, 38.51it/s]
Test: [   0/  26]	Loss 0.496 (0.496)	test_acc   0.74 (  0.74)	test_minacc   0.68 (  0.68)	test_majacc   0.75 (  0.75)	Loss_d 0.496 (0.496)	test_acc_d   0.74 (  0.74)	test_minacc_d   0.68 (  0.68)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.55 (  0.55)
Test: [  10/  26]	Loss 0.460 (0.459)	test_acc   0.76 (  0.76)	test_minacc   0.80 (  0.75)	test_majacc   0.75 (  0.76)	Loss_d 0.460 (0.459)	test_acc_d   0.76 (  0.76)	test_minacc_d   0.80 (  0.75)	test_majacc_d   0.75 (  0.76)	test_corr_d   0.58 (  0.54)
Test: [  20/  26]	Loss 0.443 (0.457)	test_acc   0.74 (  0.76)	test_minacc   0.73 (  0.76)	test_majacc   0.75 (  0.76)	Loss_d 0.443 (0.457)	test_acc_d   0.74 (  0.76)	test_minacc_d   0.73 (  0.76)	test_majacc_d   0.75 (  0.76)	test_corr_d   0.59 (  0.55)
Test: [  26/  26]	Loss 0.446 (0.459)	test_acc   0.76 (  0.76)	test_minacc   0.76 (  0.77)	test_majacc   0.76 (  0.76)	Loss_d 0.446 (0.459)	test_acc_d   0.76 (  0.76)	test_minacc_d   0.76 (  0.77)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.54 (  0.55)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.46it/s]
Test: [  0/  1]	Loss 0.935 (0.935)	test_acc   0.63 (  0.63)	test_minacc   0.61 (  0.61)	test_majacc   0.81 (  0.81)	Loss_d 0.935 (0.935)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.81 (  0.81)	test_corr_d   0.01 (  0.01)
Test: [  1/  1]	Loss 0.935 (0.935)	test_acc   0.63 (  0.63)	test_minacc   0.61 (  0.61)	test_majacc   0.81 (  0.81)	Loss_d 0.935 (0.935)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.81 (  0.81)	test_corr_d   0.01 (  0.01)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/175/checkpoints/model_best.pth
Overall Timing[  7/  1]	epoch_time 0.0414 (0.0452)	validation_time 0.0005 (0.0012)	train_time 0.0409 (0.0437)
record: (train_acc, test_acc) (0.7581000280976296, 0.6340000033378601)
last accs (train_acc, test_acc) (0.7581000280976296, 0.6340000033378601)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.43it/s] 23%|##3       | 6/26 [00:00<00:00, 26.68it/s] 38%|###8      | 10/26 [00:00<00:00, 30.28it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.46it/s] 69%|######9   | 18/26 [00:00<00:00, 32.56it/s] 85%|########4 | 22/26 [00:00<00:00, 33.33it/s]100%|##########| 26/26 [00:00<00:00, 33.59it/s]100%|##########| 26/26 [00:00<00:00, 29.27it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 208 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 209 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 210 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 211 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 212 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 213 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 214 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 215 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 216 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 217 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 218 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 219 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 220 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 221 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 222 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 223 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 224 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 225 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 226 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 227 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 228 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 229 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 230 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 231 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 232 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 233 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [8][  26/  26]	Loss 0.000 (0.001)	train_nll   0.64 (  0.59)	train_penalty   0.00 (  0.00)	weight_norm  22.70 ( 22.67)	train_acc   0.60 (  0.64)	train_minacc   0.84 (  0.80)	train_majacc   0.56 (  0.61)	train_corr   0.00 (  0.00)	l1 4.3811 (4.6799)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.14it/s] 27%|##6       | 7/26 [00:00<00:00, 30.19it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.19it/s] 46%|####6     | 12/26 [00:00<00:00, 37.39it/s] 65%|######5   | 17/26 [00:00<00:00, 40.85it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.85it/s] 85%|########4 | 22/26 [00:00<00:00, 40.31it/s]100%|##########| 26/26 [00:00<00:00, 35.95it/s]
Test: [   0/  26]	Loss 0.635 (0.635)	test_acc   0.61 (  0.61)	test_minacc   0.78 (  0.78)	test_majacc   0.57 (  0.57)	Loss_d 0.635 (0.635)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.78 (  0.78)	test_majacc_d   0.57 (  0.57)	test_corr_d   0.16 (  0.16)
Test: [  10/  26]	Loss 0.634 (0.642)	test_acc   0.61 (  0.60)	test_minacc   0.77 (  0.80)	test_majacc   0.58 (  0.56)	Loss_d 0.634 (0.642)	test_acc_d   0.61 (  0.60)	test_minacc_d   0.77 (  0.80)	test_majacc_d   0.58 (  0.56)	test_corr_d   0.18 (  0.15)
Test: [  20/  26]	Loss 0.657 (0.643)	test_acc   0.57 (  0.60)	test_minacc   0.68 (  0.79)	test_majacc   0.55 (  0.56)	Loss_d 0.657 (0.643)	test_acc_d   0.57 (  0.60)	test_minacc_d   0.68 (  0.79)	test_majacc_d   0.55 (  0.56)	test_corr_d   0.17 (  0.15)
Test: [  26/  26]	Loss 0.641 (0.643)	test_acc   0.60 (  0.60)	test_minacc   0.84 (  0.80)	test_majacc   0.56 (  0.56)	Loss_d 0.641 (0.643)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.84 (  0.80)	test_majacc_d   0.56 (  0.56)	test_corr_d   0.15 (  0.15)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.04it/s]
Test: [  0/  1]	Loss 0.655 (0.655)	test_acc   0.70 (  0.70)	test_minacc   0.71 (  0.71)	test_majacc   0.67 (  0.67)	Loss_d 0.655 (0.655)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.67 (  0.67)	test_corr_d  -0.19 ( -0.19)
Test: [  1/  1]	Loss 0.655 (0.655)	test_acc   0.70 (  0.70)	test_minacc   0.71 (  0.71)	test_majacc   0.67 (  0.67)	Loss_d 0.655 (0.655)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.67 (  0.67)	test_corr_d  -0.19 ( -0.19)
Overall Timing[  8/  1]	epoch_time 0.0427 (0.0449)	validation_time 0.0004 (0.0011)	train_time 0.0423 (0.0435)
record: (train_acc, test_acc) (0.7581000280976296, 0.6340000033378601)
last accs (train_acc, test_acc) (0.5964000101089477, 0.7020000219345093)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.40it/s] 23%|##3       | 6/26 [00:00<00:00, 25.15it/s] 38%|###8      | 10/26 [00:00<00:00, 28.51it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.08it/s] 69%|######9   | 18/26 [00:00<00:00, 32.48it/s] 85%|########4 | 22/26 [00:00<00:00, 33.13it/s]100%|##########| 26/26 [00:00<00:00, 33.42it/s]100%|##########| 26/26 [00:00<00:00, 29.24it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 234 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 235 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 236 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 237 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 238 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 239 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 240 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 241 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 242 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 243 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 244 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 245 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 246 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 247 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 248 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 249 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 250 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 251 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 252 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 253 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 254 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 255 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 256 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 257 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 258 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 259 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [9][  26/  26]	Loss 0.000 (0.001)	train_nll   0.65 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  22.70 ( 22.70)	train_acc   0.57 (  0.58)	train_minacc   0.84 (  0.80)	train_majacc   0.52 (  0.54)	train_corr   0.00 (  0.00)	l1 4.2470 (4.2949)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.66it/s] 23%|##3       | 6/26 [00:00<00:00, 22.14it/s]                                               23%|##3       | 6/26 [00:00<00:00, 22.14it/s] 42%|####2     | 11/26 [00:00<00:00, 30.88it/s] 62%|######1   | 16/26 [00:00<00:00, 36.63it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.63it/s] 81%|########  | 21/26 [00:00<00:00, 37.99it/s]100%|##########| 26/26 [00:00<00:00, 40.85it/s]100%|##########| 26/26 [00:00<00:00, 30.96it/s]
Test: [   0/  26]	Loss 0.650 (0.650)	test_acc   0.56 (  0.56)	test_minacc   0.76 (  0.76)	test_majacc   0.52 (  0.52)	Loss_d 0.650 (0.650)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.76 (  0.76)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.14 (  0.14)
Test: [  10/  26]	Loss 0.646 (0.653)	test_acc   0.59 (  0.57)	test_minacc   0.80 (  0.80)	test_majacc   0.55 (  0.53)	Loss_d 0.646 (0.653)	test_acc_d   0.59 (  0.57)	test_minacc_d   0.80 (  0.80)	test_majacc_d   0.55 (  0.53)	test_corr_d   0.15 (  0.12)
Test: [  20/  26]	Loss 0.663 (0.654)	test_acc   0.56 (  0.57)	test_minacc   0.80 (  0.80)	test_majacc   0.53 (  0.53)	Loss_d 0.663 (0.654)	test_acc_d   0.56 (  0.57)	test_minacc_d   0.80 (  0.80)	test_majacc_d   0.53 (  0.53)	test_corr_d   0.14 (  0.12)
Test: [  26/  26]	Loss 0.653 (0.654)	test_acc   0.56 (  0.57)	test_minacc   0.84 (  0.80)	test_majacc   0.50 (  0.53)	Loss_d 0.653 (0.654)	test_acc_d   0.56 (  0.57)	test_minacc_d   0.84 (  0.80)	test_majacc_d   0.50 (  0.53)	test_corr_d   0.11 (  0.12)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.98it/s]
Test: [  0/  1]	Loss 0.668 (0.668)	test_acc   0.71 (  0.71)	test_minacc   0.72 (  0.72)	test_majacc   0.66 (  0.66)	Loss_d 0.668 (0.668)	test_acc_d   0.71 (  0.71)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.66 (  0.66)	test_corr_d  -0.15 ( -0.15)
Test: [  1/  1]	Loss 0.668 (0.668)	test_acc   0.71 (  0.71)	test_minacc   0.72 (  0.72)	test_majacc   0.66 (  0.66)	Loss_d 0.668 (0.668)	test_acc_d   0.71 (  0.71)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.66 (  0.66)	test_corr_d  -0.15 ( -0.15)
Overall Timing[  9/  1]	epoch_time 0.0404 (0.0444)	validation_time 0.0004 (0.0010)	train_time 0.0400 (0.0432)
record: (train_acc, test_acc) (0.7581000280976296, 0.6340000033378601)
last accs (train_acc, test_acc) (0.5669000172019005, 0.7120000123977661)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.79it/s] 19%|#9        | 5/26 [00:00<00:01, 15.46it/s] 35%|###4      | 9/26 [00:00<00:00, 21.82it/s] 50%|#####     | 13/26 [00:00<00:00, 25.96it/s] 65%|######5   | 17/26 [00:00<00:00, 28.67it/s] 81%|########  | 21/26 [00:00<00:00, 30.19it/s] 96%|#########6| 25/26 [00:00<00:00, 31.36it/s]100%|##########| 26/26 [00:01<00:00, 24.40it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 260 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 261 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 262 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 263 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 264 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 265 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 266 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 267 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 268 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 269 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 270 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 271 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 272 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 273 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 274 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 275 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 276 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 277 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 278 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 279 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 280 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 281 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 282 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 283 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 284 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 285 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [10][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm  22.71 ( 22.70)	train_acc   0.54 (  0.55)	train_minacc   0.87 (  0.80)	train_majacc   0.48 (  0.51)	train_corr   0.00 (  0.00)	l1 4.1995 (4.2275)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.21it/s] 27%|##6       | 7/26 [00:00<00:00, 34.57it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.57it/s] 46%|####6     | 12/26 [00:00<00:00, 39.87it/s] 65%|######5   | 17/26 [00:00<00:00, 38.94it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.94it/s] 85%|########4 | 22/26 [00:00<00:00, 41.70it/s]100%|##########| 26/26 [00:00<00:00, 36.85it/s]
Test: [   0/  26]	Loss 0.653 (0.653)	test_acc   0.52 (  0.52)	test_minacc   0.75 (  0.75)	test_majacc   0.48 (  0.48)	Loss_d 0.653 (0.653)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.75 (  0.75)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.19 (  0.19)
Test: [  10/  26]	Loss 0.646 (0.651)	test_acc   0.56 (  0.55)	test_minacc   0.82 (  0.79)	test_majacc   0.51 (  0.50)	Loss_d 0.646 (0.651)	test_acc_d   0.56 (  0.55)	test_minacc_d   0.82 (  0.79)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.21 (  0.17)
Test: [  20/  26]	Loss 0.657 (0.652)	test_acc   0.54 (  0.54)	test_minacc   0.84 (  0.79)	test_majacc   0.50 (  0.50)	Loss_d 0.657 (0.652)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.84 (  0.79)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.19 (  0.17)
Test: [  26/  26]	Loss 0.651 (0.652)	test_acc   0.54 (  0.54)	test_minacc   0.89 (  0.79)	test_majacc   0.48 (  0.49)	Loss_d 0.651 (0.652)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.89 (  0.79)	test_majacc_d   0.48 (  0.49)	test_corr_d   0.15 (  0.17)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.35it/s]
Test: [  0/  1]	Loss 0.701 (0.701)	test_acc   0.72 (  0.72)	test_minacc   0.74 (  0.74)	test_majacc   0.60 (  0.60)	Loss_d 0.701 (0.701)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.60 (  0.60)	test_corr_d  -0.06 ( -0.06)
Test: [  1/  1]	Loss 0.701 (0.701)	test_acc   0.72 (  0.72)	test_minacc   0.74 (  0.74)	test_majacc   0.60 (  0.60)	Loss_d 0.701 (0.701)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.60 (  0.60)	test_corr_d  -0.06 ( -0.06)
Overall Timing[ 10/  1]	epoch_time 0.0421 (0.0442)	validation_time 0.0004 (0.0010)	train_time 0.0417 (0.0430)
record: (train_acc, test_acc) (0.7581000280976296, 0.6340000033378601)
last accs (train_acc, test_acc) (0.5395000133514404, 0.7230000495910645)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.89it/s] 19%|#9        | 5/26 [00:00<00:00, 24.20it/s] 35%|###4      | 9/26 [00:00<00:00, 28.07it/s] 50%|#####     | 13/26 [00:00<00:00, 29.66it/s] 65%|######5   | 17/26 [00:00<00:00, 31.16it/s] 81%|########  | 21/26 [00:00<00:00, 31.91it/s] 96%|#########6| 25/26 [00:00<00:00, 32.81it/s]100%|##########| 26/26 [00:00<00:00, 28.98it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 286 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 287 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 288 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 289 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 290 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 291 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 292 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 293 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 294 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 295 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 296 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 297 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 298 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 299 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 300 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 301 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 302 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 303 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 304 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 305 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 306 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 307 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 308 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 309 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 310 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 311 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [11][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  22.71 ( 22.71)	train_acc   0.53 (  0.53)	train_minacc   0.89 (  0.80)	train_majacc   0.46 (  0.48)	train_corr   0.00 (  0.00)	l1 4.1814 (4.1937)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.02it/s] 27%|##6       | 7/26 [00:00<00:00, 33.56it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.56it/s] 46%|####6     | 12/26 [00:00<00:00, 39.20it/s] 65%|######5   | 17/26 [00:00<00:00, 39.51it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.51it/s] 85%|########4 | 22/26 [00:00<00:00, 40.91it/s]100%|##########| 26/26 [00:00<00:00, 36.18it/s]
Test: [   0/  26]	Loss 0.658 (0.658)	test_acc   0.51 (  0.51)	test_minacc   0.76 (  0.76)	test_majacc   0.46 (  0.46)	Loss_d 0.658 (0.658)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.76 (  0.76)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.17 (  0.17)
Test: [  10/  26]	Loss 0.652 (0.657)	test_acc   0.54 (  0.53)	test_minacc   0.83 (  0.79)	test_majacc   0.49 (  0.48)	Loss_d 0.652 (0.657)	test_acc_d   0.54 (  0.53)	test_minacc_d   0.83 (  0.79)	test_majacc_d   0.49 (  0.48)	test_corr_d   0.18 (  0.15)
Test: [  20/  26]	Loss 0.662 (0.658)	test_acc   0.52 (  0.52)	test_minacc   0.84 (  0.80)	test_majacc   0.47 (  0.47)	Loss_d 0.662 (0.658)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.84 (  0.80)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.17 (  0.15)
Test: [  26/  26]	Loss 0.657 (0.658)	test_acc   0.52 (  0.52)	test_minacc   0.89 (  0.80)	test_majacc   0.45 (  0.47)	Loss_d 0.657 (0.658)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.89 (  0.80)	test_majacc_d   0.45 (  0.47)	test_corr_d   0.13 (  0.15)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.92it/s]
Test: [  0/  1]	Loss 0.701 (0.701)	test_acc   0.73 (  0.73)	test_minacc   0.74 (  0.74)	test_majacc   0.59 (  0.59)	Loss_d 0.701 (0.701)	test_acc_d   0.73 (  0.73)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.59 (  0.59)	test_corr_d  -0.06 ( -0.06)
Test: [  1/  1]	Loss 0.701 (0.701)	test_acc   0.73 (  0.73)	test_minacc   0.74 (  0.74)	test_majacc   0.59 (  0.59)	Loss_d 0.701 (0.701)	test_acc_d   0.73 (  0.73)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.59 (  0.59)	test_corr_d  -0.06 ( -0.06)
Overall Timing[ 11/  1]	epoch_time 0.0415 (0.0440)	validation_time 0.0004 (0.0009)	train_time 0.0411 (0.0429)
record: (train_acc, test_acc) (0.7581000280976296, 0.6340000033378601)
last accs (train_acc, test_acc) (0.5216000158190727, 0.7260000109672546)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.80it/s] 15%|#5        | 4/26 [00:00<00:01, 17.99it/s] 31%|###       | 8/26 [00:00<00:00, 25.35it/s] 46%|####6     | 12/26 [00:00<00:00, 29.28it/s] 62%|######1   | 16/26 [00:00<00:00, 31.23it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.26it/s] 92%|#########2| 24/26 [00:00<00:00, 32.66it/s]100%|##########| 26/26 [00:00<00:00, 27.44it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 312 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 313 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 314 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 315 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 316 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 317 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 318 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 319 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 320 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 321 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 322 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 323 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 324 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 325 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 326 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 327 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 328 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 329 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 330 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 331 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 332 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 333 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 334 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 335 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 336 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 337 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [12][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  22.71 ( 22.71)	train_acc   0.50 (  0.52)	train_minacc   0.89 (  0.80)	train_majacc   0.43 (  0.46)	train_corr   0.00 (  0.00)	l1 4.1654 (4.1750)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.84it/s] 23%|##3       | 6/26 [00:00<00:00, 22.91it/s]                                               23%|##3       | 6/26 [00:00<00:00, 22.91it/s] 42%|####2     | 11/26 [00:00<00:00, 31.38it/s] 62%|######1   | 16/26 [00:00<00:00, 37.40it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.40it/s] 81%|########  | 21/26 [00:00<00:00, 37.13it/s]100%|##########| 26/26 [00:00<00:00, 40.32it/s]100%|##########| 26/26 [00:00<00:00, 31.41it/s]
Test: [   0/  26]	Loss 0.659 (0.659)	test_acc   0.50 (  0.50)	test_minacc   0.75 (  0.75)	test_majacc   0.45 (  0.45)	Loss_d 0.659 (0.659)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.75 (  0.75)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.17 (  0.17)
Test: [  10/  26]	Loss 0.655 (0.660)	test_acc   0.53 (  0.51)	test_minacc   0.82 (  0.80)	test_majacc   0.48 (  0.46)	Loss_d 0.655 (0.660)	test_acc_d   0.53 (  0.51)	test_minacc_d   0.82 (  0.80)	test_majacc_d   0.48 (  0.46)	test_corr_d   0.18 (  0.15)
Test: [  20/  26]	Loss 0.664 (0.660)	test_acc   0.51 (  0.51)	test_minacc   0.84 (  0.80)	test_majacc   0.47 (  0.46)	Loss_d 0.664 (0.660)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.84 (  0.80)	test_majacc_d   0.47 (  0.46)	test_corr_d   0.17 (  0.15)
Test: [  26/  26]	Loss 0.659 (0.660)	test_acc   0.49 (  0.51)	test_minacc   0.89 (  0.80)	test_majacc   0.42 (  0.46)	Loss_d 0.659 (0.660)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.89 (  0.80)	test_majacc_d   0.42 (  0.46)	test_corr_d   0.13 (  0.15)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 58.92it/s]
Test: [  0/  1]	Loss 0.704 (0.704)	test_acc   0.73 (  0.73)	test_minacc   0.74 (  0.74)	test_majacc   0.57 (  0.57)	Loss_d 0.704 (0.704)	test_acc_d   0.73 (  0.73)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.57 (  0.57)	test_corr_d  -0.04 ( -0.04)
Test: [  1/  1]	Loss 0.704 (0.704)	test_acc   0.73 (  0.73)	test_minacc   0.74 (  0.74)	test_majacc   0.57 (  0.57)	Loss_d 0.704 (0.704)	test_acc_d   0.73 (  0.73)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.57 (  0.57)	test_corr_d  -0.04 ( -0.04)
Overall Timing[ 12/  1]	epoch_time 0.0414 (0.0438)	validation_time 0.0004 (0.0009)	train_time 0.0410 (0.0427)
record: (train_acc, test_acc) (0.7581000280976296, 0.6340000033378601)
last accs (train_acc, test_acc) (0.5115000159144402, 0.7260000109672546)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.99it/s] 19%|#9        | 5/26 [00:00<00:01, 20.13it/s] 35%|###4      | 9/26 [00:00<00:00, 26.06it/s] 50%|#####     | 13/26 [00:00<00:00, 29.71it/s] 65%|######5   | 17/26 [00:00<00:00, 31.97it/s] 81%|########  | 21/26 [00:00<00:00, 33.22it/s] 96%|#########6| 25/26 [00:00<00:00, 33.03it/s]100%|##########| 26/26 [00:00<00:00, 28.01it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 338 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 339 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 340 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 341 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 342 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 343 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 344 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 345 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 346 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 347 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 348 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 349 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 350 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 351 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 352 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 353 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 354 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 355 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 356 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 357 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 358 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 359 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 360 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 361 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 362 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 363 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [13][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  22.71 ( 22.71)	train_acc   0.50 (  0.50)	train_minacc   0.89 (  0.80)	train_majacc   0.43 (  0.45)	train_corr   0.00 (  0.00)	l1 4.1476 (4.1590)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.09it/s] 19%|#9        | 5/26 [00:00<00:00, 22.84it/s] 38%|###8      | 10/26 [00:00<00:00, 30.09it/s]                                                38%|###8      | 10/26 [00:00<00:00, 30.09it/s] 62%|######1   | 16/26 [00:00<00:00, 37.62it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.62it/s] 81%|########  | 21/26 [00:00<00:00, 40.14it/s]100%|##########| 26/26 [00:00<00:00, 42.53it/s]100%|##########| 26/26 [00:00<00:00, 33.65it/s]
Test: [   0/  26]	Loss 0.659 (0.659)	test_acc   0.50 (  0.50)	test_minacc   0.75 (  0.75)	test_majacc   0.46 (  0.46)	Loss_d 0.659 (0.659)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.75 (  0.75)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.18 (  0.18)
Test: [  10/  26]	Loss 0.656 (0.660)	test_acc   0.53 (  0.51)	test_minacc   0.82 (  0.80)	test_majacc   0.48 (  0.46)	Loss_d 0.656 (0.660)	test_acc_d   0.53 (  0.51)	test_minacc_d   0.82 (  0.80)	test_majacc_d   0.48 (  0.46)	test_corr_d   0.18 (  0.15)
Test: [  20/  26]	Loss 0.664 (0.660)	test_acc   0.50 (  0.51)	test_minacc   0.84 (  0.81)	test_majacc   0.46 (  0.45)	Loss_d 0.664 (0.660)	test_acc_d   0.50 (  0.51)	test_minacc_d   0.84 (  0.81)	test_majacc_d   0.46 (  0.45)	test_corr_d   0.17 (  0.15)
Test: [  26/  26]	Loss 0.660 (0.661)	test_acc   0.49 (  0.51)	test_minacc   0.89 (  0.80)	test_majacc   0.42 (  0.45)	Loss_d 0.660 (0.661)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.89 (  0.80)	test_majacc_d   0.42 (  0.45)	test_corr_d   0.13 (  0.15)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.49it/s]
Test: [  0/  1]	Loss 0.705 (0.705)	test_acc   0.73 (  0.73)	test_minacc   0.74 (  0.74)	test_majacc   0.56 (  0.56)	Loss_d 0.705 (0.705)	test_acc_d   0.73 (  0.73)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.56 (  0.56)	test_corr_d  -0.03 ( -0.03)
Test: [  1/  1]	Loss 0.705 (0.705)	test_acc   0.73 (  0.73)	test_minacc   0.74 (  0.74)	test_majacc   0.56 (  0.56)	Loss_d 0.705 (0.705)	test_acc_d   0.73 (  0.73)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.56 (  0.56)	test_corr_d  -0.03 ( -0.03)
Overall Timing[ 13/  1]	epoch_time 0.0417 (0.0436)	validation_time 0.0004 (0.0009)	train_time 0.0413 (0.0426)
record: (train_acc, test_acc) (0.7581000280976296, 0.6340000033378601)
last accs (train_acc, test_acc) (0.5063000167608261, 0.7260000109672546)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.35it/s] 19%|#9        | 5/26 [00:00<00:01, 20.82it/s] 35%|###4      | 9/26 [00:00<00:00, 27.18it/s] 50%|#####     | 13/26 [00:00<00:00, 30.34it/s] 65%|######5   | 17/26 [00:00<00:00, 32.23it/s] 81%|########  | 21/26 [00:00<00:00, 33.49it/s] 96%|#########6| 25/26 [00:00<00:00, 34.27it/s]100%|##########| 26/26 [00:00<00:00, 28.47it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 364 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 365 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 366 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 367 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 368 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 369 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 370 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 371 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 372 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 373 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 374 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 375 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 376 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 377 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 378 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 379 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 380 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 381 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 382 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 383 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 384 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 385 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 386 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 387 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 388 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 389 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [14][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  22.71 ( 22.71)	train_acc   0.50 (  0.50)	train_minacc   0.89 (  0.81)	train_majacc   0.43 (  0.44)	train_corr   0.00 (  0.00)	l1 4.1270 (4.1415)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 27.13it/s] 23%|##3       | 6/26 [00:00<00:00, 26.78it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.78it/s] 42%|####2     | 11/26 [00:00<00:00, 35.18it/s] 62%|######1   | 16/26 [00:00<00:00, 35.41it/s]                                                62%|######1   | 16/26 [00:00<00:00, 35.41it/s] 81%|########  | 21/26 [00:00<00:00, 38.69it/s]100%|##########| 26/26 [00:00<00:00, 41.68it/s]100%|##########| 26/26 [00:00<00:00, 34.96it/s]
Test: [   0/  26]	Loss 0.657 (0.657)	test_acc   0.50 (  0.50)	test_minacc   0.76 (  0.76)	test_majacc   0.45 (  0.45)	Loss_d 0.657 (0.657)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.76 (  0.76)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.19 (  0.19)
Test: [  10/  26]	Loss 0.656 (0.659)	test_acc   0.54 (  0.51)	test_minacc   0.82 (  0.80)	test_majacc   0.48 (  0.45)	Loss_d 0.656 (0.659)	test_acc_d   0.54 (  0.51)	test_minacc_d   0.82 (  0.80)	test_majacc_d   0.48 (  0.45)	test_corr_d   0.19 (  0.16)
Test: [  20/  26]	Loss 0.662 (0.659)	test_acc   0.50 (  0.51)	test_minacc   0.84 (  0.80)	test_majacc   0.46 (  0.46)	Loss_d 0.662 (0.659)	test_acc_d   0.50 (  0.51)	test_minacc_d   0.84 (  0.80)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.18 (  0.16)
Test: [  26/  26]	Loss 0.659 (0.660)	test_acc   0.49 (  0.51)	test_minacc   0.89 (  0.80)	test_majacc   0.42 (  0.45)	Loss_d 0.659 (0.660)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.89 (  0.80)	test_majacc_d   0.42 (  0.45)	test_corr_d   0.14 (  0.16)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 58.66it/s]
Test: [  0/  1]	Loss 0.706 (0.706)	test_acc   0.72 (  0.72)	test_minacc   0.74 (  0.74)	test_majacc   0.55 (  0.55)	Loss_d 0.706 (0.706)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.55 (  0.55)	test_corr_d  -0.02 ( -0.02)
Test: [  1/  1]	Loss 0.706 (0.706)	test_acc   0.72 (  0.72)	test_minacc   0.74 (  0.74)	test_majacc   0.55 (  0.55)	Loss_d 0.706 (0.706)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.55 (  0.55)	test_corr_d  -0.02 ( -0.02)
Overall Timing[ 14/  1]	epoch_time 0.0411 (0.0435)	validation_time 0.0004 (0.0008)	train_time 0.0407 (0.0425)
record: (train_acc, test_acc) (0.7581000280976296, 0.6340000033378601)
last accs (train_acc, test_acc) (0.5068000144064426, 0.7220000624656677)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.92it/s] 19%|#9        | 5/26 [00:00<00:01, 19.75it/s] 35%|###4      | 9/26 [00:00<00:00, 25.28it/s] 50%|#####     | 13/26 [00:00<00:00, 28.61it/s] 65%|######5   | 17/26 [00:00<00:00, 30.56it/s] 81%|########  | 21/26 [00:00<00:00, 31.79it/s] 96%|#########6| 25/26 [00:00<00:00, 32.45it/s]100%|##########| 26/26 [00:00<00:00, 26.85it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 390 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 391 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 392 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 393 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 394 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 395 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 396 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 397 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 398 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 399 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 400 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 401 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 402 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 403 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 404 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 405 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 406 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 407 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 408 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 409 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 410 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 411 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 412 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 413 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 414 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 415 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [15][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  22.71 ( 22.71)	train_acc   0.50 (  0.49)	train_minacc   0.89 (  0.81)	train_majacc   0.42 (  0.43)	train_corr   0.00 (  0.00)	l1 4.1045 (4.1218)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:09,  2.77it/s] 23%|##3       | 6/26 [00:00<00:01, 15.76it/s]                                               23%|##3       | 6/26 [00:00<00:01, 15.76it/s] 42%|####2     | 11/26 [00:00<00:00, 24.77it/s] 62%|######1   | 16/26 [00:00<00:00, 31.08it/s]                                                62%|######1   | 16/26 [00:00<00:00, 31.08it/s] 81%|########  | 21/26 [00:00<00:00, 33.15it/s]100%|##########| 26/26 [00:00<00:00, 37.05it/s]100%|##########| 26/26 [00:00<00:00, 26.21it/s]
Test: [   0/  26]	Loss 0.655 (0.655)	test_acc   0.51 (  0.51)	test_minacc   0.75 (  0.75)	test_majacc   0.46 (  0.46)	Loss_d 0.655 (0.655)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.75 (  0.75)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.20 (  0.20)
Test: [  10/  26]	Loss 0.654 (0.658)	test_acc   0.54 (  0.51)	test_minacc   0.82 (  0.80)	test_majacc   0.49 (  0.46)	Loss_d 0.654 (0.658)	test_acc_d   0.54 (  0.51)	test_minacc_d   0.82 (  0.80)	test_majacc_d   0.49 (  0.46)	test_corr_d   0.20 (  0.17)
Test: [  20/  26]	Loss 0.659 (0.657)	test_acc   0.50 (  0.51)	test_minacc   0.84 (  0.80)	test_majacc   0.46 (  0.46)	Loss_d 0.659 (0.657)	test_acc_d   0.50 (  0.51)	test_minacc_d   0.84 (  0.80)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.19 (  0.18)
Test: [  26/  26]	Loss 0.657 (0.658)	test_acc   0.49 (  0.51)	test_minacc   0.89 (  0.80)	test_majacc   0.42 (  0.46)	Loss_d 0.657 (0.658)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.89 (  0.80)	test_majacc_d   0.42 (  0.46)	test_corr_d   0.15 (  0.18)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.08it/s]
Test: [  0/  1]	Loss 0.708 (0.708)	test_acc   0.72 (  0.72)	test_minacc   0.74 (  0.74)	test_majacc   0.56 (  0.56)	Loss_d 0.708 (0.708)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.56 (  0.56)	test_corr_d  -0.01 ( -0.01)
Test: [  1/  1]	Loss 0.708 (0.708)	test_acc   0.72 (  0.72)	test_minacc   0.74 (  0.74)	test_majacc   0.56 (  0.56)	Loss_d 0.708 (0.708)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.56 (  0.56)	test_corr_d  -0.01 ( -0.01)
Overall Timing[ 15/  1]	epoch_time 0.0423 (0.0434)	validation_time 0.0005 (0.0008)	train_time 0.0418 (0.0424)
record: (train_acc, test_acc) (0.7581000280976296, 0.6340000033378601)
last accs (train_acc, test_acc) (0.5092000107765198, 0.7230000495910645)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.56it/s] 12%|#1        | 3/26 [00:00<00:01, 14.51it/s] 27%|##6       | 7/26 [00:00<00:00, 23.73it/s] 42%|####2     | 11/26 [00:00<00:00, 28.39it/s] 58%|#####7    | 15/26 [00:00<00:00, 30.36it/s] 73%|#######3  | 19/26 [00:00<00:00, 31.64it/s] 88%|########8 | 23/26 [00:00<00:00, 32.32it/s]100%|##########| 26/26 [00:00<00:00, 27.41it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 416 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 417 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 418 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 419 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 420 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 421 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 422 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 423 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 424 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 425 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 426 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 427 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 428 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 429 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 430 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 431 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 432 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 433 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 434 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 435 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 436 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 437 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 438 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 439 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 440 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 441 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [16][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  22.71 ( 22.71)	train_acc   0.49 (  0.48)	train_minacc   0.89 (  0.81)	train_majacc   0.42 (  0.43)	train_corr   0.00 (  0.00)	l1 4.0840 (4.1016)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 12.85it/s] 27%|##6       | 7/26 [00:00<00:00, 29.87it/s]                                               27%|##6       | 7/26 [00:00<00:00, 29.87it/s] 46%|####6     | 12/26 [00:00<00:00, 35.97it/s] 65%|######5   | 17/26 [00:00<00:00, 40.81it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.81it/s] 85%|########4 | 22/26 [00:00<00:00, 39.32it/s]100%|##########| 26/26 [00:00<00:00, 36.02it/s]
Test: [   0/  26]	Loss 0.654 (0.654)	test_acc   0.51 (  0.51)	test_minacc   0.75 (  0.75)	test_majacc   0.46 (  0.46)	Loss_d 0.654 (0.654)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.75 (  0.75)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.21 (  0.21)
Test: [  10/  26]	Loss 0.654 (0.656)	test_acc   0.54 (  0.51)	test_minacc   0.80 (  0.79)	test_majacc   0.49 (  0.46)	Loss_d 0.654 (0.656)	test_acc_d   0.54 (  0.51)	test_minacc_d   0.80 (  0.79)	test_majacc_d   0.49 (  0.46)	test_corr_d   0.21 (  0.18)
Test: [  20/  26]	Loss 0.657 (0.656)	test_acc   0.50 (  0.51)	test_minacc   0.84 (  0.80)	test_majacc   0.46 (  0.46)	Loss_d 0.657 (0.656)	test_acc_d   0.50 (  0.51)	test_minacc_d   0.84 (  0.80)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.20 (  0.19)
Test: [  26/  26]	Loss 0.655 (0.656)	test_acc   0.49 (  0.51)	test_minacc   0.89 (  0.80)	test_majacc   0.42 (  0.46)	Loss_d 0.655 (0.656)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.89 (  0.80)	test_majacc_d   0.42 (  0.46)	test_corr_d   0.16 (  0.19)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.71it/s]
Test: [  0/  1]	Loss 0.709 (0.709)	test_acc   0.72 (  0.72)	test_minacc   0.74 (  0.74)	test_majacc   0.55 (  0.55)	Loss_d 0.709 (0.709)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.55 (  0.55)	test_corr_d  -0.01 ( -0.01)
Test: [  1/  1]	Loss 0.709 (0.709)	test_acc   0.72 (  0.72)	test_minacc   0.74 (  0.74)	test_majacc   0.55 (  0.55)	Loss_d 0.709 (0.709)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.55 (  0.55)	test_corr_d  -0.01 ( -0.01)
Overall Timing[ 16/  1]	epoch_time 0.0388 (0.0431)	validation_time 0.0004 (0.0008)	train_time 0.0384 (0.0422)
record: (train_acc, test_acc) (0.7581000280976296, 0.6340000033378601)
last accs (train_acc, test_acc) (0.5072000120580197, 0.7220000624656677)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  4.03it/s] 19%|#9        | 5/26 [00:00<00:01, 16.29it/s] 35%|###4      | 9/26 [00:00<00:00, 22.69it/s] 50%|#####     | 13/26 [00:00<00:00, 26.22it/s] 65%|######5   | 17/26 [00:00<00:00, 28.52it/s] 81%|########  | 21/26 [00:00<00:00, 30.39it/s] 96%|#########6| 25/26 [00:00<00:00, 31.94it/s]100%|##########| 26/26 [00:01<00:00, 25.08it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 442 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 443 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 444 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 445 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 446 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 447 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 448 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 449 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 450 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 451 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 452 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 453 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 454 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 455 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 456 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 457 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 458 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 459 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 460 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 461 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 462 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 463 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 464 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 465 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 466 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 467 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [17][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  22.71 ( 22.71)	train_acc   0.49 (  0.48)	train_minacc   0.89 (  0.81)	train_majacc   0.42 (  0.42)	train_corr   0.00 (  0.00)	l1 4.0695 (4.0839)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.55it/s] 23%|##3       | 6/26 [00:00<00:00, 31.21it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.21it/s] 42%|####2     | 11/26 [00:00<00:00, 37.84it/s] 62%|######1   | 16/26 [00:00<00:00, 41.40it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.40it/s] 81%|########  | 21/26 [00:00<00:00, 41.02it/s]100%|##########| 26/26 [00:00<00:00, 37.23it/s]
Test: [   0/  26]	Loss 0.655 (0.655)	test_acc   0.50 (  0.50)	test_minacc   0.75 (  0.75)	test_majacc   0.45 (  0.45)	Loss_d 0.655 (0.655)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.75 (  0.75)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.21 (  0.21)
Test: [  10/  26]	Loss 0.655 (0.656)	test_acc   0.53 (  0.50)	test_minacc   0.80 (  0.79)	test_majacc   0.48 (  0.45)	Loss_d 0.655 (0.656)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.80 (  0.79)	test_majacc_d   0.48 (  0.45)	test_corr_d   0.21 (  0.18)
Test: [  20/  26]	Loss 0.657 (0.656)	test_acc   0.50 (  0.50)	test_minacc   0.84 (  0.80)	test_majacc   0.46 (  0.45)	Loss_d 0.657 (0.656)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.84 (  0.80)	test_majacc_d   0.46 (  0.45)	test_corr_d   0.20 (  0.19)
Test: [  26/  26]	Loss 0.655 (0.656)	test_acc   0.49 (  0.50)	test_minacc   0.89 (  0.80)	test_majacc   0.42 (  0.45)	Loss_d 0.655 (0.656)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.89 (  0.80)	test_majacc_d   0.42 (  0.45)	test_corr_d   0.16 (  0.19)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 58.01it/s]
Test: [  0/  1]	Loss 0.710 (0.710)	test_acc   0.72 (  0.72)	test_minacc   0.75 (  0.75)	test_majacc   0.52 (  0.52)	Loss_d 0.710 (0.710)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.75 (  0.75)	test_majacc_d   0.52 (  0.52)	test_corr_d  -0.00 ( -0.00)
Test: [  1/  1]	Loss 0.710 (0.710)	test_acc   0.72 (  0.72)	test_minacc   0.75 (  0.75)	test_majacc   0.52 (  0.52)	Loss_d 0.710 (0.710)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.75 (  0.75)	test_majacc_d   0.52 (  0.52)	test_corr_d  -0.00 ( -0.00)
Overall Timing[ 17/  1]	epoch_time 0.0424 (0.0431)	validation_time 0.0005 (0.0008)	train_time 0.0419 (0.0422)
record: (train_acc, test_acc) (0.7581000280976296, 0.6340000033378601)
last accs (train_acc, test_acc) (0.5016000123918056, 0.7240000367164612)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.69it/s] 19%|#9        | 5/26 [00:00<00:01, 19.70it/s] 35%|###4      | 9/26 [00:00<00:00, 25.76it/s] 50%|#####     | 13/26 [00:00<00:00, 29.29it/s] 65%|######5   | 17/26 [00:00<00:00, 30.68it/s] 81%|########  | 21/26 [00:00<00:00, 31.05it/s] 96%|#########6| 25/26 [00:00<00:00, 32.29it/s]100%|##########| 26/26 [00:00<00:00, 26.95it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 468 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 469 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 470 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 471 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 472 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 473 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 474 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 475 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 476 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 477 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 478 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 479 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 480 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 481 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 482 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 483 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 484 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 485 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 486 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 487 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 488 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 489 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 490 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 491 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 492 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 493 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [18][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  22.71 ( 22.71)	train_acc   0.49 (  0.47)	train_minacc   0.89 (  0.82)	train_majacc   0.42 (  0.41)	train_corr   0.00 (  0.00)	l1 4.0608 (4.0713)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.34it/s] 27%|##6       | 7/26 [00:00<00:00, 34.16it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.16it/s] 46%|####6     | 12/26 [00:00<00:00, 39.84it/s] 65%|######5   | 17/26 [00:00<00:00, 37.78it/s]                                                65%|######5   | 17/26 [00:00<00:00, 37.78it/s] 85%|########4 | 22/26 [00:00<00:00, 40.53it/s]100%|##########| 26/26 [00:00<00:00, 35.97it/s]
Test: [   0/  26]	Loss 0.657 (0.657)	test_acc   0.49 (  0.49)	test_minacc   0.76 (  0.76)	test_majacc   0.44 (  0.44)	Loss_d 0.657 (0.657)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.76 (  0.76)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.20 (  0.20)
Test: [  10/  26]	Loss 0.657 (0.658)	test_acc   0.52 (  0.50)	test_minacc   0.82 (  0.80)	test_majacc   0.47 (  0.44)	Loss_d 0.657 (0.658)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.82 (  0.80)	test_majacc_d   0.47 (  0.44)	test_corr_d   0.20 (  0.18)
Test: [  20/  26]	Loss 0.657 (0.657)	test_acc   0.48 (  0.50)	test_minacc   0.84 (  0.80)	test_majacc   0.44 (  0.44)	Loss_d 0.657 (0.657)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.84 (  0.80)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.20 (  0.18)
Test: [  26/  26]	Loss 0.657 (0.658)	test_acc   0.49 (  0.49)	test_minacc   0.89 (  0.80)	test_majacc   0.42 (  0.44)	Loss_d 0.657 (0.658)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.89 (  0.80)	test_majacc_d   0.42 (  0.44)	test_corr_d   0.16 (  0.18)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.36it/s]
Test: [  0/  1]	Loss 0.710 (0.710)	test_acc   0.73 (  0.73)	test_minacc   0.75 (  0.75)	test_majacc   0.50 (  0.50)	Loss_d 0.710 (0.710)	test_acc_d   0.73 (  0.73)	test_minacc_d   0.75 (  0.75)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.00 ( -0.00)
Test: [  1/  1]	Loss 0.710 (0.710)	test_acc   0.73 (  0.73)	test_minacc   0.75 (  0.75)	test_majacc   0.50 (  0.50)	Loss_d 0.710 (0.710)	test_acc_d   0.73 (  0.73)	test_minacc_d   0.75 (  0.75)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.00 ( -0.00)
Overall Timing[ 18/  1]	epoch_time 0.0403 (0.0429)	validation_time 0.0003 (0.0007)	train_time 0.0399 (0.0421)
record: (train_acc, test_acc) (0.7581000280976296, 0.6340000033378601)
last accs (train_acc, test_acc) (0.494300011664629, 0.7250000238418579)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.79it/s] 19%|#9        | 5/26 [00:00<00:00, 24.67it/s] 35%|###4      | 9/26 [00:00<00:00, 28.84it/s] 50%|#####     | 13/26 [00:00<00:00, 31.27it/s] 65%|######5   | 17/26 [00:00<00:00, 32.55it/s] 81%|########  | 21/26 [00:00<00:00, 33.31it/s] 96%|#########6| 25/26 [00:00<00:00, 33.89it/s]100%|##########| 26/26 [00:00<00:00, 29.79it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 494 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 495 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 496 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 497 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 498 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 499 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 500 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 501 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 502 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 503 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 504 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 505 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 506 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 507 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 508 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 509 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 510 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 511 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 512 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 513 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 514 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 515 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 516 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 517 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 518 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 519 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [19][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  22.71 ( 22.71)	train_acc   0.48 (  0.47)	train_minacc   0.89 (  0.83)	train_majacc   0.41 (  0.40)	train_corr   0.00 (  0.00)	l1 4.0563 (4.0635)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.39it/s] 23%|##3       | 6/26 [00:00<00:01, 17.91it/s]                                               23%|##3       | 6/26 [00:00<00:01, 17.91it/s] 42%|####2     | 11/26 [00:00<00:00, 25.03it/s] 62%|######1   | 16/26 [00:00<00:00, 31.04it/s]                                                62%|######1   | 16/26 [00:00<00:00, 31.04it/s] 81%|########  | 21/26 [00:00<00:00, 35.17it/s]100%|##########| 26/26 [00:00<00:00, 28.20it/s]
Test: [   0/  26]	Loss 0.659 (0.659)	test_acc   0.48 (  0.48)	test_minacc   0.76 (  0.76)	test_majacc   0.42 (  0.42)	Loss_d 0.659 (0.659)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.76 (  0.76)	test_majacc_d   0.42 (  0.42)	test_corr_d   0.20 (  0.20)
Test: [  10/  26]	Loss 0.659 (0.660)	test_acc   0.51 (  0.49)	test_minacc   0.82 (  0.81)	test_majacc   0.45 (  0.43)	Loss_d 0.659 (0.660)	test_acc_d   0.51 (  0.49)	test_minacc_d   0.82 (  0.81)	test_majacc_d   0.45 (  0.43)	test_corr_d   0.19 (  0.17)
Test: [  20/  26]	Loss 0.659 (0.659)	test_acc   0.48 (  0.49)	test_minacc   0.84 (  0.81)	test_majacc   0.43 (  0.43)	Loss_d 0.659 (0.659)	test_acc_d   0.48 (  0.49)	test_minacc_d   0.84 (  0.81)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.20 (  0.18)
Test: [  26/  26]	Loss 0.658 (0.659)	test_acc   0.48 (  0.49)	test_minacc   0.89 (  0.81)	test_majacc   0.41 (  0.43)	Loss_d 0.658 (0.659)	test_acc_d   0.48 (  0.49)	test_minacc_d   0.89 (  0.81)	test_majacc_d   0.41 (  0.43)	test_corr_d   0.15 (  0.18)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.26it/s]
Test: [  0/  1]	Loss 0.710 (0.710)	test_acc   0.73 (  0.73)	test_minacc   0.76 (  0.76)	test_majacc   0.49 (  0.49)	Loss_d 0.710 (0.710)	test_acc_d   0.73 (  0.73)	test_minacc_d   0.76 (  0.76)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.00 (  0.00)
Test: [  1/  1]	Loss 0.710 (0.710)	test_acc   0.73 (  0.73)	test_minacc   0.76 (  0.76)	test_majacc   0.49 (  0.49)	Loss_d 0.710 (0.710)	test_acc_d   0.73 (  0.73)	test_minacc_d   0.76 (  0.76)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.00 (  0.00)
Overall Timing[ 19/  1]	epoch_time 0.0400 (0.0428)	validation_time 0.0004 (0.0007)	train_time 0.0395 (0.0419)
record: (train_acc, test_acc) (0.7581000280976296, 0.6340000033378601)
last accs (train_acc, test_acc) (0.48800000950694084, 0.7290000319480896)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.51it/s] 19%|#9        | 5/26 [00:00<00:00, 22.27it/s] 35%|###4      | 9/26 [00:00<00:00, 27.38it/s] 50%|#####     | 13/26 [00:00<00:00, 29.96it/s] 65%|######5   | 17/26 [00:00<00:00, 30.90it/s] 81%|########  | 21/26 [00:00<00:00, 31.76it/s] 96%|#########6| 25/26 [00:00<00:00, 32.36it/s]100%|##########| 26/26 [00:00<00:00, 28.06it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 520 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 521 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 522 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 523 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 524 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 525 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 526 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 527 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 528 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 529 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 530 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 531 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 532 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 533 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 534 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 535 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 536 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 537 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 538 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 539 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 540 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 541 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 542 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 543 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 544 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 545 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [20][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  22.71 ( 22.71)	train_acc   0.48 (  0.46)	train_minacc   0.89 (  0.84)	train_majacc   0.40 (  0.39)	train_corr   0.00 (  0.00)	l1 4.0545 (4.0595)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.54it/s] 23%|##3       | 6/26 [00:00<00:00, 26.90it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.90it/s] 42%|####2     | 11/26 [00:00<00:00, 34.54it/s] 62%|######1   | 16/26 [00:00<00:00, 36.26it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.26it/s] 81%|########  | 21/26 [00:00<00:00, 37.72it/s]100%|##########| 26/26 [00:00<00:00, 40.89it/s]100%|##########| 26/26 [00:00<00:00, 32.68it/s]
Test: [   0/  26]	Loss 0.661 (0.661)	test_acc   0.47 (  0.47)	test_minacc   0.78 (  0.78)	test_majacc   0.41 (  0.41)	Loss_d 0.661 (0.661)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.78 (  0.78)	test_majacc_d   0.41 (  0.41)	test_corr_d   0.19 (  0.19)
Test: [  10/  26]	Loss 0.661 (0.661)	test_acc   0.48 (  0.48)	test_minacc   0.82 (  0.81)	test_majacc   0.42 (  0.42)	Loss_d 0.661 (0.661)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.82 (  0.81)	test_majacc_d   0.42 (  0.42)	test_corr_d   0.19 (  0.17)
Test: [  20/  26]	Loss 0.660 (0.661)	test_acc   0.47 (  0.48)	test_minacc   0.84 (  0.82)	test_majacc   0.42 (  0.42)	Loss_d 0.660 (0.661)	test_acc_d   0.47 (  0.48)	test_minacc_d   0.84 (  0.82)	test_majacc_d   0.42 (  0.42)	test_corr_d   0.19 (  0.17)
Test: [  26/  26]	Loss 0.660 (0.661)	test_acc   0.48 (  0.48)	test_minacc   0.89 (  0.82)	test_majacc   0.40 (  0.42)	Loss_d 0.660 (0.661)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.89 (  0.82)	test_majacc_d   0.40 (  0.42)	test_corr_d   0.15 (  0.17)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.38it/s]
Test: [  0/  1]	Loss 0.710 (0.710)	test_acc   0.73 (  0.73)	test_minacc   0.76 (  0.76)	test_majacc   0.49 (  0.49)	Loss_d 0.710 (0.710)	test_acc_d   0.73 (  0.73)	test_minacc_d   0.76 (  0.76)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.00 (  0.00)
Test: [  1/  1]	Loss 0.710 (0.710)	test_acc   0.73 (  0.73)	test_minacc   0.76 (  0.76)	test_majacc   0.49 (  0.49)	Loss_d 0.710 (0.710)	test_acc_d   0.73 (  0.73)	test_minacc_d   0.76 (  0.76)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.00 (  0.00)
Overall Timing[ 20/  1]	epoch_time 0.0434 (0.0428)	validation_time 0.0004 (0.0007)	train_time 0.0429 (0.0420)
record: (train_acc, test_acc) (0.7581000280976296, 0.6340000033378601)
last accs (train_acc, test_acc) (0.48100000369548795, 0.734000027179718)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.65it/s] 15%|#5        | 4/26 [00:00<00:01, 13.49it/s] 31%|###       | 8/26 [00:00<00:00, 21.67it/s] 46%|####6     | 12/26 [00:00<00:00, 26.08it/s] 62%|######1   | 16/26 [00:00<00:00, 29.13it/s] 77%|#######6  | 20/26 [00:00<00:00, 31.08it/s] 92%|#########2| 24/26 [00:00<00:00, 32.32it/s]100%|##########| 26/26 [00:01<00:00, 24.97it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 546 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 547 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 548 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 549 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 550 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 551 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 552 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 553 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 554 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 555 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 556 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 557 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 558 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 559 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 560 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 561 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 562 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 563 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 564 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 565 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 566 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 567 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 568 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 569 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 570 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 571 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [21][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  22.71 ( 22.71)	train_acc   0.46 (  0.45)	train_minacc   0.87 (  0.84)	train_majacc   0.39 (  0.38)	train_corr   0.00 (  0.00)	l1 4.0546 (4.0581)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.73it/s] 23%|##3       | 6/26 [00:00<00:00, 29.14it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.14it/s] 42%|####2     | 11/26 [00:00<00:00, 32.80it/s] 62%|######1   | 16/26 [00:00<00:00, 37.92it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.92it/s] 81%|########  | 21/26 [00:00<00:00, 40.92it/s]100%|##########| 26/26 [00:00<00:00, 42.86it/s]100%|##########| 26/26 [00:00<00:00, 35.14it/s]
Test: [   0/  26]	Loss 0.663 (0.663)	test_acc   0.46 (  0.46)	test_minacc   0.78 (  0.78)	test_majacc   0.40 (  0.40)	Loss_d 0.663 (0.663)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.78 (  0.78)	test_majacc_d   0.40 (  0.40)	test_corr_d   0.19 (  0.19)
Test: [  10/  26]	Loss 0.662 (0.663)	test_acc   0.49 (  0.48)	test_minacc   0.85 (  0.82)	test_majacc   0.42 (  0.41)	Loss_d 0.662 (0.663)	test_acc_d   0.49 (  0.48)	test_minacc_d   0.85 (  0.82)	test_majacc_d   0.42 (  0.41)	test_corr_d   0.18 (  0.16)
Test: [  20/  26]	Loss 0.661 (0.662)	test_acc   0.46 (  0.48)	test_minacc   0.84 (  0.83)	test_majacc   0.42 (  0.42)	Loss_d 0.661 (0.662)	test_acc_d   0.46 (  0.48)	test_minacc_d   0.84 (  0.83)	test_majacc_d   0.42 (  0.42)	test_corr_d   0.19 (  0.17)
Test: [  26/  26]	Loss 0.661 (0.662)	test_acc   0.47 (  0.48)	test_minacc   0.89 (  0.82)	test_majacc   0.39 (  0.42)	Loss_d 0.661 (0.662)	test_acc_d   0.47 (  0.48)	test_minacc_d   0.89 (  0.82)	test_majacc_d   0.39 (  0.42)	test_corr_d   0.15 (  0.17)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.87it/s]
Test: [  0/  1]	Loss 0.711 (0.711)	test_acc   0.73 (  0.73)	test_minacc   0.76 (  0.76)	test_majacc   0.49 (  0.49)	Loss_d 0.711 (0.711)	test_acc_d   0.73 (  0.73)	test_minacc_d   0.76 (  0.76)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.01 (  0.01)
Test: [  1/  1]	Loss 0.711 (0.711)	test_acc   0.73 (  0.73)	test_minacc   0.76 (  0.76)	test_majacc   0.49 (  0.49)	Loss_d 0.711 (0.711)	test_acc_d   0.73 (  0.73)	test_minacc_d   0.76 (  0.76)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.01 (  0.01)
Overall Timing[ 21/  1]	epoch_time 0.0394 (0.0427)	validation_time 0.0004 (0.0007)	train_time 0.0390 (0.0419)
record: (train_acc, test_acc) (0.7581000280976296, 0.6340000033378601)
last accs (train_acc, test_acc) (0.4773000030815601, 0.7310000061988831)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.93it/s] 15%|#5        | 4/26 [00:00<00:01, 19.20it/s] 31%|###       | 8/26 [00:00<00:00, 25.68it/s] 46%|####6     | 12/26 [00:00<00:00, 28.71it/s] 62%|######1   | 16/26 [00:00<00:00, 30.36it/s] 77%|#######6  | 20/26 [00:00<00:00, 31.46it/s] 92%|#########2| 24/26 [00:00<00:00, 32.46it/s]100%|##########| 26/26 [00:00<00:00, 27.70it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 572 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 573 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 574 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 575 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 576 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 577 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 578 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 579 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 580 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 581 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 582 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 583 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 584 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 585 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 586 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 587 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 588 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 589 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 590 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 591 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 592 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 593 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 594 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 595 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 596 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 597 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [22][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  22.71 ( 22.71)	train_acc   0.45 (  0.45)	train_minacc   0.84 (  0.84)	train_majacc   0.38 (  0.38)	train_corr   0.00 (  0.00)	l1 4.0559 (4.0583)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.57it/s] 19%|#9        | 5/26 [00:00<00:00, 26.51it/s] 38%|###8      | 10/26 [00:00<00:00, 36.84it/s]                                                38%|###8      | 10/26 [00:00<00:00, 36.84it/s] 58%|#####7    | 15/26 [00:00<00:00, 40.54it/s] 77%|#######6  | 20/26 [00:00<00:00, 42.30it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 42.30it/s] 96%|#########6| 25/26 [00:00<00:00, 40.75it/s]100%|##########| 26/26 [00:00<00:00, 35.32it/s]
Test: [   0/  26]	Loss 0.664 (0.664)	test_acc   0.46 (  0.46)	test_minacc   0.76 (  0.76)	test_majacc   0.40 (  0.40)	Loss_d 0.664 (0.664)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.76 (  0.76)	test_majacc_d   0.40 (  0.40)	test_corr_d   0.18 (  0.18)
Test: [  10/  26]	Loss 0.663 (0.664)	test_acc   0.47 (  0.47)	test_minacc   0.85 (  0.82)	test_majacc   0.41 (  0.41)	Loss_d 0.663 (0.664)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.85 (  0.82)	test_majacc_d   0.41 (  0.41)	test_corr_d   0.18 (  0.16)
Test: [  20/  26]	Loss 0.662 (0.663)	test_acc   0.46 (  0.47)	test_minacc   0.82 (  0.82)	test_majacc   0.42 (  0.41)	Loss_d 0.662 (0.663)	test_acc_d   0.46 (  0.47)	test_minacc_d   0.82 (  0.82)	test_majacc_d   0.42 (  0.41)	test_corr_d   0.19 (  0.17)
Test: [  26/  26]	Loss 0.663 (0.663)	test_acc   0.46 (  0.47)	test_minacc   0.87 (  0.82)	test_majacc   0.39 (  0.41)	Loss_d 0.663 (0.663)	test_acc_d   0.46 (  0.47)	test_minacc_d   0.87 (  0.82)	test_majacc_d   0.39 (  0.41)	test_corr_d   0.14 (  0.17)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.03it/s]
Test: [  0/  1]	Loss 0.711 (0.711)	test_acc   0.74 (  0.74)	test_minacc   0.76 (  0.76)	test_majacc   0.48 (  0.48)	Loss_d 0.711 (0.711)	test_acc_d   0.74 (  0.74)	test_minacc_d   0.76 (  0.76)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.01 (  0.01)
Test: [  1/  1]	Loss 0.711 (0.711)	test_acc   0.74 (  0.74)	test_minacc   0.76 (  0.76)	test_majacc   0.48 (  0.48)	Loss_d 0.711 (0.711)	test_acc_d   0.74 (  0.74)	test_minacc_d   0.76 (  0.76)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.01 (  0.01)
Overall Timing[ 22/  1]	epoch_time 0.0484 (0.0429)	validation_time 0.0004 (0.0007)	train_time 0.0480 (0.0421)
record: (train_acc, test_acc) (0.7581000280976296, 0.6340000033378601)
last accs (train_acc, test_acc) (0.472300005286932, 0.7350000143051147)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.73it/s] 15%|#5        | 4/26 [00:00<00:01, 15.66it/s] 31%|###       | 8/26 [00:00<00:00, 20.62it/s] 42%|####2     | 11/26 [00:00<00:00, 23.45it/s] 54%|#####3    | 14/26 [00:00<00:00, 24.45it/s] 69%|######9   | 18/26 [00:00<00:00, 25.83it/s] 85%|########4 | 22/26 [00:00<00:00, 28.70it/s] 96%|#########6| 25/26 [00:01<00:00, 28.88it/s]100%|##########| 26/26 [00:01<00:00, 23.74it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 598 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 599 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 600 200
penalty weights 10000.0
l1 at pgd_anneal_iters 4.056744575500488
set z to 4.016177129745484
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 601 200
penalty weights 10000.0
args.step pgd_anneal_iters 601 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 602 200
penalty weights 10000.0
args.step pgd_anneal_iters 602 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 603 200
penalty weights 10000.0
args.step pgd_anneal_iters 603 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 604 200
penalty weights 10000.0
args.step pgd_anneal_iters 604 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 605 200
penalty weights 10000.0
args.step pgd_anneal_iters 605 600
dim_v 512
rho, theta 383 tensor(-0.0051, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 606 200
penalty weights 10000.0
args.step pgd_anneal_iters 606 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 607 200
penalty weights 10000.0
args.step pgd_anneal_iters 607 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 608 200
penalty weights 10000.0
args.step pgd_anneal_iters 608 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 609 200
penalty weights 10000.0
args.step pgd_anneal_iters 609 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 610 200
penalty weights 10000.0
args.step pgd_anneal_iters 610 600
dim_v 512
rho, theta 322 tensor(-0.0031, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 611 200
penalty weights 10000.0
args.step pgd_anneal_iters 611 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 612 200
penalty weights 10000.0
args.step pgd_anneal_iters 612 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 613 200
penalty weights 10000.0
args.step pgd_anneal_iters 613 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 614 200
penalty weights 10000.0
args.step pgd_anneal_iters 614 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 615 200
penalty weights 10000.0
args.step pgd_anneal_iters 615 600
dim_v 512
rho, theta 228 tensor(0.0091, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 616 200
penalty weights 10000.0
args.step pgd_anneal_iters 616 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 617 200
penalty weights 10000.0
args.step pgd_anneal_iters 617 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 618 200
penalty weights 10000.0
args.step pgd_anneal_iters 618 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 619 200
penalty weights 10000.0
args.step pgd_anneal_iters 619 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 620 200
penalty weights 10000.0
args.step pgd_anneal_iters 620 600
dim_v 512
rho, theta 180 tensor(0.0051, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 621 200
penalty weights 10000.0
args.step pgd_anneal_iters 621 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 622 200
penalty weights 10000.0
args.step pgd_anneal_iters 622 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 623 200
penalty weights 10000.0
args.step pgd_anneal_iters 623 600
final projection at end of training
dim_v 512
rho, theta 174 tensor(0.0020, device='cuda:0')
Epoch: [23][  26/  26]	Loss 0.003 (0.120)	train_nll   0.60 (  0.73)	train_penalty   0.00 (  0.12)	weight_norm  27.04 ( 23.92)	train_acc   0.63 (  0.52)	train_minacc   0.66 (  0.64)	train_majacc   0.63 (  0.50)	train_corr   0.00 (  0.00)	l1 4.8216 (4.7168)	zero_count 0.0000 (36.3090)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  4.16it/s] 23%|##3       | 6/26 [00:00<00:00, 21.02it/s]                                               23%|##3       | 6/26 [00:00<00:00, 21.02it/s] 42%|####2     | 11/26 [00:00<00:00, 30.59it/s] 65%|######5   | 17/26 [00:00<00:00, 36.68it/s]                                                65%|######5   | 17/26 [00:00<00:00, 36.68it/s] 85%|########4 | 22/26 [00:00<00:00, 40.28it/s]100%|##########| 26/26 [00:00<00:00, 31.72it/s]
Test: [   0/  26]	Loss 0.618 (0.618)	test_acc   0.47 (  0.47)	test_minacc   0.41 (  0.41)	test_majacc   0.48 (  0.48)	Loss_d 0.618 (0.618)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.53 (  0.53)
Test: [  10/  26]	Loss 0.612 (0.608)	test_acc   0.49 (  0.51)	test_minacc   0.52 (  0.48)	test_majacc   0.49 (  0.51)	Loss_d 0.612 (0.608)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.52 (  0.48)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.56 (  0.52)
Test: [  20/  26]	Loss 0.580 (0.606)	test_acc   0.52 (  0.50)	test_minacc   0.57 (  0.49)	test_majacc   0.51 (  0.50)	Loss_d 0.580 (0.606)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.57 (  0.49)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.55 (  0.53)
Test: [  26/  26]	Loss 0.617 (0.605)	test_acc   0.51 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.51 (  0.50)	Loss_d 0.617 (0.605)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.55 (  0.53)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.44it/s]
Test: [  0/  1]	Loss 1.048 (1.048)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.048 (1.048)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.44 (  0.44)
Test: [  1/  1]	Loss 1.048 (1.048)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.048 (1.048)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.44 (  0.44)
Overall Timing[ 23/  1]	epoch_time 0.0416 (0.0429)	validation_time 0.0004 (0.0007)	train_time 0.0412 (0.0421)
record: (train_acc, test_acc) (0.7581000280976296, 0.6340000033378601)
last accs (train_acc, test_acc) (0.5000000085532665, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.78it/s] 19%|#9        | 5/26 [00:00<00:00, 22.84it/s] 35%|###4      | 9/26 [00:00<00:00, 27.07it/s] 46%|####6     | 12/26 [00:00<00:00, 28.04it/s] 62%|######1   | 16/26 [00:00<00:00, 30.19it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.47it/s] 92%|#########2| 24/26 [00:00<00:00, 31.21it/s]100%|##########| 26/26 [00:00<00:00, 27.26it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 624 200
penalty weights 10000.0
args.step pgd_anneal_iters 624 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 625 200
penalty weights 10000.0
args.step pgd_anneal_iters 625 600
dim_v 512
rho, theta 166 tensor(0.0010, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 626 200
penalty weights 10000.0
args.step pgd_anneal_iters 626 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 627 200
penalty weights 10000.0
args.step pgd_anneal_iters 627 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 628 200
penalty weights 10000.0
args.step pgd_anneal_iters 628 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 629 200
penalty weights 10000.0
args.step pgd_anneal_iters 629 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 630 200
penalty weights 10000.0
args.step pgd_anneal_iters 630 600
dim_v 512
rho, theta 162 tensor(0.0017, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 631 200
penalty weights 10000.0
args.step pgd_anneal_iters 631 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 632 200
penalty weights 10000.0
args.step pgd_anneal_iters 632 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 633 200
penalty weights 10000.0
args.step pgd_anneal_iters 633 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 634 200
penalty weights 10000.0
args.step pgd_anneal_iters 634 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 635 200
penalty weights 10000.0
args.step pgd_anneal_iters 635 600
dim_v 512
rho, theta 157 tensor(0.0011, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 636 200
penalty weights 10000.0
args.step pgd_anneal_iters 636 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 637 200
penalty weights 10000.0
args.step pgd_anneal_iters 637 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 638 200
penalty weights 10000.0
args.step pgd_anneal_iters 638 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 639 200
penalty weights 10000.0
args.step pgd_anneal_iters 639 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 640 200
penalty weights 10000.0
args.step pgd_anneal_iters 640 600
dim_v 512
rho, theta 155 tensor(0.0007, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 641 200
penalty weights 10000.0
args.step pgd_anneal_iters 641 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 642 200
penalty weights 10000.0
args.step pgd_anneal_iters 642 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 643 200
penalty weights 10000.0
args.step pgd_anneal_iters 643 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 644 200
penalty weights 10000.0
args.step pgd_anneal_iters 644 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 645 200
penalty weights 10000.0
args.step pgd_anneal_iters 645 600
dim_v 512
rho, theta 154 tensor(0.0003, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 646 200
penalty weights 10000.0
args.step pgd_anneal_iters 646 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 647 200
penalty weights 10000.0
args.step pgd_anneal_iters 647 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 648 200
penalty weights 10000.0
args.step pgd_anneal_iters 648 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 649 200
penalty weights 10000.0
args.step pgd_anneal_iters 649 600
final projection at end of training
dim_v 512
rho, theta 156 tensor(0.0001, device='cuda:0')
Epoch: [24][  26/  26]	Loss 0.000 (0.001)	train_nll   0.64 (  0.62)	train_penalty   0.00 (  0.00)	weight_norm  29.66 ( 28.86)	train_acc   0.55 (  0.55)	train_minacc   0.66 (  0.60)	train_majacc   0.53 (  0.54)	train_corr   0.00 (  0.00)	l1 4.1059 (4.2246)	zero_count 0.0000 (81.8220)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.74it/s] 15%|#5        | 4/26 [00:00<00:01, 17.47it/s] 35%|###4      | 9/26 [00:00<00:00, 29.98it/s]                                               35%|###4      | 9/26 [00:00<00:00, 29.98it/s] 54%|#####3    | 14/26 [00:00<00:00, 36.54it/s] 73%|#######3  | 19/26 [00:00<00:00, 36.43it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 36.43it/s] 92%|#########2| 24/26 [00:00<00:00, 39.92it/s]100%|##########| 26/26 [00:00<00:00, 32.70it/s]
Test: [   0/  26]	Loss 0.649 (0.649)	test_acc   0.47 (  0.47)	test_minacc   0.41 (  0.41)	test_majacc   0.48 (  0.48)	Loss_d 0.649 (0.649)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.33 (  0.33)
Test: [  10/  26]	Loss 0.662 (0.648)	test_acc   0.49 (  0.51)	test_minacc   0.52 (  0.48)	test_majacc   0.49 (  0.51)	Loss_d 0.662 (0.648)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.52 (  0.48)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.30 (  0.29)
Test: [  20/  26]	Loss 0.629 (0.645)	test_acc   0.52 (  0.50)	test_minacc   0.57 (  0.49)	test_majacc   0.51 (  0.50)	Loss_d 0.629 (0.645)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.57 (  0.49)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.34 (  0.30)
Test: [  26/  26]	Loss 0.639 (0.644)	test_acc   0.51 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.51 (  0.50)	Loss_d 0.639 (0.644)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.35 (  0.31)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.86it/s]
Test: [  0/  1]	Loss 0.818 (0.818)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.818 (0.818)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Test: [  1/  1]	Loss 0.818 (0.818)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.818 (0.818)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Overall Timing[ 24/  1]	epoch_time 0.0421 (0.0428)	validation_time 0.0004 (0.0007)	train_time 0.0417 (0.0421)
record: (train_acc, test_acc) (0.7581000280976296, 0.6340000033378601)
last accs (train_acc, test_acc) (0.5000000085532665, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.30it/s] 15%|#5        | 4/26 [00:00<00:01, 15.81it/s] 27%|##6       | 7/26 [00:00<00:00, 20.96it/s] 42%|####2     | 11/26 [00:00<00:00, 24.90it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.59it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.79it/s] 88%|########8 | 23/26 [00:00<00:00, 29.66it/s]100%|##########| 26/26 [00:00<00:00, 29.72it/s]100%|##########| 26/26 [00:01<00:00, 24.56it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 650 200
penalty weights 10000.0
args.step pgd_anneal_iters 650 600
dim_v 512
rho, theta 155 tensor(2.1027e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 651 200
penalty weights 10000.0
args.step pgd_anneal_iters 651 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 652 200
penalty weights 10000.0
args.step pgd_anneal_iters 652 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 653 200
penalty weights 10000.0
args.step pgd_anneal_iters 653 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 654 200
penalty weights 10000.0
args.step pgd_anneal_iters 654 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 655 200
penalty weights 10000.0
args.step pgd_anneal_iters 655 600
dim_v 512
rho, theta 155 tensor(7.1724e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 656 200
penalty weights 10000.0
args.step pgd_anneal_iters 656 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 657 200
penalty weights 10000.0
args.step pgd_anneal_iters 657 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 658 200
penalty weights 10000.0
args.step pgd_anneal_iters 658 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 659 200
penalty weights 10000.0
args.step pgd_anneal_iters 659 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 660 200
penalty weights 10000.0
args.step pgd_anneal_iters 660 600
dim_v 512
rho, theta 161 tensor(3.4347e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 661 200
penalty weights 10000.0
args.step pgd_anneal_iters 661 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 662 200
penalty weights 10000.0
args.step pgd_anneal_iters 662 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 663 200
penalty weights 10000.0
args.step pgd_anneal_iters 663 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 664 200
penalty weights 10000.0
args.step pgd_anneal_iters 664 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 665 200
penalty weights 10000.0
args.step pgd_anneal_iters 665 600
dim_v 512
rho, theta 170 tensor(1.9631e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 666 200
penalty weights 10000.0
args.step pgd_anneal_iters 666 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 667 200
penalty weights 10000.0
args.step pgd_anneal_iters 667 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 668 200
penalty weights 10000.0
args.step pgd_anneal_iters 668 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 669 200
penalty weights 10000.0
args.step pgd_anneal_iters 669 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 670 200
penalty weights 10000.0
args.step pgd_anneal_iters 670 600
dim_v 512
rho, theta 193 tensor(1.0250e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 671 200
penalty weights 10000.0
args.step pgd_anneal_iters 671 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 672 200
penalty weights 10000.0
args.step pgd_anneal_iters 672 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 673 200
penalty weights 10000.0
args.step pgd_anneal_iters 673 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 674 200
penalty weights 10000.0
args.step pgd_anneal_iters 674 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 675 200
penalty weights 10000.0
args.step pgd_anneal_iters 675 600
dim_v 512
rho, theta 207 tensor(-9.3167e-06, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [25][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm  29.86 ( 29.80)	train_acc   0.51 (  0.50)	train_minacc   0.47 (  0.53)	train_majacc   0.51 (  0.50)	train_corr   0.00 (  0.00)	l1 4.0274 (4.0371)	zero_count 0.0000 (80.9640)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.86it/s] 23%|##3       | 6/26 [00:00<00:00, 22.71it/s]                                               23%|##3       | 6/26 [00:00<00:00, 22.71it/s] 42%|####2     | 11/26 [00:00<00:00, 31.26it/s] 62%|######1   | 16/26 [00:00<00:00, 37.31it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.31it/s] 81%|########  | 21/26 [00:00<00:00, 37.43it/s]100%|##########| 26/26 [00:00<00:00, 40.68it/s]100%|##########| 26/26 [00:00<00:00, 31.79it/s]
Test: [   0/  26]	Loss 0.651 (0.651)	test_acc   0.47 (  0.47)	test_minacc   0.41 (  0.41)	test_majacc   0.48 (  0.48)	Loss_d 0.651 (0.651)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.29 (  0.29)
Test: [  10/  26]	Loss 0.666 (0.653)	test_acc   0.49 (  0.51)	test_minacc   0.52 (  0.48)	test_majacc   0.49 (  0.51)	Loss_d 0.666 (0.653)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.52 (  0.48)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.26 (  0.25)
Test: [  20/  26]	Loss 0.638 (0.651)	test_acc   0.52 (  0.50)	test_minacc   0.57 (  0.49)	test_majacc   0.51 (  0.50)	Loss_d 0.638 (0.651)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.57 (  0.49)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.30 (  0.26)
Test: [  26/  26]	Loss 0.643 (0.650)	test_acc   0.51 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.51 (  0.50)	Loss_d 0.643 (0.650)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.30 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.79it/s]
Test: [  0/  1]	Loss 0.779 (0.779)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.779 (0.779)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.03 (  0.03)
Test: [  1/  1]	Loss 0.779 (0.779)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.779 (0.779)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.03 (  0.03)
Overall Timing[ 25/  1]	epoch_time 0.0449 (0.0429)	validation_time 0.0004 (0.0007)	train_time 0.0445 (0.0422)
record: (train_acc, test_acc) (0.7581000280976296, 0.6340000033378601)
last accs (train_acc, test_acc) (0.5000000085532665, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.37it/s]  8%|7         | 2/26 [00:00<00:04,  5.68it/s] 19%|#9        | 5/26 [00:00<00:01, 12.59it/s] 35%|###4      | 9/26 [00:00<00:00, 19.61it/s] 46%|####6     | 12/26 [00:00<00:00, 22.55it/s] 62%|######1   | 16/26 [00:00<00:00, 25.78it/s] 77%|#######6  | 20/26 [00:00<00:00, 27.35it/s] 92%|#########2| 24/26 [00:01<00:00, 29.94it/s]100%|##########| 26/26 [00:01<00:00, 21.72it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 676 200
penalty weights 10000.0
args.step pgd_anneal_iters 676 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 677 200
penalty weights 10000.0
args.step pgd_anneal_iters 677 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 678 200
penalty weights 10000.0
args.step pgd_anneal_iters 678 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 679 200
penalty weights 10000.0
args.step pgd_anneal_iters 679 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 680 200
penalty weights 10000.0
args.step pgd_anneal_iters 680 600
dim_v 512
rho, theta 212 tensor(-3.2490e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 681 200
penalty weights 10000.0
args.step pgd_anneal_iters 681 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 682 200
penalty weights 10000.0
args.step pgd_anneal_iters 682 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 683 200
penalty weights 10000.0
args.step pgd_anneal_iters 683 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 684 200
penalty weights 10000.0
args.step pgd_anneal_iters 684 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 685 200
penalty weights 10000.0
args.step pgd_anneal_iters 685 600
dim_v 512
rho, theta 208 tensor(-2.3226e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 686 200
penalty weights 10000.0
args.step pgd_anneal_iters 686 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 687 200
penalty weights 10000.0
args.step pgd_anneal_iters 687 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 688 200
penalty weights 10000.0
args.step pgd_anneal_iters 688 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 689 200
penalty weights 10000.0
args.step pgd_anneal_iters 689 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 690 200
penalty weights 10000.0
args.step pgd_anneal_iters 690 600
dim_v 512
rho, theta 212 tensor(-3.1574e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 691 200
penalty weights 10000.0
args.step pgd_anneal_iters 691 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 692 200
penalty weights 10000.0
args.step pgd_anneal_iters 692 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 693 200
penalty weights 10000.0
args.step pgd_anneal_iters 693 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 694 200
penalty weights 10000.0
args.step pgd_anneal_iters 694 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 695 200
penalty weights 10000.0
args.step pgd_anneal_iters 695 600
dim_v 512
rho, theta 275 tensor(-3.5573e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 696 200
penalty weights 10000.0
args.step pgd_anneal_iters 696 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 697 200
penalty weights 10000.0
args.step pgd_anneal_iters 697 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 698 200
penalty weights 10000.0
args.step pgd_anneal_iters 698 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 699 200
penalty weights 10000.0
args.step pgd_anneal_iters 699 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 700 200
penalty weights 10000.0
args.step pgd_anneal_iters 700 600
dim_v 512
rho, theta 342 tensor(3.2925e-05, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 701 200
penalty weights 10000.0
args.step pgd_anneal_iters 701 600
final projection at end of training
dim_v 512
rho, theta 341 tensor(7.4175e-07, device='cuda:0')
Epoch: [26][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm  29.88 ( 29.87)	train_acc   0.51 (  0.50)	train_minacc   0.47 (  0.51)	train_majacc   0.51 (  0.50)	train_corr   0.00 (  0.00)	l1 4.0162 (4.0240)	zero_count 169.0000 (60.4240)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.42it/s] 27%|##6       | 7/26 [00:00<00:00, 30.97it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.97it/s] 46%|####6     | 12/26 [00:00<00:00, 37.13it/s] 65%|######5   | 17/26 [00:00<00:00, 40.74it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.74it/s] 85%|########4 | 22/26 [00:00<00:00, 40.04it/s]100%|##########| 26/26 [00:00<00:00, 36.42it/s]
Test: [   0/  26]	Loss 0.650 (0.650)	test_acc   0.47 (  0.47)	test_minacc   0.41 (  0.41)	test_majacc   0.48 (  0.48)	Loss_d 0.650 (0.650)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.29 (  0.29)
Test: [  10/  26]	Loss 0.665 (0.653)	test_acc   0.49 (  0.51)	test_minacc   0.52 (  0.48)	test_majacc   0.49 (  0.51)	Loss_d 0.665 (0.653)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.52 (  0.48)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.27 (  0.25)
Test: [  20/  26]	Loss 0.639 (0.651)	test_acc   0.52 (  0.50)	test_minacc   0.57 (  0.49)	test_majacc   0.51 (  0.50)	Loss_d 0.639 (0.651)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.57 (  0.49)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.30 (  0.26)
Test: [  26/  26]	Loss 0.644 (0.650)	test_acc   0.51 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.51 (  0.50)	Loss_d 0.644 (0.650)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.30 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.21it/s]
Test: [  0/  1]	Loss 0.782 (0.782)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.782 (0.782)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.06 (  0.06)
Test: [  1/  1]	Loss 0.782 (0.782)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.782 (0.782)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.06 (  0.06)
Overall Timing[ 26/  1]	epoch_time 0.0417 (0.0429)	validation_time 0.0005 (0.0007)	train_time 0.0413 (0.0421)
record: (train_acc, test_acc) (0.7581000280976296, 0.6340000033378601)
last accs (train_acc, test_acc) (0.5000000085532665, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.81it/s] 15%|#5        | 4/26 [00:00<00:01, 12.12it/s] 31%|###       | 8/26 [00:00<00:00, 19.57it/s] 42%|####2     | 11/26 [00:00<00:00, 21.57it/s] 54%|#####3    | 14/26 [00:00<00:00, 23.08it/s] 69%|######9   | 18/26 [00:00<00:00, 26.93it/s] 81%|########  | 21/26 [00:00<00:00, 26.80it/s] 92%|#########2| 24/26 [00:01<00:00, 26.67it/s]100%|##########| 26/26 [00:01<00:00, 22.00it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 702 200
penalty weights 10000.0
args.step pgd_anneal_iters 702 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 703 200
penalty weights 10000.0
args.step pgd_anneal_iters 703 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 704 200
penalty weights 10000.0
args.step pgd_anneal_iters 704 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 705 200
penalty weights 10000.0
args.step pgd_anneal_iters 705 600
dim_v 512
rho, theta 361 tensor(-9.7580e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 706 200
penalty weights 10000.0
args.step pgd_anneal_iters 706 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 707 200
penalty weights 10000.0
args.step pgd_anneal_iters 707 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 708 200
penalty weights 10000.0
args.step pgd_anneal_iters 708 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 709 200
penalty weights 10000.0
args.step pgd_anneal_iters 709 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 710 200
penalty weights 10000.0
args.step pgd_anneal_iters 710 600
dim_v 512
rho, theta 389 tensor(-1.9316e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 711 200
penalty weights 10000.0
args.step pgd_anneal_iters 711 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 712 200
penalty weights 10000.0
args.step pgd_anneal_iters 712 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 713 200
penalty weights 10000.0
args.step pgd_anneal_iters 713 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 714 200
penalty weights 10000.0
args.step pgd_anneal_iters 714 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 715 200
penalty weights 10000.0
args.step pgd_anneal_iters 715 600
dim_v 512
rho, theta 317 tensor(-3.3987e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 716 200
penalty weights 10000.0
args.step pgd_anneal_iters 716 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 717 200
penalty weights 10000.0
args.step pgd_anneal_iters 717 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 718 200
penalty weights 10000.0
args.step pgd_anneal_iters 718 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 719 200
penalty weights 10000.0
args.step pgd_anneal_iters 719 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 720 200
penalty weights 10000.0
args.step pgd_anneal_iters 720 600
dim_v 512
rho, theta 300 tensor(-8.1458e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 721 200
penalty weights 10000.0
args.step pgd_anneal_iters 721 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 722 200
penalty weights 10000.0
args.step pgd_anneal_iters 722 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 723 200
penalty weights 10000.0
args.step pgd_anneal_iters 723 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 724 200
penalty weights 10000.0
args.step pgd_anneal_iters 724 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 725 200
penalty weights 10000.0
args.step pgd_anneal_iters 725 600
dim_v 512
rho, theta 375 tensor(2.1189e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 726 200
penalty weights 10000.0
args.step pgd_anneal_iters 726 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 727 200
penalty weights 10000.0
args.step pgd_anneal_iters 727 600
final projection at end of training
dim_v 512
rho, theta 363 tensor(2.3973e-06, device='cuda:0')
Epoch: [27][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm  29.88 ( 29.88)	train_acc   0.51 (  0.50)	train_minacc   0.47 (  0.50)	train_majacc   0.51 (  0.50)	train_corr   0.00 (  0.00)	l1 4.0178 (4.0181)	zero_count 0.0000 (38.3370)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.79it/s] 23%|##3       | 6/26 [00:00<00:00, 29.26it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.26it/s] 42%|####2     | 11/26 [00:00<00:00, 36.23it/s] 62%|######1   | 16/26 [00:00<00:00, 40.52it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.52it/s] 81%|########  | 21/26 [00:00<00:00, 39.75it/s]100%|##########| 26/26 [00:00<00:00, 42.38it/s]100%|##########| 26/26 [00:00<00:00, 35.11it/s]
Test: [   0/  26]	Loss 0.651 (0.651)	test_acc   0.47 (  0.47)	test_minacc   0.41 (  0.41)	test_majacc   0.48 (  0.48)	Loss_d 0.651 (0.651)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.28 (  0.28)
Test: [  10/  26]	Loss 0.665 (0.654)	test_acc   0.49 (  0.51)	test_minacc   0.52 (  0.48)	test_majacc   0.49 (  0.51)	Loss_d 0.665 (0.654)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.52 (  0.48)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.26 (  0.25)
Test: [  20/  26]	Loss 0.641 (0.652)	test_acc   0.52 (  0.50)	test_minacc   0.57 (  0.49)	test_majacc   0.51 (  0.50)	Loss_d 0.641 (0.652)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.57 (  0.49)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.29 (  0.26)
Test: [  26/  26]	Loss 0.646 (0.652)	test_acc   0.51 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.51 (  0.50)	Loss_d 0.646 (0.652)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.29 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.12it/s]
Test: [  0/  1]	Loss 0.781 (0.781)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.781 (0.781)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.07 (  0.07)
Test: [  1/  1]	Loss 0.781 (0.781)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.781 (0.781)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.07 (  0.07)
Overall Timing[ 27/  1]	epoch_time 0.0460 (0.0430)	validation_time 0.0005 (0.0006)	train_time 0.0456 (0.0422)
record: (train_acc, test_acc) (0.7581000280976296, 0.6340000033378601)
last accs (train_acc, test_acc) (0.5000000085532665, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.40it/s] 12%|#1        | 3/26 [00:00<00:02, 10.53it/s] 27%|##6       | 7/26 [00:00<00:00, 19.88it/s] 38%|###8      | 10/26 [00:00<00:00, 22.59it/s] 50%|#####     | 13/26 [00:00<00:00, 23.37it/s] 65%|######5   | 17/26 [00:00<00:00, 26.36it/s] 77%|#######6  | 20/26 [00:00<00:00, 26.96it/s] 88%|########8 | 23/26 [00:00<00:00, 26.52it/s]100%|##########| 26/26 [00:01<00:00, 22.87it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 728 200
penalty weights 10000.0
args.step pgd_anneal_iters 728 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 729 200
penalty weights 10000.0
args.step pgd_anneal_iters 729 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 730 200
penalty weights 10000.0
args.step pgd_anneal_iters 730 600
dim_v 512
rho, theta 363 tensor(-5.9343e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 731 200
penalty weights 10000.0
args.step pgd_anneal_iters 731 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 732 200
penalty weights 10000.0
args.step pgd_anneal_iters 732 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 733 200
penalty weights 10000.0
args.step pgd_anneal_iters 733 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 734 200
penalty weights 10000.0
args.step pgd_anneal_iters 734 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 735 200
penalty weights 10000.0
args.step pgd_anneal_iters 735 600
dim_v 512
rho, theta 382 tensor(-1.4071e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 736 200
penalty weights 10000.0
args.step pgd_anneal_iters 736 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 737 200
penalty weights 10000.0
args.step pgd_anneal_iters 737 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 738 200
penalty weights 10000.0
args.step pgd_anneal_iters 738 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 739 200
penalty weights 10000.0
args.step pgd_anneal_iters 739 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 740 200
penalty weights 10000.0
args.step pgd_anneal_iters 740 600
dim_v 512
rho, theta 360 tensor(-2.8441e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 741 200
penalty weights 10000.0
args.step pgd_anneal_iters 741 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 742 200
penalty weights 10000.0
args.step pgd_anneal_iters 742 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 743 200
penalty weights 10000.0
args.step pgd_anneal_iters 743 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 744 200
penalty weights 10000.0
args.step pgd_anneal_iters 744 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 745 200
penalty weights 10000.0
args.step pgd_anneal_iters 745 600
dim_v 512
rho, theta 299 tensor(-1.2557e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 746 200
penalty weights 10000.0
args.step pgd_anneal_iters 746 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 747 200
penalty weights 10000.0
args.step pgd_anneal_iters 747 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 748 200
penalty weights 10000.0
args.step pgd_anneal_iters 748 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 749 200
penalty weights 10000.0
args.step pgd_anneal_iters 749 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 750 200
penalty weights 10000.0
args.step pgd_anneal_iters 750 600
dim_v 512
rho, theta 377 tensor(2.3602e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 751 200
penalty weights 10000.0
args.step pgd_anneal_iters 751 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 752 200
penalty weights 10000.0
args.step pgd_anneal_iters 752 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 753 200
penalty weights 10000.0
args.step pgd_anneal_iters 753 600
final projection at end of training
dim_v 512
rho, theta 356 tensor(7.4077e-06, device='cuda:0')
Epoch: [28][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm  29.88 ( 29.88)	train_acc   0.51 (  0.50)	train_minacc   0.47 (  0.50)	train_majacc   0.51 (  0.50)	train_corr   0.00 (  0.00)	l1 4.0199 (4.0178)	zero_count 0.0000 (35.9580)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.40it/s] 23%|##3       | 6/26 [00:00<00:00, 28.95it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.95it/s] 42%|####2     | 11/26 [00:00<00:00, 36.30it/s] 65%|######5   | 17/26 [00:00<00:00, 41.77it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.77it/s] 85%|########4 | 22/26 [00:00<00:00, 41.79it/s]100%|##########| 26/26 [00:00<00:00, 36.76it/s]
Test: [   0/  26]	Loss 0.651 (0.651)	test_acc   0.47 (  0.47)	test_minacc   0.41 (  0.41)	test_majacc   0.48 (  0.48)	Loss_d 0.651 (0.651)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.28 (  0.28)
Test: [  10/  26]	Loss 0.665 (0.655)	test_acc   0.49 (  0.51)	test_minacc   0.52 (  0.48)	test_majacc   0.49 (  0.51)	Loss_d 0.665 (0.655)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.52 (  0.48)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.26 (  0.24)
Test: [  20/  26]	Loss 0.643 (0.653)	test_acc   0.52 (  0.50)	test_minacc   0.57 (  0.49)	test_majacc   0.51 (  0.50)	Loss_d 0.643 (0.653)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.57 (  0.49)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.29 (  0.26)
Test: [  26/  26]	Loss 0.646 (0.652)	test_acc   0.51 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.51 (  0.50)	Loss_d 0.646 (0.652)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.29 (  0.26)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.93it/s]
Test: [  0/  1]	Loss 0.781 (0.781)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.781 (0.781)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.07 (  0.07)
Test: [  1/  1]	Loss 0.781 (0.781)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.781 (0.781)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.07 (  0.07)
Overall Timing[ 28/  1]	epoch_time 0.0429 (0.0430)	validation_time 0.0004 (0.0006)	train_time 0.0425 (0.0423)
record: (train_acc, test_acc) (0.7581000280976296, 0.6340000033378601)
last accs (train_acc, test_acc) (0.5000000085532665, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:09,  2.71it/s] 12%|#1        | 3/26 [00:00<00:03,  7.23it/s] 27%|##6       | 7/26 [00:00<00:01, 14.41it/s] 42%|####2     | 11/26 [00:00<00:00, 20.04it/s] 54%|#####3    | 14/26 [00:00<00:00, 21.29it/s] 65%|######5   | 17/26 [00:00<00:00, 22.78it/s] 81%|########  | 21/26 [00:01<00:00, 25.90it/s] 92%|#########2| 24/26 [00:01<00:00, 25.93it/s]100%|##########| 26/26 [00:01<00:00, 19.36it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 754 200
penalty weights 10000.0
args.step pgd_anneal_iters 754 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 755 200
penalty weights 10000.0
args.step pgd_anneal_iters 755 600
dim_v 512
rho, theta 360 tensor(-2.7963e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 756 200
penalty weights 10000.0
args.step pgd_anneal_iters 756 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 757 200
penalty weights 10000.0
args.step pgd_anneal_iters 757 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 758 200
penalty weights 10000.0
args.step pgd_anneal_iters 758 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 759 200
penalty weights 10000.0
args.step pgd_anneal_iters 759 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 760 200
penalty weights 10000.0
args.step pgd_anneal_iters 760 600
dim_v 512
rho, theta 384 tensor(-1.2622e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 761 200
penalty weights 10000.0
args.step pgd_anneal_iters 761 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 762 200
penalty weights 10000.0
args.step pgd_anneal_iters 762 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 763 200
penalty weights 10000.0
args.step pgd_anneal_iters 763 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 764 200
penalty weights 10000.0
args.step pgd_anneal_iters 764 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 765 200
penalty weights 10000.0
args.step pgd_anneal_iters 765 600
dim_v 512
rho, theta 381 tensor(-2.6239e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 766 200
penalty weights 10000.0
args.step pgd_anneal_iters 766 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 767 200
penalty weights 10000.0
args.step pgd_anneal_iters 767 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 768 200
penalty weights 10000.0
args.step pgd_anneal_iters 768 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 769 200
penalty weights 10000.0
args.step pgd_anneal_iters 769 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 770 200
penalty weights 10000.0
args.step pgd_anneal_iters 770 600
dim_v 512
rho, theta 310 tensor(-1.5631e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 771 200
penalty weights 10000.0
args.step pgd_anneal_iters 771 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 772 200
penalty weights 10000.0
args.step pgd_anneal_iters 772 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 773 200
penalty weights 10000.0
args.step pgd_anneal_iters 773 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 774 200
penalty weights 10000.0
args.step pgd_anneal_iters 774 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 775 200
penalty weights 10000.0
args.step pgd_anneal_iters 775 600
dim_v 512
rho, theta 386 tensor(1.3287e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 776 200
penalty weights 10000.0
args.step pgd_anneal_iters 776 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 777 200
penalty weights 10000.0
args.step pgd_anneal_iters 777 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 778 200
penalty weights 10000.0
args.step pgd_anneal_iters 778 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 779 200
penalty weights 10000.0
args.step pgd_anneal_iters 779 600
final projection at end of training
dim_v 512
rho, theta 355 tensor(1.7241e-05, device='cuda:0')
Epoch: [29][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm  29.88 ( 29.88)	train_acc   0.51 (  0.50)	train_minacc   0.47 (  0.50)	train_majacc   0.51 (  0.50)	train_corr   0.00 (  0.00)	l1 4.0239 (4.0176)	zero_count 0.0000 (34.6710)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.61it/s] 27%|##6       | 7/26 [00:00<00:00, 35.65it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.65it/s] 46%|####6     | 12/26 [00:00<00:00, 40.31it/s] 65%|######5   | 17/26 [00:00<00:00, 42.28it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.28it/s] 85%|########4 | 22/26 [00:00<00:00, 42.63it/s]100%|##########| 26/26 [00:00<00:00, 37.74it/s]
Test: [   0/  26]	Loss 0.652 (0.652)	test_acc   0.47 (  0.47)	test_minacc   0.41 (  0.41)	test_majacc   0.48 (  0.48)	Loss_d 0.652 (0.652)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.27 (  0.27)
Test: [  10/  26]	Loss 0.665 (0.655)	test_acc   0.49 (  0.51)	test_minacc   0.52 (  0.48)	test_majacc   0.49 (  0.51)	Loss_d 0.665 (0.655)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.52 (  0.48)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.25 (  0.24)
Test: [  20/  26]	Loss 0.644 (0.654)	test_acc   0.52 (  0.50)	test_minacc   0.57 (  0.49)	test_majacc   0.51 (  0.50)	Loss_d 0.644 (0.654)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.57 (  0.49)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.28 (  0.25)
Test: [  26/  26]	Loss 0.647 (0.653)	test_acc   0.51 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.51 (  0.50)	Loss_d 0.647 (0.653)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.29 (  0.26)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.74it/s]
Test: [  0/  1]	Loss 0.782 (0.782)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.782 (0.782)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.08 (  0.08)
Test: [  1/  1]	Loss 0.782 (0.782)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.782 (0.782)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.08 (  0.08)
Overall Timing[ 29/  1]	epoch_time 0.0458 (0.0431)	validation_time 0.0005 (0.0006)	train_time 0.0453 (0.0424)
record: (train_acc, test_acc) (0.7581000280976296, 0.6340000033378601)
last accs (train_acc, test_acc) (0.5000000085532665, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 22.07it/s] 23%|##3       | 6/26 [00:00<00:00, 23.33it/s] 38%|###8      | 10/26 [00:00<00:00, 28.29it/s] 50%|#####     | 13/26 [00:00<00:00, 26.78it/s] 62%|######1   | 16/26 [00:00<00:00, 27.25it/s] 77%|#######6  | 20/26 [00:00<00:00, 28.94it/s] 88%|########8 | 23/26 [00:00<00:00, 28.63it/s]100%|##########| 26/26 [00:00<00:00, 28.36it/s]100%|##########| 26/26 [00:01<00:00, 25.84it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 780 200
penalty weights 10000.0
args.step pgd_anneal_iters 780 600
dim_v 512
rho, theta 356 tensor(-2.2707e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 781 200
penalty weights 10000.0
args.step pgd_anneal_iters 781 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 782 200
penalty weights 10000.0
args.step pgd_anneal_iters 782 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 783 200
penalty weights 10000.0
args.step pgd_anneal_iters 783 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 784 200
penalty weights 10000.0
args.step pgd_anneal_iters 784 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 785 200
penalty weights 10000.0
args.step pgd_anneal_iters 785 600
dim_v 512
rho, theta 386 tensor(-1.5083e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 786 200
penalty weights 10000.0
args.step pgd_anneal_iters 786 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 787 200
penalty weights 10000.0
args.step pgd_anneal_iters 787 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 788 200
penalty weights 10000.0
args.step pgd_anneal_iters 788 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 789 200
penalty weights 10000.0
args.step pgd_anneal_iters 789 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 790 200
penalty weights 10000.0
args.step pgd_anneal_iters 790 600
dim_v 512
rho, theta 391 tensor(-1.7643e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 791 200
penalty weights 10000.0
args.step pgd_anneal_iters 791 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 792 200
penalty weights 10000.0
args.step pgd_anneal_iters 792 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 793 200
penalty weights 10000.0
args.step pgd_anneal_iters 793 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 794 200
penalty weights 10000.0
args.step pgd_anneal_iters 794 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 795 200
penalty weights 10000.0
args.step pgd_anneal_iters 795 600
dim_v 512
rho, theta 309 tensor(-1.9767e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 796 200
penalty weights 10000.0
args.step pgd_anneal_iters 796 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 797 200
penalty weights 10000.0
args.step pgd_anneal_iters 797 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 798 200
penalty weights 10000.0
args.step pgd_anneal_iters 798 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 799 200
penalty weights 10000.0
args.step pgd_anneal_iters 799 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 800 200
penalty weights 10000.0
args.step pgd_anneal_iters 800 600
dim_v 512
rho, theta 392 tensor(7.7604e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 801 200
penalty weights 10000.0
args.step pgd_anneal_iters 801 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 802 200
penalty weights 10000.0
args.step pgd_anneal_iters 802 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 803 200
penalty weights 10000.0
args.step pgd_anneal_iters 803 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 804 200
penalty weights 10000.0
args.step pgd_anneal_iters 804 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 805 200
penalty weights 10000.0
args.step pgd_anneal_iters 805 600
dim_v 512
rho, theta 355 tensor(2.2368e-05, device='cuda:0')
final projection at end of training
dim_v 512
rho, theta 355 tensor(6.4293e-08, device='cuda:0')
Epoch: [30][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm  29.88 ( 29.88)	train_acc   0.51 (  0.50)	train_minacc   0.47 (  0.50)	train_majacc   0.51 (  0.50)	train_corr   0.00 (  0.00)	l1 4.0262 (4.0179)	zero_count 0.0000 (34.2030)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  4.14it/s] 27%|##6       | 7/26 [00:00<00:00, 23.68it/s]                                               27%|##6       | 7/26 [00:00<00:00, 23.68it/s] 46%|####6     | 12/26 [00:00<00:00, 31.68it/s] 65%|######5   | 17/26 [00:00<00:00, 36.15it/s]                                                65%|######5   | 17/26 [00:00<00:00, 36.15it/s] 85%|########4 | 22/26 [00:00<00:00, 39.71it/s]100%|##########| 26/26 [00:00<00:00, 31.36it/s]
Test: [   0/  26]	Loss 0.652 (0.652)	test_acc   0.47 (  0.47)	test_minacc   0.41 (  0.41)	test_majacc   0.48 (  0.48)	Loss_d 0.652 (0.652)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.27 (  0.27)
Test: [  10/  26]	Loss 0.665 (0.656)	test_acc   0.49 (  0.51)	test_minacc   0.52 (  0.48)	test_majacc   0.49 (  0.51)	Loss_d 0.665 (0.656)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.52 (  0.48)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.25 (  0.24)
Test: [  20/  26]	Loss 0.645 (0.654)	test_acc   0.52 (  0.50)	test_minacc   0.57 (  0.49)	test_majacc   0.51 (  0.50)	Loss_d 0.645 (0.654)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.57 (  0.49)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.28 (  0.25)
Test: [  26/  26]	Loss 0.648 (0.654)	test_acc   0.51 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.51 (  0.50)	Loss_d 0.648 (0.654)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.28 (  0.26)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.09it/s]
Test: [  0/  1]	Loss 0.782 (0.782)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.782 (0.782)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.08 (  0.08)
Test: [  1/  1]	Loss 0.782 (0.782)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.782 (0.782)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.08 (  0.08)
Overall Timing[ 30/  1]	epoch_time 0.0442 (0.0431)	validation_time 0.0004 (0.0006)	train_time 0.0438 (0.0424)
record: (train_acc, test_acc) (0.7581000280976296, 0.6340000033378601)
last accs (train_acc, test_acc) (0.5000000085532665, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.54it/s] 19%|#9        | 5/26 [00:00<00:00, 21.65it/s] 35%|###4      | 9/26 [00:00<00:00, 27.08it/s] 46%|####6     | 12/26 [00:00<00:00, 27.23it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.32it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.40it/s] 85%|########4 | 22/26 [00:00<00:00, 28.31it/s] 96%|#########6| 25/26 [00:00<00:00, 28.26it/s]100%|##########| 26/26 [00:01<00:00, 25.77it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 806 200
penalty weights 10000.0
args.step pgd_anneal_iters 806 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 807 200
penalty weights 10000.0
args.step pgd_anneal_iters 807 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 808 200
penalty weights 10000.0
args.step pgd_anneal_iters 808 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 809 200
penalty weights 10000.0
args.step pgd_anneal_iters 809 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 810 200
penalty weights 10000.0
args.step pgd_anneal_iters 810 600
dim_v 512
rho, theta 387 tensor(-1.2966e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 811 200
penalty weights 10000.0
args.step pgd_anneal_iters 811 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 812 200
penalty weights 10000.0
args.step pgd_anneal_iters 812 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 813 200
penalty weights 10000.0
args.step pgd_anneal_iters 813 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 814 200
penalty weights 10000.0
args.step pgd_anneal_iters 814 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 815 200
penalty weights 10000.0
args.step pgd_anneal_iters 815 600
dim_v 512
rho, theta 388 tensor(-1.4319e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 816 200
penalty weights 10000.0
args.step pgd_anneal_iters 816 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 817 200
penalty weights 10000.0
args.step pgd_anneal_iters 817 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 818 200
penalty weights 10000.0
args.step pgd_anneal_iters 818 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 819 200
penalty weights 10000.0
args.step pgd_anneal_iters 819 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 820 200
penalty weights 10000.0
args.step pgd_anneal_iters 820 600
dim_v 512
rho, theta 306 tensor(-2.0555e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 821 200
penalty weights 10000.0
args.step pgd_anneal_iters 821 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 822 200
penalty weights 10000.0
args.step pgd_anneal_iters 822 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 823 200
penalty weights 10000.0
args.step pgd_anneal_iters 823 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 824 200
penalty weights 10000.0
args.step pgd_anneal_iters 824 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 825 200
penalty weights 10000.0
args.step pgd_anneal_iters 825 600
dim_v 512
rho, theta 321 tensor(1.9044e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 826 200
penalty weights 10000.0
args.step pgd_anneal_iters 826 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 827 200
penalty weights 10000.0
args.step pgd_anneal_iters 827 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 828 200
penalty weights 10000.0
args.step pgd_anneal_iters 828 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 829 200
penalty weights 10000.0
args.step pgd_anneal_iters 829 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 830 200
penalty weights 10000.0
args.step pgd_anneal_iters 830 600
dim_v 512
rho, theta 364 tensor(2.6449e-05, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 831 200
penalty weights 10000.0
args.step pgd_anneal_iters 831 600
final projection at end of training
dim_v 512
rho, theta 360 tensor(1.1835e-06, device='cuda:0')
Epoch: [31][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm  29.88 ( 29.88)	train_acc   0.51 (  0.50)	train_minacc   0.47 (  0.50)	train_majacc   0.51 (  0.50)	train_corr   0.00 (  0.00)	l1 4.0162 (4.0181)	zero_count 147.0000 (34.7970)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.00it/s] 23%|##3       | 6/26 [00:00<00:00, 27.42it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.42it/s] 42%|####2     | 11/26 [00:00<00:00, 34.82it/s] 62%|######1   | 16/26 [00:00<00:00, 38.92it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.92it/s] 81%|########  | 21/26 [00:00<00:00, 41.01it/s]100%|##########| 26/26 [00:00<00:00, 43.09it/s]100%|##########| 26/26 [00:00<00:00, 35.36it/s]
Test: [   0/  26]	Loss 0.653 (0.653)	test_acc   0.47 (  0.47)	test_minacc   0.41 (  0.41)	test_majacc   0.48 (  0.48)	Loss_d 0.653 (0.653)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.27 (  0.27)
Test: [  10/  26]	Loss 0.665 (0.656)	test_acc   0.49 (  0.51)	test_minacc   0.52 (  0.48)	test_majacc   0.49 (  0.51)	Loss_d 0.665 (0.656)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.52 (  0.48)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.25 (  0.24)
Test: [  20/  26]	Loss 0.646 (0.655)	test_acc   0.52 (  0.50)	test_minacc   0.57 (  0.49)	test_majacc   0.51 (  0.50)	Loss_d 0.646 (0.655)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.57 (  0.49)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.28 (  0.25)
Test: [  26/  26]	Loss 0.648 (0.654)	test_acc   0.51 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.51 (  0.50)	Loss_d 0.648 (0.654)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.28 (  0.25)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.04it/s]
Test: [  0/  1]	Loss 0.783 (0.783)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.783 (0.783)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.08 (  0.08)
Test: [  1/  1]	Loss 0.783 (0.783)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.783 (0.783)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.08 (  0.08)
Overall Timing[ 31/  1]	epoch_time 0.0438 (0.0431)	validation_time 0.0004 (0.0006)	train_time 0.0434 (0.0424)
record: (train_acc, test_acc) (0.7581000280976296, 0.6340000033378601)
last accs (train_acc, test_acc) (0.5000000085532665, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.29it/s] 19%|#9        | 5/26 [00:00<00:00, 23.74it/s] 35%|###4      | 9/26 [00:00<00:00, 26.78it/s] 50%|#####     | 13/26 [00:00<00:00, 30.90it/s] 65%|######5   | 17/26 [00:00<00:00, 31.19it/s] 81%|########  | 21/26 [00:00<00:00, 31.22it/s] 96%|#########6| 25/26 [00:00<00:00, 30.58it/s]100%|##########| 26/26 [00:00<00:00, 27.68it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 832 200
penalty weights 10000.0
args.step pgd_anneal_iters 832 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 833 200
penalty weights 10000.0
args.step pgd_anneal_iters 833 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 834 200
penalty weights 10000.0
args.step pgd_anneal_iters 834 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 835 200
penalty weights 10000.0
args.step pgd_anneal_iters 835 600
dim_v 512
rho, theta 393 tensor(-9.5827e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 836 200
penalty weights 10000.0
args.step pgd_anneal_iters 836 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 837 200
penalty weights 10000.0
args.step pgd_anneal_iters 837 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 838 200
penalty weights 10000.0
args.step pgd_anneal_iters 838 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 839 200
penalty weights 10000.0
args.step pgd_anneal_iters 839 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 840 200
penalty weights 10000.0
args.step pgd_anneal_iters 840 600
dim_v 512
rho, theta 395 tensor(-1.4135e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 841 200
penalty weights 10000.0
args.step pgd_anneal_iters 841 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 842 200
penalty weights 10000.0
args.step pgd_anneal_iters 842 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 843 200
penalty weights 10000.0
args.step pgd_anneal_iters 843 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 844 200
penalty weights 10000.0
args.step pgd_anneal_iters 844 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 845 200
penalty weights 10000.0
args.step pgd_anneal_iters 845 600
dim_v 512
rho, theta 308 tensor(-1.9265e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 846 200
penalty weights 10000.0
args.step pgd_anneal_iters 846 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 847 200
penalty weights 10000.0
args.step pgd_anneal_iters 847 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 848 200
penalty weights 10000.0
args.step pgd_anneal_iters 848 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 849 200
penalty weights 10000.0
args.step pgd_anneal_iters 849 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 850 200
penalty weights 10000.0
args.step pgd_anneal_iters 850 600
dim_v 512
rho, theta 313 tensor(-2.7335e-08, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 851 200
penalty weights 10000.0
args.step pgd_anneal_iters 851 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 852 200
penalty weights 10000.0
args.step pgd_anneal_iters 852 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 853 200
penalty weights 10000.0
args.step pgd_anneal_iters 853 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 854 200
penalty weights 10000.0
args.step pgd_anneal_iters 854 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 855 200
penalty weights 10000.0
args.step pgd_anneal_iters 855 600
dim_v 512
rho, theta 370 tensor(2.3201e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 856 200
penalty weights 10000.0
args.step pgd_anneal_iters 856 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 857 200
penalty weights 10000.0
args.step pgd_anneal_iters 857 600
final projection at end of training
dim_v 512
rho, theta 357 tensor(4.1397e-06, device='cuda:0')
Epoch: [32][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm  29.88 ( 29.88)	train_acc   0.51 (  0.50)	train_minacc   0.47 (  0.50)	train_majacc   0.51 (  0.50)	train_corr   0.00 (  0.00)	l1 4.0177 (4.0177)	zero_count 0.0000 (36.1530)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.83it/s] 27%|##6       | 7/26 [00:00<00:00, 31.33it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.33it/s] 46%|####6     | 12/26 [00:00<00:00, 36.35it/s] 65%|######5   | 17/26 [00:00<00:00, 40.58it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.58it/s] 85%|########4 | 22/26 [00:00<00:00, 43.59it/s]100%|##########| 26/26 [00:00<00:00, 35.87it/s]
Test: [   0/  26]	Loss 0.653 (0.653)	test_acc   0.47 (  0.47)	test_minacc   0.41 (  0.41)	test_majacc   0.48 (  0.48)	Loss_d 0.653 (0.653)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.26 (  0.26)
Test: [  10/  26]	Loss 0.665 (0.657)	test_acc   0.49 (  0.51)	test_minacc   0.52 (  0.48)	test_majacc   0.49 (  0.51)	Loss_d 0.665 (0.657)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.52 (  0.48)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.24 (  0.23)
Test: [  20/  26]	Loss 0.647 (0.655)	test_acc   0.52 (  0.50)	test_minacc   0.57 (  0.49)	test_majacc   0.51 (  0.50)	Loss_d 0.647 (0.655)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.57 (  0.49)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.27 (  0.25)
Test: [  26/  26]	Loss 0.648 (0.655)	test_acc   0.51 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.51 (  0.50)	Loss_d 0.648 (0.655)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.28 (  0.25)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.24it/s]
Test: [  0/  1]	Loss 0.783 (0.783)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.783 (0.783)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.08 (  0.08)
Test: [  1/  1]	Loss 0.783 (0.783)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.783 (0.783)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.08 (  0.08)
Overall Timing[ 32/  1]	epoch_time 0.0398 (0.0430)	validation_time 0.0004 (0.0006)	train_time 0.0394 (0.0423)
record: (train_acc, test_acc) (0.7581000280976296, 0.6340000033378601)
last accs (train_acc, test_acc) (0.5000000085532665, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.49it/s] 12%|#1        | 3/26 [00:00<00:01, 12.46it/s] 27%|##6       | 7/26 [00:00<00:00, 21.42it/s] 38%|###8      | 10/26 [00:00<00:00, 23.17it/s] 50%|#####     | 13/26 [00:00<00:00, 24.04it/s] 65%|######5   | 17/26 [00:00<00:00, 27.64it/s] 77%|#######6  | 20/26 [00:00<00:00, 27.64it/s] 88%|########8 | 23/26 [00:00<00:00, 27.17it/s]100%|##########| 26/26 [00:01<00:00, 23.76it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 858 200
penalty weights 10000.0
args.step pgd_anneal_iters 858 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 859 200
penalty weights 10000.0
args.step pgd_anneal_iters 859 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 860 200
penalty weights 10000.0
args.step pgd_anneal_iters 860 600
dim_v 512
rho, theta 375 tensor(-4.9193e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 861 200
penalty weights 10000.0
args.step pgd_anneal_iters 861 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 862 200
penalty weights 10000.0
args.step pgd_anneal_iters 862 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 863 200
penalty weights 10000.0
args.step pgd_anneal_iters 863 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 864 200
penalty weights 10000.0
args.step pgd_anneal_iters 864 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 865 200
penalty weights 10000.0
args.step pgd_anneal_iters 865 600
dim_v 512
rho, theta 396 tensor(-1.2797e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 866 200
penalty weights 10000.0
args.step pgd_anneal_iters 866 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 867 200
penalty weights 10000.0
args.step pgd_anneal_iters 867 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 868 200
penalty weights 10000.0
args.step pgd_anneal_iters 868 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 869 200
penalty weights 10000.0
args.step pgd_anneal_iters 869 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 870 200
penalty weights 10000.0
args.step pgd_anneal_iters 870 600
dim_v 512
rho, theta 324 tensor(-2.0861e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 871 200
penalty weights 10000.0
args.step pgd_anneal_iters 871 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 872 200
penalty weights 10000.0
args.step pgd_anneal_iters 872 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 873 200
penalty weights 10000.0
args.step pgd_anneal_iters 873 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 874 200
penalty weights 10000.0
args.step pgd_anneal_iters 874 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 875 200
penalty weights 10000.0
args.step pgd_anneal_iters 875 600
dim_v 512
rho, theta 301 tensor(-4.7415e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 876 200
penalty weights 10000.0
args.step pgd_anneal_iters 876 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 877 200
penalty weights 10000.0
args.step pgd_anneal_iters 877 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 878 200
penalty weights 10000.0
args.step pgd_anneal_iters 878 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 879 200
penalty weights 10000.0
args.step pgd_anneal_iters 879 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 880 200
penalty weights 10000.0
args.step pgd_anneal_iters 880 600
dim_v 512
rho, theta 377 tensor(2.1653e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 881 200
penalty weights 10000.0
args.step pgd_anneal_iters 881 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 882 200
penalty weights 10000.0
args.step pgd_anneal_iters 882 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 883 200
penalty weights 10000.0
args.step pgd_anneal_iters 883 600
final projection at end of training
dim_v 512
rho, theta 356 tensor(8.9036e-06, device='cuda:0')
Epoch: [33][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm  29.88 ( 29.88)	train_acc   0.51 (  0.50)	train_minacc   0.47 (  0.50)	train_majacc   0.51 (  0.50)	train_corr   0.00 (  0.00)	l1 4.0198 (4.0175)	zero_count 0.0000 (36.5040)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.16it/s] 27%|##6       | 7/26 [00:00<00:00, 32.19it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.19it/s] 46%|####6     | 12/26 [00:00<00:00, 38.03it/s] 65%|######5   | 17/26 [00:00<00:00, 41.13it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.13it/s] 85%|########4 | 22/26 [00:00<00:00, 40.10it/s]100%|##########| 26/26 [00:00<00:00, 36.85it/s]
Test: [   0/  26]	Loss 0.653 (0.653)	test_acc   0.47 (  0.47)	test_minacc   0.41 (  0.41)	test_majacc   0.48 (  0.48)	Loss_d 0.653 (0.653)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.26 (  0.26)
Test: [  10/  26]	Loss 0.665 (0.657)	test_acc   0.49 (  0.51)	test_minacc   0.52 (  0.48)	test_majacc   0.49 (  0.51)	Loss_d 0.665 (0.657)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.52 (  0.48)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.24 (  0.23)
Test: [  20/  26]	Loss 0.648 (0.656)	test_acc   0.52 (  0.50)	test_minacc   0.57 (  0.49)	test_majacc   0.51 (  0.50)	Loss_d 0.648 (0.656)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.57 (  0.49)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.27 (  0.24)
Test: [  26/  26]	Loss 0.649 (0.655)	test_acc   0.51 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.51 (  0.50)	Loss_d 0.649 (0.655)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.28 (  0.25)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.02it/s]
Test: [  0/  1]	Loss 0.784 (0.784)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.784 (0.784)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.08 (  0.08)
Test: [  1/  1]	Loss 0.784 (0.784)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.784 (0.784)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.08 (  0.08)
Overall Timing[ 33/  1]	epoch_time 0.0402 (0.0429)	validation_time 0.0004 (0.0006)	train_time 0.0397 (0.0423)
record: (train_acc, test_acc) (0.7581000280976296, 0.6340000033378601)
last accs (train_acc, test_acc) (0.5000000085532665, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.02it/s] 23%|##3       | 6/26 [00:00<00:00, 26.02it/s] 38%|###8      | 10/26 [00:00<00:00, 29.85it/s] 54%|#####3    | 14/26 [00:00<00:00, 28.53it/s] 65%|######5   | 17/26 [00:00<00:00, 28.12it/s] 81%|########  | 21/26 [00:00<00:00, 30.43it/s] 96%|#########6| 25/26 [00:00<00:00, 29.35it/s]100%|##########| 26/26 [00:00<00:00, 27.13it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 884 200
penalty weights 10000.0
args.step pgd_anneal_iters 884 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 885 200
penalty weights 10000.0
args.step pgd_anneal_iters 885 600
dim_v 512
rho, theta 370 tensor(-1.7891e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 886 200
penalty weights 10000.0
args.step pgd_anneal_iters 886 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 887 200
penalty weights 10000.0
args.step pgd_anneal_iters 887 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 888 200
penalty weights 10000.0
args.step pgd_anneal_iters 888 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 889 200
penalty weights 10000.0
args.step pgd_anneal_iters 889 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 890 200
penalty weights 10000.0
args.step pgd_anneal_iters 890 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 891 200
penalty weights 10000.0
args.step pgd_anneal_iters 891 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 892 200
penalty weights 10000.0
args.step pgd_anneal_iters 892 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 893 200
penalty weights 10000.0
args.step pgd_anneal_iters 893 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 894 200
penalty weights 10000.0
args.step pgd_anneal_iters 894 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 895 200
penalty weights 10000.0
args.step pgd_anneal_iters 895 600
dim_v 512
rho, theta 365 tensor(-3.1047e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 896 200
penalty weights 10000.0
args.step pgd_anneal_iters 896 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 897 200
penalty weights 10000.0
args.step pgd_anneal_iters 897 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 898 200
penalty weights 10000.0
args.step pgd_anneal_iters 898 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 899 200
penalty weights 10000.0
args.step pgd_anneal_iters 899 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 900 200
penalty weights 10000.0
args.step pgd_anneal_iters 900 600
dim_v 512
rho, theta 300 tensor(-7.5217e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 901 200
penalty weights 10000.0
args.step pgd_anneal_iters 901 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 902 200
penalty weights 10000.0
args.step pgd_anneal_iters 902 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 903 200
penalty weights 10000.0
args.step pgd_anneal_iters 903 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 904 200
penalty weights 10000.0
args.step pgd_anneal_iters 904 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 905 200
penalty weights 10000.0
args.step pgd_anneal_iters 905 600
dim_v 512
rho, theta 389 tensor(1.2782e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 906 200
penalty weights 10000.0
args.step pgd_anneal_iters 906 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 907 200
penalty weights 10000.0
args.step pgd_anneal_iters 907 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 908 200
penalty weights 10000.0
args.step pgd_anneal_iters 908 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 909 200
penalty weights 10000.0
args.step pgd_anneal_iters 909 600
final projection at end of training
dim_v 512
rho, theta 355 tensor(1.5414e-05, device='cuda:0')
Epoch: [34][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm  29.88 ( 29.88)	train_acc   0.51 (  0.50)	train_minacc   0.47 (  0.50)	train_majacc   0.51 (  0.50)	train_corr   0.00 (  0.00)	l1 4.0229 (4.0175)	zero_count 0.0000 (30.2250)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.98it/s] 12%|#1        | 3/26 [00:00<00:01, 12.31it/s] 35%|###4      | 9/26 [00:00<00:00, 30.13it/s]                                               35%|###4      | 9/26 [00:00<00:00, 30.13it/s] 58%|#####7    | 15/26 [00:00<00:00, 37.10it/s]                                                58%|#####7    | 15/26 [00:00<00:00, 37.10it/s] 81%|########  | 21/26 [00:00<00:00, 42.01it/s]100%|##########| 26/26 [00:00<00:00, 34.55it/s]
Test: [   0/  26]	Loss 0.654 (0.654)	test_acc   0.47 (  0.47)	test_minacc   0.41 (  0.41)	test_majacc   0.48 (  0.48)	Loss_d 0.654 (0.654)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.26 (  0.26)
Test: [  10/  26]	Loss 0.665 (0.657)	test_acc   0.49 (  0.51)	test_minacc   0.52 (  0.48)	test_majacc   0.49 (  0.51)	Loss_d 0.665 (0.657)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.52 (  0.48)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.24 (  0.23)
Test: [  20/  26]	Loss 0.648 (0.656)	test_acc   0.52 (  0.50)	test_minacc   0.57 (  0.49)	test_majacc   0.51 (  0.50)	Loss_d 0.648 (0.656)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.57 (  0.49)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.27 (  0.24)
Test: [  26/  26]	Loss 0.649 (0.655)	test_acc   0.51 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.51 (  0.50)	Loss_d 0.649 (0.655)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.28 (  0.25)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 58.23it/s]
Test: [  0/  1]	Loss 0.785 (0.785)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.785 (0.785)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 0.785 (0.785)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.785 (0.785)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.09 (  0.09)
Overall Timing[ 34/  1]	epoch_time 0.0440 (0.0430)	validation_time 0.0007 (0.0006)	train_time 0.0433 (0.0423)
record: (train_acc, test_acc) (0.7581000280976296, 0.6340000033378601)
last accs (train_acc, test_acc) (0.5000000085532665, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.57it/s] 19%|#9        | 5/26 [00:00<00:01, 17.14it/s] 35%|###4      | 9/26 [00:00<00:00, 23.59it/s] 46%|####6     | 12/26 [00:00<00:00, 24.40it/s] 62%|######1   | 16/26 [00:00<00:00, 25.72it/s] 77%|#######6  | 20/26 [00:00<00:00, 28.32it/s] 88%|########8 | 23/26 [00:00<00:00, 27.50it/s]100%|##########| 26/26 [00:01<00:00, 27.49it/s]100%|##########| 26/26 [00:01<00:00, 23.34it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 910 200
penalty weights 10000.0
args.step pgd_anneal_iters 910 600
dim_v 512
rho, theta 355 tensor(-4.6880e-08, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 911 200
penalty weights 10000.0
args.step pgd_anneal_iters 911 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 912 200
penalty weights 10000.0
args.step pgd_anneal_iters 912 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 913 200
penalty weights 10000.0
args.step pgd_anneal_iters 913 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 914 200
penalty weights 10000.0
args.step pgd_anneal_iters 914 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 915 200
penalty weights 10000.0
args.step pgd_anneal_iters 915 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 916 200
penalty weights 10000.0
args.step pgd_anneal_iters 916 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 917 200
penalty weights 10000.0
args.step pgd_anneal_iters 917 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 918 200
penalty weights 10000.0
args.step pgd_anneal_iters 918 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 919 200
penalty weights 10000.0
args.step pgd_anneal_iters 919 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 920 200
penalty weights 10000.0
args.step pgd_anneal_iters 920 600
dim_v 512
rho, theta 376 tensor(-2.7393e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 921 200
penalty weights 10000.0
args.step pgd_anneal_iters 921 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 922 200
penalty weights 10000.0
args.step pgd_anneal_iters 922 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 923 200
penalty weights 10000.0
args.step pgd_anneal_iters 923 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 924 200
penalty weights 10000.0
args.step pgd_anneal_iters 924 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 925 200
penalty weights 10000.0
args.step pgd_anneal_iters 925 600
dim_v 512
rho, theta 295 tensor(-1.1454e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 926 200
penalty weights 10000.0
args.step pgd_anneal_iters 926 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 927 200
penalty weights 10000.0
args.step pgd_anneal_iters 927 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 928 200
penalty weights 10000.0
args.step pgd_anneal_iters 928 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 929 200
penalty weights 10000.0
args.step pgd_anneal_iters 929 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 930 200
penalty weights 10000.0
args.step pgd_anneal_iters 930 600
dim_v 512
rho, theta 390 tensor(8.3428e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 931 200
penalty weights 10000.0
args.step pgd_anneal_iters 931 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 932 200
penalty weights 10000.0
args.step pgd_anneal_iters 932 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 933 200
penalty weights 10000.0
args.step pgd_anneal_iters 933 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 934 200
penalty weights 10000.0
args.step pgd_anneal_iters 934 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 935 200
penalty weights 10000.0
args.step pgd_anneal_iters 935 600
dim_v 512
rho, theta 355 tensor(1.8969e-05, device='cuda:0')
final projection at end of training
dim_v 512
rho, theta 355 tensor(5.2238e-08, device='cuda:0')
Epoch: [35][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm  29.88 ( 29.88)	train_acc   0.51 (  0.50)	train_minacc   0.47 (  0.50)	train_majacc   0.51 (  0.50)	train_corr   0.00 (  0.00)	l1 4.0246 (4.0177)	zero_count 0.0000 (30.5760)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.77it/s] 23%|##3       | 6/26 [00:00<00:00, 25.11it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.11it/s] 42%|####2     | 11/26 [00:00<00:00, 33.16it/s] 65%|######5   | 17/26 [00:00<00:00, 38.75it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.75it/s] 88%|########8 | 23/26 [00:00<00:00, 43.04it/s]100%|##########| 26/26 [00:00<00:00, 34.94it/s]
Test: [   0/  26]	Loss 0.654 (0.654)	test_acc   0.47 (  0.47)	test_minacc   0.41 (  0.41)	test_majacc   0.48 (  0.48)	Loss_d 0.654 (0.654)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.26 (  0.26)
Test: [  10/  26]	Loss 0.665 (0.658)	test_acc   0.49 (  0.51)	test_minacc   0.52 (  0.48)	test_majacc   0.49 (  0.51)	Loss_d 0.665 (0.658)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.52 (  0.48)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.24 (  0.23)
Test: [  20/  26]	Loss 0.649 (0.656)	test_acc   0.52 (  0.50)	test_minacc   0.57 (  0.49)	test_majacc   0.51 (  0.50)	Loss_d 0.649 (0.656)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.57 (  0.49)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.27 (  0.24)
Test: [  26/  26]	Loss 0.649 (0.655)	test_acc   0.51 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.51 (  0.50)	Loss_d 0.649 (0.655)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.27 (  0.25)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.58it/s]
Test: [  0/  1]	Loss 0.785 (0.785)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.785 (0.785)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 0.785 (0.785)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.785 (0.785)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.09 (  0.09)
Overall Timing[ 35/  1]	epoch_time 0.0439 (0.0430)	validation_time 0.0004 (0.0006)	train_time 0.0435 (0.0423)
record: (train_acc, test_acc) (0.7581000280976296, 0.6340000033378601)
last accs (train_acc, test_acc) (0.5000000085532665, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.60it/s] 19%|#9        | 5/26 [00:00<00:01, 16.79it/s] 35%|###4      | 9/26 [00:00<00:00, 23.39it/s] 46%|####6     | 12/26 [00:00<00:00, 24.43it/s] 58%|#####7    | 15/26 [00:00<00:00, 25.54it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.85it/s] 85%|########4 | 22/26 [00:00<00:00, 28.86it/s] 96%|#########6| 25/26 [00:00<00:00, 28.41it/s]100%|##########| 26/26 [00:01<00:00, 24.20it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 936 200
penalty weights 10000.0
args.step pgd_anneal_iters 936 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 937 200
penalty weights 10000.0
args.step pgd_anneal_iters 937 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 938 200
penalty weights 10000.0
args.step pgd_anneal_iters 938 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 939 200
penalty weights 10000.0
args.step pgd_anneal_iters 939 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 940 200
penalty weights 10000.0
args.step pgd_anneal_iters 940 600
dim_v 512
rho, theta 390 tensor(-1.1514e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 941 200
penalty weights 10000.0
args.step pgd_anneal_iters 941 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 942 200
penalty weights 10000.0
args.step pgd_anneal_iters 942 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 943 200
penalty weights 10000.0
args.step pgd_anneal_iters 943 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 944 200
penalty weights 10000.0
args.step pgd_anneal_iters 944 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 945 200
penalty weights 10000.0
args.step pgd_anneal_iters 945 600
dim_v 512
rho, theta 376 tensor(-1.2536e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 946 200
penalty weights 10000.0
args.step pgd_anneal_iters 946 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 947 200
penalty weights 10000.0
args.step pgd_anneal_iters 947 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 948 200
penalty weights 10000.0
args.step pgd_anneal_iters 948 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 949 200
penalty weights 10000.0
args.step pgd_anneal_iters 949 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 950 200
penalty weights 10000.0
args.step pgd_anneal_iters 950 600
dim_v 512
rho, theta 293 tensor(-1.3814e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 951 200
penalty weights 10000.0
args.step pgd_anneal_iters 951 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 952 200
penalty weights 10000.0
args.step pgd_anneal_iters 952 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 953 200
penalty weights 10000.0
args.step pgd_anneal_iters 953 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 954 200
penalty weights 10000.0
args.step pgd_anneal_iters 954 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 955 200
penalty weights 10000.0
args.step pgd_anneal_iters 955 600
dim_v 512
rho, theta 311 tensor(2.9497e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 956 200
penalty weights 10000.0
args.step pgd_anneal_iters 956 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 957 200
penalty weights 10000.0
args.step pgd_anneal_iters 957 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 958 200
penalty weights 10000.0
args.step pgd_anneal_iters 958 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 959 200
penalty weights 10000.0
args.step pgd_anneal_iters 959 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 960 200
penalty weights 10000.0
args.step pgd_anneal_iters 960 600
dim_v 512
rho, theta 363 tensor(2.2804e-05, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 961 200
penalty weights 10000.0
args.step pgd_anneal_iters 961 600
final projection at end of training
dim_v 512
rho, theta 357 tensor(1.6649e-06, device='cuda:0')
Epoch: [36][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm  29.88 ( 29.88)	train_acc   0.51 (  0.50)	train_minacc   0.47 (  0.50)	train_majacc   0.51 (  0.50)	train_corr   0.00 (  0.00)	l1 4.0162 (4.0180)	zero_count 148.0000 (36.0700)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.71it/s] 23%|##3       | 6/26 [00:00<00:00, 27.09it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.09it/s] 42%|####2     | 11/26 [00:00<00:00, 34.88it/s] 62%|######1   | 16/26 [00:00<00:00, 39.18it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.18it/s] 81%|########  | 21/26 [00:00<00:00, 37.95it/s]100%|##########| 26/26 [00:00<00:00, 41.21it/s]100%|##########| 26/26 [00:00<00:00, 34.05it/s]
Test: [   0/  26]	Loss 0.654 (0.654)	test_acc   0.47 (  0.47)	test_minacc   0.41 (  0.41)	test_majacc   0.48 (  0.48)	Loss_d 0.654 (0.654)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.26 (  0.26)
Test: [  10/  26]	Loss 0.665 (0.658)	test_acc   0.49 (  0.51)	test_minacc   0.52 (  0.48)	test_majacc   0.49 (  0.51)	Loss_d 0.665 (0.658)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.52 (  0.48)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.23 (  0.23)
Test: [  20/  26]	Loss 0.649 (0.656)	test_acc   0.52 (  0.50)	test_minacc   0.57 (  0.49)	test_majacc   0.51 (  0.50)	Loss_d 0.649 (0.656)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.57 (  0.49)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.27 (  0.24)
Test: [  26/  26]	Loss 0.649 (0.656)	test_acc   0.51 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.51 (  0.50)	Loss_d 0.649 (0.656)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.27 (  0.25)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.39it/s]
Test: [  0/  1]	Loss 0.785 (0.785)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.785 (0.785)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 0.785 (0.785)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.785 (0.785)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.09 (  0.09)
Overall Timing[ 36/  1]	epoch_time 0.0412 (0.0430)	validation_time 0.0003 (0.0006)	train_time 0.0409 (0.0423)
record: (train_acc, test_acc) (0.7581000280976296, 0.6340000033378601)
last accs (train_acc, test_acc) (0.5000000085532665, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 23.01it/s] 23%|##3       | 6/26 [00:00<00:00, 25.20it/s] 35%|###4      | 9/26 [00:00<00:00, 25.77it/s] 50%|#####     | 13/26 [00:00<00:00, 29.63it/s] 62%|######1   | 16/26 [00:00<00:00, 29.38it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.82it/s] 88%|########8 | 23/26 [00:00<00:00, 31.04it/s]100%|##########| 26/26 [00:00<00:00, 27.24it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 962 200
penalty weights 10000.0
args.step pgd_anneal_iters 962 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 963 200
penalty weights 10000.0
args.step pgd_anneal_iters 963 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 964 200
penalty weights 10000.0
args.step pgd_anneal_iters 964 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 965 200
penalty weights 10000.0
args.step pgd_anneal_iters 965 600
dim_v 512
rho, theta 400 tensor(-7.6092e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 966 200
penalty weights 10000.0
args.step pgd_anneal_iters 966 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 967 200
penalty weights 10000.0
args.step pgd_anneal_iters 967 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 968 200
penalty weights 10000.0
args.step pgd_anneal_iters 968 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 969 200
penalty weights 10000.0
args.step pgd_anneal_iters 969 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 970 200
penalty weights 10000.0
args.step pgd_anneal_iters 970 600
dim_v 512
rho, theta 382 tensor(-1.0966e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 971 200
penalty weights 10000.0
args.step pgd_anneal_iters 971 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 972 200
penalty weights 10000.0
args.step pgd_anneal_iters 972 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 973 200
penalty weights 10000.0
args.step pgd_anneal_iters 973 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 974 200
penalty weights 10000.0
args.step pgd_anneal_iters 974 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 975 200
penalty weights 10000.0
args.step pgd_anneal_iters 975 600
dim_v 512
rho, theta 297 tensor(-1.5452e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 976 200
penalty weights 10000.0
args.step pgd_anneal_iters 976 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 977 200
penalty weights 10000.0
args.step pgd_anneal_iters 977 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 978 200
penalty weights 10000.0
args.step pgd_anneal_iters 978 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 979 200
penalty weights 10000.0
args.step pgd_anneal_iters 979 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 980 200
penalty weights 10000.0
args.step pgd_anneal_iters 980 600
dim_v 512
rho, theta 303 tensor(1.0023e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 981 200
penalty weights 10000.0
args.step pgd_anneal_iters 981 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 982 200
penalty weights 10000.0
args.step pgd_anneal_iters 982 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 983 200
penalty weights 10000.0
args.step pgd_anneal_iters 983 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 984 200
penalty weights 10000.0
args.step pgd_anneal_iters 984 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 985 200
penalty weights 10000.0
args.step pgd_anneal_iters 985 600
dim_v 512
rho, theta 370 tensor(1.9891e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 986 200
penalty weights 10000.0
args.step pgd_anneal_iters 986 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 987 200
penalty weights 10000.0
args.step pgd_anneal_iters 987 600
final projection at end of training
dim_v 512
rho, theta 355 tensor(4.6492e-06, device='cuda:0')
Epoch: [37][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm  29.88 ( 29.88)	train_acc   0.51 (  0.50)	train_minacc   0.47 (  0.50)	train_majacc   0.51 (  0.50)	train_corr   0.00 (  0.00)	l1 4.0177 (4.0175)	zero_count 0.0000 (37.3230)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.38it/s] 31%|###       | 8/26 [00:00<00:00, 28.42it/s]                                               31%|###       | 8/26 [00:00<00:00, 28.42it/s] 50%|#####     | 13/26 [00:00<00:00, 33.71it/s] 73%|#######3  | 19/26 [00:00<00:00, 40.92it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 40.92it/s] 96%|#########6| 25/26 [00:00<00:00, 43.05it/s]100%|##########| 26/26 [00:00<00:00, 33.98it/s]
Test: [   0/  26]	Loss 0.654 (0.654)	test_acc   0.47 (  0.47)	test_minacc   0.41 (  0.41)	test_majacc   0.48 (  0.48)	Loss_d 0.654 (0.654)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.26 (  0.26)
Test: [  10/  26]	Loss 0.665 (0.658)	test_acc   0.49 (  0.51)	test_minacc   0.52 (  0.48)	test_majacc   0.49 (  0.51)	Loss_d 0.665 (0.658)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.52 (  0.48)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.23 (  0.23)
Test: [  20/  26]	Loss 0.649 (0.657)	test_acc   0.52 (  0.50)	test_minacc   0.57 (  0.49)	test_majacc   0.51 (  0.50)	Loss_d 0.649 (0.657)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.57 (  0.49)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.26 (  0.24)
Test: [  26/  26]	Loss 0.649 (0.656)	test_acc   0.51 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.51 (  0.50)	Loss_d 0.649 (0.656)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.27 (  0.25)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.17it/s]
Test: [  0/  1]	Loss 0.786 (0.786)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.786 (0.786)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 0.786 (0.786)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.786 (0.786)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.09 (  0.09)
Overall Timing[ 37/  1]	epoch_time 0.0433 (0.0430)	validation_time 0.0004 (0.0006)	train_time 0.0429 (0.0423)
record: (train_acc, test_acc) (0.7581000280976296, 0.6340000033378601)
last accs (train_acc, test_acc) (0.5000000085532665, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.79it/s] 15%|#5        | 4/26 [00:00<00:01, 14.18it/s] 31%|###       | 8/26 [00:00<00:00, 20.23it/s] 46%|####6     | 12/26 [00:00<00:00, 24.96it/s] 58%|#####7    | 15/26 [00:00<00:00, 25.64it/s] 69%|######9   | 18/26 [00:00<00:00, 26.45it/s] 85%|########4 | 22/26 [00:00<00:00, 29.13it/s] 96%|#########6| 25/26 [00:01<00:00, 28.36it/s]100%|##########| 26/26 [00:01<00:00, 23.57it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 988 200
penalty weights 10000.0
args.step pgd_anneal_iters 988 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 989 200
penalty weights 10000.0
args.step pgd_anneal_iters 989 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 990 200
penalty weights 10000.0
args.step pgd_anneal_iters 990 600
dim_v 512
rho, theta 381 tensor(-3.1331e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 991 200
penalty weights 10000.0
args.step pgd_anneal_iters 991 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 992 200
penalty weights 10000.0
args.step pgd_anneal_iters 992 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 993 200
penalty weights 10000.0
args.step pgd_anneal_iters 993 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 994 200
penalty weights 10000.0
args.step pgd_anneal_iters 994 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 995 200
penalty weights 10000.0
args.step pgd_anneal_iters 995 600
dim_v 512
rho, theta 394 tensor(-9.5730e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 996 200
penalty weights 10000.0
args.step pgd_anneal_iters 996 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 997 200
penalty weights 10000.0
args.step pgd_anneal_iters 997 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 998 200
penalty weights 10000.0
args.step pgd_anneal_iters 998 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 999 200
penalty weights 10000.0
args.step pgd_anneal_iters 999 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1000 200
penalty weights 10000.0
args.step pgd_anneal_iters 1000 600
dim_v 512
rho, theta 307 tensor(-1.7440e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1001 200
penalty weights 10000.0
args.step pgd_anneal_iters 1001 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1002 200
penalty weights 10000.0
args.step pgd_anneal_iters 1002 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1003 200
penalty weights 10000.0
args.step pgd_anneal_iters 1003 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1004 200
penalty weights 10000.0
args.step pgd_anneal_iters 1004 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1005 200
penalty weights 10000.0
args.step pgd_anneal_iters 1005 600
dim_v 512
rho, theta 292 tensor(-2.9896e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1006 200
penalty weights 10000.0
args.step pgd_anneal_iters 1006 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1007 200
penalty weights 10000.0
args.step pgd_anneal_iters 1007 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1008 200
penalty weights 10000.0
args.step pgd_anneal_iters 1008 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1009 200
penalty weights 10000.0
args.step pgd_anneal_iters 1009 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1010 200
penalty weights 10000.0
args.step pgd_anneal_iters 1010 600
dim_v 512
rho, theta 380 tensor(1.7513e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1011 200
penalty weights 10000.0
args.step pgd_anneal_iters 1011 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1012 200
penalty weights 10000.0
args.step pgd_anneal_iters 1012 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1013 200
penalty weights 10000.0
args.step pgd_anneal_iters 1013 600
final projection at end of training
dim_v 512
rho, theta 356 tensor(9.1320e-06, device='cuda:0')
Epoch: [38][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  29.88 ( 29.88)	train_acc   0.51 (  0.50)	train_minacc   0.47 (  0.50)	train_majacc   0.51 (  0.50)	train_corr   0.00 (  0.00)	l1 4.0197 (4.0173)	zero_count 0.0000 (37.3230)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.07it/s] 19%|#9        | 5/26 [00:00<00:00, 21.60it/s] 38%|###8      | 10/26 [00:00<00:00, 29.12it/s]                                                38%|###8      | 10/26 [00:00<00:00, 29.12it/s] 58%|#####7    | 15/26 [00:00<00:00, 35.10it/s] 77%|#######6  | 20/26 [00:00<00:00, 38.68it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 38.68it/s] 96%|#########6| 25/26 [00:00<00:00, 41.23it/s]100%|##########| 26/26 [00:00<00:00, 33.06it/s]
Test: [   0/  26]	Loss 0.654 (0.654)	test_acc   0.47 (  0.47)	test_minacc   0.41 (  0.41)	test_majacc   0.48 (  0.48)	Loss_d 0.654 (0.654)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.25 (  0.25)
Test: [  10/  26]	Loss 0.665 (0.658)	test_acc   0.49 (  0.51)	test_minacc   0.52 (  0.48)	test_majacc   0.49 (  0.51)	Loss_d 0.665 (0.658)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.52 (  0.48)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.23 (  0.23)
Test: [  20/  26]	Loss 0.650 (0.657)	test_acc   0.52 (  0.50)	test_minacc   0.57 (  0.49)	test_majacc   0.51 (  0.50)	Loss_d 0.650 (0.657)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.57 (  0.49)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.26 (  0.24)
Test: [  26/  26]	Loss 0.649 (0.656)	test_acc   0.51 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.51 (  0.50)	Loss_d 0.649 (0.656)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.27 (  0.24)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.34it/s]
Test: [  0/  1]	Loss 0.787 (0.787)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.787 (0.787)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 0.787 (0.787)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.787 (0.787)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.09 (  0.09)
Overall Timing[ 38/  1]	epoch_time 0.0476 (0.0431)	validation_time 0.0004 (0.0006)	train_time 0.0471 (0.0424)
record: (train_acc, test_acc) (0.7581000280976296, 0.6340000033378601)
last accs (train_acc, test_acc) (0.5000000085532665, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.75it/s] 23%|##3       | 6/26 [00:00<00:00, 27.03it/s] 35%|###4      | 9/26 [00:00<00:00, 26.08it/s] 46%|####6     | 12/26 [00:00<00:00, 26.43it/s] 62%|######1   | 16/26 [00:00<00:00, 29.62it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.00it/s] 85%|########4 | 22/26 [00:00<00:00, 28.41it/s]100%|##########| 26/26 [00:00<00:00, 31.51it/s]100%|##########| 26/26 [00:00<00:00, 27.34it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1014 200
penalty weights 10000.0
args.step pgd_anneal_iters 1014 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1015 200
penalty weights 10000.0
args.step pgd_anneal_iters 1015 600
dim_v 512
rho, theta 355 tensor(-5.2506e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1016 200
penalty weights 10000.0
args.step pgd_anneal_iters 1016 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1017 200
penalty weights 10000.0
args.step pgd_anneal_iters 1017 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1018 200
penalty weights 10000.0
args.step pgd_anneal_iters 1018 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1019 200
penalty weights 10000.0
args.step pgd_anneal_iters 1019 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1020 200
penalty weights 10000.0
args.step pgd_anneal_iters 1020 600
dim_v 512
rho, theta 401 tensor(-8.4443e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1021 200
penalty weights 10000.0
args.step pgd_anneal_iters 1021 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1022 200
penalty weights 10000.0
args.step pgd_anneal_iters 1022 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1023 200
penalty weights 10000.0
args.step pgd_anneal_iters 1023 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1024 200
penalty weights 10000.0
args.step pgd_anneal_iters 1024 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1025 200
penalty weights 10000.0
args.step pgd_anneal_iters 1025 600
dim_v 512
rho, theta 357 tensor(-1.7472e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1026 200
penalty weights 10000.0
args.step pgd_anneal_iters 1026 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1027 200
penalty weights 10000.0
args.step pgd_anneal_iters 1027 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1028 200
penalty weights 10000.0
args.step pgd_anneal_iters 1028 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1029 200
penalty weights 10000.0
args.step pgd_anneal_iters 1029 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1030 200
penalty weights 10000.0
args.step pgd_anneal_iters 1030 600
dim_v 512
rho, theta 290 tensor(-5.7876e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1031 200
penalty weights 10000.0
args.step pgd_anneal_iters 1031 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1032 200
penalty weights 10000.0
args.step pgd_anneal_iters 1032 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1033 200
penalty weights 10000.0
args.step pgd_anneal_iters 1033 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1034 200
penalty weights 10000.0
args.step pgd_anneal_iters 1034 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1035 200
penalty weights 10000.0
args.step pgd_anneal_iters 1035 600
dim_v 512
rho, theta 392 tensor(9.9638e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1036 200
penalty weights 10000.0
args.step pgd_anneal_iters 1036 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1037 200
penalty weights 10000.0
args.step pgd_anneal_iters 1037 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1038 200
penalty weights 10000.0
args.step pgd_anneal_iters 1038 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1039 200
penalty weights 10000.0
args.step pgd_anneal_iters 1039 600
final projection at end of training
dim_v 512
rho, theta 352 tensor(1.5020e-05, device='cuda:0')
Epoch: [39][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  29.88 ( 29.88)	train_acc   0.51 (  0.50)	train_minacc   0.47 (  0.50)	train_majacc   0.51 (  0.50)	train_corr   0.00 (  0.00)	l1 4.0225 (4.0173)	zero_count 0.0000 (35.6850)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.23it/s] 15%|#5        | 4/26 [00:00<00:01, 18.11it/s] 35%|###4      | 9/26 [00:00<00:00, 30.19it/s]                                               35%|###4      | 9/26 [00:00<00:00, 30.19it/s] 54%|#####3    | 14/26 [00:00<00:00, 36.40it/s] 73%|#######3  | 19/26 [00:00<00:00, 39.78it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 39.78it/s] 92%|#########2| 24/26 [00:00<00:00, 39.17it/s]100%|##########| 26/26 [00:00<00:00, 32.63it/s]
Test: [   0/  26]	Loss 0.654 (0.654)	test_acc   0.47 (  0.47)	test_minacc   0.41 (  0.41)	test_majacc   0.48 (  0.48)	Loss_d 0.654 (0.654)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.25 (  0.25)
Test: [  10/  26]	Loss 0.665 (0.658)	test_acc   0.49 (  0.51)	test_minacc   0.52 (  0.48)	test_majacc   0.49 (  0.51)	Loss_d 0.665 (0.658)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.52 (  0.48)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.23 (  0.23)
Test: [  20/  26]	Loss 0.650 (0.657)	test_acc   0.52 (  0.50)	test_minacc   0.57 (  0.49)	test_majacc   0.51 (  0.50)	Loss_d 0.650 (0.657)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.57 (  0.49)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.26 (  0.24)
Test: [  26/  26]	Loss 0.649 (0.656)	test_acc   0.51 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.51 (  0.50)	Loss_d 0.649 (0.656)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.27 (  0.24)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.10it/s]
Test: [  0/  1]	Loss 0.787 (0.787)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.787 (0.787)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 0.787 (0.787)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.787 (0.787)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.09 (  0.09)
Overall Timing[ 39/  1]	epoch_time 0.0471 (0.0432)	validation_time 0.0004 (0.0006)	train_time 0.0466 (0.0425)
record: (train_acc, test_acc) (0.7581000280976296, 0.6340000033378601)
last accs (train_acc, test_acc) (0.5000000085532665, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.97it/s] 19%|#9        | 5/26 [00:00<00:01, 19.60it/s] 31%|###       | 8/26 [00:00<00:00, 22.31it/s] 42%|####2     | 11/26 [00:00<00:00, 23.80it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.56it/s] 69%|######9   | 18/26 [00:00<00:00, 27.92it/s] 81%|########  | 21/26 [00:00<00:00, 27.42it/s] 96%|#########6| 25/26 [00:00<00:00, 29.69it/s]100%|##########| 26/26 [00:01<00:00, 24.06it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1040 200
penalty weights 10000.0
args.step pgd_anneal_iters 1040 600
dim_v 512
rho, theta 350 tensor(6.9284e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1041 200
penalty weights 10000.0
args.step pgd_anneal_iters 1041 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1042 200
penalty weights 10000.0
args.step pgd_anneal_iters 1042 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1043 200
penalty weights 10000.0
args.step pgd_anneal_iters 1043 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1044 200
penalty weights 10000.0
args.step pgd_anneal_iters 1044 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1045 200
penalty weights 10000.0
args.step pgd_anneal_iters 1045 600
dim_v 512
rho, theta 397 tensor(-8.8886e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1046 200
penalty weights 10000.0
args.step pgd_anneal_iters 1046 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1047 200
penalty weights 10000.0
args.step pgd_anneal_iters 1047 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1048 200
penalty weights 10000.0
args.step pgd_anneal_iters 1048 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1049 200
penalty weights 10000.0
args.step pgd_anneal_iters 1049 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1050 200
penalty weights 10000.0
args.step pgd_anneal_iters 1050 600
dim_v 512
rho, theta 379 tensor(-1.1690e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1051 200
penalty weights 10000.0
args.step pgd_anneal_iters 1051 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1052 200
penalty weights 10000.0
args.step pgd_anneal_iters 1052 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1053 200
penalty weights 10000.0
args.step pgd_anneal_iters 1053 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1054 200
penalty weights 10000.0
args.step pgd_anneal_iters 1054 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1055 200
penalty weights 10000.0
args.step pgd_anneal_iters 1055 600
dim_v 512
rho, theta 290 tensor(-1.0395e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1056 200
penalty weights 10000.0
args.step pgd_anneal_iters 1056 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1057 200
penalty weights 10000.0
args.step pgd_anneal_iters 1057 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1058 200
penalty weights 10000.0
args.step pgd_anneal_iters 1058 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1059 200
penalty weights 10000.0
args.step pgd_anneal_iters 1059 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1060 200
penalty weights 10000.0
args.step pgd_anneal_iters 1060 600
dim_v 512
rho, theta 387 tensor(6.3550e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1061 200
penalty weights 10000.0
args.step pgd_anneal_iters 1061 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1062 200
penalty weights 10000.0
args.step pgd_anneal_iters 1062 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1063 200
penalty weights 10000.0
args.step pgd_anneal_iters 1063 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1064 200
penalty weights 10000.0
args.step pgd_anneal_iters 1064 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1065 200
penalty weights 10000.0
args.step pgd_anneal_iters 1065 600
dim_v 512
rho, theta 353 tensor(1.7647e-05, device='cuda:0')
final projection at end of training
dim_v 512
rho, theta 353 tensor(4.9839e-08, device='cuda:0')
Epoch: [40][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  29.88 ( 29.88)	train_acc   0.51 (  0.50)	train_minacc   0.47 (  0.50)	train_majacc   0.51 (  0.50)	train_corr   0.00 (  0.00)	l1 4.0239 (4.0175)	zero_count 0.0000 (35.5290)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.19it/s] 27%|##6       | 7/26 [00:00<00:00, 34.95it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.95it/s] 46%|####6     | 12/26 [00:00<00:00, 40.43it/s] 65%|######5   | 17/26 [00:00<00:00, 43.29it/s]                                                65%|######5   | 17/26 [00:00<00:00, 43.29it/s] 85%|########4 | 22/26 [00:00<00:00, 40.54it/s]100%|##########| 26/26 [00:00<00:00, 37.52it/s]
Test: [   0/  26]	Loss 0.654 (0.654)	test_acc   0.47 (  0.47)	test_minacc   0.41 (  0.41)	test_majacc   0.48 (  0.48)	Loss_d 0.654 (0.654)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.25 (  0.25)
Test: [  10/  26]	Loss 0.665 (0.658)	test_acc   0.49 (  0.51)	test_minacc   0.52 (  0.48)	test_majacc   0.49 (  0.51)	Loss_d 0.665 (0.658)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.52 (  0.48)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.23 (  0.23)
Test: [  20/  26]	Loss 0.650 (0.657)	test_acc   0.52 (  0.50)	test_minacc   0.57 (  0.49)	test_majacc   0.51 (  0.50)	Loss_d 0.650 (0.657)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.57 (  0.49)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.26 (  0.24)
Test: [  26/  26]	Loss 0.650 (0.656)	test_acc   0.51 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.51 (  0.50)	Loss_d 0.650 (0.656)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.27 (  0.24)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.24it/s]
Test: [  0/  1]	Loss 0.788 (0.788)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.788 (0.788)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 0.788 (0.788)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.788 (0.788)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.09 (  0.09)
Overall Timing[ 40/  1]	epoch_time 0.0432 (0.0432)	validation_time 0.0007 (0.0006)	train_time 0.0425 (0.0425)
record: (train_acc, test_acc) (0.7581000280976296, 0.6340000033378601)
last accs (train_acc, test_acc) (0.5000000085532665, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.32it/s] 12%|#1        | 3/26 [00:00<00:02, 10.47it/s] 23%|##3       | 6/26 [00:00<00:01, 16.12it/s] 38%|###8      | 10/26 [00:00<00:00, 20.59it/s] 54%|#####3    | 14/26 [00:00<00:00, 24.95it/s] 65%|######5   | 17/26 [00:00<00:00, 24.25it/s] 77%|#######6  | 20/26 [00:00<00:00, 25.49it/s] 92%|#########2| 24/26 [00:01<00:00, 28.51it/s]100%|##########| 26/26 [00:01<00:00, 21.93it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1066 200
penalty weights 10000.0
args.step pgd_anneal_iters 1066 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1067 200
penalty weights 10000.0
args.step pgd_anneal_iters 1067 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1068 200
penalty weights 10000.0
args.step pgd_anneal_iters 1068 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1069 200
penalty weights 10000.0
args.step pgd_anneal_iters 1069 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1070 200
penalty weights 10000.0
args.step pgd_anneal_iters 1070 600
dim_v 512
rho, theta 387 tensor(-7.1046e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1071 200
penalty weights 10000.0
args.step pgd_anneal_iters 1071 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1072 200
penalty weights 10000.0
args.step pgd_anneal_iters 1072 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1073 200
penalty weights 10000.0
args.step pgd_anneal_iters 1073 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1074 200
penalty weights 10000.0
args.step pgd_anneal_iters 1074 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1075 200
penalty weights 10000.0
args.step pgd_anneal_iters 1075 600
dim_v 512
rho, theta 379 tensor(-8.7600e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1076 200
penalty weights 10000.0
args.step pgd_anneal_iters 1076 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1077 200
penalty weights 10000.0
args.step pgd_anneal_iters 1077 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1078 200
penalty weights 10000.0
args.step pgd_anneal_iters 1078 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1079 200
penalty weights 10000.0
args.step pgd_anneal_iters 1079 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1080 200
penalty weights 10000.0
args.step pgd_anneal_iters 1080 600
dim_v 512
rho, theta 292 tensor(-1.2372e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1081 200
penalty weights 10000.0
args.step pgd_anneal_iters 1081 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1082 200
penalty weights 10000.0
args.step pgd_anneal_iters 1082 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1083 200
penalty weights 10000.0
args.step pgd_anneal_iters 1083 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1084 200
penalty weights 10000.0
args.step pgd_anneal_iters 1084 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1085 200
penalty weights 10000.0
args.step pgd_anneal_iters 1085 600
dim_v 512
rho, theta 299 tensor(2.0695e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1086 200
penalty weights 10000.0
args.step pgd_anneal_iters 1086 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1087 200
penalty weights 10000.0
args.step pgd_anneal_iters 1087 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1088 200
penalty weights 10000.0
args.step pgd_anneal_iters 1088 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1089 200
penalty weights 10000.0
args.step pgd_anneal_iters 1089 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1090 200
penalty weights 10000.0
args.step pgd_anneal_iters 1090 600
dim_v 512
rho, theta 358 tensor(1.9866e-05, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1091 200
penalty weights 10000.0
args.step pgd_anneal_iters 1091 600
final projection at end of training
dim_v 512
rho, theta 357 tensor(1.8194e-06, device='cuda:0')
Epoch: [41][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  29.88 ( 29.88)	train_acc   0.51 (  0.50)	train_minacc   0.47 (  0.50)	train_majacc   0.51 (  0.50)	train_corr   0.00 (  0.00)	l1 4.0162 (4.0177)	zero_count 153.0000 (36.7800)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.31it/s] 15%|#5        | 4/26 [00:00<00:02, 10.44it/s] 35%|###4      | 9/26 [00:00<00:00, 21.94it/s]                                               35%|###4      | 9/26 [00:00<00:00, 21.94it/s] 54%|#####3    | 14/26 [00:00<00:00, 29.52it/s] 73%|#######3  | 19/26 [00:00<00:00, 32.21it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 32.21it/s] 96%|#########6| 25/26 [00:00<00:00, 37.79it/s]100%|##########| 26/26 [00:00<00:00, 28.91it/s]
Test: [   0/  26]	Loss 0.654 (0.654)	test_acc   0.47 (  0.47)	test_minacc   0.41 (  0.41)	test_majacc   0.48 (  0.48)	Loss_d 0.654 (0.654)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.25 (  0.25)
Test: [  10/  26]	Loss 0.665 (0.658)	test_acc   0.49 (  0.51)	test_minacc   0.52 (  0.48)	test_majacc   0.49 (  0.51)	Loss_d 0.665 (0.658)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.52 (  0.48)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.23 (  0.23)
Test: [  20/  26]	Loss 0.650 (0.657)	test_acc   0.52 (  0.50)	test_minacc   0.57 (  0.49)	test_majacc   0.51 (  0.50)	Loss_d 0.650 (0.657)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.57 (  0.49)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.26 (  0.24)
Test: [  26/  26]	Loss 0.650 (0.656)	test_acc   0.51 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.51 (  0.50)	Loss_d 0.650 (0.656)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.27 (  0.24)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.80it/s]
Test: [  0/  1]	Loss 0.788 (0.788)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.788 (0.788)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 0.788 (0.788)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.788 (0.788)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.09 (  0.09)
Overall Timing[ 41/  1]	epoch_time 0.0475 (0.0433)	validation_time 0.0004 (0.0006)	train_time 0.0470 (0.0426)
record: (train_acc, test_acc) (0.7581000280976296, 0.6340000033378601)
last accs (train_acc, test_acc) (0.5000000085532665, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.79it/s] 15%|#5        | 4/26 [00:00<00:01, 12.31it/s] 31%|###       | 8/26 [00:00<00:00, 20.19it/s] 42%|####2     | 11/26 [00:00<00:00, 21.99it/s] 54%|#####3    | 14/26 [00:00<00:00, 23.76it/s] 69%|######9   | 18/26 [00:00<00:00, 27.38it/s] 81%|########  | 21/26 [00:00<00:00, 27.54it/s] 92%|#########2| 24/26 [00:01<00:00, 27.36it/s]100%|##########| 26/26 [00:01<00:00, 22.18it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1092 200
penalty weights 10000.0
args.step pgd_anneal_iters 1092 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1093 200
penalty weights 10000.0
args.step pgd_anneal_iters 1093 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1094 200
penalty weights 10000.0
args.step pgd_anneal_iters 1094 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1095 200
penalty weights 10000.0
args.step pgd_anneal_iters 1095 600
dim_v 512
rho, theta 389 tensor(-4.5189e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1096 200
penalty weights 10000.0
args.step pgd_anneal_iters 1096 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1097 200
penalty weights 10000.0
args.step pgd_anneal_iters 1097 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1098 200
penalty weights 10000.0
args.step pgd_anneal_iters 1098 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1099 200
penalty weights 10000.0
args.step pgd_anneal_iters 1099 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1100 200
penalty weights 10000.0
args.step pgd_anneal_iters 1100 600
dim_v 512
rho, theta 384 tensor(-7.3408e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1101 200
penalty weights 10000.0
args.step pgd_anneal_iters 1101 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1102 200
penalty weights 10000.0
args.step pgd_anneal_iters 1102 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1103 200
penalty weights 10000.0
args.step pgd_anneal_iters 1103 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1104 200
penalty weights 10000.0
args.step pgd_anneal_iters 1104 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1105 200
penalty weights 10000.0
args.step pgd_anneal_iters 1105 600
dim_v 512
rho, theta 299 tensor(-1.3781e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1106 200
penalty weights 10000.0
args.step pgd_anneal_iters 1106 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1107 200
penalty weights 10000.0
args.step pgd_anneal_iters 1107 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1108 200
penalty weights 10000.0
args.step pgd_anneal_iters 1108 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1109 200
penalty weights 10000.0
args.step pgd_anneal_iters 1109 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1110 200
penalty weights 10000.0
args.step pgd_anneal_iters 1110 600
dim_v 512
rho, theta 296 tensor(3.8051e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1111 200
penalty weights 10000.0
args.step pgd_anneal_iters 1111 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1112 200
penalty weights 10000.0
args.step pgd_anneal_iters 1112 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1113 200
penalty weights 10000.0
args.step pgd_anneal_iters 1113 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1114 200
penalty weights 10000.0
args.step pgd_anneal_iters 1114 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1115 200
penalty weights 10000.0
args.step pgd_anneal_iters 1115 600
dim_v 512
rho, theta 370 tensor(1.6634e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1116 200
penalty weights 10000.0
args.step pgd_anneal_iters 1116 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1117 200
penalty weights 10000.0
args.step pgd_anneal_iters 1117 600
final projection at end of training
dim_v 512
rho, theta 355 tensor(4.8273e-06, device='cuda:0')
Epoch: [42][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  29.88 ( 29.88)	train_acc   0.51 (  0.50)	train_minacc   0.47 (  0.50)	train_majacc   0.51 (  0.50)	train_corr   0.00 (  0.00)	l1 4.0177 (4.0173)	zero_count 0.0000 (37.8690)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.89it/s] 23%|##3       | 6/26 [00:00<00:01, 19.24it/s]                                               23%|##3       | 6/26 [00:00<00:01, 19.24it/s] 46%|####6     | 12/26 [00:00<00:00, 30.97it/s] 65%|######5   | 17/26 [00:00<00:00, 35.39it/s]                                                65%|######5   | 17/26 [00:00<00:00, 35.39it/s] 85%|########4 | 22/26 [00:00<00:00, 39.23it/s]100%|##########| 26/26 [00:00<00:00, 30.15it/s]
Test: [   0/  26]	Loss 0.654 (0.654)	test_acc   0.47 (  0.47)	test_minacc   0.41 (  0.41)	test_majacc   0.48 (  0.48)	Loss_d 0.654 (0.654)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.25 (  0.25)
Test: [  10/  26]	Loss 0.665 (0.658)	test_acc   0.49 (  0.51)	test_minacc   0.52 (  0.48)	test_majacc   0.49 (  0.51)	Loss_d 0.665 (0.658)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.52 (  0.48)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.23 (  0.23)
Test: [  20/  26]	Loss 0.651 (0.657)	test_acc   0.52 (  0.50)	test_minacc   0.57 (  0.49)	test_majacc   0.51 (  0.50)	Loss_d 0.651 (0.657)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.57 (  0.49)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.26 (  0.24)
Test: [  26/  26]	Loss 0.649 (0.656)	test_acc   0.51 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.51 (  0.50)	Loss_d 0.649 (0.656)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.27 (  0.24)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.88it/s]
Test: [  0/  1]	Loss 0.789 (0.789)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.789 (0.789)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 0.789 (0.789)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.789 (0.789)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.09 (  0.09)
Overall Timing[ 42/  1]	epoch_time 0.0444 (0.0433)	validation_time 0.0004 (0.0006)	train_time 0.0439 (0.0427)
record: (train_acc, test_acc) (0.7581000280976296, 0.6340000033378601)
last accs (train_acc, test_acc) (0.5000000085532665, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.13it/s] 15%|#5        | 4/26 [00:00<00:01, 14.68it/s] 31%|###       | 8/26 [00:00<00:00, 20.91it/s] 46%|####6     | 12/26 [00:00<00:00, 26.35it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.10it/s] 69%|######9   | 18/26 [00:00<00:00, 26.62it/s] 85%|########4 | 22/26 [00:00<00:00, 30.36it/s]100%|##########| 26/26 [00:01<00:00, 30.69it/s]100%|##########| 26/26 [00:01<00:00, 24.33it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1118 200
penalty weights 10000.0
args.step pgd_anneal_iters 1118 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1119 200
penalty weights 10000.0
args.step pgd_anneal_iters 1119 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1120 200
penalty weights 10000.0
args.step pgd_anneal_iters 1120 600
dim_v 512
rho, theta 352 tensor(-9.4287e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1121 200
penalty weights 10000.0
args.step pgd_anneal_iters 1121 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1122 200
penalty weights 10000.0
args.step pgd_anneal_iters 1122 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1123 200
penalty weights 10000.0
args.step pgd_anneal_iters 1123 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1124 200
penalty weights 10000.0
args.step pgd_anneal_iters 1124 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1125 200
penalty weights 10000.0
args.step pgd_anneal_iters 1125 600
dim_v 512
rho, theta 388 tensor(-6.2136e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1126 200
penalty weights 10000.0
args.step pgd_anneal_iters 1126 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1127 200
penalty weights 10000.0
args.step pgd_anneal_iters 1127 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1128 200
penalty weights 10000.0
args.step pgd_anneal_iters 1128 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1129 200
penalty weights 10000.0
args.step pgd_anneal_iters 1129 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1130 200
penalty weights 10000.0
args.step pgd_anneal_iters 1130 600
dim_v 512
rho, theta 314 tensor(-1.5100e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1131 200
penalty weights 10000.0
args.step pgd_anneal_iters 1131 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1132 200
penalty weights 10000.0
args.step pgd_anneal_iters 1132 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1133 200
penalty weights 10000.0
args.step pgd_anneal_iters 1133 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1134 200
penalty weights 10000.0
args.step pgd_anneal_iters 1134 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1135 200
penalty weights 10000.0
args.step pgd_anneal_iters 1135 600
dim_v 512
rho, theta 285 tensor(-2.9060e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1136 200
penalty weights 10000.0
args.step pgd_anneal_iters 1136 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1137 200
penalty weights 10000.0
args.step pgd_anneal_iters 1137 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1138 200
penalty weights 10000.0
args.step pgd_anneal_iters 1138 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1139 200
penalty weights 10000.0
args.step pgd_anneal_iters 1139 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1140 200
penalty weights 10000.0
args.step pgd_anneal_iters 1140 600
dim_v 512
rho, theta 380 tensor(1.3370e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1141 200
penalty weights 10000.0
args.step pgd_anneal_iters 1141 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1142 200
penalty weights 10000.0
args.step pgd_anneal_iters 1142 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1143 200
penalty weights 10000.0
args.step pgd_anneal_iters 1143 600
final projection at end of training
dim_v 512
rho, theta 351 tensor(8.8540e-06, device='cuda:0')
Epoch: [43][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  29.88 ( 29.88)	train_acc   0.51 (  0.50)	train_minacc   0.47 (  0.50)	train_majacc   0.51 (  0.50)	train_corr   0.00 (  0.00)	l1 4.0195 (4.0172)	zero_count 0.0000 (38.6880)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.28it/s] 19%|#9        | 5/26 [00:00<00:01, 17.36it/s]                                               19%|#9        | 5/26 [00:00<00:01, 17.36it/s] 42%|####2     | 11/26 [00:00<00:00, 27.65it/s] 62%|######1   | 16/26 [00:00<00:00, 33.97it/s]                                                62%|######1   | 16/26 [00:00<00:00, 33.97it/s] 81%|########  | 21/26 [00:00<00:00, 37.18it/s]100%|##########| 26/26 [00:00<00:00, 30.37it/s]
Test: [   0/  26]	Loss 0.654 (0.654)	test_acc   0.47 (  0.47)	test_minacc   0.41 (  0.41)	test_majacc   0.48 (  0.48)	Loss_d 0.654 (0.654)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.25 (  0.25)
Test: [  10/  26]	Loss 0.665 (0.658)	test_acc   0.49 (  0.51)	test_minacc   0.52 (  0.48)	test_majacc   0.49 (  0.51)	Loss_d 0.665 (0.658)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.52 (  0.48)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.23 (  0.23)
Test: [  20/  26]	Loss 0.651 (0.657)	test_acc   0.52 (  0.50)	test_minacc   0.57 (  0.49)	test_majacc   0.51 (  0.50)	Loss_d 0.651 (0.657)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.57 (  0.49)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.26 (  0.24)
Test: [  26/  26]	Loss 0.649 (0.656)	test_acc   0.51 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.51 (  0.50)	Loss_d 0.649 (0.656)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.27 (  0.24)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 56.13it/s]
Test: [  0/  1]	Loss 0.790 (0.790)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.790 (0.790)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 0.790 (0.790)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.790 (0.790)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.09 (  0.09)
Overall Timing[ 43/  1]	epoch_time 0.0420 (0.0433)	validation_time 0.0007 (0.0006)	train_time 0.0413 (0.0426)
record: (train_acc, test_acc) (0.7581000280976296, 0.6340000033378601)
last accs (train_acc, test_acc) (0.5000000085532665, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.29it/s] 15%|#5        | 4/26 [00:00<00:01, 15.08it/s] 27%|##6       | 7/26 [00:00<00:00, 19.44it/s] 42%|####2     | 11/26 [00:00<00:00, 24.66it/s] 54%|#####3    | 14/26 [00:00<00:00, 25.59it/s] 69%|######9   | 18/26 [00:00<00:00, 27.57it/s] 85%|########4 | 22/26 [00:00<00:00, 27.79it/s]100%|##########| 26/26 [00:01<00:00, 30.28it/s]100%|##########| 26/26 [00:01<00:00, 24.12it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1144 200
penalty weights 10000.0
args.step pgd_anneal_iters 1144 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1145 200
penalty weights 10000.0
args.step pgd_anneal_iters 1145 600
dim_v 512
rho, theta 348 tensor(6.9408e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1146 200
penalty weights 10000.0
args.step pgd_anneal_iters 1146 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1147 200
penalty weights 10000.0
args.step pgd_anneal_iters 1147 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1148 200
penalty weights 10000.0
args.step pgd_anneal_iters 1148 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1149 200
penalty weights 10000.0
args.step pgd_anneal_iters 1149 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1150 200
penalty weights 10000.0
args.step pgd_anneal_iters 1150 600
dim_v 512
rho, theta 393 tensor(-5.0564e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1151 200
penalty weights 10000.0
args.step pgd_anneal_iters 1151 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1152 200
penalty weights 10000.0
args.step pgd_anneal_iters 1152 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1153 200
penalty weights 10000.0
args.step pgd_anneal_iters 1153 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1154 200
penalty weights 10000.0
args.step pgd_anneal_iters 1154 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1155 200
penalty weights 10000.0
args.step pgd_anneal_iters 1155 600
dim_v 512
rho, theta 355 tensor(-1.4170e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1156 200
penalty weights 10000.0
args.step pgd_anneal_iters 1156 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1157 200
penalty weights 10000.0
args.step pgd_anneal_iters 1157 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1158 200
penalty weights 10000.0
args.step pgd_anneal_iters 1158 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1159 200
penalty weights 10000.0
args.step pgd_anneal_iters 1159 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1160 200
penalty weights 10000.0
args.step pgd_anneal_iters 1160 600
dim_v 512
rho, theta 289 tensor(-5.4261e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1161 200
penalty weights 10000.0
args.step pgd_anneal_iters 1161 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1162 200
penalty weights 10000.0
args.step pgd_anneal_iters 1162 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1163 200
penalty weights 10000.0
args.step pgd_anneal_iters 1163 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1164 200
penalty weights 10000.0
args.step pgd_anneal_iters 1164 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1165 200
penalty weights 10000.0
args.step pgd_anneal_iters 1165 600
dim_v 512
rho, theta 386 tensor(7.0417e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1166 200
penalty weights 10000.0
args.step pgd_anneal_iters 1166 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1167 200
penalty weights 10000.0
args.step pgd_anneal_iters 1167 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1168 200
penalty weights 10000.0
args.step pgd_anneal_iters 1168 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1169 200
penalty weights 10000.0
args.step pgd_anneal_iters 1169 600
final projection at end of training
dim_v 512
rho, theta 353 tensor(1.3871e-05, device='cuda:0')
Epoch: [44][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  29.88 ( 29.88)	train_acc   0.51 (  0.50)	train_minacc   0.47 (  0.50)	train_majacc   0.51 (  0.50)	train_corr   0.00 (  0.00)	l1 4.0220 (4.0172)	zero_count 0.0000 (36.8160)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.88it/s]  8%|7         | 2/26 [00:00<00:04,  5.10it/s] 27%|##6       | 7/26 [00:00<00:01, 18.21it/s]                                               27%|##6       | 7/26 [00:00<00:01, 18.21it/s] 46%|####6     | 12/26 [00:00<00:00, 26.93it/s] 65%|######5   | 17/26 [00:00<00:00, 33.12it/s]                                                65%|######5   | 17/26 [00:00<00:00, 33.12it/s] 85%|########4 | 22/26 [00:00<00:00, 34.64it/s]100%|##########| 26/26 [00:00<00:00, 27.38it/s]
Test: [   0/  26]	Loss 0.654 (0.654)	test_acc   0.47 (  0.47)	test_minacc   0.41 (  0.41)	test_majacc   0.48 (  0.48)	Loss_d 0.654 (0.654)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.25 (  0.25)
Test: [  10/  26]	Loss 0.665 (0.658)	test_acc   0.49 (  0.51)	test_minacc   0.52 (  0.48)	test_majacc   0.49 (  0.51)	Loss_d 0.665 (0.658)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.52 (  0.48)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.23 (  0.23)
Test: [  20/  26]	Loss 0.651 (0.657)	test_acc   0.52 (  0.50)	test_minacc   0.57 (  0.49)	test_majacc   0.51 (  0.50)	Loss_d 0.651 (0.657)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.57 (  0.49)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.26 (  0.24)
Test: [  26/  26]	Loss 0.649 (0.656)	test_acc   0.51 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.51 (  0.50)	Loss_d 0.649 (0.656)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.27 (  0.24)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.57it/s]
Test: [  0/  1]	Loss 0.790 (0.790)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.790 (0.790)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Test: [  1/  1]	Loss 0.790 (0.790)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.790 (0.790)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Overall Timing[ 44/  1]	epoch_time 0.0433 (0.0433)	validation_time 0.0004 (0.0006)	train_time 0.0429 (0.0426)
record: (train_acc, test_acc) (0.7581000280976296, 0.6340000033378601)
last accs (train_acc, test_acc) (0.4997000062465668, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.30it/s] 19%|#9        | 5/26 [00:00<00:00, 22.44it/s] 31%|###       | 8/26 [00:00<00:00, 24.47it/s] 42%|####2     | 11/26 [00:00<00:00, 25.18it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.63it/s] 69%|######9   | 18/26 [00:00<00:00, 28.63it/s] 81%|########  | 21/26 [00:00<00:00, 28.20it/s] 96%|#########6| 25/26 [00:00<00:00, 30.40it/s]100%|##########| 26/26 [00:01<00:00, 25.57it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1170 200
penalty weights 10000.0
args.step pgd_anneal_iters 1170 600
dim_v 512
rho, theta 347 tensor(1.1825e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1171 200
penalty weights 10000.0
args.step pgd_anneal_iters 1171 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1172 200
penalty weights 10000.0
args.step pgd_anneal_iters 1172 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1173 200
penalty weights 10000.0
args.step pgd_anneal_iters 1173 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1174 200
penalty weights 10000.0
args.step pgd_anneal_iters 1174 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1175 200
penalty weights 10000.0
args.step pgd_anneal_iters 1175 600
dim_v 512
rho, theta 390 tensor(-5.2489e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1176 200
penalty weights 10000.0
args.step pgd_anneal_iters 1176 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1177 200
penalty weights 10000.0
args.step pgd_anneal_iters 1177 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1178 200
penalty weights 10000.0
args.step pgd_anneal_iters 1178 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1179 200
penalty weights 10000.0
args.step pgd_anneal_iters 1179 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1180 200
penalty weights 10000.0
args.step pgd_anneal_iters 1180 600
dim_v 512
rho, theta 378 tensor(-9.0071e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1181 200
penalty weights 10000.0
args.step pgd_anneal_iters 1181 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1182 200
penalty weights 10000.0
args.step pgd_anneal_iters 1182 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1183 200
penalty weights 10000.0
args.step pgd_anneal_iters 1183 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1184 200
penalty weights 10000.0
args.step pgd_anneal_iters 1184 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1185 200
penalty weights 10000.0
args.step pgd_anneal_iters 1185 600
dim_v 512
rho, theta 289 tensor(-9.5696e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1186 200
penalty weights 10000.0
args.step pgd_anneal_iters 1186 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1187 200
penalty weights 10000.0
args.step pgd_anneal_iters 1187 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1188 200
penalty weights 10000.0
args.step pgd_anneal_iters 1188 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1189 200
penalty weights 10000.0
args.step pgd_anneal_iters 1189 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1190 200
penalty weights 10000.0
args.step pgd_anneal_iters 1190 600
dim_v 512
rho, theta 364 tensor(3.6187e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1191 200
penalty weights 10000.0
args.step pgd_anneal_iters 1191 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1192 200
penalty weights 10000.0
args.step pgd_anneal_iters 1192 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1193 200
penalty weights 10000.0
args.step pgd_anneal_iters 1193 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1194 200
penalty weights 10000.0
args.step pgd_anneal_iters 1194 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1195 200
penalty weights 10000.0
args.step pgd_anneal_iters 1195 600
dim_v 512
rho, theta 356 tensor(1.5609e-05, device='cuda:0')
final projection at end of training
dim_v 512
rho, theta 355 tensor(4.2862e-08, device='cuda:0')
Epoch: [45][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  29.88 ( 29.88)	train_acc   0.51 (  0.50)	train_minacc   0.47 (  0.50)	train_majacc   0.51 (  0.50)	train_corr   0.00 (  0.00)	l1 4.0229 (4.0174)	zero_count 0.0000 (36.8550)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.01it/s] 27%|##6       | 7/26 [00:00<00:00, 32.96it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.96it/s] 46%|####6     | 12/26 [00:00<00:00, 39.59it/s] 65%|######5   | 17/26 [00:00<00:00, 41.88it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.88it/s] 85%|########4 | 22/26 [00:00<00:00, 44.22it/s]100%|##########| 26/26 [00:00<00:00, 36.46it/s]
Test: [   0/  26]	Loss 0.654 (0.654)	test_acc   0.47 (  0.47)	test_minacc   0.41 (  0.41)	test_majacc   0.48 (  0.48)	Loss_d 0.654 (0.654)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.25 (  0.25)
Test: [  10/  26]	Loss 0.665 (0.658)	test_acc   0.49 (  0.51)	test_minacc   0.52 (  0.48)	test_majacc   0.49 (  0.51)	Loss_d 0.665 (0.658)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.52 (  0.48)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.23 (  0.23)
Test: [  20/  26]	Loss 0.651 (0.657)	test_acc   0.52 (  0.50)	test_minacc   0.57 (  0.49)	test_majacc   0.51 (  0.50)	Loss_d 0.651 (0.657)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.57 (  0.49)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.26 (  0.24)
Test: [  26/  26]	Loss 0.649 (0.656)	test_acc   0.51 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.51 (  0.50)	Loss_d 0.649 (0.656)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.27 (  0.24)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.63it/s]
Test: [  0/  1]	Loss 0.791 (0.791)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.791 (0.791)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Test: [  1/  1]	Loss 0.791 (0.791)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.791 (0.791)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Overall Timing[ 45/  1]	epoch_time 0.0435 (0.0433)	validation_time 0.0004 (0.0006)	train_time 0.0430 (0.0427)
record: (train_acc, test_acc) (0.7581000280976296, 0.6340000033378601)
last accs (train_acc, test_acc) (0.4995000062584877, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.83it/s] 12%|#1        | 3/26 [00:00<00:02,  8.19it/s] 23%|##3       | 6/26 [00:00<00:01, 13.89it/s] 38%|###8      | 10/26 [00:00<00:00, 18.74it/s] 54%|#####3    | 14/26 [00:00<00:00, 23.00it/s] 65%|######5   | 17/26 [00:00<00:00, 24.08it/s] 77%|#######6  | 20/26 [00:01<00:00, 25.26it/s] 92%|#########2| 24/26 [00:01<00:00, 28.19it/s]100%|##########| 26/26 [00:01<00:00, 20.80it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1196 200
penalty weights 10000.0
args.step pgd_anneal_iters 1196 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1197 200
penalty weights 10000.0
args.step pgd_anneal_iters 1197 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1198 200
penalty weights 10000.0
args.step pgd_anneal_iters 1198 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1199 200
penalty weights 10000.0
args.step pgd_anneal_iters 1199 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1200 200
penalty weights 10000.0
args.step pgd_anneal_iters 1200 600
dim_v 512
rho, theta 378 tensor(-3.6373e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1201 200
penalty weights 10000.0
args.step pgd_anneal_iters 1201 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1202 200
penalty weights 10000.0
args.step pgd_anneal_iters 1202 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1203 200
penalty weights 10000.0
args.step pgd_anneal_iters 1203 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1204 200
penalty weights 10000.0
args.step pgd_anneal_iters 1204 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1205 200
penalty weights 10000.0
args.step pgd_anneal_iters 1205 600
dim_v 512
rho, theta 370 tensor(-5.9367e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1206 200
penalty weights 10000.0
args.step pgd_anneal_iters 1206 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1207 200
penalty weights 10000.0
args.step pgd_anneal_iters 1207 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1208 200
penalty weights 10000.0
args.step pgd_anneal_iters 1208 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1209 200
penalty weights 10000.0
args.step pgd_anneal_iters 1209 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1210 200
penalty weights 10000.0
args.step pgd_anneal_iters 1210 600
dim_v 512
rho, theta 285 tensor(-1.0702e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1211 200
penalty weights 10000.0
args.step pgd_anneal_iters 1211 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1212 200
penalty weights 10000.0
args.step pgd_anneal_iters 1212 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1213 200
penalty weights 10000.0
args.step pgd_anneal_iters 1213 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1214 200
penalty weights 10000.0
args.step pgd_anneal_iters 1214 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1215 200
penalty weights 10000.0
args.step pgd_anneal_iters 1215 600
dim_v 512
rho, theta 289 tensor(9.1914e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1216 200
penalty weights 10000.0
args.step pgd_anneal_iters 1216 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1217 200
penalty weights 10000.0
args.step pgd_anneal_iters 1217 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1218 200
penalty weights 10000.0
args.step pgd_anneal_iters 1218 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1219 200
penalty weights 10000.0
args.step pgd_anneal_iters 1219 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1220 200
penalty weights 10000.0
args.step pgd_anneal_iters 1220 600
dim_v 512
rho, theta 354 tensor(1.6505e-05, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1221 200
penalty weights 10000.0
args.step pgd_anneal_iters 1221 600
final projection at end of training
dim_v 512
rho, theta 351 tensor(1.7516e-06, device='cuda:0')
Epoch: [46][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  29.88 ( 29.88)	train_acc   0.51 (  0.50)	train_minacc   0.47 (  0.50)	train_majacc   0.51 (  0.50)	train_corr   0.00 (  0.00)	l1 4.0162 (4.0176)	zero_count 157.0000 (38.1670)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.66it/s] 23%|##3       | 6/26 [00:00<00:00, 30.49it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.49it/s] 42%|####2     | 11/26 [00:00<00:00, 36.56it/s] 62%|######1   | 16/26 [00:00<00:00, 40.31it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.31it/s] 81%|########  | 21/26 [00:00<00:00, 38.17it/s]100%|##########| 26/26 [00:00<00:00, 40.92it/s]100%|##########| 26/26 [00:00<00:00, 34.79it/s]
Test: [   0/  26]	Loss 0.654 (0.654)	test_acc   0.47 (  0.47)	test_minacc   0.41 (  0.41)	test_majacc   0.48 (  0.48)	Loss_d 0.654 (0.654)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.25 (  0.25)
Test: [  10/  26]	Loss 0.665 (0.658)	test_acc   0.49 (  0.51)	test_minacc   0.52 (  0.48)	test_majacc   0.49 (  0.51)	Loss_d 0.665 (0.658)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.52 (  0.48)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.23 (  0.23)
Test: [  20/  26]	Loss 0.651 (0.657)	test_acc   0.52 (  0.50)	test_minacc   0.59 (  0.50)	test_majacc   0.51 (  0.50)	Loss_d 0.651 (0.657)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.59 (  0.50)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.25 (  0.24)
Test: [  26/  26]	Loss 0.649 (0.656)	test_acc   0.51 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.51 (  0.50)	Loss_d 0.649 (0.656)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.27 (  0.24)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.28it/s]
Test: [  0/  1]	Loss 0.792 (0.792)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.792 (0.792)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Test: [  1/  1]	Loss 0.792 (0.792)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.792 (0.792)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Overall Timing[ 46/  1]	epoch_time 0.0471 (0.0434)	validation_time 0.0004 (0.0006)	train_time 0.0467 (0.0427)
record: (train_acc, test_acc) (0.7581000280976296, 0.6340000033378601)
last accs (train_acc, test_acc) (0.49890000629425046, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.98it/s] 15%|#5        | 4/26 [00:00<00:01, 19.22it/s] 31%|###       | 8/26 [00:00<00:00, 26.37it/s] 42%|####2     | 11/26 [00:00<00:00, 26.10it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.56it/s] 69%|######9   | 18/26 [00:00<00:00, 28.66it/s] 81%|########  | 21/26 [00:00<00:00, 27.90it/s] 92%|#########2| 24/26 [00:00<00:00, 27.73it/s]100%|##########| 26/26 [00:01<00:00, 25.30it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1222 200
penalty weights 10000.0
args.step pgd_anneal_iters 1222 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1223 200
penalty weights 10000.0
args.step pgd_anneal_iters 1223 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1224 200
penalty weights 10000.0
args.step pgd_anneal_iters 1224 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1225 200
penalty weights 10000.0
args.step pgd_anneal_iters 1225 600
dim_v 512
rho, theta 377 tensor(-2.1773e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1226 200
penalty weights 10000.0
args.step pgd_anneal_iters 1226 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1227 200
penalty weights 10000.0
args.step pgd_anneal_iters 1227 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1228 200
penalty weights 10000.0
args.step pgd_anneal_iters 1228 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1229 200
penalty weights 10000.0
args.step pgd_anneal_iters 1229 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1230 200
penalty weights 10000.0
args.step pgd_anneal_iters 1230 600
dim_v 512
rho, theta 375 tensor(-4.7164e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1231 200
penalty weights 10000.0
args.step pgd_anneal_iters 1231 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1232 200
penalty weights 10000.0
args.step pgd_anneal_iters 1232 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1233 200
penalty weights 10000.0
args.step pgd_anneal_iters 1233 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1234 200
penalty weights 10000.0
args.step pgd_anneal_iters 1234 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1235 200
penalty weights 10000.0
args.step pgd_anneal_iters 1235 600
dim_v 512
rho, theta 294 tensor(-1.1740e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1236 200
penalty weights 10000.0
args.step pgd_anneal_iters 1236 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1237 200
penalty weights 10000.0
args.step pgd_anneal_iters 1237 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1238 200
penalty weights 10000.0
args.step pgd_anneal_iters 1238 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1239 200
penalty weights 10000.0
args.step pgd_anneal_iters 1239 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1240 200
penalty weights 10000.0
args.step pgd_anneal_iters 1240 600
dim_v 512
rho, theta 288 tensor(-3.1349e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1241 200
penalty weights 10000.0
args.step pgd_anneal_iters 1241 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1242 200
penalty weights 10000.0
args.step pgd_anneal_iters 1242 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1243 200
penalty weights 10000.0
args.step pgd_anneal_iters 1243 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1244 200
penalty weights 10000.0
args.step pgd_anneal_iters 1244 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1245 200
penalty weights 10000.0
args.step pgd_anneal_iters 1245 600
dim_v 512
rho, theta 365 tensor(1.3238e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1246 200
penalty weights 10000.0
args.step pgd_anneal_iters 1246 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1247 200
penalty weights 10000.0
args.step pgd_anneal_iters 1247 600
final projection at end of training
dim_v 512
rho, theta 353 tensor(4.4828e-06, device='cuda:0')
Epoch: [47][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  29.88 ( 29.88)	train_acc   0.51 (  0.50)	train_minacc   0.47 (  0.50)	train_majacc   0.51 (  0.50)	train_corr   0.00 (  0.00)	l1 4.0175 (4.0173)	zero_count 0.0000 (39.6240)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.90it/s] 23%|##3       | 6/26 [00:00<00:00, 23.01it/s]                                               23%|##3       | 6/26 [00:00<00:00, 23.01it/s] 42%|####2     | 11/26 [00:00<00:00, 31.54it/s] 62%|######1   | 16/26 [00:00<00:00, 36.71it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.71it/s] 81%|########  | 21/26 [00:00<00:00, 36.48it/s]100%|##########| 26/26 [00:00<00:00, 39.37it/s]100%|##########| 26/26 [00:00<00:00, 30.79it/s]
Test: [   0/  26]	Loss 0.654 (0.654)	test_acc   0.47 (  0.47)	test_minacc   0.41 (  0.41)	test_majacc   0.48 (  0.48)	Loss_d 0.654 (0.654)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.25 (  0.25)
Test: [  10/  26]	Loss 0.665 (0.658)	test_acc   0.49 (  0.51)	test_minacc   0.52 (  0.48)	test_majacc   0.49 (  0.51)	Loss_d 0.665 (0.658)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.52 (  0.48)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.23 (  0.23)
Test: [  20/  26]	Loss 0.651 (0.657)	test_acc   0.51 (  0.50)	test_minacc   0.59 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.651 (0.657)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.59 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.25 (  0.24)
Test: [  26/  26]	Loss 0.649 (0.656)	test_acc   0.51 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.51 (  0.50)	Loss_d 0.649 (0.656)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.27 (  0.24)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.00it/s]
Test: [  0/  1]	Loss 0.792 (0.792)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.792 (0.792)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Test: [  1/  1]	Loss 0.792 (0.792)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.792 (0.792)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Overall Timing[ 47/  1]	epoch_time 0.0455 (0.0434)	validation_time 0.0004 (0.0006)	train_time 0.0450 (0.0428)
record: (train_acc, test_acc) (0.7581000280976296, 0.6340000033378601)
last accs (train_acc, test_acc) (0.49800000634789465, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.35it/s] 15%|#5        | 4/26 [00:00<00:01, 16.65it/s] 31%|###       | 8/26 [00:00<00:00, 21.24it/s] 42%|####2     | 11/26 [00:00<00:00, 23.82it/s] 54%|#####3    | 14/26 [00:00<00:00, 23.64it/s] 69%|######9   | 18/26 [00:00<00:00, 25.10it/s] 85%|########4 | 22/26 [00:00<00:00, 28.16it/s] 96%|#########6| 25/26 [00:01<00:00, 27.45it/s]100%|##########| 26/26 [00:01<00:00, 23.95it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1248 200
penalty weights 10000.0
args.step pgd_anneal_iters 1248 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1249 200
penalty weights 10000.0
args.step pgd_anneal_iters 1249 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1250 200
penalty weights 10000.0
args.step pgd_anneal_iters 1250 600
dim_v 512
rho, theta 342 tensor(6.0891e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1251 200
penalty weights 10000.0
args.step pgd_anneal_iters 1251 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1252 200
penalty weights 10000.0
args.step pgd_anneal_iters 1252 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1253 200
penalty weights 10000.0
args.step pgd_anneal_iters 1253 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1254 200
penalty weights 10000.0
args.step pgd_anneal_iters 1254 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1255 200
penalty weights 10000.0
args.step pgd_anneal_iters 1255 600
dim_v 512
rho, theta 381 tensor(-3.6412e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1256 200
penalty weights 10000.0
args.step pgd_anneal_iters 1256 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1257 200
penalty weights 10000.0
args.step pgd_anneal_iters 1257 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1258 200
penalty weights 10000.0
args.step pgd_anneal_iters 1258 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1259 200
penalty weights 10000.0
args.step pgd_anneal_iters 1259 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1260 200
penalty weights 10000.0
args.step pgd_anneal_iters 1260 600
dim_v 512
rho, theta 302 tensor(-1.2511e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1261 200
penalty weights 10000.0
args.step pgd_anneal_iters 1261 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1262 200
penalty weights 10000.0
args.step pgd_anneal_iters 1262 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1263 200
penalty weights 10000.0
args.step pgd_anneal_iters 1263 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1264 200
penalty weights 10000.0
args.step pgd_anneal_iters 1264 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1265 200
penalty weights 10000.0
args.step pgd_anneal_iters 1265 600
dim_v 512
rho, theta 280 tensor(-2.9204e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1266 200
penalty weights 10000.0
args.step pgd_anneal_iters 1266 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1267 200
penalty weights 10000.0
args.step pgd_anneal_iters 1267 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1268 200
penalty weights 10000.0
args.step pgd_anneal_iters 1268 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1269 200
penalty weights 10000.0
args.step pgd_anneal_iters 1269 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1270 200
penalty weights 10000.0
args.step pgd_anneal_iters 1270 600
dim_v 512
rho, theta 378 tensor(9.7645e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1271 200
penalty weights 10000.0
args.step pgd_anneal_iters 1271 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1272 200
penalty weights 10000.0
args.step pgd_anneal_iters 1272 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1273 200
penalty weights 10000.0
args.step pgd_anneal_iters 1273 600
final projection at end of training
dim_v 512
rho, theta 350 tensor(8.0465e-06, device='cuda:0')
Epoch: [48][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  29.88 ( 29.88)	train_acc   0.51 (  0.50)	train_minacc   0.47 (  0.50)	train_majacc   0.51 (  0.49)	train_corr   0.00 (  0.00)	l1 4.0192 (4.0171)	zero_count 0.0000 (40.1700)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.57it/s] 23%|##3       | 6/26 [00:00<00:00, 26.42it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.42it/s] 42%|####2     | 11/26 [00:00<00:00, 34.01it/s] 62%|######1   | 16/26 [00:00<00:00, 38.47it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.47it/s] 81%|########  | 21/26 [00:00<00:00, 37.55it/s]100%|##########| 26/26 [00:00<00:00, 40.70it/s]100%|##########| 26/26 [00:00<00:00, 33.11it/s]
Test: [   0/  26]	Loss 0.654 (0.654)	test_acc   0.47 (  0.47)	test_minacc   0.41 (  0.41)	test_majacc   0.48 (  0.48)	Loss_d 0.654 (0.654)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.25 (  0.25)
Test: [  10/  26]	Loss 0.665 (0.658)	test_acc   0.49 (  0.50)	test_minacc   0.52 (  0.48)	test_majacc   0.49 (  0.51)	Loss_d 0.665 (0.658)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.52 (  0.48)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.23 (  0.23)
Test: [  20/  26]	Loss 0.652 (0.657)	test_acc   0.51 (  0.50)	test_minacc   0.59 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.652 (0.657)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.59 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.25 (  0.24)
Test: [  26/  26]	Loss 0.649 (0.656)	test_acc   0.51 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.51 (  0.50)	Loss_d 0.649 (0.656)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.27 (  0.24)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.59it/s]
Test: [  0/  1]	Loss 0.793 (0.793)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.793 (0.793)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Test: [  1/  1]	Loss 0.793 (0.793)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.793 (0.793)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Overall Timing[ 48/  1]	epoch_time 0.0438 (0.0434)	validation_time 0.0004 (0.0006)	train_time 0.0434 (0.0428)
record: (train_acc, test_acc) (0.7581000280976296, 0.6340000033378601)
last accs (train_acc, test_acc) (0.4961000052988529, 0.5020000338554382)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.55it/s] 15%|#5        | 4/26 [00:00<00:01, 14.71it/s] 27%|##6       | 7/26 [00:00<00:01, 18.62it/s] 42%|####2     | 11/26 [00:00<00:00, 24.70it/s] 54%|#####3    | 14/26 [00:00<00:00, 25.40it/s] 65%|######5   | 17/26 [00:00<00:00, 26.15it/s] 81%|########  | 21/26 [00:00<00:00, 29.40it/s] 96%|#########6| 25/26 [00:01<00:00, 28.63it/s]100%|##########| 26/26 [00:01<00:00, 23.61it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1274 200
penalty weights 10000.0
args.step pgd_anneal_iters 1274 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1275 200
penalty weights 10000.0
args.step pgd_anneal_iters 1275 600
dim_v 512
rho, theta 341 tensor(1.6285e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1276 200
penalty weights 10000.0
args.step pgd_anneal_iters 1276 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1277 200
penalty weights 10000.0
args.step pgd_anneal_iters 1277 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1278 200
penalty weights 10000.0
args.step pgd_anneal_iters 1278 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1279 200
penalty weights 10000.0
args.step pgd_anneal_iters 1279 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1280 200
penalty weights 10000.0
args.step pgd_anneal_iters 1280 600
dim_v 512
rho, theta 378 tensor(-2.1539e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1281 200
penalty weights 10000.0
args.step pgd_anneal_iters 1281 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1282 200
penalty weights 10000.0
args.step pgd_anneal_iters 1282 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1283 200
penalty weights 10000.0
args.step pgd_anneal_iters 1283 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1284 200
penalty weights 10000.0
args.step pgd_anneal_iters 1284 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1285 200
penalty weights 10000.0
args.step pgd_anneal_iters 1285 600
dim_v 512
rho, theta 342 tensor(-1.1605e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1286 200
penalty weights 10000.0
args.step pgd_anneal_iters 1286 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1287 200
penalty weights 10000.0
args.step pgd_anneal_iters 1287 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1288 200
penalty weights 10000.0
args.step pgd_anneal_iters 1288 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1289 200
penalty weights 10000.0
args.step pgd_anneal_iters 1289 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1290 200
penalty weights 10000.0
args.step pgd_anneal_iters 1290 600
dim_v 512
rho, theta 285 tensor(-5.0451e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1291 200
penalty weights 10000.0
args.step pgd_anneal_iters 1291 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1292 200
penalty weights 10000.0
args.step pgd_anneal_iters 1292 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1293 200
penalty weights 10000.0
args.step pgd_anneal_iters 1293 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1294 200
penalty weights 10000.0
args.step pgd_anneal_iters 1294 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1295 200
penalty weights 10000.0
args.step pgd_anneal_iters 1295 600
dim_v 512
rho, theta 378 tensor(4.0877e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1296 200
penalty weights 10000.0
args.step pgd_anneal_iters 1296 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1297 200
penalty weights 10000.0
args.step pgd_anneal_iters 1297 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1298 200
penalty weights 10000.0
args.step pgd_anneal_iters 1298 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1299 200
penalty weights 10000.0
args.step pgd_anneal_iters 1299 600
final projection at end of training
dim_v 512
rho, theta 355 tensor(1.2059e-05, device='cuda:0')
Epoch: [49][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  29.88 ( 29.88)	train_acc   0.51 (  0.49)	train_minacc   0.47 (  0.51)	train_majacc   0.51 (  0.49)	train_corr   0.00 (  0.00)	l1 4.0212 (4.0171)	zero_count 0.0000 (38.6880)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.72it/s] 12%|#1        | 3/26 [00:00<00:02, 11.13it/s] 31%|###       | 8/26 [00:00<00:00, 24.87it/s]                                               31%|###       | 8/26 [00:00<00:00, 24.87it/s] 50%|#####     | 13/26 [00:00<00:00, 32.57it/s] 69%|######9   | 18/26 [00:00<00:00, 37.48it/s]                                                69%|######9   | 18/26 [00:00<00:00, 37.48it/s] 88%|########8 | 23/26 [00:00<00:00, 40.34it/s]100%|##########| 26/26 [00:00<00:00, 30.99it/s]
Test: [   0/  26]	Loss 0.654 (0.654)	test_acc   0.47 (  0.47)	test_minacc   0.41 (  0.41)	test_majacc   0.48 (  0.48)	Loss_d 0.654 (0.654)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.25 (  0.25)
Test: [  10/  26]	Loss 0.665 (0.658)	test_acc   0.49 (  0.50)	test_minacc   0.52 (  0.48)	test_majacc   0.49 (  0.50)	Loss_d 0.665 (0.658)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.52 (  0.48)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.23 (  0.23)
Test: [  20/  26]	Loss 0.652 (0.657)	test_acc   0.51 (  0.50)	test_minacc   0.59 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.652 (0.657)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.59 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.25 (  0.24)
Test: [  26/  26]	Loss 0.649 (0.656)	test_acc   0.51 (  0.49)	test_minacc   0.47 (  0.50)	test_majacc   0.51 (  0.49)	Loss_d 0.649 (0.656)	test_acc_d   0.51 (  0.49)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.51 (  0.49)	test_corr_d   0.27 (  0.24)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.83it/s]
Test: [  0/  1]	Loss 0.794 (0.794)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.794 (0.794)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Test: [  1/  1]	Loss 0.794 (0.794)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.794 (0.794)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Overall Timing[ 49/  1]	epoch_time 0.0459 (0.0435)	validation_time 0.0006 (0.0006)	train_time 0.0453 (0.0428)
record: (train_acc, test_acc) (0.7581000280976296, 0.6340000033378601)
last accs (train_acc, test_acc) (0.49490000304579734, 0.5020000338554382)
done saving aggregate.csv to ./aggregate.csv
wandb: - 0.164 MB of 0.164 MB uploadedwandb: \ 0.164 MB of 0.164 MB uploadedwandb: | 0.164 MB of 0.164 MB uploadedThread SenderThread:
Traceback (most recent call last):
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/internal_util.py", line 48, in run
    self._run()
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/internal_util.py", line 99, in _run
    self._process(record)
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/internal.py", line 327, in _process
    self._sm.send(record)
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/sender.py", line 398, in send
    send_handler(record)
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/sender.py", line 420, in send_request
    send_handler(record)
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/sender.py", line 654, in send_request_defer
    self._flush_job()
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/sender.py", line 1706, in _flush_job
    artifact = self._job_builder.build(api=self._api)
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/job_builder.py", line 552, in build
    artifact.add_file(
  File "/home/zd16/scratch/mypython3/wandb/sdk/artifacts/artifact.py", line 1196, in add_file
    return self._add_local_file(
  File "/home/zd16/scratch/mypython3/wandb/sdk/artifacts/artifact.py", line 1459, in _add_local_file
    with tempfile.NamedTemporaryFile(dir=get_staging_dir(), delete=False) as f:
  File "/usr/local/python/3.9.16/lib/python3.9/tempfile.py", line 545, in NamedTemporaryFile
    (fd, name) = _mkstemp_inner(dir, prefix, suffix, flags, output_type)
  File "/usr/local/python/3.9.16/lib/python3.9/tempfile.py", line 255, in _mkstemp_inner
    fd = _os.open(file, flags, 0o600)
OSError: [Errno 122] Disk quota exceeded: '/home/zd16/.local/share/wandb/artifacts/staging/tmpdl7rtgw6'
wandb: ERROR Internal wandb error: file data was not synced
wandb: Currently logged in as: janezdu (janezdu-uiuc). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.17.9 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.7
wandb: Run data is saved locally in /scratch/users/zd16/sparseIRM-resnet-ver/wandb/run-20240907_211115-v6950ixo
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run name_random
wandb: ⭐️ View project at https://wandb.ai/janezdu-uiuc/irm
wandb: 🚀 View run at https://wandb.ai/janezdu-uiuc/irm/runs/v6950ixo
=> Reading YAML config from configs/smallscale/resnet18/resnet18-usc-unsigned.yaml
Namespace(data='dataset/', optimizer='adam', weight_opt='adam', set='mnistcifar', arch='ResNet18', config='configs/smallscale/resnet18/resnet18-usc-unsigned.yaml', log_dir=None, workers=4, epochs=50, start_epoch=None, batch_size=390, lr=0.006, warmup_length=0, momentum=0.9, weight_decay=0.0, print_freq=10, num_classes=1, resume='', resume_train_weights='', evaluate=False, pretrained=None, pretrained_distill=None, alpha_distill=0.95, T_distill=2, seed=0, multigpu=[0], lr_policy='cosine_lr', lr_adjust=30, lr_gamma=0.1, name='baseline', save_every=-1, prune_rate=1.0, param_prune_rate=0.0, pr_start=1.0, low_data=1, width_mult=1.0, nesterov=False, threetimes=False, random_subnet=False, one_batch=False, conv_type='DenseConv', freeze_weights=False, st=False, mode='fan_in', nonlinearity='relu', bn_type='LearnedBatchNorm', init='kaiming_normal', no_bn_decay=False, scale_fan=False, first_layer_dense=False, last_layer_dense=True, approx=False, zero=False, flip=False, bs=False, gumbel_sample=False, multiply_prob=False, no_multiply=False, multiply_cont=False, multiply_prob_bs=False, indiv=False, label_smoothing=None, first_layer_type=None, trainer='default', score_init_constant=1.0, K=1, update_freq=20, D=0.01, T=1, TA=True, TA2=False, TA_grow=False, center=False, straight_through=False, PLA_factor=0.1, PLA_patience=10, gradient_loss_para=0, abs_loss_para=0, thres=0.9, runs_name='name_random', resume_compare_loss1='', resume_compare_loss2='', init_weights='', trained_mask='', weight_rescaling=False, constrain_by_layer=False, weight_rescaling_data=False, use_running_stats=False, not_clipping=False, rescaling_para=False, lasso_para=0, dont_freeze_weights=False, iterative=True, prob_by_weight=False, rescale_at_fix_subnet=False, train_weights_at_the_same_time=False, sample_from_training_set=False, load_true_para=False, distill=False, finetune=False, stablize=False, prev_best=0, weight_opt_lr=0.0006, n=500, ts=0.28, te=0.6, d=20000, s=80, c=0.75, init_prob=False, thres_before=0.001, wide_ratio=0.001, noise=1, cal_p_q=False, just_finetune=False, snip=False, envs_num=2, l2_regularizer_weight=0.001, data_num=50000, env_type='linear', irm_type='irmv1', hidden_dim=390, penalty_anneal_iters=200, penalty_weight=10000.0, grayscale_model=0, weight_lr_schedule=False, fix_subnet=False, freeze_weight=False, step='ours', prior_sd_coef=0, dim_inv=2, variance_gamma=1.0, dim_spu=10, image_scale=32, cons_ratio='0.999_0.7_0.1', noise_ratio=0.2, step_gamma=0.1, step_round=3, inner_steps=1, use_pgd=True, z=15.0, pgd_anneal_iters=600, pgd_skip_steps=5, fraction_z=0.99)
=> Creating model 'ResNet18'
Here!!!!!!!!
==> Conv Type: DenseConv
==> BN Type: LearnedBatchNorm
<class 'torch.nn.modules.conv.Conv2d'>
<class 'torch.nn.modules.batchnorm.BatchNorm2d'>
==> Building first layer with <class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): Linear(in_features=512, out_features=1, bias=True)
)
=> Parallelizing on [0] gpus
<DEBUG> gradient to module.conv1.weight
<DEBUG> gradient to module.bn1.weight
<DEBUG> gradient to module.bn1.bias
<DEBUG> gradient to module.layer1.0.conv1.weight
<DEBUG> gradient to module.layer1.0.bn1.weight
<DEBUG> gradient to module.layer1.0.bn1.bias
<DEBUG> gradient to module.layer1.0.conv2.weight
<DEBUG> gradient to module.layer1.0.bn2.weight
<DEBUG> gradient to module.layer1.0.bn2.bias
<DEBUG> gradient to module.layer1.1.conv1.weight
<DEBUG> gradient to module.layer1.1.bn1.weight
<DEBUG> gradient to module.layer1.1.bn1.bias
<DEBUG> gradient to module.layer1.1.conv2.weight
<DEBUG> gradient to module.layer1.1.bn2.weight
<DEBUG> gradient to module.layer1.1.bn2.bias
<DEBUG> gradient to module.layer2.0.conv1.weight
<DEBUG> gradient to module.layer2.0.bn1.weight
<DEBUG> gradient to module.layer2.0.bn1.bias
<DEBUG> gradient to module.layer2.0.conv2.weight
<DEBUG> gradient to module.layer2.0.bn2.weight
<DEBUG> gradient to module.layer2.0.bn2.bias
<DEBUG> gradient to module.layer2.0.downsample.0.weight
<DEBUG> gradient to module.layer2.0.downsample.1.weight
<DEBUG> gradient to module.layer2.0.downsample.1.bias
<DEBUG> gradient to module.layer2.1.conv1.weight
<DEBUG> gradient to module.layer2.1.bn1.weight
<DEBUG> gradient to module.layer2.1.bn1.bias
<DEBUG> gradient to module.layer2.1.conv2.weight
<DEBUG> gradient to module.layer2.1.bn2.weight
<DEBUG> gradient to module.layer2.1.bn2.bias
<DEBUG> gradient to module.layer3.0.conv1.weight
<DEBUG> gradient to module.layer3.0.bn1.weight
<DEBUG> gradient to module.layer3.0.bn1.bias
<DEBUG> gradient to module.layer3.0.conv2.weight
<DEBUG> gradient to module.layer3.0.bn2.weight
<DEBUG> gradient to module.layer3.0.bn2.bias
<DEBUG> gradient to module.layer3.0.downsample.0.weight
<DEBUG> gradient to module.layer3.0.downsample.1.weight
<DEBUG> gradient to module.layer3.0.downsample.1.bias
<DEBUG> gradient to module.layer3.1.conv1.weight
<DEBUG> gradient to module.layer3.1.bn1.weight
<DEBUG> gradient to module.layer3.1.bn1.bias
<DEBUG> gradient to module.layer3.1.conv2.weight
<DEBUG> gradient to module.layer3.1.bn2.weight
<DEBUG> gradient to module.layer3.1.bn2.bias
<DEBUG> gradient to module.layer4.0.conv1.weight
<DEBUG> gradient to module.layer4.0.bn1.weight
<DEBUG> gradient to module.layer4.0.bn1.bias
<DEBUG> gradient to module.layer4.0.conv2.weight
<DEBUG> gradient to module.layer4.0.bn2.weight
<DEBUG> gradient to module.layer4.0.bn2.bias
<DEBUG> gradient to module.layer4.0.downsample.0.weight
<DEBUG> gradient to module.layer4.0.downsample.1.weight
<DEBUG> gradient to module.layer4.0.downsample.1.bias
<DEBUG> gradient to module.layer4.1.conv1.weight
<DEBUG> gradient to module.layer4.1.bn1.weight
<DEBUG> gradient to module.layer4.1.bn1.bias
<DEBUG> gradient to module.layer4.1.conv2.weight
<DEBUG> gradient to module.layer4.1.bn2.weight
<DEBUG> gradient to module.layer4.1.bn2.bias
<DEBUG> gradient to module.fc.weight
<DEBUG> gradient to module.fc.bias
Files already downloaded and verified
Files already downloaded and verified
Adding Noise to Label, len(Y)=12000, Label_noise=1187
Xmp (7877, 3, 32, 32) (6903, 3, 32, 32)
Xcp (6001, 3, 32, 32) (5999, 3, 32, 32)
env=0 2497 2497 3 3
xn 2500 xp 2500
env=1 1750 1750 750 750
xn 2500 xp 2500
env=2 50 50 450 450
xn 500 xp 500
=> Creating model 'EBD'
EBD(
  (embedings): Embedding(2, 1)
)
=> Parallelizing on [0] gpus
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:01<00:41,  1.67s/it] 19%|#9        | 5/26 [00:01<00:05,  3.64it/s] 35%|###4      | 9/26 [00:01<00:02,  7.18it/s] 50%|#####     | 13/26 [00:02<00:01, 11.09it/s] 65%|######5   | 17/26 [00:02<00:00, 15.15it/s] 81%|########  | 21/26 [00:02<00:00, 19.14it/s] 96%|#########6| 25/26 [00:02<00:00, 22.52it/s]100%|##########| 26/26 [00:02<00:00,  9.50it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 0 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 2 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 3 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 4 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 5 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 6 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 7 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 8 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 9 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 10 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 11 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 12 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 13 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 14 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 15 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 16 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 17 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 18 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 19 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 20 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 21 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 22 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 23 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 24 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 25 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [0][  26/  26]	Loss 0.483 (0.645)	train_nll   0.48 (  0.65)	train_penalty   0.11 (  0.50)	weight_norm  20.95 ( 18.16)	train_acc   0.83 (  0.79)	train_minacc   0.00 (  0.09)	train_majacc   1.00 (  0.91)	train_corr   0.00 (  0.00)	l1 6.6356 (7.9086)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.27it/s] 19%|#9        | 5/26 [00:00<00:01, 20.88it/s] 38%|###8      | 10/26 [00:00<00:00, 31.52it/s]                                                38%|###8      | 10/26 [00:00<00:00, 31.52it/s] 58%|#####7    | 15/26 [00:00<00:00, 37.06it/s] 77%|#######6  | 20/26 [00:00<00:00, 36.39it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 36.39it/s] 96%|#########6| 25/26 [00:00<00:00, 39.66it/s]100%|##########| 26/26 [00:00<00:00, 32.39it/s]
Test: [   0/  26]	Loss 0.385 (0.385)	test_acc   0.88 (  0.88)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.385 (0.385)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.99 (  0.99)
Test: [  10/  26]	Loss 0.484 (0.436)	test_acc   0.81 (  0.84)	test_minacc   0.00 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 0.484 (0.436)	test_acc_d   0.81 (  0.84)	test_minacc_d   0.00 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.98 (  0.98)
Test: [  20/  26]	Loss 0.426 (0.430)	test_acc   0.85 (  0.85)	test_minacc   0.02 (  0.01)	test_majacc   1.00 (  0.99)	Loss_d 0.426 (0.430)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.02 (  0.01)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.99 (  0.98)
Test: [  26/  26]	Loss 0.485 (0.432)	test_acc   0.84 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  0.99)	Loss_d 0.485 (0.432)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.99 (  0.98)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00,  2.54it/s]100%|##########| 1/1 [00:00<00:00,  2.54it/s]
Test: [  0/  1]	Loss 1.803 (1.803)	test_acc   0.10 (  0.10)	test_minacc   0.00 (  0.00)	test_majacc   0.99 (  0.99)	Loss_d 1.803 (1.803)	test_acc_d   0.10 (  0.10)	test_minacc_d   0.00 (  0.00)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.98 (  0.98)
Test: [  1/  1]	Loss 1.803 (1.803)	test_acc   0.10 (  0.10)	test_minacc   0.00 (  0.00)	test_majacc   0.99 (  0.99)	Loss_d 1.803 (1.803)	test_acc_d   0.10 (  0.10)	test_minacc_d   0.00 (  0.00)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.98 (  0.98)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/177/checkpoints/model_best.pth
Overall Timing[  0/  1]	epoch_time 0.0799 (0.0799)	validation_time 0.0066 (0.0066)	train_time 0.0712 (0.0712)
record: (train_acc, test_acc) (0.8458000200390816, 0.10300000756978989)
last accs (train_acc, test_acc) (0.8458000200390816, 0.10300000756978989)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:09,  2.77it/s] 15%|#5        | 4/26 [00:00<00:02, 10.46it/s] 31%|###       | 8/26 [00:00<00:00, 18.14it/s] 46%|####6     | 12/26 [00:00<00:00, 23.30it/s] 62%|######1   | 16/26 [00:00<00:00, 26.86it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.54it/s] 92%|#########2| 24/26 [00:01<00:00, 31.47it/s]100%|##########| 26/26 [00:01<00:00, 22.39it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 26 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 27 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 28 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 29 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 30 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 31 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 32 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 33 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 34 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 35 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 36 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 37 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 38 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 39 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 40 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 41 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 42 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 43 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 44 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 45 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 46 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 47 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 48 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 49 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 50 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 51 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [1][  26/  26]	Loss 0.445 (0.417)	train_nll   0.45 (  0.42)	train_penalty   0.07 (  0.06)	weight_norm  22.09 ( 21.74)	train_acc   0.84 (  0.85)	train_minacc   0.00 (  0.01)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 6.2101 (6.3144)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.10it/s] 23%|##3       | 6/26 [00:00<00:00, 23.21it/s]                                               23%|##3       | 6/26 [00:00<00:00, 23.21it/s] 42%|####2     | 11/26 [00:00<00:00, 32.00it/s] 62%|######1   | 16/26 [00:00<00:00, 37.23it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.23it/s] 81%|########  | 21/26 [00:00<00:00, 36.64it/s]100%|##########| 26/26 [00:00<00:00, 40.03it/s]100%|##########| 26/26 [00:00<00:00, 31.32it/s]
Test: [   0/  26]	Loss 0.367 (0.367)	test_acc   0.88 (  0.88)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.367 (0.367)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  10/  26]	Loss 0.444 (0.409)	test_acc   0.82 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.444 (0.409)	test_acc_d   0.82 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  20/  26]	Loss 0.396 (0.402)	test_acc   0.85 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.396 (0.402)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  26/  26]	Loss 0.442 (0.404)	test_acc   0.84 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.442 (0.404)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.42it/s]
Test: [  0/  1]	Loss 1.687 (1.687)	test_acc   0.10 (  0.10)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 1.687 (1.687)	test_acc_d   0.10 (  0.10)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  1/  1]	Loss 1.687 (1.687)	test_acc   0.10 (  0.10)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 1.687 (1.687)	test_acc_d   0.10 (  0.10)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Overall Timing[  1/  1]	epoch_time 0.0412 (0.0605)	validation_time 0.0003 (0.0035)	train_time 0.0409 (0.0560)
record: (train_acc, test_acc) (0.8458000200390816, 0.10300000756978989)
last accs (train_acc, test_acc) (0.8488000268340111, 0.10200000554323196)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.17it/s] 19%|#9        | 5/26 [00:00<00:00, 21.95it/s] 35%|###4      | 9/26 [00:00<00:00, 27.59it/s] 50%|#####     | 13/26 [00:00<00:00, 30.37it/s] 65%|######5   | 17/26 [00:00<00:00, 32.14it/s] 81%|########  | 21/26 [00:00<00:00, 33.31it/s] 96%|#########6| 25/26 [00:00<00:00, 33.64it/s]100%|##########| 26/26 [00:00<00:00, 28.56it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 52 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 53 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 54 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 55 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 56 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 57 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 58 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 59 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 60 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 61 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 62 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 63 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 64 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 65 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 66 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 67 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 68 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 69 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 70 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 71 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 72 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 73 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 74 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 75 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 76 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 77 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [2][  26/  26]	Loss 0.434 (0.396)	train_nll   0.43 (  0.40)	train_penalty   0.07 (  0.05)	weight_norm  22.21 ( 22.17)	train_acc   0.83 (  0.85)	train_minacc   0.00 (  0.02)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 6.3476 (6.2674)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.53it/s] 23%|##3       | 6/26 [00:00<00:01, 18.88it/s]                                               23%|##3       | 6/26 [00:00<00:01, 18.88it/s] 42%|####2     | 11/26 [00:00<00:00, 27.87it/s] 62%|######1   | 16/26 [00:00<00:00, 33.39it/s]                                                62%|######1   | 16/26 [00:00<00:00, 33.39it/s] 81%|########  | 21/26 [00:00<00:00, 34.72it/s]100%|##########| 26/26 [00:00<00:00, 38.51it/s]100%|##########| 26/26 [00:00<00:00, 28.49it/s]
Test: [   0/  26]	Loss 0.343 (0.343)	test_acc   0.87 (  0.87)	test_minacc   0.04 (  0.04)	test_majacc   0.99 (  0.99)	Loss_d 0.343 (0.343)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.04 (  0.04)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.96)
Test: [  10/  26]	Loss 0.421 (0.391)	test_acc   0.82 (  0.84)	test_minacc   0.00 (  0.02)	test_majacc   0.99 (  0.99)	Loss_d 0.421 (0.391)	test_acc_d   0.82 (  0.84)	test_minacc_d   0.00 (  0.02)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.96)
Test: [  20/  26]	Loss 0.370 (0.381)	test_acc   0.85 (  0.85)	test_minacc   0.03 (  0.03)	test_majacc   1.00 (  0.99)	Loss_d 0.370 (0.381)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.03 (  0.03)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.96 (  0.96)
Test: [  26/  26]	Loss 0.422 (0.383)	test_acc   0.84 (  0.85)	test_minacc   0.02 (  0.03)	test_majacc   1.00 (  0.99)	Loss_d 0.422 (0.383)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.02 (  0.03)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.97 (  0.96)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.08it/s]
Test: [  0/  1]	Loss 1.749 (1.749)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.749 (1.749)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.95 (  0.95)
Test: [  1/  1]	Loss 1.749 (1.749)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.749 (1.749)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.95 (  0.95)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/177/checkpoints/model_best.pth
Overall Timing[  2/  1]	epoch_time 0.0430 (0.0547)	validation_time 0.0004 (0.0025)	train_time 0.0426 (0.0516)
record: (train_acc, test_acc) (0.8484000305533409, 0.10500000417232513)
last accs (train_acc, test_acc) (0.8484000305533409, 0.10500000417232513)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.21it/s] 19%|#9        | 5/26 [00:00<00:00, 22.16it/s] 35%|###4      | 9/26 [00:00<00:00, 28.13it/s] 50%|#####     | 13/26 [00:00<00:00, 31.32it/s] 65%|######5   | 17/26 [00:00<00:00, 32.28it/s] 81%|########  | 21/26 [00:00<00:00, 33.60it/s] 96%|#########6| 25/26 [00:00<00:00, 34.31it/s]100%|##########| 26/26 [00:00<00:00, 28.57it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 78 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 79 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 80 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 81 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 82 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 83 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 84 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 85 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 86 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 87 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 88 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 89 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 90 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 91 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 92 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 93 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 94 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 95 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 96 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 97 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 98 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 99 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 100 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 101 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 102 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 103 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [3][  26/  26]	Loss 0.430 (0.372)	train_nll   0.43 (  0.37)	train_penalty   0.07 (  0.04)	weight_norm  22.26 ( 22.23)	train_acc   0.83 (  0.85)	train_minacc   0.10 (  0.09)	train_majacc   0.97 (  0.98)	train_corr   0.00 (  0.00)	l1 6.5968 (6.4010)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.04it/s] 23%|##3       | 6/26 [00:00<00:00, 26.06it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.06it/s] 42%|####2     | 11/26 [00:00<00:00, 34.33it/s] 62%|######1   | 16/26 [00:00<00:00, 39.36it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.36it/s] 81%|########  | 21/26 [00:00<00:00, 38.19it/s]100%|##########| 26/26 [00:00<00:00, 41.31it/s]100%|##########| 26/26 [00:00<00:00, 33.29it/s]
Test: [   0/  26]	Loss 0.296 (0.296)	test_acc   0.88 (  0.88)	test_minacc   0.13 (  0.13)	test_majacc   0.99 (  0.99)	Loss_d 0.296 (0.296)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.13 (  0.13)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.95 (  0.95)
Test: [  10/  26]	Loss 0.375 (0.350)	test_acc   0.83 (  0.85)	test_minacc   0.06 (  0.07)	test_majacc   0.99 (  0.99)	Loss_d 0.375 (0.350)	test_acc_d   0.83 (  0.85)	test_minacc_d   0.06 (  0.07)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.95 (  0.94)
Test: [  20/  26]	Loss 0.317 (0.339)	test_acc   0.86 (  0.86)	test_minacc   0.08 (  0.09)	test_majacc   1.00 (  0.99)	Loss_d 0.317 (0.339)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.08 (  0.09)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.94 (  0.94)
Test: [  26/  26]	Loss 0.408 (0.342)	test_acc   0.84 (  0.86)	test_minacc   0.07 (  0.08)	test_majacc   1.00 (  0.99)	Loss_d 0.408 (0.342)	test_acc_d   0.84 (  0.86)	test_minacc_d   0.07 (  0.08)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.95 (  0.94)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.08it/s]
Test: [  0/  1]	Loss 1.838 (1.838)	test_acc   0.12 (  0.12)	test_minacc   0.02 (  0.02)	test_majacc   0.98 (  0.98)	Loss_d 1.838 (1.838)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.02 (  0.02)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.92 (  0.92)
Test: [  1/  1]	Loss 1.838 (1.838)	test_acc   0.12 (  0.12)	test_minacc   0.02 (  0.02)	test_majacc   0.98 (  0.98)	Loss_d 1.838 (1.838)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.02 (  0.02)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.92 (  0.92)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/177/checkpoints/model_best.pth
Overall Timing[  3/  1]	epoch_time 0.0407 (0.0512)	validation_time 0.0003 (0.0019)	train_time 0.0403 (0.0488)
record: (train_acc, test_acc) (0.8551000187397003, 0.11600000411272049)
last accs (train_acc, test_acc) (0.8551000187397003, 0.11600000411272049)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.31it/s] 19%|#9        | 5/26 [00:00<00:00, 23.44it/s] 35%|###4      | 9/26 [00:00<00:00, 29.15it/s] 50%|#####     | 13/26 [00:00<00:00, 32.12it/s] 65%|######5   | 17/26 [00:00<00:00, 33.87it/s] 81%|########  | 21/26 [00:00<00:00, 35.16it/s] 96%|#########6| 25/26 [00:00<00:00, 35.94it/s]100%|##########| 26/26 [00:00<00:00, 30.33it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 104 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 105 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 106 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 107 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 108 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 109 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 110 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 111 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 112 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 113 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 114 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 115 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 116 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 117 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 118 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 119 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 120 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 121 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 122 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 123 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 124 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 125 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 126 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 127 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 128 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 129 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [4][  26/  26]	Loss 0.402 (0.343)	train_nll   0.40 (  0.34)	train_penalty   0.05 (  0.03)	weight_norm  22.32 ( 22.29)	train_acc   0.82 (  0.85)	train_minacc   0.10 (  0.17)	train_majacc   0.97 (  0.97)	train_corr   0.00 (  0.00)	l1 6.7634 (6.6154)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.98it/s] 19%|#9        | 5/26 [00:00<00:01, 20.72it/s] 38%|###8      | 10/26 [00:00<00:00, 27.95it/s]                                                38%|###8      | 10/26 [00:00<00:00, 27.95it/s] 58%|#####7    | 15/26 [00:00<00:00, 33.64it/s] 77%|#######6  | 20/26 [00:00<00:00, 37.96it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 37.96it/s] 96%|#########6| 25/26 [00:00<00:00, 40.52it/s]100%|##########| 26/26 [00:00<00:00, 31.97it/s]
Test: [   0/  26]	Loss 0.287 (0.287)	test_acc   0.88 (  0.88)	test_minacc   0.15 (  0.15)	test_majacc   0.99 (  0.99)	Loss_d 0.287 (0.287)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.15 (  0.15)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.92 (  0.92)
Test: [  10/  26]	Loss 0.355 (0.338)	test_acc   0.83 (  0.86)	test_minacc   0.14 (  0.18)	test_majacc   0.98 (  0.98)	Loss_d 0.355 (0.338)	test_acc_d   0.83 (  0.86)	test_minacc_d   0.14 (  0.18)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.91 (  0.92)
Test: [  20/  26]	Loss 0.304 (0.327)	test_acc   0.87 (  0.86)	test_minacc   0.23 (  0.20)	test_majacc   0.98 (  0.98)	Loss_d 0.304 (0.327)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.23 (  0.20)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.92 (  0.91)
Test: [  26/  26]	Loss 0.390 (0.330)	test_acc   0.84 (  0.86)	test_minacc   0.15 (  0.19)	test_majacc   0.98 (  0.98)	Loss_d 0.390 (0.330)	test_acc_d   0.84 (  0.86)	test_minacc_d   0.15 (  0.19)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.91 (  0.91)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.25it/s]
Test: [  0/  1]	Loss 1.838 (1.838)	test_acc   0.16 (  0.16)	test_minacc   0.07 (  0.07)	test_majacc   0.97 (  0.97)	Loss_d 1.838 (1.838)	test_acc_d   0.16 (  0.16)	test_minacc_d   0.07 (  0.07)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.86 (  0.86)
Test: [  1/  1]	Loss 1.838 (1.838)	test_acc   0.16 (  0.16)	test_minacc   0.07 (  0.07)	test_majacc   0.97 (  0.97)	Loss_d 1.838 (1.838)	test_acc_d   0.16 (  0.16)	test_minacc_d   0.07 (  0.07)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.86 (  0.86)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/177/checkpoints/model_best.pth
Overall Timing[  4/  1]	epoch_time 0.0397 (0.0489)	validation_time 0.0003 (0.0016)	train_time 0.0394 (0.0469)
record: (train_acc, test_acc) (0.8629000275731087, 0.15600000321865082)
last accs (train_acc, test_acc) (0.8629000275731087, 0.15600000321865082)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.92it/s] 15%|#5        | 4/26 [00:00<00:01, 20.60it/s] 31%|###       | 8/26 [00:00<00:00, 27.11it/s] 46%|####6     | 12/26 [00:00<00:00, 30.89it/s] 62%|######1   | 16/26 [00:00<00:00, 33.19it/s] 77%|#######6  | 20/26 [00:00<00:00, 34.59it/s] 92%|#########2| 24/26 [00:00<00:00, 35.47it/s]100%|##########| 26/26 [00:00<00:00, 29.92it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 130 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 131 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 132 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 133 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 134 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 135 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 136 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 137 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 138 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 139 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 140 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 141 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 142 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 143 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 144 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 145 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 146 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 147 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 148 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 149 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 150 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 151 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 152 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 153 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 154 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 155 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [5][  26/  26]	Loss 0.384 (0.325)	train_nll   0.38 (  0.33)	train_penalty   0.06 (  0.02)	weight_norm  22.39 ( 22.36)	train_acc   0.86 (  0.86)	train_minacc   0.12 (  0.27)	train_majacc   1.00 (  0.97)	train_corr   0.00 (  0.00)	l1 6.7799 (6.6726)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.68it/s] 27%|##6       | 7/26 [00:00<00:00, 26.58it/s]                                               27%|##6       | 7/26 [00:00<00:00, 26.58it/s] 46%|####6     | 12/26 [00:00<00:00, 34.58it/s] 65%|######5   | 17/26 [00:00<00:00, 38.21it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.21it/s] 85%|########4 | 22/26 [00:00<00:00, 40.29it/s]100%|##########| 26/26 [00:00<00:00, 33.12it/s]
Test: [   0/  26]	Loss 0.270 (0.270)	test_acc   0.88 (  0.88)	test_minacc   0.19 (  0.19)	test_majacc   0.98 (  0.98)	Loss_d 0.270 (0.270)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.19 (  0.19)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.92 (  0.92)
Test: [  10/  26]	Loss 0.369 (0.336)	test_acc   0.83 (  0.86)	test_minacc   0.14 (  0.17)	test_majacc   0.98 (  0.98)	Loss_d 0.369 (0.336)	test_acc_d   0.83 (  0.86)	test_minacc_d   0.14 (  0.17)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.92 (  0.92)
Test: [  20/  26]	Loss 0.310 (0.326)	test_acc   0.87 (  0.86)	test_minacc   0.18 (  0.18)	test_majacc   0.99 (  0.98)	Loss_d 0.310 (0.326)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.18 (  0.18)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.93 (  0.92)
Test: [  26/  26]	Loss 0.366 (0.328)	test_acc   0.86 (  0.86)	test_minacc   0.15 (  0.18)	test_majacc   1.00 (  0.98)	Loss_d 0.366 (0.328)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.15 (  0.18)	test_majacc_d   1.00 (  0.98)	test_corr_d   0.93 (  0.92)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.86it/s]
Test: [  0/  1]	Loss 1.949 (1.949)	test_acc   0.16 (  0.16)	test_minacc   0.07 (  0.07)	test_majacc   0.98 (  0.98)	Loss_d 1.949 (1.949)	test_acc_d   0.16 (  0.16)	test_minacc_d   0.07 (  0.07)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.87 (  0.87)
Test: [  1/  1]	Loss 1.949 (1.949)	test_acc   0.16 (  0.16)	test_minacc   0.07 (  0.07)	test_majacc   0.98 (  0.98)	Loss_d 1.949 (1.949)	test_acc_d   0.16 (  0.16)	test_minacc_d   0.07 (  0.07)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.87 (  0.87)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/177/checkpoints/model_best.pth
Overall Timing[  5/  1]	epoch_time 0.0388 (0.0472)	validation_time 0.0003 (0.0014)	train_time 0.0384 (0.0455)
record: (train_acc, test_acc) (0.8622000259160996, 0.16100001335144043)
last accs (train_acc, test_acc) (0.8622000259160996, 0.16100001335144043)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 22.64it/s] 27%|##6       | 7/26 [00:00<00:00, 28.86it/s] 42%|####2     | 11/26 [00:00<00:00, 32.05it/s] 58%|#####7    | 15/26 [00:00<00:00, 34.09it/s] 73%|#######3  | 19/26 [00:00<00:00, 34.83it/s] 88%|########8 | 23/26 [00:00<00:00, 35.39it/s]100%|##########| 26/26 [00:00<00:00, 31.47it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 156 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 157 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 158 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 159 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 160 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 161 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 162 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 163 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 164 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 165 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 166 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 167 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 168 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 169 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 170 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 171 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 172 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 173 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 174 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 175 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 176 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 177 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 178 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 179 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 180 200
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 181 200
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [6][  26/  26]	Loss 0.369 (0.317)	train_nll   0.37 (  0.32)	train_penalty   0.04 (  0.02)	weight_norm  22.48 ( 22.43)	train_acc   0.85 (  0.86)	train_minacc   0.29 (  0.30)	train_majacc   0.96 (  0.96)	train_corr   0.00 (  0.00)	l1 6.7969 (6.6722)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.07it/s] 27%|##6       | 7/26 [00:00<00:00, 30.41it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.41it/s] 50%|#####     | 13/26 [00:00<00:00, 38.69it/s] 73%|#######3  | 19/26 [00:00<00:00, 44.43it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 44.43it/s] 96%|#########6| 25/26 [00:00<00:00, 44.53it/s]100%|##########| 26/26 [00:00<00:00, 36.72it/s]
Test: [   0/  26]	Loss 0.262 (0.262)	test_acc   0.90 (  0.90)	test_minacc   0.38 (  0.38)	test_majacc   0.97 (  0.97)	Loss_d 0.262 (0.262)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.90 (  0.90)
Test: [  10/  26]	Loss 0.327 (0.320)	test_acc   0.84 (  0.87)	test_minacc   0.30 (  0.33)	test_majacc   0.96 (  0.96)	Loss_d 0.327 (0.320)	test_acc_d   0.84 (  0.87)	test_minacc_d   0.30 (  0.33)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.88 (  0.89)
Test: [  20/  26]	Loss 0.291 (0.309)	test_acc   0.88 (  0.87)	test_minacc   0.33 (  0.34)	test_majacc   0.98 (  0.97)	Loss_d 0.291 (0.309)	test_acc_d   0.88 (  0.87)	test_minacc_d   0.33 (  0.34)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.90 (  0.89)
Test: [  26/  26]	Loss 0.346 (0.311)	test_acc   0.84 (  0.87)	test_minacc   0.22 (  0.33)	test_majacc   0.97 (  0.97)	Loss_d 0.346 (0.311)	test_acc_d   0.84 (  0.87)	test_minacc_d   0.22 (  0.33)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.88 (  0.89)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.22it/s]
Test: [  0/  1]	Loss 1.886 (1.886)	test_acc   0.23 (  0.23)	test_minacc   0.14 (  0.14)	test_majacc   0.97 (  0.97)	Loss_d 1.886 (1.886)	test_acc_d   0.23 (  0.23)	test_minacc_d   0.14 (  0.14)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.80 (  0.80)
Test: [  1/  1]	Loss 1.886 (1.886)	test_acc   0.23 (  0.23)	test_minacc   0.14 (  0.14)	test_majacc   0.97 (  0.97)	Loss_d 1.886 (1.886)	test_acc_d   0.23 (  0.23)	test_minacc_d   0.14 (  0.14)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.80 (  0.80)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/177/checkpoints/model_best.pth
Overall Timing[  6/  1]	epoch_time 0.0416 (0.0464)	validation_time 0.0005 (0.0013)	train_time 0.0411 (0.0448)
record: (train_acc, test_acc) (0.8707000271081925, 0.22700001299381256)
last accs (train_acc, test_acc) (0.8707000271081925, 0.22700001299381256)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.17it/s] 19%|#9        | 5/26 [00:00<00:00, 22.14it/s] 35%|###4      | 9/26 [00:00<00:00, 27.95it/s] 50%|#####     | 13/26 [00:00<00:00, 31.06it/s] 65%|######5   | 17/26 [00:00<00:00, 32.95it/s] 81%|########  | 21/26 [00:00<00:00, 34.22it/s] 96%|#########6| 25/26 [00:00<00:00, 34.65it/s]100%|##########| 26/26 [00:00<00:00, 28.72it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 182 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 183 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 184 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 185 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 186 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 187 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 188 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 189 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 190 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 191 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 192 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 193 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 194 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 195 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 196 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 197 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 198 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 199 200
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 200 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 201 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 202 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 203 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 204 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 205 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 206 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 207 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [7][  26/  26]	Loss 0.017 (0.223)	train_nll   0.48 (  0.32)	train_penalty   0.02 (  0.02)	weight_norm  22.59 ( 22.53)	train_acc   0.77 (  0.86)	train_minacc   0.68 (  0.35)	train_majacc   0.78 (  0.95)	train_corr   0.00 (  0.00)	l1 6.6005 (6.5944)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:09,  2.55it/s] 23%|##3       | 6/26 [00:00<00:01, 14.53it/s]                                               23%|##3       | 6/26 [00:00<00:01, 14.53it/s] 42%|####2     | 11/26 [00:00<00:00, 23.64it/s] 62%|######1   | 16/26 [00:00<00:00, 30.69it/s]                                                62%|######1   | 16/26 [00:00<00:00, 30.69it/s] 81%|########  | 21/26 [00:00<00:00, 32.73it/s]100%|##########| 26/26 [00:00<00:00, 36.89it/s]100%|##########| 26/26 [00:01<00:00, 25.34it/s]
Test: [   0/  26]	Loss 0.442 (0.442)	test_acc   0.81 (  0.81)	test_minacc   0.81 (  0.81)	test_majacc   0.80 (  0.80)	Loss_d 0.442 (0.442)	test_acc_d   0.81 (  0.81)	test_minacc_d   0.81 (  0.81)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.53 (  0.53)
Test: [  10/  26]	Loss 0.454 (0.446)	test_acc   0.77 (  0.78)	test_minacc   0.75 (  0.77)	test_majacc   0.77 (  0.78)	Loss_d 0.454 (0.446)	test_acc_d   0.77 (  0.78)	test_minacc_d   0.75 (  0.77)	test_majacc_d   0.77 (  0.78)	test_corr_d   0.48 (  0.52)
Test: [  20/  26]	Loss 0.404 (0.438)	test_acc   0.82 (  0.79)	test_minacc   0.82 (  0.80)	test_majacc   0.82 (  0.78)	Loss_d 0.404 (0.438)	test_acc_d   0.82 (  0.79)	test_minacc_d   0.82 (  0.80)	test_majacc_d   0.82 (  0.78)	test_corr_d   0.54 (  0.51)
Test: [  26/  26]	Loss 0.479 (0.441)	test_acc   0.77 (  0.79)	test_minacc   0.73 (  0.80)	test_majacc   0.78 (  0.79)	Loss_d 0.479 (0.441)	test_acc_d   0.77 (  0.79)	test_minacc_d   0.73 (  0.80)	test_majacc_d   0.78 (  0.79)	test_corr_d   0.52 (  0.51)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.40it/s]
Test: [  0/  1]	Loss 1.098 (1.098)	test_acc   0.60 (  0.60)	test_minacc   0.58 (  0.58)	test_majacc   0.84 (  0.84)	Loss_d 1.098 (1.098)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.84 (  0.84)	test_corr_d   0.03 (  0.03)
Test: [  1/  1]	Loss 1.098 (1.098)	test_acc   0.60 (  0.60)	test_minacc   0.58 (  0.58)	test_majacc   0.84 (  0.84)	Loss_d 1.098 (1.098)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.84 (  0.84)	test_corr_d   0.03 (  0.03)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/177/checkpoints/model_best.pth
Overall Timing[  7/  1]	epoch_time 0.0428 (0.0460)	validation_time 0.0004 (0.0011)	train_time 0.0425 (0.0445)
record: (train_acc, test_acc) (0.7868000278472901, 0.6030000448226929)
last accs (train_acc, test_acc) (0.7868000278472901, 0.6030000448226929)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.03it/s] 19%|#9        | 5/26 [00:00<00:00, 21.29it/s] 35%|###4      | 9/26 [00:00<00:00, 27.03it/s] 50%|#####     | 13/26 [00:00<00:00, 30.15it/s] 65%|######5   | 17/26 [00:00<00:00, 32.25it/s] 81%|########  | 21/26 [00:00<00:00, 33.67it/s] 96%|#########6| 25/26 [00:00<00:00, 33.98it/s]100%|##########| 26/26 [00:00<00:00, 28.67it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 208 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 209 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 210 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 211 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 212 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 213 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 214 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 215 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 216 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 217 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 218 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 219 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 220 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 221 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 222 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 223 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 224 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 225 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 226 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 227 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 228 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 229 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 230 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 231 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 232 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 233 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [8][  26/  26]	Loss 0.002 (0.002)	train_nll   0.51 (  0.51)	train_penalty   0.00 (  0.00)	weight_norm  22.64 ( 22.62)	train_acc   0.72 (  0.71)	train_minacc   0.83 (  0.81)	train_majacc   0.69 (  0.70)	train_corr   0.00 (  0.00)	l1 5.3209 (5.6540)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.38it/s] 23%|##3       | 6/26 [00:00<00:00, 28.69it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.69it/s] 42%|####2     | 11/26 [00:00<00:00, 36.58it/s] 62%|######1   | 16/26 [00:00<00:00, 36.79it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.79it/s] 81%|########  | 21/26 [00:00<00:00, 39.75it/s]100%|##########| 26/26 [00:00<00:00, 35.19it/s]
Test: [   0/  26]	Loss 0.557 (0.557)	test_acc   0.64 (  0.64)	test_minacc   0.81 (  0.81)	test_majacc   0.61 (  0.61)	Loss_d 0.557 (0.557)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.81 (  0.81)	test_majacc_d   0.61 (  0.61)	test_corr_d   0.37 (  0.37)
Test: [  10/  26]	Loss 0.579 (0.559)	test_acc   0.67 (  0.67)	test_minacc   0.78 (  0.75)	test_majacc   0.64 (  0.65)	Loss_d 0.579 (0.559)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.78 (  0.75)	test_majacc_d   0.64 (  0.65)	test_corr_d   0.32 (  0.37)
Test: [  20/  26]	Loss 0.560 (0.555)	test_acc   0.66 (  0.67)	test_minacc   0.72 (  0.77)	test_majacc   0.65 (  0.65)	Loss_d 0.560 (0.555)	test_acc_d   0.66 (  0.67)	test_minacc_d   0.72 (  0.77)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.37 (  0.36)
Test: [  26/  26]	Loss 0.518 (0.552)	test_acc   0.70 (  0.67)	test_minacc   0.83 (  0.77)	test_majacc   0.67 (  0.65)	Loss_d 0.518 (0.552)	test_acc_d   0.70 (  0.67)	test_minacc_d   0.83 (  0.77)	test_majacc_d   0.67 (  0.65)	test_corr_d   0.37 (  0.37)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.78it/s]
Test: [  0/  1]	Loss 0.824 (0.824)	test_acc   0.61 (  0.61)	test_minacc   0.59 (  0.59)	test_majacc   0.78 (  0.78)	Loss_d 0.824 (0.824)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.10 (  0.10)
Test: [  1/  1]	Loss 0.824 (0.824)	test_acc   0.61 (  0.61)	test_minacc   0.59 (  0.59)	test_majacc   0.78 (  0.78)	Loss_d 0.824 (0.824)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.10 (  0.10)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/177/checkpoints/model_best.pth
Overall Timing[  8/  1]	epoch_time 0.0394 (0.0452)	validation_time 0.0003 (0.0011)	train_time 0.0390 (0.0439)
record: (train_acc, test_acc) (0.6691000251173973, 0.6130000352859497)
last accs (train_acc, test_acc) (0.6691000251173973, 0.6130000352859497)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.88it/s] 19%|#9        | 5/26 [00:00<00:00, 22.38it/s] 35%|###4      | 9/26 [00:00<00:00, 28.14it/s] 50%|#####     | 13/26 [00:00<00:00, 31.36it/s] 65%|######5   | 17/26 [00:00<00:00, 33.41it/s] 81%|########  | 21/26 [00:00<00:00, 34.54it/s] 96%|#########6| 25/26 [00:00<00:00, 35.01it/s]100%|##########| 26/26 [00:00<00:00, 29.56it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 234 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 235 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 236 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 237 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 238 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 239 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 240 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 241 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 242 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 243 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 244 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 245 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 246 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 247 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 248 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 249 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 250 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 251 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 252 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 253 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 254 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 255 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 256 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 257 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 258 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 259 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [9][  26/  26]	Loss 0.000 (0.001)	train_nll   0.56 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  22.65 ( 22.65)	train_acc   0.68 (  0.66)	train_minacc   0.83 (  0.79)	train_majacc   0.65 (  0.64)	train_corr   0.00 (  0.00)	l1 5.2313 (5.2789)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.88it/s] 23%|##3       | 6/26 [00:00<00:00, 27.91it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.91it/s] 42%|####2     | 11/26 [00:00<00:00, 34.10it/s] 62%|######1   | 16/26 [00:00<00:00, 39.65it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.65it/s] 81%|########  | 21/26 [00:00<00:00, 38.38it/s]100%|##########| 26/26 [00:00<00:00, 41.33it/s]100%|##########| 26/26 [00:00<00:00, 33.05it/s]
Test: [   0/  26]	Loss 0.555 (0.555)	test_acc   0.65 (  0.65)	test_minacc   0.79 (  0.79)	test_majacc   0.63 (  0.63)	Loss_d 0.555 (0.555)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.79 (  0.79)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.36 (  0.36)
Test: [  10/  26]	Loss 0.584 (0.560)	test_acc   0.64 (  0.67)	test_minacc   0.74 (  0.75)	test_majacc   0.61 (  0.65)	Loss_d 0.584 (0.560)	test_acc_d   0.64 (  0.67)	test_minacc_d   0.74 (  0.75)	test_majacc_d   0.61 (  0.65)	test_corr_d   0.31 (  0.36)
Test: [  20/  26]	Loss 0.555 (0.560)	test_acc   0.68 (  0.67)	test_minacc   0.78 (  0.77)	test_majacc   0.66 (  0.65)	Loss_d 0.555 (0.560)	test_acc_d   0.68 (  0.67)	test_minacc_d   0.78 (  0.77)	test_majacc_d   0.66 (  0.65)	test_corr_d   0.36 (  0.36)
Test: [  26/  26]	Loss 0.549 (0.559)	test_acc   0.69 (  0.67)	test_minacc   0.83 (  0.77)	test_majacc   0.66 (  0.65)	Loss_d 0.549 (0.559)	test_acc_d   0.69 (  0.67)	test_minacc_d   0.83 (  0.77)	test_majacc_d   0.66 (  0.65)	test_corr_d   0.35 (  0.36)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.27it/s]
Test: [  0/  1]	Loss 0.807 (0.807)	test_acc   0.60 (  0.60)	test_minacc   0.58 (  0.58)	test_majacc   0.77 (  0.77)	Loss_d 0.807 (0.807)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.15 (  0.15)
Test: [  1/  1]	Loss 0.807 (0.807)	test_acc   0.60 (  0.60)	test_minacc   0.58 (  0.58)	test_majacc   0.77 (  0.77)	Loss_d 0.807 (0.807)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.15 (  0.15)
Overall Timing[  9/  1]	epoch_time 0.0400 (0.0447)	validation_time 0.0004 (0.0010)	train_time 0.0396 (0.0435)
record: (train_acc, test_acc) (0.6691000251173973, 0.6130000352859497)
last accs (train_acc, test_acc) (0.666200024664402, 0.6020000576972961)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.41it/s] 19%|#9        | 5/26 [00:00<00:00, 23.26it/s] 35%|###4      | 9/26 [00:00<00:00, 27.88it/s] 50%|#####     | 13/26 [00:00<00:00, 30.39it/s] 65%|######5   | 17/26 [00:00<00:00, 32.01it/s] 81%|########  | 21/26 [00:00<00:00, 33.10it/s] 96%|#########6| 25/26 [00:00<00:00, 33.93it/s]100%|##########| 26/26 [00:00<00:00, 28.82it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 260 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 261 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 262 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 263 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 264 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 265 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 266 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 267 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 268 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 269 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 270 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 271 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 272 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 273 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 274 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 275 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 276 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 277 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 278 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 279 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 280 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 281 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 282 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 283 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 284 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 285 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [10][  26/  26]	Loss 0.000 (0.001)	train_nll   0.57 (  0.58)	train_penalty   0.00 (  0.00)	weight_norm  22.65 ( 22.65)	train_acc   0.67 (  0.64)	train_minacc   0.80 (  0.76)	train_majacc   0.64 (  0.62)	train_corr   0.00 (  0.00)	l1 5.1771 (5.2080)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.07it/s] 15%|#5        | 4/26 [00:00<00:02, 10.63it/s] 38%|###8      | 10/26 [00:00<00:00, 24.58it/s]                                                38%|###8      | 10/26 [00:00<00:00, 24.58it/s] 62%|######1   | 16/26 [00:00<00:00, 32.47it/s]                                                62%|######1   | 16/26 [00:00<00:00, 32.47it/s] 85%|########4 | 22/26 [00:00<00:00, 38.74it/s]100%|##########| 26/26 [00:00<00:00, 29.53it/s]
Test: [   0/  26]	Loss 0.578 (0.578)	test_acc   0.62 (  0.62)	test_minacc   0.74 (  0.74)	test_majacc   0.60 (  0.60)	Loss_d 0.578 (0.578)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.34 (  0.34)
Test: [  10/  26]	Loss 0.601 (0.579)	test_acc   0.61 (  0.64)	test_minacc   0.77 (  0.74)	test_majacc   0.57 (  0.62)	Loss_d 0.601 (0.579)	test_acc_d   0.61 (  0.64)	test_minacc_d   0.77 (  0.74)	test_majacc_d   0.57 (  0.62)	test_corr_d   0.28 (  0.34)
Test: [  20/  26]	Loss 0.571 (0.579)	test_acc   0.65 (  0.64)	test_minacc   0.78 (  0.76)	test_majacc   0.63 (  0.62)	Loss_d 0.571 (0.579)	test_acc_d   0.65 (  0.64)	test_minacc_d   0.78 (  0.76)	test_majacc_d   0.63 (  0.62)	test_corr_d   0.34 (  0.33)
Test: [  26/  26]	Loss 0.569 (0.579)	test_acc   0.66 (  0.64)	test_minacc   0.80 (  0.76)	test_majacc   0.64 (  0.62)	Loss_d 0.569 (0.579)	test_acc_d   0.66 (  0.64)	test_minacc_d   0.80 (  0.76)	test_majacc_d   0.64 (  0.62)	test_corr_d   0.33 (  0.33)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.27it/s]
Test: [  0/  1]	Loss 0.806 (0.806)	test_acc   0.60 (  0.60)	test_minacc   0.58 (  0.58)	test_majacc   0.76 (  0.76)	Loss_d 0.806 (0.806)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.16 (  0.16)
Test: [  1/  1]	Loss 0.806 (0.806)	test_acc   0.60 (  0.60)	test_minacc   0.58 (  0.58)	test_majacc   0.76 (  0.76)	Loss_d 0.806 (0.806)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.16 (  0.16)
Overall Timing[ 10/  1]	epoch_time 0.0431 (0.0446)	validation_time 0.0003 (0.0009)	train_time 0.0427 (0.0434)
record: (train_acc, test_acc) (0.6691000251173973, 0.6130000352859497)
last accs (train_acc, test_acc) (0.6393000113964081, 0.6010000109672546)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.86it/s] 23%|##3       | 6/26 [00:00<00:00, 26.97it/s] 38%|###8      | 10/26 [00:00<00:00, 30.31it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.83it/s] 69%|######9   | 18/26 [00:00<00:00, 32.65it/s] 85%|########4 | 22/26 [00:00<00:00, 33.81it/s]100%|##########| 26/26 [00:00<00:00, 34.73it/s]100%|##########| 26/26 [00:00<00:00, 29.96it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 286 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 287 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 288 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 289 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 290 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 291 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 292 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 293 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 294 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 295 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 296 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 297 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 298 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 299 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 300 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 301 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 302 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 303 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 304 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 305 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 306 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 307 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 308 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 309 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 310 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 311 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [11][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.58)	train_penalty   0.00 (  0.00)	weight_norm  22.66 ( 22.65)	train_acc   0.66 (  0.63)	train_minacc   0.80 (  0.76)	train_majacc   0.64 (  0.61)	train_corr   0.00 (  0.00)	l1 5.1552 (5.1753)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.38it/s] 27%|##6       | 7/26 [00:00<00:00, 34.27it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.27it/s] 46%|####6     | 12/26 [00:00<00:00, 39.76it/s] 65%|######5   | 17/26 [00:00<00:00, 40.12it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.12it/s] 85%|########4 | 22/26 [00:00<00:00, 42.69it/s]100%|##########| 26/26 [00:00<00:00, 36.95it/s]
Test: [   0/  26]	Loss 0.575 (0.575)	test_acc   0.61 (  0.61)	test_minacc   0.77 (  0.77)	test_majacc   0.59 (  0.59)	Loss_d 0.575 (0.575)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.77 (  0.77)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.35 (  0.35)
Test: [  10/  26]	Loss 0.596 (0.574)	test_acc   0.61 (  0.65)	test_minacc   0.78 (  0.76)	test_majacc   0.57 (  0.63)	Loss_d 0.596 (0.574)	test_acc_d   0.61 (  0.65)	test_minacc_d   0.78 (  0.76)	test_majacc_d   0.57 (  0.63)	test_corr_d   0.30 (  0.35)
Test: [  20/  26]	Loss 0.567 (0.575)	test_acc   0.64 (  0.64)	test_minacc   0.78 (  0.76)	test_majacc   0.61 (  0.62)	Loss_d 0.567 (0.575)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.78 (  0.76)	test_majacc_d   0.61 (  0.62)	test_corr_d   0.35 (  0.34)
Test: [  26/  26]	Loss 0.568 (0.575)	test_acc   0.67 (  0.64)	test_minacc   0.80 (  0.76)	test_majacc   0.64 (  0.62)	Loss_d 0.568 (0.575)	test_acc_d   0.67 (  0.64)	test_minacc_d   0.80 (  0.76)	test_majacc_d   0.64 (  0.62)	test_corr_d   0.34 (  0.35)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.35it/s]
Test: [  0/  1]	Loss 0.810 (0.810)	test_acc   0.61 (  0.61)	test_minacc   0.59 (  0.59)	test_majacc   0.75 (  0.75)	Loss_d 0.810 (0.810)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.17 (  0.17)
Test: [  1/  1]	Loss 0.810 (0.810)	test_acc   0.61 (  0.61)	test_minacc   0.59 (  0.59)	test_majacc   0.75 (  0.75)	Loss_d 0.810 (0.810)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.17 (  0.17)
Overall Timing[ 11/  1]	epoch_time 0.0411 (0.0443)	validation_time 0.0004 (0.0009)	train_time 0.0408 (0.0432)
record: (train_acc, test_acc) (0.6691000251173973, 0.6130000352859497)
last accs (train_acc, test_acc) (0.6430000137090683, 0.6070000529289246)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 12.17it/s] 23%|##3       | 6/26 [00:00<00:00, 23.45it/s] 38%|###8      | 10/26 [00:00<00:00, 27.12it/s] 54%|#####3    | 14/26 [00:00<00:00, 29.66it/s] 69%|######9   | 18/26 [00:00<00:00, 31.64it/s] 85%|########4 | 22/26 [00:00<00:00, 33.99it/s]100%|##########| 26/26 [00:00<00:00, 35.08it/s]100%|##########| 26/26 [00:00<00:00, 28.90it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 312 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 313 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 314 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 315 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 316 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 317 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 318 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 319 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 320 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 321 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 322 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 323 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 324 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 325 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 326 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 327 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 328 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 329 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 330 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 331 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 332 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 333 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 334 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 335 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 336 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 337 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [12][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.58)	train_penalty   0.00 (  0.00)	weight_norm  22.66 ( 22.66)	train_acc   0.67 (  0.63)	train_minacc   0.80 (  0.77)	train_majacc   0.64 (  0.61)	train_corr   0.00 (  0.00)	l1 5.1481 (5.1622)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.24it/s] 27%|##6       | 7/26 [00:00<00:00, 35.07it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.07it/s] 46%|####6     | 12/26 [00:00<00:00, 39.63it/s] 65%|######5   | 17/26 [00:00<00:00, 38.01it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.01it/s] 85%|########4 | 22/26 [00:00<00:00, 40.49it/s]100%|##########| 26/26 [00:00<00:00, 35.57it/s]
Test: [   0/  26]	Loss 0.574 (0.574)	test_acc   0.60 (  0.60)	test_minacc   0.77 (  0.77)	test_majacc   0.58 (  0.58)	Loss_d 0.574 (0.574)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.77 (  0.77)	test_majacc_d   0.58 (  0.58)	test_corr_d   0.36 (  0.36)
Test: [  10/  26]	Loss 0.591 (0.571)	test_acc   0.62 (  0.65)	test_minacc   0.78 (  0.76)	test_majacc   0.58 (  0.63)	Loss_d 0.591 (0.571)	test_acc_d   0.62 (  0.65)	test_minacc_d   0.78 (  0.76)	test_majacc_d   0.58 (  0.63)	test_corr_d   0.31 (  0.36)
Test: [  20/  26]	Loss 0.563 (0.572)	test_acc   0.64 (  0.65)	test_minacc   0.78 (  0.77)	test_majacc   0.62 (  0.62)	Loss_d 0.563 (0.572)	test_acc_d   0.64 (  0.65)	test_minacc_d   0.78 (  0.77)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.36 (  0.35)
Test: [  26/  26]	Loss 0.567 (0.571)	test_acc   0.68 (  0.65)	test_minacc   0.78 (  0.77)	test_majacc   0.66 (  0.63)	Loss_d 0.567 (0.571)	test_acc_d   0.68 (  0.65)	test_minacc_d   0.78 (  0.77)	test_majacc_d   0.66 (  0.63)	test_corr_d   0.34 (  0.36)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 58.00it/s]
Test: [  0/  1]	Loss 0.815 (0.815)	test_acc   0.61 (  0.61)	test_minacc   0.60 (  0.60)	test_majacc   0.75 (  0.75)	Loss_d 0.815 (0.815)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.17 (  0.17)
Test: [  1/  1]	Loss 0.815 (0.815)	test_acc   0.61 (  0.61)	test_minacc   0.60 (  0.60)	test_majacc   0.75 (  0.75)	Loss_d 0.815 (0.815)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.17 (  0.17)
Overall Timing[ 12/  1]	epoch_time 0.0409 (0.0440)	validation_time 0.0004 (0.0008)	train_time 0.0405 (0.0430)
record: (train_acc, test_acc) (0.6691000251173973, 0.6130000352859497)
last accs (train_acc, test_acc) (0.6471000173687935, 0.612000048160553)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.30it/s] 15%|#5        | 4/26 [00:00<00:01, 18.63it/s] 31%|###       | 8/26 [00:00<00:00, 26.04it/s] 46%|####6     | 12/26 [00:00<00:00, 29.83it/s] 62%|######1   | 16/26 [00:00<00:00, 31.38it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.39it/s] 92%|#########2| 24/26 [00:00<00:00, 33.54it/s]100%|##########| 26/26 [00:00<00:00, 28.09it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 338 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 339 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 340 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 341 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 342 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 343 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 344 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 345 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 346 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 347 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 348 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 349 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 350 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 351 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 352 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 353 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 354 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 355 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 356 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 357 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 358 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 359 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 360 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 361 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 362 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 363 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [13][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.58)	train_penalty   0.00 (  0.00)	weight_norm  22.66 ( 22.66)	train_acc   0.65 (  0.63)	train_minacc   0.80 (  0.77)	train_majacc   0.62 (  0.60)	train_corr   0.00 (  0.00)	l1 5.1362 (5.1545)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.77it/s] 27%|##6       | 7/26 [00:00<00:00, 33.76it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.76it/s] 42%|####2     | 11/26 [00:00<00:00, 36.42it/s] 62%|######1   | 16/26 [00:00<00:00, 40.32it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.32it/s] 81%|########  | 21/26 [00:00<00:00, 39.14it/s]100%|##########| 26/26 [00:00<00:00, 42.08it/s]100%|##########| 26/26 [00:00<00:00, 35.81it/s]
Test: [   0/  26]	Loss 0.570 (0.570)	test_acc   0.61 (  0.61)	test_minacc   0.79 (  0.79)	test_majacc   0.59 (  0.59)	Loss_d 0.570 (0.570)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.79 (  0.79)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.37 (  0.37)
Test: [  10/  26]	Loss 0.585 (0.565)	test_acc   0.62 (  0.65)	test_minacc   0.75 (  0.76)	test_majacc   0.59 (  0.63)	Loss_d 0.585 (0.565)	test_acc_d   0.62 (  0.65)	test_minacc_d   0.75 (  0.76)	test_majacc_d   0.59 (  0.63)	test_corr_d   0.33 (  0.37)
Test: [  20/  26]	Loss 0.555 (0.566)	test_acc   0.66 (  0.65)	test_minacc   0.80 (  0.77)	test_majacc   0.64 (  0.63)	Loss_d 0.555 (0.566)	test_acc_d   0.66 (  0.65)	test_minacc_d   0.80 (  0.77)	test_majacc_d   0.64 (  0.63)	test_corr_d   0.37 (  0.37)
Test: [  26/  26]	Loss 0.564 (0.565)	test_acc   0.66 (  0.65)	test_minacc   0.80 (  0.77)	test_majacc   0.63 (  0.63)	Loss_d 0.564 (0.565)	test_acc_d   0.66 (  0.65)	test_minacc_d   0.80 (  0.77)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.36 (  0.37)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.40it/s]
Test: [  0/  1]	Loss 0.821 (0.821)	test_acc   0.62 (  0.62)	test_minacc   0.60 (  0.60)	test_majacc   0.75 (  0.75)	Loss_d 0.821 (0.821)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.17 (  0.17)
Test: [  1/  1]	Loss 0.821 (0.821)	test_acc   0.62 (  0.62)	test_minacc   0.60 (  0.60)	test_majacc   0.75 (  0.75)	Loss_d 0.821 (0.821)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.17 (  0.17)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/177/checkpoints/model_best.pth
Overall Timing[ 13/  1]	epoch_time 0.0478 (0.0443)	validation_time 0.0003 (0.0008)	train_time 0.0474 (0.0433)
record: (train_acc, test_acc) (0.6509000209569931, 0.6170000433921814)
last accs (train_acc, test_acc) (0.6509000209569931, 0.6170000433921814)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.99it/s] 19%|#9        | 5/26 [00:00<00:00, 22.83it/s] 35%|###4      | 9/26 [00:00<00:00, 28.36it/s] 50%|#####     | 13/26 [00:00<00:00, 31.01it/s] 65%|######5   | 17/26 [00:00<00:00, 32.76it/s] 81%|########  | 21/26 [00:00<00:00, 34.11it/s] 96%|#########6| 25/26 [00:00<00:00, 34.99it/s]100%|##########| 26/26 [00:00<00:00, 29.37it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 364 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 365 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 366 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 367 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 368 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 369 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 370 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 371 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 372 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 373 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 374 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 375 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 376 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 377 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 378 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 379 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 380 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 381 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 382 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 383 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 384 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 385 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 386 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 387 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 388 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 389 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [14][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.58)	train_penalty   0.00 (  0.00)	weight_norm  22.66 ( 22.66)	train_acc   0.65 (  0.63)	train_minacc   0.80 (  0.78)	train_majacc   0.62 (  0.61)	train_corr   0.00 (  0.00)	l1 5.1145 (5.1390)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.07it/s] 23%|##3       | 6/26 [00:00<00:00, 26.03it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.03it/s] 42%|####2     | 11/26 [00:00<00:00, 32.74it/s] 62%|######1   | 16/26 [00:00<00:00, 37.32it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.32it/s] 81%|########  | 21/26 [00:00<00:00, 40.42it/s]100%|##########| 26/26 [00:00<00:00, 42.79it/s]100%|##########| 26/26 [00:00<00:00, 33.90it/s]
Test: [   0/  26]	Loss 0.567 (0.567)	test_acc   0.62 (  0.62)	test_minacc   0.79 (  0.79)	test_majacc   0.59 (  0.59)	Loss_d 0.567 (0.567)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.79 (  0.79)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.38 (  0.38)
Test: [  10/  26]	Loss 0.577 (0.560)	test_acc   0.63 (  0.66)	test_minacc   0.77 (  0.77)	test_majacc   0.60 (  0.64)	Loss_d 0.577 (0.560)	test_acc_d   0.63 (  0.66)	test_minacc_d   0.77 (  0.77)	test_majacc_d   0.60 (  0.64)	test_corr_d   0.35 (  0.39)
Test: [  20/  26]	Loss 0.548 (0.562)	test_acc   0.66 (  0.65)	test_minacc   0.82 (  0.77)	test_majacc   0.64 (  0.63)	Loss_d 0.548 (0.562)	test_acc_d   0.66 (  0.65)	test_minacc_d   0.82 (  0.77)	test_majacc_d   0.64 (  0.63)	test_corr_d   0.39 (  0.38)
Test: [  26/  26]	Loss 0.560 (0.560)	test_acc   0.66 (  0.65)	test_minacc   0.80 (  0.77)	test_majacc   0.63 (  0.63)	Loss_d 0.560 (0.560)	test_acc_d   0.66 (  0.65)	test_minacc_d   0.80 (  0.77)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.37 (  0.38)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.43it/s]
Test: [  0/  1]	Loss 0.829 (0.829)	test_acc   0.61 (  0.61)	test_minacc   0.60 (  0.60)	test_majacc   0.73 (  0.73)	Loss_d 0.829 (0.829)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.19 (  0.19)
Test: [  1/  1]	Loss 0.829 (0.829)	test_acc   0.61 (  0.61)	test_minacc   0.60 (  0.60)	test_majacc   0.73 (  0.73)	Loss_d 0.829 (0.829)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.19 (  0.19)
Overall Timing[ 14/  1]	epoch_time 0.0377 (0.0439)	validation_time 0.0004 (0.0008)	train_time 0.0374 (0.0429)
record: (train_acc, test_acc) (0.6509000209569931, 0.6170000433921814)
last accs (train_acc, test_acc) (0.6533000254631043, 0.6140000224113464)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.38it/s] 19%|#9        | 5/26 [00:00<00:00, 22.55it/s] 35%|###4      | 9/26 [00:00<00:00, 28.02it/s] 50%|#####     | 13/26 [00:00<00:00, 30.68it/s] 65%|######5   | 17/26 [00:00<00:00, 31.79it/s] 81%|########  | 21/26 [00:00<00:00, 33.09it/s] 96%|#########6| 25/26 [00:00<00:00, 34.24it/s]100%|##########| 26/26 [00:00<00:00, 28.43it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 390 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 391 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 392 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 393 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 394 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 395 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 396 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 397 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 398 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 399 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 400 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 401 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 402 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 403 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 404 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 405 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 406 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 407 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 408 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 409 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 410 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 411 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 412 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 413 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 414 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 415 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [15][  26/  26]	Loss 0.000 (0.001)	train_nll   0.57 (  0.58)	train_penalty   0.00 (  0.00)	weight_norm  22.67 ( 22.66)	train_acc   0.64 (  0.63)	train_minacc   0.78 (  0.78)	train_majacc   0.62 (  0.60)	train_corr   0.00 (  0.00)	l1 5.0823 (5.1117)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.57it/s] 27%|##6       | 7/26 [00:00<00:00, 36.61it/s]                                               27%|##6       | 7/26 [00:00<00:00, 36.61it/s] 46%|####6     | 12/26 [00:00<00:00, 41.07it/s] 65%|######5   | 17/26 [00:00<00:00, 38.83it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.83it/s] 85%|########4 | 22/26 [00:00<00:00, 41.27it/s]100%|##########| 26/26 [00:00<00:00, 36.76it/s]
Test: [   0/  26]	Loss 0.565 (0.565)	test_acc   0.63 (  0.63)	test_minacc   0.79 (  0.79)	test_majacc   0.61 (  0.61)	Loss_d 0.565 (0.565)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.79 (  0.79)	test_majacc_d   0.61 (  0.61)	test_corr_d   0.39 (  0.39)
Test: [  10/  26]	Loss 0.568 (0.555)	test_acc   0.65 (  0.66)	test_minacc   0.78 (  0.76)	test_majacc   0.62 (  0.64)	Loss_d 0.568 (0.555)	test_acc_d   0.65 (  0.66)	test_minacc_d   0.78 (  0.76)	test_majacc_d   0.62 (  0.64)	test_corr_d   0.37 (  0.40)
Test: [  20/  26]	Loss 0.540 (0.557)	test_acc   0.67 (  0.65)	test_minacc   0.83 (  0.76)	test_majacc   0.65 (  0.63)	Loss_d 0.540 (0.557)	test_acc_d   0.67 (  0.65)	test_minacc_d   0.83 (  0.76)	test_majacc_d   0.65 (  0.63)	test_corr_d   0.40 (  0.39)
Test: [  26/  26]	Loss 0.556 (0.555)	test_acc   0.66 (  0.66)	test_minacc   0.80 (  0.76)	test_majacc   0.63 (  0.64)	Loss_d 0.556 (0.555)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.80 (  0.76)	test_majacc_d   0.63 (  0.64)	test_corr_d   0.39 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.08it/s]
Test: [  0/  1]	Loss 0.838 (0.838)	test_acc   0.61 (  0.61)	test_minacc   0.59 (  0.59)	test_majacc   0.74 (  0.74)	Loss_d 0.838 (0.838)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.21 (  0.21)
Test: [  1/  1]	Loss 0.838 (0.838)	test_acc   0.61 (  0.61)	test_minacc   0.59 (  0.59)	test_majacc   0.74 (  0.74)	Loss_d 0.838 (0.838)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.21 (  0.21)
Overall Timing[ 15/  1]	epoch_time 0.0406 (0.0437)	validation_time 0.0004 (0.0008)	train_time 0.0403 (0.0428)
record: (train_acc, test_acc) (0.6509000209569931, 0.6170000433921814)
last accs (train_acc, test_acc) (0.6570000240802765, 0.6070000529289246)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.56it/s] 19%|#9        | 5/26 [00:00<00:00, 23.94it/s] 35%|###4      | 9/26 [00:00<00:00, 27.96it/s] 50%|#####     | 13/26 [00:00<00:00, 30.35it/s] 65%|######5   | 17/26 [00:00<00:00, 31.50it/s] 81%|########  | 21/26 [00:00<00:00, 32.94it/s] 96%|#########6| 25/26 [00:00<00:00, 34.22it/s]100%|##########| 26/26 [00:00<00:00, 29.07it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 416 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 417 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 418 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 419 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 420 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 421 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 422 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 423 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 424 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 425 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 426 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 427 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 428 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 429 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 430 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 431 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 432 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 433 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 434 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 435 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 436 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 437 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 438 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 439 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 440 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 441 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [16][  26/  26]	Loss 0.000 (0.001)	train_nll   0.57 (  0.58)	train_penalty   0.00 (  0.00)	weight_norm  22.67 ( 22.67)	train_acc   0.62 (  0.63)	train_minacc   0.78 (  0.78)	train_majacc   0.59 (  0.60)	train_corr   0.00 (  0.00)	l1 5.0304 (5.0646)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.12it/s] 27%|##6       | 7/26 [00:00<00:00, 30.69it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.69it/s] 46%|####6     | 12/26 [00:00<00:00, 36.50it/s] 65%|######5   | 17/26 [00:00<00:00, 39.91it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.91it/s] 85%|########4 | 22/26 [00:00<00:00, 39.74it/s]100%|##########| 26/26 [00:00<00:00, 35.48it/s]
Test: [   0/  26]	Loss 0.561 (0.561)	test_acc   0.64 (  0.64)	test_minacc   0.79 (  0.79)	test_majacc   0.62 (  0.62)	Loss_d 0.561 (0.561)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.79 (  0.79)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.40 (  0.40)
Test: [  10/  26]	Loss 0.557 (0.550)	test_acc   0.67 (  0.67)	test_minacc   0.78 (  0.76)	test_majacc   0.64 (  0.65)	Loss_d 0.557 (0.550)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.78 (  0.76)	test_majacc_d   0.64 (  0.65)	test_corr_d   0.40 (  0.42)
Test: [  20/  26]	Loss 0.533 (0.552)	test_acc   0.68 (  0.66)	test_minacc   0.80 (  0.77)	test_majacc   0.66 (  0.64)	Loss_d 0.533 (0.552)	test_acc_d   0.68 (  0.66)	test_minacc_d   0.80 (  0.77)	test_majacc_d   0.66 (  0.64)	test_corr_d   0.43 (  0.41)
Test: [  26/  26]	Loss 0.552 (0.550)	test_acc   0.65 (  0.66)	test_minacc   0.76 (  0.76)	test_majacc   0.63 (  0.65)	Loss_d 0.552 (0.550)	test_acc_d   0.65 (  0.66)	test_minacc_d   0.76 (  0.76)	test_majacc_d   0.63 (  0.65)	test_corr_d   0.41 (  0.42)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.94it/s]
Test: [  0/  1]	Loss 0.850 (0.850)	test_acc   0.59 (  0.59)	test_minacc   0.57 (  0.57)	test_majacc   0.74 (  0.74)	Loss_d 0.850 (0.850)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.23 (  0.23)
Test: [  1/  1]	Loss 0.850 (0.850)	test_acc   0.59 (  0.59)	test_minacc   0.57 (  0.57)	test_majacc   0.74 (  0.74)	Loss_d 0.850 (0.850)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.23 (  0.23)
Overall Timing[ 16/  1]	epoch_time 0.0404 (0.0435)	validation_time 0.0003 (0.0007)	train_time 0.0401 (0.0426)
record: (train_acc, test_acc) (0.6509000209569931, 0.6170000433921814)
last accs (train_acc, test_acc) (0.6629000244736671, 0.5879999995231628)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.91it/s] 19%|#9        | 5/26 [00:00<00:00, 23.31it/s] 35%|###4      | 9/26 [00:00<00:00, 28.20it/s] 50%|#####     | 13/26 [00:00<00:00, 30.91it/s] 65%|######5   | 17/26 [00:00<00:00, 32.69it/s] 81%|########  | 21/26 [00:00<00:00, 32.44it/s] 96%|#########6| 25/26 [00:00<00:00, 33.93it/s]100%|##########| 26/26 [00:00<00:00, 29.04it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 442 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 443 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 444 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 445 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 446 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 447 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 448 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 449 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 450 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 451 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 452 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 453 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 454 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 455 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 456 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 457 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 458 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 459 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 460 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 461 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 462 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 463 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 464 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 465 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 466 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 467 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [17][  26/  26]	Loss 0.000 (0.001)	train_nll   0.58 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  22.68 ( 22.68)	train_acc   0.63 (  0.65)	train_minacc   0.78 (  0.74)	train_majacc   0.60 (  0.64)	train_corr   0.00 (  0.00)	l1 4.9980 (4.9671)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:08,  3.06it/s] 27%|##6       | 7/26 [00:00<00:00, 19.97it/s]                                               27%|##6       | 7/26 [00:00<00:00, 19.97it/s] 50%|#####     | 13/26 [00:00<00:00, 29.40it/s] 73%|#######3  | 19/26 [00:00<00:00, 35.11it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 35.11it/s] 92%|#########2| 24/26 [00:00<00:00, 38.70it/s]100%|##########| 26/26 [00:00<00:00, 29.46it/s]
Test: [   0/  26]	Loss 0.581 (0.581)	test_acc   0.58 (  0.58)	test_minacc   0.81 (  0.81)	test_majacc   0.55 (  0.55)	Loss_d 0.581 (0.581)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.81 (  0.81)	test_majacc_d   0.55 (  0.55)	test_corr_d   0.38 (  0.38)
Test: [  10/  26]	Loss 0.561 (0.561)	test_acc   0.65 (  0.63)	test_minacc   0.81 (  0.78)	test_majacc   0.61 (  0.60)	Loss_d 0.561 (0.561)	test_acc_d   0.65 (  0.63)	test_minacc_d   0.81 (  0.78)	test_majacc_d   0.61 (  0.60)	test_corr_d   0.38 (  0.40)
Test: [  20/  26]	Loss 0.539 (0.563)	test_acc   0.66 (  0.62)	test_minacc   0.82 (  0.79)	test_majacc   0.63 (  0.60)	Loss_d 0.539 (0.563)	test_acc_d   0.66 (  0.62)	test_minacc_d   0.82 (  0.79)	test_majacc_d   0.63 (  0.60)	test_corr_d   0.40 (  0.39)
Test: [  26/  26]	Loss 0.561 (0.559)	test_acc   0.65 (  0.63)	test_minacc   0.76 (  0.79)	test_majacc   0.63 (  0.61)	Loss_d 0.561 (0.559)	test_acc_d   0.65 (  0.63)	test_minacc_d   0.76 (  0.79)	test_majacc_d   0.63 (  0.61)	test_corr_d   0.39 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.04it/s]
Test: [  0/  1]	Loss 0.845 (0.845)	test_acc   0.64 (  0.64)	test_minacc   0.63 (  0.63)	test_majacc   0.74 (  0.74)	Loss_d 0.845 (0.845)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.17 (  0.17)
Test: [  1/  1]	Loss 0.845 (0.845)	test_acc   0.64 (  0.64)	test_minacc   0.63 (  0.63)	test_majacc   0.74 (  0.74)	Loss_d 0.845 (0.845)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.17 (  0.17)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/177/checkpoints/model_best.pth
Overall Timing[ 17/  1]	epoch_time 0.0417 (0.0434)	validation_time 0.0004 (0.0007)	train_time 0.0413 (0.0425)
record: (train_acc, test_acc) (0.6324000121355057, 0.6390000581741333)
last accs (train_acc, test_acc) (0.6324000121355057, 0.6390000581741333)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 13.13it/s] 23%|##3       | 6/26 [00:00<00:00, 23.91it/s] 38%|###8      | 10/26 [00:00<00:00, 28.35it/s] 54%|#####3    | 14/26 [00:00<00:00, 30.75it/s] 69%|######9   | 18/26 [00:00<00:00, 32.35it/s] 85%|########4 | 22/26 [00:00<00:00, 33.64it/s]100%|##########| 26/26 [00:00<00:00, 34.58it/s]100%|##########| 26/26 [00:00<00:00, 28.82it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 468 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 469 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 470 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 471 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 472 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 473 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 474 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 475 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 476 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 477 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 478 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 479 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 480 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 481 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 482 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 483 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 484 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 485 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 486 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 487 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 488 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 489 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 490 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 491 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 492 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 493 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [18][  26/  26]	Loss 0.001 (0.001)	train_nll   0.56 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  22.69 ( 22.69)	train_acc   0.66 (  0.65)	train_minacc   0.78 (  0.78)	train_majacc   0.64 (  0.62)	train_corr   0.00 (  0.00)	l1 4.9734 (4.9608)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.77it/s] 27%|##6       | 7/26 [00:00<00:00, 34.18it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.18it/s] 46%|####6     | 12/26 [00:00<00:00, 39.18it/s] 65%|######5   | 17/26 [00:00<00:00, 40.15it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.15it/s] 85%|########4 | 22/26 [00:00<00:00, 42.69it/s]100%|##########| 26/26 [00:00<00:00, 37.11it/s]
Test: [   0/  26]	Loss 0.561 (0.561)	test_acc   0.61 (  0.61)	test_minacc   0.79 (  0.79)	test_majacc   0.59 (  0.59)	Loss_d 0.561 (0.561)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.79 (  0.79)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.41 (  0.41)
Test: [  10/  26]	Loss 0.533 (0.546)	test_acc   0.68 (  0.65)	test_minacc   0.84 (  0.78)	test_majacc   0.64 (  0.63)	Loss_d 0.533 (0.546)	test_acc_d   0.68 (  0.65)	test_minacc_d   0.84 (  0.78)	test_majacc_d   0.64 (  0.63)	test_corr_d   0.43 (  0.43)
Test: [  20/  26]	Loss 0.521 (0.547)	test_acc   0.66 (  0.65)	test_minacc   0.78 (  0.79)	test_majacc   0.64 (  0.62)	Loss_d 0.521 (0.547)	test_acc_d   0.66 (  0.65)	test_minacc_d   0.78 (  0.79)	test_majacc_d   0.64 (  0.62)	test_corr_d   0.44 (  0.42)
Test: [  26/  26]	Loss 0.548 (0.544)	test_acc   0.66 (  0.65)	test_minacc   0.78 (  0.79)	test_majacc   0.64 (  0.63)	Loss_d 0.548 (0.544)	test_acc_d   0.66 (  0.65)	test_minacc_d   0.78 (  0.79)	test_majacc_d   0.64 (  0.63)	test_corr_d   0.43 (  0.43)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.54it/s]
Test: [  0/  1]	Loss 0.861 (0.861)	test_acc   0.61 (  0.61)	test_minacc   0.59 (  0.59)	test_majacc   0.76 (  0.76)	Loss_d 0.861 (0.861)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.23 (  0.23)
Test: [  1/  1]	Loss 0.861 (0.861)	test_acc   0.61 (  0.61)	test_minacc   0.59 (  0.59)	test_majacc   0.76 (  0.76)	Loss_d 0.861 (0.861)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.23 (  0.23)
Overall Timing[ 18/  1]	epoch_time 0.0454 (0.0435)	validation_time 0.0004 (0.0007)	train_time 0.0450 (0.0427)
record: (train_acc, test_acc) (0.6324000121355057, 0.6390000581741333)
last accs (train_acc, test_acc) (0.6549000197649002, 0.6060000061988831)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02, 10.91it/s] 23%|##3       | 6/26 [00:00<00:00, 22.73it/s] 38%|###8      | 10/26 [00:00<00:00, 28.01it/s] 54%|#####3    | 14/26 [00:00<00:00, 30.99it/s] 69%|######9   | 18/26 [00:00<00:00, 32.35it/s] 85%|########4 | 22/26 [00:00<00:00, 33.74it/s]100%|##########| 26/26 [00:00<00:00, 34.61it/s]100%|##########| 26/26 [00:00<00:00, 28.53it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 494 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 495 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 496 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 497 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 498 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 499 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 500 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 501 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 502 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 503 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 504 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 505 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 506 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 507 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 508 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 509 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 510 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 511 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 512 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 513 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 514 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 515 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 516 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 517 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 518 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 519 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [19][  26/  26]	Loss 0.002 (0.001)	train_nll   0.59 (  0.56)	train_penalty   0.00 (  0.00)	weight_norm  22.70 ( 22.69)	train_acc   0.60 (  0.65)	train_minacc   0.78 (  0.79)	train_majacc   0.57 (  0.63)	train_corr   0.00 (  0.00)	l1 5.0324 (4.9736)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.56it/s] 27%|##6       | 7/26 [00:00<00:00, 33.05it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.05it/s] 46%|####6     | 12/26 [00:00<00:00, 38.92it/s] 65%|######5   | 17/26 [00:00<00:00, 40.91it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.91it/s] 85%|########4 | 22/26 [00:00<00:00, 42.10it/s]100%|##########| 26/26 [00:00<00:00, 36.77it/s]
Test: [   0/  26]	Loss 0.591 (0.591)	test_acc   0.58 (  0.58)	test_minacc   0.81 (  0.81)	test_majacc   0.55 (  0.55)	Loss_d 0.591 (0.591)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.81 (  0.81)	test_majacc_d   0.55 (  0.55)	test_corr_d   0.33 (  0.33)
Test: [  10/  26]	Loss 0.547 (0.570)	test_acc   0.67 (  0.63)	test_minacc   0.83 (  0.79)	test_majacc   0.64 (  0.61)	Loss_d 0.547 (0.570)	test_acc_d   0.67 (  0.63)	test_minacc_d   0.83 (  0.79)	test_majacc_d   0.64 (  0.61)	test_corr_d   0.36 (  0.36)
Test: [  20/  26]	Loss 0.548 (0.572)	test_acc   0.65 (  0.63)	test_minacc   0.80 (  0.80)	test_majacc   0.62 (  0.60)	Loss_d 0.548 (0.572)	test_acc_d   0.65 (  0.63)	test_minacc_d   0.80 (  0.80)	test_majacc_d   0.62 (  0.60)	test_corr_d   0.36 (  0.35)
Test: [  26/  26]	Loss 0.558 (0.567)	test_acc   0.64 (  0.64)	test_minacc   0.78 (  0.80)	test_majacc   0.61 (  0.61)	Loss_d 0.558 (0.567)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.78 (  0.80)	test_majacc_d   0.61 (  0.61)	test_corr_d   0.35 (  0.36)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.50it/s]
Test: [  0/  1]	Loss 0.830 (0.830)	test_acc   0.66 (  0.66)	test_minacc   0.66 (  0.66)	test_majacc   0.73 (  0.73)	Loss_d 0.830 (0.830)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.08 (  0.08)
Test: [  1/  1]	Loss 0.830 (0.830)	test_acc   0.66 (  0.66)	test_minacc   0.66 (  0.66)	test_majacc   0.73 (  0.73)	Loss_d 0.830 (0.830)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.08 (  0.08)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/177/checkpoints/model_best.pth
Overall Timing[ 19/  1]	epoch_time 0.0390 (0.0432)	validation_time 0.0003 (0.0007)	train_time 0.0386 (0.0425)
record: (train_acc, test_acc) (0.6366000083088875, 0.6630000472068787)
last accs (train_acc, test_acc) (0.6366000083088875, 0.6630000472068787)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.48it/s] 19%|#9        | 5/26 [00:00<00:00, 23.62it/s] 35%|###4      | 9/26 [00:00<00:00, 28.13it/s] 50%|#####     | 13/26 [00:00<00:00, 30.12it/s] 65%|######5   | 17/26 [00:00<00:00, 30.92it/s] 81%|########  | 21/26 [00:00<00:00, 32.27it/s] 96%|#########6| 25/26 [00:00<00:00, 32.95it/s]100%|##########| 26/26 [00:00<00:00, 28.00it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 520 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 521 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 522 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 523 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 524 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 525 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 526 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 527 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 528 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 529 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 530 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 531 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 532 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 533 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 534 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 535 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 536 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 537 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 538 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 539 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 540 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 541 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 542 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 543 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 544 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 545 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [20][  26/  26]	Loss 0.000 (0.001)	train_nll   0.59 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  22.71 ( 22.71)	train_acc   0.61 (  0.66)	train_minacc   0.83 (  0.72)	train_majacc   0.56 (  0.65)	train_corr   0.00 (  0.00)	l1 4.8912 (4.7900)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:11,  2.08it/s] 19%|#9        | 5/26 [00:00<00:01, 10.59it/s] 38%|###8      | 10/26 [00:00<00:00, 20.08it/s]                                                38%|###8      | 10/26 [00:00<00:00, 20.08it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.76it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.91it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 32.91it/s] 96%|#########6| 25/26 [00:01<00:00, 35.57it/s]100%|##########| 26/26 [00:01<00:00, 23.84it/s]
Test: [   0/  26]	Loss 0.611 (0.611)	test_acc   0.57 (  0.57)	test_minacc   0.81 (  0.81)	test_majacc   0.54 (  0.54)	Loss_d 0.611 (0.611)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.81 (  0.81)	test_majacc_d   0.54 (  0.54)	test_corr_d   0.29 (  0.29)
Test: [  10/  26]	Loss 0.576 (0.600)	test_acc   0.63 (  0.60)	test_minacc   0.80 (  0.78)	test_majacc   0.60 (  0.57)	Loss_d 0.576 (0.600)	test_acc_d   0.63 (  0.60)	test_minacc_d   0.80 (  0.78)	test_majacc_d   0.60 (  0.57)	test_corr_d   0.31 (  0.30)
Test: [  20/  26]	Loss 0.575 (0.600)	test_acc   0.61 (  0.60)	test_minacc   0.82 (  0.79)	test_majacc   0.58 (  0.56)	Loss_d 0.575 (0.600)	test_acc_d   0.61 (  0.60)	test_minacc_d   0.82 (  0.79)	test_majacc_d   0.58 (  0.56)	test_corr_d   0.31 (  0.30)
Test: [  26/  26]	Loss 0.570 (0.594)	test_acc   0.64 (  0.60)	test_minacc   0.85 (  0.79)	test_majacc   0.60 (  0.57)	Loss_d 0.570 (0.594)	test_acc_d   0.64 (  0.60)	test_minacc_d   0.85 (  0.79)	test_majacc_d   0.60 (  0.57)	test_corr_d   0.33 (  0.31)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.13it/s]
Test: [  0/  1]	Loss 0.819 (0.819)	test_acc   0.64 (  0.64)	test_minacc   0.63 (  0.63)	test_majacc   0.70 (  0.70)	Loss_d 0.819 (0.819)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.70 (  0.70)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 0.819 (0.819)	test_acc   0.64 (  0.64)	test_minacc   0.63 (  0.63)	test_majacc   0.70 (  0.70)	Loss_d 0.819 (0.819)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.70 (  0.70)	test_corr_d   0.11 (  0.11)
Overall Timing[ 20/  1]	epoch_time 0.0435 (0.0433)	validation_time 0.0004 (0.0007)	train_time 0.0431 (0.0425)
record: (train_acc, test_acc) (0.6366000083088875, 0.6630000472068787)
last accs (train_acc, test_acc) (0.6044000023007393, 0.6380000114440918)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 13.06it/s] 23%|##3       | 6/26 [00:00<00:00, 24.22it/s] 38%|###8      | 10/26 [00:00<00:00, 29.65it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.55it/s] 69%|######9   | 18/26 [00:00<00:00, 33.99it/s] 85%|########4 | 22/26 [00:00<00:00, 35.24it/s]100%|##########| 26/26 [00:00<00:00, 36.24it/s]100%|##########| 26/26 [00:00<00:00, 30.26it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 546 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 547 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 548 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 549 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 550 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 551 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 552 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 553 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 554 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 555 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 556 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 557 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 558 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 559 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 560 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 561 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 562 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 563 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 564 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 565 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 566 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 567 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 568 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 569 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 570 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 571 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [21][  26/  26]	Loss 0.001 (0.001)	train_nll   0.55 (  0.56)	train_penalty   0.00 (  0.00)	weight_norm  22.72 ( 22.72)	train_acc   0.70 (  0.67)	train_minacc   0.68 (  0.68)	train_majacc   0.71 (  0.66)	train_corr   0.00 (  0.00)	l1 4.8146 (4.7746)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.32it/s] 23%|##3       | 6/26 [00:00<00:00, 30.73it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.73it/s] 42%|####2     | 11/26 [00:00<00:00, 33.13it/s] 62%|######1   | 16/26 [00:00<00:00, 37.93it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.93it/s] 81%|########  | 21/26 [00:00<00:00, 40.59it/s]100%|##########| 26/26 [00:00<00:00, 42.99it/s]100%|##########| 26/26 [00:00<00:00, 33.89it/s]
Test: [   0/  26]	Loss 0.554 (0.554)	test_acc   0.67 (  0.67)	test_minacc   0.83 (  0.83)	test_majacc   0.65 (  0.65)	Loss_d 0.554 (0.554)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.83 (  0.83)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.49 (  0.49)
Test: [  10/  26]	Loss 0.529 (0.551)	test_acc   0.71 (  0.67)	test_minacc   0.75 (  0.72)	test_majacc   0.70 (  0.67)	Loss_d 0.529 (0.551)	test_acc_d   0.71 (  0.67)	test_minacc_d   0.75 (  0.72)	test_majacc_d   0.70 (  0.67)	test_corr_d   0.49 (  0.49)
Test: [  20/  26]	Loss 0.520 (0.550)	test_acc   0.70 (  0.67)	test_minacc   0.75 (  0.73)	test_majacc   0.69 (  0.66)	Loss_d 0.520 (0.550)	test_acc_d   0.70 (  0.67)	test_minacc_d   0.75 (  0.73)	test_majacc_d   0.69 (  0.66)	test_corr_d   0.50 (  0.48)
Test: [  26/  26]	Loss 0.552 (0.546)	test_acc   0.72 (  0.68)	test_minacc   0.68 (  0.73)	test_majacc   0.73 (  0.67)	Loss_d 0.552 (0.546)	test_acc_d   0.72 (  0.68)	test_minacc_d   0.68 (  0.73)	test_majacc_d   0.73 (  0.67)	test_corr_d   0.49 (  0.49)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.98it/s]
Test: [  0/  1]	Loss 0.882 (0.882)	test_acc   0.50 (  0.50)	test_minacc   0.47 (  0.47)	test_majacc   0.83 (  0.83)	Loss_d 0.882 (0.882)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.21 (  0.21)
Test: [  1/  1]	Loss 0.882 (0.882)	test_acc   0.50 (  0.50)	test_minacc   0.47 (  0.47)	test_majacc   0.83 (  0.83)	Loss_d 0.882 (0.882)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.21 (  0.21)
Overall Timing[ 21/  1]	epoch_time 0.0392 (0.0431)	validation_time 0.0004 (0.0006)	train_time 0.0388 (0.0423)
record: (train_acc, test_acc) (0.6366000083088875, 0.6630000472068787)
last accs (train_acc, test_acc) (0.6806000309586525, 0.503000020980835)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.20it/s] 19%|#9        | 5/26 [00:00<00:00, 24.66it/s] 35%|###4      | 9/26 [00:00<00:00, 29.42it/s] 50%|#####     | 13/26 [00:00<00:00, 31.84it/s] 65%|######5   | 17/26 [00:00<00:00, 33.47it/s] 81%|########  | 21/26 [00:00<00:00, 34.88it/s] 96%|#########6| 25/26 [00:00<00:00, 34.97it/s]100%|##########| 26/26 [00:00<00:00, 30.03it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 572 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 573 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 574 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 575 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 576 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 577 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 578 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 579 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 580 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 581 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 582 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 583 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 584 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 585 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 586 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 587 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 588 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 589 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 590 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 591 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 592 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 593 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 594 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 595 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 596 200
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 597 200
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [22][  26/  26]	Loss 0.000 (0.002)	train_nll   0.53 (  0.56)	train_penalty   0.00 (  0.00)	weight_norm  22.73 ( 22.73)	train_acc   0.69 (  0.67)	train_minacc   0.73 (  0.76)	train_majacc   0.68 (  0.65)	train_corr   0.00 (  0.00)	l1 4.5638 (4.7644)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.33it/s] 27%|##6       | 7/26 [00:00<00:00, 32.86it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.86it/s] 46%|####6     | 12/26 [00:00<00:00, 38.55it/s] 65%|######5   | 17/26 [00:00<00:00, 42.14it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.14it/s] 85%|########4 | 22/26 [00:00<00:00, 41.41it/s]100%|##########| 26/26 [00:00<00:00, 37.19it/s]
Test: [   0/  26]	Loss 0.515 (0.515)	test_acc   0.70 (  0.70)	test_minacc   0.72 (  0.72)	test_majacc   0.69 (  0.69)	Loss_d 0.515 (0.515)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.69 (  0.69)	test_corr_d   0.46 (  0.46)
Test: [  10/  26]	Loss 0.528 (0.531)	test_acc   0.69 (  0.70)	test_minacc   0.67 (  0.71)	test_majacc   0.70 (  0.69)	Loss_d 0.528 (0.531)	test_acc_d   0.69 (  0.70)	test_minacc_d   0.67 (  0.71)	test_majacc_d   0.70 (  0.69)	test_corr_d   0.49 (  0.49)
Test: [  20/  26]	Loss 0.522 (0.531)	test_acc   0.72 (  0.70)	test_minacc   0.73 (  0.73)	test_majacc   0.72 (  0.69)	Loss_d 0.522 (0.531)	test_acc_d   0.72 (  0.70)	test_minacc_d   0.73 (  0.73)	test_majacc_d   0.72 (  0.69)	test_corr_d   0.51 (  0.48)
Test: [  26/  26]	Loss 0.532 (0.529)	test_acc   0.68 (  0.70)	test_minacc   0.73 (  0.72)	test_majacc   0.67 (  0.70)	Loss_d 0.532 (0.529)	test_acc_d   0.68 (  0.70)	test_minacc_d   0.73 (  0.72)	test_majacc_d   0.67 (  0.70)	test_corr_d   0.49 (  0.49)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.38it/s]
Test: [  0/  1]	Loss 0.894 (0.894)	test_acc   0.58 (  0.58)	test_minacc   0.56 (  0.56)	test_majacc   0.70 (  0.70)	Loss_d 0.894 (0.894)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.70 (  0.70)	test_corr_d   0.21 (  0.21)
Test: [  1/  1]	Loss 0.894 (0.894)	test_acc   0.58 (  0.58)	test_minacc   0.56 (  0.56)	test_majacc   0.70 (  0.70)	Loss_d 0.894 (0.894)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.70 (  0.70)	test_corr_d   0.21 (  0.21)
Overall Timing[ 22/  1]	epoch_time 0.0422 (0.0430)	validation_time 0.0004 (0.0006)	train_time 0.0418 (0.0423)
record: (train_acc, test_acc) (0.6366000083088875, 0.6630000472068787)
last accs (train_acc, test_acc) (0.6994000315666199, 0.578000009059906)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.01it/s] 12%|#1        | 3/26 [00:00<00:02, 11.25it/s] 27%|##6       | 7/26 [00:00<00:00, 20.02it/s] 38%|###8      | 10/26 [00:00<00:00, 22.23it/s] 50%|#####     | 13/26 [00:00<00:00, 24.37it/s] 65%|######5   | 17/26 [00:00<00:00, 27.95it/s] 77%|#######6  | 20/26 [00:00<00:00, 28.32it/s] 88%|########8 | 23/26 [00:00<00:00, 28.55it/s]100%|##########| 26/26 [00:01<00:00, 23.38it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 598 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 599 200
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 600 200
penalty weights 10000.0
l1 at pgd_anneal_iters 4.554433822631836
set z to 4.508889484405517
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 601 200
penalty weights 10000.0
args.step pgd_anneal_iters 601 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 602 200
penalty weights 10000.0
args.step pgd_anneal_iters 602 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 603 200
penalty weights 10000.0
args.step pgd_anneal_iters 603 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 604 200
penalty weights 10000.0
args.step pgd_anneal_iters 604 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 605 200
penalty weights 10000.0
args.step pgd_anneal_iters 605 600
dim_v 512
rho, theta 382 tensor(-0.0062, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 606 200
penalty weights 10000.0
args.step pgd_anneal_iters 606 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 607 200
penalty weights 10000.0
args.step pgd_anneal_iters 607 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 608 200
penalty weights 10000.0
args.step pgd_anneal_iters 608 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 609 200
penalty weights 10000.0
args.step pgd_anneal_iters 609 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 610 200
penalty weights 10000.0
args.step pgd_anneal_iters 610 600
dim_v 512
rho, theta 253 tensor(-0.0014, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 611 200
penalty weights 10000.0
args.step pgd_anneal_iters 611 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 612 200
penalty weights 10000.0
args.step pgd_anneal_iters 612 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 613 200
penalty weights 10000.0
args.step pgd_anneal_iters 613 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 614 200
penalty weights 10000.0
args.step pgd_anneal_iters 614 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 615 200
penalty weights 10000.0
args.step pgd_anneal_iters 615 600
dim_v 512
rho, theta 226 tensor(0.0117, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 616 200
penalty weights 10000.0
args.step pgd_anneal_iters 616 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 617 200
penalty weights 10000.0
args.step pgd_anneal_iters 617 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 618 200
penalty weights 10000.0
args.step pgd_anneal_iters 618 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 619 200
penalty weights 10000.0
args.step pgd_anneal_iters 619 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 620 200
penalty weights 10000.0
args.step pgd_anneal_iters 620 600
dim_v 512
rho, theta 211 tensor(0.0062, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 621 200
penalty weights 10000.0
args.step pgd_anneal_iters 621 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 622 200
penalty weights 10000.0
args.step pgd_anneal_iters 622 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 623 200
penalty weights 10000.0
args.step pgd_anneal_iters 623 600
final projection at end of training
dim_v 512
rho, theta 207 tensor(0.0025, device='cuda:0')
Epoch: [23][  26/  26]	Loss 0.002 (0.125)	train_nll   0.70 (  0.67)	train_penalty   0.00 (  0.12)	weight_norm  25.52 ( 23.53)	train_acc   0.54 (  0.67)	train_minacc   0.61 (  0.51)	train_majacc   0.53 (  0.70)	train_corr   0.00 (  0.00)	l1 5.3806 (5.6678)	zero_count 0.0000 (37.9080)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 21.22it/s] 31%|###       | 8/26 [00:00<00:00, 33.75it/s]                                               31%|###       | 8/26 [00:00<00:00, 33.75it/s] 50%|#####     | 13/26 [00:00<00:00, 38.58it/s] 69%|######9   | 18/26 [00:00<00:00, 41.16it/s]                                                69%|######9   | 18/26 [00:00<00:00, 41.16it/s] 88%|########8 | 23/26 [00:00<00:00, 40.19it/s]100%|##########| 26/26 [00:00<00:00, 36.49it/s]
Test: [   0/  26]	Loss 0.743 (0.743)	test_acc   0.54 (  0.54)	test_minacc   0.38 (  0.38)	test_majacc   0.56 (  0.56)	Loss_d 0.743 (0.743)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.56 (  0.56)	test_corr_d   0.15 (  0.15)
Test: [  10/  26]	Loss 0.702 (0.733)	test_acc   0.49 (  0.50)	test_minacc   0.51 (  0.49)	test_majacc   0.48 (  0.50)	Loss_d 0.702 (0.733)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.51 (  0.49)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.23 (  0.24)
Test: [  20/  26]	Loss 0.779 (0.725)	test_acc   0.48 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.48 (  0.50)	Loss_d 0.779 (0.725)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.30 (  0.26)
Test: [  26/  26]	Loss 0.670 (0.715)	test_acc   0.53 (  0.50)	test_minacc   0.66 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.670 (0.715)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.66 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.26 (  0.26)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.99it/s]
Test: [  0/  1]	Loss 0.934 (0.934)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.934 (0.934)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.18 (  0.18)
Test: [  1/  1]	Loss 0.934 (0.934)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.934 (0.934)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.18 (  0.18)
Overall Timing[ 23/  1]	epoch_time 0.0435 (0.0431)	validation_time 0.0004 (0.0006)	train_time 0.0431 (0.0423)
record: (train_acc, test_acc) (0.6366000083088875, 0.6630000472068787)
last accs (train_acc, test_acc) (0.500000012755394, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.58it/s] 19%|#9        | 5/26 [00:00<00:00, 21.35it/s] 35%|###4      | 9/26 [00:00<00:00, 26.07it/s] 50%|#####     | 13/26 [00:00<00:00, 28.28it/s] 65%|######5   | 17/26 [00:00<00:00, 28.78it/s] 81%|########  | 21/26 [00:00<00:00, 30.76it/s] 96%|#########6| 25/26 [00:00<00:00, 30.60it/s]100%|##########| 26/26 [00:00<00:00, 26.46it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 624 200
penalty weights 10000.0
args.step pgd_anneal_iters 624 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 625 200
penalty weights 10000.0
args.step pgd_anneal_iters 625 600
dim_v 512
rho, theta 203 tensor(0.0011, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 626 200
penalty weights 10000.0
args.step pgd_anneal_iters 626 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 627 200
penalty weights 10000.0
args.step pgd_anneal_iters 627 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 628 200
penalty weights 10000.0
args.step pgd_anneal_iters 628 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 629 200
penalty weights 10000.0
args.step pgd_anneal_iters 629 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 630 200
penalty weights 10000.0
args.step pgd_anneal_iters 630 600
dim_v 512
rho, theta 214 tensor(0.0004, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 631 200
penalty weights 10000.0
args.step pgd_anneal_iters 631 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 632 200
penalty weights 10000.0
args.step pgd_anneal_iters 632 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 633 200
penalty weights 10000.0
args.step pgd_anneal_iters 633 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 634 200
penalty weights 10000.0
args.step pgd_anneal_iters 634 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 635 200
penalty weights 10000.0
args.step pgd_anneal_iters 635 600
dim_v 512
rho, theta 214 tensor(-0.0003, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 636 200
penalty weights 10000.0
args.step pgd_anneal_iters 636 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 637 200
penalty weights 10000.0
args.step pgd_anneal_iters 637 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 638 200
penalty weights 10000.0
args.step pgd_anneal_iters 638 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 639 200
penalty weights 10000.0
args.step pgd_anneal_iters 639 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 640 200
penalty weights 10000.0
args.step pgd_anneal_iters 640 600
dim_v 512
rho, theta 262 tensor(-0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 641 200
penalty weights 10000.0
args.step pgd_anneal_iters 641 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 642 200
penalty weights 10000.0
args.step pgd_anneal_iters 642 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 643 200
penalty weights 10000.0
args.step pgd_anneal_iters 643 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 644 200
penalty weights 10000.0
args.step pgd_anneal_iters 644 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 645 200
penalty weights 10000.0
args.step pgd_anneal_iters 645 600
dim_v 512
rho, theta 244 tensor(-0.0006, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 646 200
penalty weights 10000.0
args.step pgd_anneal_iters 646 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 647 200
penalty weights 10000.0
args.step pgd_anneal_iters 647 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 648 200
penalty weights 10000.0
args.step pgd_anneal_iters 648 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 649 200
penalty weights 10000.0
args.step pgd_anneal_iters 649 600
final projection at end of training
dim_v 512
rho, theta 287 tensor(-0.0009, device='cuda:0')
Epoch: [24][  26/  26]	Loss 0.022 (0.007)	train_nll   0.72 (  0.69)	train_penalty   0.02 (  0.01)	weight_norm  27.32 ( 26.72)	train_acc   0.61 (  0.58)	train_minacc   0.20 (  0.39)	train_majacc   0.69 (  0.62)	train_corr   0.00 (  0.00)	l1 4.6692 (4.7257)	zero_count 0.0000 (67.1190)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.23it/s] 23%|##3       | 6/26 [00:00<00:00, 28.69it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.69it/s] 42%|####2     | 11/26 [00:00<00:00, 35.76it/s] 62%|######1   | 16/26 [00:00<00:00, 40.40it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.40it/s] 81%|########  | 21/26 [00:00<00:00, 39.36it/s]100%|##########| 26/26 [00:00<00:00, 42.24it/s]100%|##########| 26/26 [00:00<00:00, 34.47it/s]
Test: [   0/  26]	Loss 0.711 (0.711)	test_acc   0.51 (  0.51)	test_minacc   0.55 (  0.55)	test_majacc   0.50 (  0.50)	Loss_d 0.711 (0.711)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.32 (  0.32)
Test: [  10/  26]	Loss 0.703 (0.672)	test_acc   0.58 (  0.58)	test_minacc   0.48 (  0.56)	test_majacc   0.60 (  0.58)	Loss_d 0.703 (0.672)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.48 (  0.56)	test_majacc_d   0.60 (  0.58)	test_corr_d   0.40 (  0.36)
Test: [  20/  26]	Loss 0.673 (0.670)	test_acc   0.57 (  0.57)	test_minacc   0.48 (  0.56)	test_majacc   0.58 (  0.57)	Loss_d 0.673 (0.670)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.48 (  0.56)	test_majacc_d   0.58 (  0.57)	test_corr_d   0.35 (  0.35)
Test: [  26/  26]	Loss 0.714 (0.670)	test_acc   0.56 (  0.57)	test_minacc   0.46 (  0.55)	test_majacc   0.58 (  0.57)	Loss_d 0.714 (0.670)	test_acc_d   0.56 (  0.57)	test_minacc_d   0.46 (  0.55)	test_majacc_d   0.58 (  0.57)	test_corr_d   0.39 (  0.35)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.38it/s]
Test: [  0/  1]	Loss 1.133 (1.133)	test_acc   0.52 (  0.52)	test_minacc   0.51 (  0.51)	test_majacc   0.59 (  0.59)	Loss_d 1.133 (1.133)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.34 (  0.34)
Test: [  1/  1]	Loss 1.133 (1.133)	test_acc   0.52 (  0.52)	test_minacc   0.51 (  0.51)	test_majacc   0.59 (  0.59)	Loss_d 1.133 (1.133)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.34 (  0.34)
Overall Timing[ 24/  1]	epoch_time 0.0411 (0.0430)	validation_time 0.0003 (0.0006)	train_time 0.0408 (0.0423)
record: (train_acc, test_acc) (0.6366000083088875, 0.6630000472068787)
last accs (train_acc, test_acc) (0.5689000076651574, 0.51500004529953)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.42it/s] 15%|#5        | 4/26 [00:00<00:01, 13.52it/s] 27%|##6       | 7/26 [00:00<00:01, 18.84it/s] 42%|####2     | 11/26 [00:00<00:00, 23.32it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.44it/s] 69%|######9   | 18/26 [00:00<00:00, 26.66it/s] 81%|########  | 21/26 [00:00<00:00, 26.57it/s] 96%|#########6| 25/26 [00:01<00:00, 29.31it/s]100%|##########| 26/26 [00:01<00:00, 22.81it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 650 200
penalty weights 10000.0
args.step pgd_anneal_iters 650 600
dim_v 512
rho, theta 341 tensor(-0.0003, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 651 200
penalty weights 10000.0
args.step pgd_anneal_iters 651 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 652 200
penalty weights 10000.0
args.step pgd_anneal_iters 652 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 653 200
penalty weights 10000.0
args.step pgd_anneal_iters 653 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 654 200
penalty weights 10000.0
args.step pgd_anneal_iters 654 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 655 200
penalty weights 10000.0
args.step pgd_anneal_iters 655 600
dim_v 512
rho, theta 339 tensor(-0.0013, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 656 200
penalty weights 10000.0
args.step pgd_anneal_iters 656 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 657 200
penalty weights 10000.0
args.step pgd_anneal_iters 657 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 658 200
penalty weights 10000.0
args.step pgd_anneal_iters 658 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 659 200
penalty weights 10000.0
args.step pgd_anneal_iters 659 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 660 200
penalty weights 10000.0
args.step pgd_anneal_iters 660 600
dim_v 512
rho, theta 352 tensor(-0.0007, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 661 200
penalty weights 10000.0
args.step pgd_anneal_iters 661 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 662 200
penalty weights 10000.0
args.step pgd_anneal_iters 662 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 663 200
penalty weights 10000.0
args.step pgd_anneal_iters 663 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 664 200
penalty weights 10000.0
args.step pgd_anneal_iters 664 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 665 200
penalty weights 10000.0
args.step pgd_anneal_iters 665 600
dim_v 512
rho, theta 342 tensor(-0.0006, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 666 200
penalty weights 10000.0
args.step pgd_anneal_iters 666 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 667 200
penalty weights 10000.0
args.step pgd_anneal_iters 667 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 668 200
penalty weights 10000.0
args.step pgd_anneal_iters 668 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 669 200
penalty weights 10000.0
args.step pgd_anneal_iters 669 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 670 200
penalty weights 10000.0
args.step pgd_anneal_iters 670 600
dim_v 512
rho, theta 339 tensor(-0.0006, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 671 200
penalty weights 10000.0
args.step pgd_anneal_iters 671 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 672 200
penalty weights 10000.0
args.step pgd_anneal_iters 672 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 673 200
penalty weights 10000.0
args.step pgd_anneal_iters 673 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 674 200
penalty weights 10000.0
args.step pgd_anneal_iters 674 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 675 200
penalty weights 10000.0
args.step pgd_anneal_iters 675 600
dim_v 512
rho, theta 333 tensor(-0.0005, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [25][  26/  26]	Loss 0.000 (0.002)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  27.58 ( 27.50)	train_acc   0.69 (  0.61)	train_minacc   0.24 (  0.42)	train_majacc   0.78 (  0.64)	train_corr   0.00 (  0.00)	l1 4.5203 (4.5235)	zero_count 0.0000 (41.5740)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.22it/s] 23%|##3       | 6/26 [00:00<00:01, 17.96it/s]                                               23%|##3       | 6/26 [00:00<00:01, 17.96it/s] 42%|####2     | 11/26 [00:00<00:00, 26.78it/s] 62%|######1   | 16/26 [00:00<00:00, 33.54it/s]                                                62%|######1   | 16/26 [00:00<00:00, 33.54it/s] 81%|########  | 21/26 [00:00<00:00, 35.09it/s]100%|##########| 26/26 [00:00<00:00, 39.06it/s]100%|##########| 26/26 [00:00<00:00, 27.37it/s]
Test: [   0/  26]	Loss 0.669 (0.669)	test_acc   0.54 (  0.54)	test_minacc   0.38 (  0.38)	test_majacc   0.56 (  0.56)	Loss_d 0.669 (0.669)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.56 (  0.56)	test_corr_d   0.21 (  0.21)
Test: [  10/  26]	Loss 0.675 (0.671)	test_acc   0.49 (  0.53)	test_minacc   0.51 (  0.46)	test_majacc   0.48 (  0.54)	Loss_d 0.675 (0.671)	test_acc_d   0.49 (  0.53)	test_minacc_d   0.51 (  0.46)	test_majacc_d   0.48 (  0.54)	test_corr_d   0.34 (  0.30)
Test: [  20/  26]	Loss 0.683 (0.671)	test_acc   0.48 (  0.52)	test_minacc   0.45 (  0.47)	test_majacc   0.48 (  0.53)	Loss_d 0.683 (0.671)	test_acc_d   0.48 (  0.52)	test_minacc_d   0.45 (  0.47)	test_majacc_d   0.48 (  0.53)	test_corr_d   0.31 (  0.31)
Test: [  26/  26]	Loss 0.663 (0.671)	test_acc   0.66 (  0.53)	test_minacc   0.44 (  0.46)	test_majacc   0.70 (  0.54)	Loss_d 0.663 (0.671)	test_acc_d   0.66 (  0.53)	test_minacc_d   0.44 (  0.46)	test_majacc_d   0.70 (  0.54)	test_corr_d   0.28 (  0.30)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.43it/s]
Test: [  0/  1]	Loss 0.812 (0.812)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.812 (0.812)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.38 (  0.38)
Test: [  1/  1]	Loss 0.812 (0.812)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.812 (0.812)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.38 (  0.38)
Overall Timing[ 25/  1]	epoch_time 0.0426 (0.0430)	validation_time 0.0004 (0.0006)	train_time 0.0421 (0.0423)
record: (train_acc, test_acc) (0.6366000083088875, 0.6630000472068787)
last accs (train_acc, test_acc) (0.5311000116169453, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:09,  2.73it/s] 19%|#9        | 5/26 [00:00<00:01, 11.47it/s] 35%|###4      | 9/26 [00:00<00:00, 18.04it/s] 46%|####6     | 12/26 [00:00<00:00, 20.93it/s] 58%|#####7    | 15/26 [00:00<00:00, 22.80it/s] 73%|#######3  | 19/26 [00:00<00:00, 25.96it/s] 85%|########4 | 22/26 [00:01<00:00, 26.50it/s] 96%|#########6| 25/26 [00:01<00:00, 26.75it/s]100%|##########| 26/26 [00:01<00:00, 20.45it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 676 200
penalty weights 10000.0
args.step pgd_anneal_iters 676 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 677 200
penalty weights 10000.0
args.step pgd_anneal_iters 677 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 678 200
penalty weights 10000.0
args.step pgd_anneal_iters 678 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 679 200
penalty weights 10000.0
args.step pgd_anneal_iters 679 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 680 200
penalty weights 10000.0
args.step pgd_anneal_iters 680 600
dim_v 512
rho, theta 326 tensor(-0.0003, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 681 200
penalty weights 10000.0
args.step pgd_anneal_iters 681 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 682 200
penalty weights 10000.0
args.step pgd_anneal_iters 682 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 683 200
penalty weights 10000.0
args.step pgd_anneal_iters 683 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 684 200
penalty weights 10000.0
args.step pgd_anneal_iters 684 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 685 200
penalty weights 10000.0
args.step pgd_anneal_iters 685 600
dim_v 512
rho, theta 322 tensor(-0.0003, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 686 200
penalty weights 10000.0
args.step pgd_anneal_iters 686 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 687 200
penalty weights 10000.0
args.step pgd_anneal_iters 687 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 688 200
penalty weights 10000.0
args.step pgd_anneal_iters 688 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 689 200
penalty weights 10000.0
args.step pgd_anneal_iters 689 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 690 200
penalty weights 10000.0
args.step pgd_anneal_iters 690 600
dim_v 512
rho, theta 315 tensor(-0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 691 200
penalty weights 10000.0
args.step pgd_anneal_iters 691 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 692 200
penalty weights 10000.0
args.step pgd_anneal_iters 692 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 693 200
penalty weights 10000.0
args.step pgd_anneal_iters 693 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 694 200
penalty weights 10000.0
args.step pgd_anneal_iters 694 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 695 200
penalty weights 10000.0
args.step pgd_anneal_iters 695 600
dim_v 512
rho, theta 322 tensor(-0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 696 200
penalty weights 10000.0
args.step pgd_anneal_iters 696 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 697 200
penalty weights 10000.0
args.step pgd_anneal_iters 697 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 698 200
penalty weights 10000.0
args.step pgd_anneal_iters 698 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 699 200
penalty weights 10000.0
args.step pgd_anneal_iters 699 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 700 200
penalty weights 10000.0
args.step pgd_anneal_iters 700 600
dim_v 512
rho, theta 326 tensor(-0.0001, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 701 200
penalty weights 10000.0
args.step pgd_anneal_iters 701 600
final projection at end of training
dim_v 512
rho, theta 324 tensor(-1.8814e-05, device='cuda:0')
Epoch: [26][  26/  26]	Loss 0.000 (0.000)	train_nll   0.67 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  27.61 ( 27.60)	train_acc   0.71 (  0.59)	train_minacc   0.27 (  0.40)	train_majacc   0.80 (  0.62)	train_corr   0.00 (  0.00)	l1 4.5087 (4.5180)	zero_count 185.0000 (41.1680)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.83it/s] 23%|##3       | 6/26 [00:00<00:00, 27.16it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.16it/s] 42%|####2     | 11/26 [00:00<00:00, 35.21it/s] 62%|######1   | 16/26 [00:00<00:00, 39.90it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.90it/s] 81%|########  | 21/26 [00:00<00:00, 38.99it/s]100%|##########| 26/26 [00:00<00:00, 34.11it/s]
Test: [   0/  26]	Loss 0.675 (0.675)	test_acc   0.54 (  0.54)	test_minacc   0.38 (  0.38)	test_majacc   0.56 (  0.56)	Loss_d 0.675 (0.675)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.56 (  0.56)	test_corr_d   0.15 (  0.15)
Test: [  10/  26]	Loss 0.679 (0.677)	test_acc   0.49 (  0.56)	test_minacc   0.49 (  0.41)	test_majacc   0.50 (  0.58)	Loss_d 0.679 (0.677)	test_acc_d   0.49 (  0.56)	test_minacc_d   0.49 (  0.41)	test_majacc_d   0.50 (  0.58)	test_corr_d   0.24 (  0.21)
Test: [  20/  26]	Loss 0.683 (0.676)	test_acc   0.56 (  0.57)	test_minacc   0.38 (  0.41)	test_majacc   0.59 (  0.59)	Loss_d 0.683 (0.676)	test_acc_d   0.56 (  0.57)	test_minacc_d   0.38 (  0.41)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.22 (  0.22)
Test: [  26/  26]	Loss 0.671 (0.676)	test_acc   0.71 (  0.58)	test_minacc   0.27 (  0.40)	test_majacc   0.80 (  0.61)	Loss_d 0.671 (0.676)	test_acc_d   0.71 (  0.58)	test_minacc_d   0.27 (  0.40)	test_majacc_d   0.80 (  0.61)	test_corr_d   0.19 (  0.22)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.36it/s]
Test: [  0/  1]	Loss 0.774 (0.774)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.774 (0.774)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.30 (  0.30)
Test: [  1/  1]	Loss 0.774 (0.774)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.774 (0.774)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.30 (  0.30)
Overall Timing[ 26/  1]	epoch_time 0.0438 (0.0430)	validation_time 0.0004 (0.0006)	train_time 0.0434 (0.0423)
record: (train_acc, test_acc) (0.6366000083088875, 0.6630000472068787)
last accs (train_acc, test_acc) (0.5807000144124032, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.48it/s] 15%|#5        | 4/26 [00:00<00:01, 17.08it/s] 31%|###       | 8/26 [00:00<00:00, 24.02it/s] 42%|####2     | 11/26 [00:00<00:00, 24.44it/s] 54%|#####3    | 14/26 [00:00<00:00, 24.45it/s] 69%|######9   | 18/26 [00:00<00:00, 27.00it/s] 81%|########  | 21/26 [00:00<00:00, 27.01it/s] 92%|#########2| 24/26 [00:00<00:00, 27.79it/s]100%|##########| 26/26 [00:01<00:00, 24.21it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 702 200
penalty weights 10000.0
args.step pgd_anneal_iters 702 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 703 200
penalty weights 10000.0
args.step pgd_anneal_iters 703 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 704 200
penalty weights 10000.0
args.step pgd_anneal_iters 704 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 705 200
penalty weights 10000.0
args.step pgd_anneal_iters 705 600
dim_v 512
rho, theta 316 tensor(-8.3081e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 706 200
penalty weights 10000.0
args.step pgd_anneal_iters 706 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 707 200
penalty weights 10000.0
args.step pgd_anneal_iters 707 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 708 200
penalty weights 10000.0
args.step pgd_anneal_iters 708 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 709 200
penalty weights 10000.0
args.step pgd_anneal_iters 709 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 710 200
penalty weights 10000.0
args.step pgd_anneal_iters 710 600
dim_v 512
rho, theta 308 tensor(-8.2135e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 711 200
penalty weights 10000.0
args.step pgd_anneal_iters 711 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 712 200
penalty weights 10000.0
args.step pgd_anneal_iters 712 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 713 200
penalty weights 10000.0
args.step pgd_anneal_iters 713 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 714 200
penalty weights 10000.0
args.step pgd_anneal_iters 714 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 715 200
penalty weights 10000.0
args.step pgd_anneal_iters 715 600
dim_v 512
rho, theta 308 tensor(-5.6909e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 716 200
penalty weights 10000.0
args.step pgd_anneal_iters 716 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 717 200
penalty weights 10000.0
args.step pgd_anneal_iters 717 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 718 200
penalty weights 10000.0
args.step pgd_anneal_iters 718 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 719 200
penalty weights 10000.0
args.step pgd_anneal_iters 719 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 720 200
penalty weights 10000.0
args.step pgd_anneal_iters 720 600
dim_v 512
rho, theta 307 tensor(-4.8159e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 721 200
penalty weights 10000.0
args.step pgd_anneal_iters 721 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 722 200
penalty weights 10000.0
args.step pgd_anneal_iters 722 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 723 200
penalty weights 10000.0
args.step pgd_anneal_iters 723 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 724 200
penalty weights 10000.0
args.step pgd_anneal_iters 724 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 725 200
penalty weights 10000.0
args.step pgd_anneal_iters 725 600
dim_v 512
rho, theta 315 tensor(-6.1302e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 726 200
penalty weights 10000.0
args.step pgd_anneal_iters 726 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 727 200
penalty weights 10000.0
args.step pgd_anneal_iters 727 600
final projection at end of training
dim_v 512
rho, theta 323 tensor(-2.0920e-05, device='cuda:0')
Epoch: [27][  26/  26]	Loss 0.000 (0.000)	train_nll   0.67 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm  27.61 ( 27.61)	train_acc   0.71 (  0.59)	train_minacc   0.22 (  0.38)	train_majacc   0.80 (  0.62)	train_corr   0.00 (  0.00)	l1 4.5122 (4.5149)	zero_count 0.0000 (46.3320)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.78it/s] 27%|##6       | 7/26 [00:00<00:00, 31.29it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.29it/s] 46%|####6     | 12/26 [00:00<00:00, 37.38it/s] 65%|######5   | 17/26 [00:00<00:00, 38.36it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.36it/s] 85%|########4 | 22/26 [00:00<00:00, 41.04it/s]100%|##########| 26/26 [00:00<00:00, 35.07it/s]
Test: [   0/  26]	Loss 0.677 (0.677)	test_acc   0.54 (  0.54)	test_minacc   0.38 (  0.38)	test_majacc   0.56 (  0.56)	Loss_d 0.677 (0.677)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.56 (  0.56)	test_corr_d   0.13 (  0.13)
Test: [  10/  26]	Loss 0.681 (0.679)	test_acc   0.50 (  0.56)	test_minacc   0.49 (  0.43)	test_majacc   0.50 (  0.58)	Loss_d 0.681 (0.679)	test_acc_d   0.50 (  0.56)	test_minacc_d   0.49 (  0.43)	test_majacc_d   0.50 (  0.58)	test_corr_d   0.21 (  0.18)
Test: [  20/  26]	Loss 0.683 (0.679)	test_acc   0.52 (  0.56)	test_minacc   0.40 (  0.43)	test_majacc   0.55 (  0.58)	Loss_d 0.683 (0.679)	test_acc_d   0.52 (  0.56)	test_minacc_d   0.40 (  0.43)	test_majacc_d   0.55 (  0.58)	test_corr_d   0.19 (  0.19)
Test: [  26/  26]	Loss 0.674 (0.679)	test_acc   0.72 (  0.57)	test_minacc   0.24 (  0.41)	test_majacc   0.81 (  0.60)	Loss_d 0.674 (0.679)	test_acc_d   0.72 (  0.57)	test_minacc_d   0.24 (  0.41)	test_majacc_d   0.81 (  0.60)	test_corr_d   0.16 (  0.19)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 57.82it/s]
Test: [  0/  1]	Loss 0.763 (0.763)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.763 (0.763)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.28 (  0.28)
Test: [  1/  1]	Loss 0.763 (0.763)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.763 (0.763)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.28 (  0.28)
Overall Timing[ 27/  1]	epoch_time 0.0440 (0.0430)	validation_time 0.0004 (0.0006)	train_time 0.0436 (0.0424)
record: (train_acc, test_acc) (0.6366000083088875, 0.6630000472068787)
last accs (train_acc, test_acc) (0.5729000174105168, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.01it/s] 15%|#5        | 4/26 [00:00<00:01, 18.00it/s] 31%|###       | 8/26 [00:00<00:00, 22.75it/s] 46%|####6     | 12/26 [00:00<00:00, 27.38it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.53it/s] 69%|######9   | 18/26 [00:00<00:00, 27.71it/s] 85%|########4 | 22/26 [00:00<00:00, 29.61it/s] 96%|#########6| 25/26 [00:00<00:00, 29.07it/s]100%|##########| 26/26 [00:01<00:00, 25.20it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 728 200
penalty weights 10000.0
args.step pgd_anneal_iters 728 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 729 200
penalty weights 10000.0
args.step pgd_anneal_iters 729 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 730 200
penalty weights 10000.0
args.step pgd_anneal_iters 730 600
dim_v 512
rho, theta 318 tensor(-3.5612e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 731 200
penalty weights 10000.0
args.step pgd_anneal_iters 731 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 732 200
penalty weights 10000.0
args.step pgd_anneal_iters 732 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 733 200
penalty weights 10000.0
args.step pgd_anneal_iters 733 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 734 200
penalty weights 10000.0
args.step pgd_anneal_iters 734 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 735 200
penalty weights 10000.0
args.step pgd_anneal_iters 735 600
dim_v 512
rho, theta 306 tensor(-4.7634e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 736 200
penalty weights 10000.0
args.step pgd_anneal_iters 736 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 737 200
penalty weights 10000.0
args.step pgd_anneal_iters 737 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 738 200
penalty weights 10000.0
args.step pgd_anneal_iters 738 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 739 200
penalty weights 10000.0
args.step pgd_anneal_iters 739 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 740 200
penalty weights 10000.0
args.step pgd_anneal_iters 740 600
dim_v 512
rho, theta 321 tensor(-2.1536e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 741 200
penalty weights 10000.0
args.step pgd_anneal_iters 741 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 742 200
penalty weights 10000.0
args.step pgd_anneal_iters 742 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 743 200
penalty weights 10000.0
args.step pgd_anneal_iters 743 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 744 200
penalty weights 10000.0
args.step pgd_anneal_iters 744 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 745 200
penalty weights 10000.0
args.step pgd_anneal_iters 745 600
dim_v 512
rho, theta 297 tensor(-2.2747e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 746 200
penalty weights 10000.0
args.step pgd_anneal_iters 746 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 747 200
penalty weights 10000.0
args.step pgd_anneal_iters 747 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 748 200
penalty weights 10000.0
args.step pgd_anneal_iters 748 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 749 200
penalty weights 10000.0
args.step pgd_anneal_iters 749 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 750 200
penalty weights 10000.0
args.step pgd_anneal_iters 750 600
dim_v 512
rho, theta 314 tensor(-3.6343e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 751 200
penalty weights 10000.0
args.step pgd_anneal_iters 751 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 752 200
penalty weights 10000.0
args.step pgd_anneal_iters 752 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 753 200
penalty weights 10000.0
args.step pgd_anneal_iters 753 600
final projection at end of training
dim_v 512
rho, theta 316 tensor(-2.1376e-05, device='cuda:0')
Epoch: [28][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm  27.61 ( 27.61)	train_acc   0.72 (  0.57)	train_minacc   0.24 (  0.40)	train_majacc   0.81 (  0.60)	train_corr   0.00 (  0.00)	l1 4.5150 (4.5131)	zero_count 0.0000 (46.2930)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.28it/s] 23%|##3       | 6/26 [00:00<00:00, 30.10it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.10it/s] 42%|####2     | 11/26 [00:00<00:00, 36.83it/s] 62%|######1   | 16/26 [00:00<00:00, 41.13it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.13it/s] 81%|########  | 21/26 [00:00<00:00, 38.62it/s]100%|##########| 26/26 [00:00<00:00, 41.69it/s]100%|##########| 26/26 [00:00<00:00, 34.53it/s]
Test: [   0/  26]	Loss 0.679 (0.679)	test_acc   0.54 (  0.54)	test_minacc   0.38 (  0.38)	test_majacc   0.56 (  0.56)	Loss_d 0.679 (0.679)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.56 (  0.56)	test_corr_d   0.11 (  0.11)
Test: [  10/  26]	Loss 0.682 (0.681)	test_acc   0.49 (  0.54)	test_minacc   0.49 (  0.45)	test_majacc   0.50 (  0.56)	Loss_d 0.682 (0.681)	test_acc_d   0.49 (  0.54)	test_minacc_d   0.49 (  0.45)	test_majacc_d   0.50 (  0.56)	test_corr_d   0.19 (  0.16)
Test: [  20/  26]	Loss 0.684 (0.680)	test_acc   0.50 (  0.54)	test_minacc   0.43 (  0.45)	test_majacc   0.52 (  0.56)	Loss_d 0.684 (0.680)	test_acc_d   0.50 (  0.54)	test_minacc_d   0.43 (  0.45)	test_majacc_d   0.52 (  0.56)	test_corr_d   0.17 (  0.17)
Test: [  26/  26]	Loss 0.676 (0.680)	test_acc   0.72 (  0.55)	test_minacc   0.24 (  0.43)	test_majacc   0.81 (  0.57)	Loss_d 0.676 (0.680)	test_acc_d   0.72 (  0.55)	test_minacc_d   0.24 (  0.43)	test_majacc_d   0.81 (  0.57)	test_corr_d   0.14 (  0.17)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.47it/s]
Test: [  0/  1]	Loss 0.756 (0.756)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.756 (0.756)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.27 (  0.27)
Test: [  1/  1]	Loss 0.756 (0.756)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.756 (0.756)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.27 (  0.27)
Overall Timing[ 28/  1]	epoch_time 0.0423 (0.0430)	validation_time 0.0004 (0.0006)	train_time 0.0418 (0.0423)
record: (train_acc, test_acc) (0.6366000083088875, 0.6630000472068787)
last accs (train_acc, test_acc) (0.5525000163018704, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.45it/s] 15%|#5        | 4/26 [00:00<00:01, 17.12it/s] 27%|##6       | 7/26 [00:00<00:00, 19.67it/s] 42%|####2     | 11/26 [00:00<00:00, 24.98it/s] 54%|#####3    | 14/26 [00:00<00:00, 25.59it/s] 65%|######5   | 17/26 [00:00<00:00, 26.02it/s] 81%|########  | 21/26 [00:00<00:00, 29.09it/s] 92%|#########2| 24/26 [00:00<00:00, 28.49it/s]100%|##########| 26/26 [00:01<00:00, 24.08it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 754 200
penalty weights 10000.0
args.step pgd_anneal_iters 754 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 755 200
penalty weights 10000.0
args.step pgd_anneal_iters 755 600
dim_v 512
rho, theta 326 tensor(-1.5578e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 756 200
penalty weights 10000.0
args.step pgd_anneal_iters 756 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 757 200
penalty weights 10000.0
args.step pgd_anneal_iters 757 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 758 200
penalty weights 10000.0
args.step pgd_anneal_iters 758 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 759 200
penalty weights 10000.0
args.step pgd_anneal_iters 759 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 760 200
penalty weights 10000.0
args.step pgd_anneal_iters 760 600
dim_v 512
rho, theta 310 tensor(-3.6649e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 761 200
penalty weights 10000.0
args.step pgd_anneal_iters 761 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 762 200
penalty weights 10000.0
args.step pgd_anneal_iters 762 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 763 200
penalty weights 10000.0
args.step pgd_anneal_iters 763 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 764 200
penalty weights 10000.0
args.step pgd_anneal_iters 764 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 765 200
penalty weights 10000.0
args.step pgd_anneal_iters 765 600
dim_v 512
rho, theta 306 tensor(-1.6629e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 766 200
penalty weights 10000.0
args.step pgd_anneal_iters 766 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 767 200
penalty weights 10000.0
args.step pgd_anneal_iters 767 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 768 200
penalty weights 10000.0
args.step pgd_anneal_iters 768 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 769 200
penalty weights 10000.0
args.step pgd_anneal_iters 769 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 770 200
penalty weights 10000.0
args.step pgd_anneal_iters 770 600
dim_v 512
rho, theta 294 tensor(-1.5952e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 771 200
penalty weights 10000.0
args.step pgd_anneal_iters 771 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 772 200
penalty weights 10000.0
args.step pgd_anneal_iters 772 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 773 200
penalty weights 10000.0
args.step pgd_anneal_iters 773 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 774 200
penalty weights 10000.0
args.step pgd_anneal_iters 774 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 775 200
penalty weights 10000.0
args.step pgd_anneal_iters 775 600
dim_v 512
rho, theta 300 tensor(-2.3354e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 776 200
penalty weights 10000.0
args.step pgd_anneal_iters 776 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 777 200
penalty weights 10000.0
args.step pgd_anneal_iters 777 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 778 200
penalty weights 10000.0
args.step pgd_anneal_iters 778 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 779 200
penalty weights 10000.0
args.step pgd_anneal_iters 779 600
final projection at end of training
dim_v 512
rho, theta 311 tensor(-2.3409e-05, device='cuda:0')
Epoch: [29][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm  27.61 ( 27.61)	train_acc   0.70 (  0.55)	train_minacc   0.24 (  0.44)	train_majacc   0.79 (  0.57)	train_corr   0.00 (  0.00)	l1 4.5185 (4.5131)	zero_count 0.0000 (47.3460)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.22it/s] 31%|###       | 8/26 [00:00<00:00, 36.81it/s]                                               31%|###       | 8/26 [00:00<00:00, 36.81it/s] 50%|#####     | 13/26 [00:00<00:00, 37.06it/s] 69%|######9   | 18/26 [00:00<00:00, 39.82it/s]                                                69%|######9   | 18/26 [00:00<00:00, 39.82it/s] 88%|########8 | 23/26 [00:00<00:00, 41.67it/s]100%|##########| 26/26 [00:00<00:00, 34.72it/s]
Test: [   0/  26]	Loss 0.680 (0.680)	test_acc   0.54 (  0.54)	test_minacc   0.38 (  0.38)	test_majacc   0.56 (  0.56)	Loss_d 0.680 (0.680)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.56 (  0.56)	test_corr_d   0.11 (  0.11)
Test: [  10/  26]	Loss 0.683 (0.682)	test_acc   0.49 (  0.54)	test_minacc   0.49 (  0.47)	test_majacc   0.49 (  0.55)	Loss_d 0.683 (0.682)	test_acc_d   0.49 (  0.54)	test_minacc_d   0.49 (  0.47)	test_majacc_d   0.49 (  0.55)	test_corr_d   0.17 (  0.15)
Test: [  20/  26]	Loss 0.685 (0.681)	test_acc   0.49 (  0.53)	test_minacc   0.45 (  0.47)	test_majacc   0.50 (  0.54)	Loss_d 0.685 (0.681)	test_acc_d   0.49 (  0.53)	test_minacc_d   0.45 (  0.47)	test_majacc_d   0.50 (  0.54)	test_corr_d   0.16 (  0.16)
Test: [  26/  26]	Loss 0.677 (0.681)	test_acc   0.68 (  0.54)	test_minacc   0.24 (  0.45)	test_majacc   0.77 (  0.55)	Loss_d 0.677 (0.681)	test_acc_d   0.68 (  0.54)	test_minacc_d   0.24 (  0.45)	test_majacc_d   0.77 (  0.55)	test_corr_d   0.13 (  0.16)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.36it/s]
Test: [  0/  1]	Loss 0.752 (0.752)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.752 (0.752)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.26 (  0.26)
Test: [  1/  1]	Loss 0.752 (0.752)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.752 (0.752)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.26 (  0.26)
Overall Timing[ 29/  1]	epoch_time 0.0510 (0.0433)	validation_time 0.0004 (0.0006)	train_time 0.0506 (0.0426)
record: (train_acc, test_acc) (0.6366000083088875, 0.6630000472068787)
last accs (train_acc, test_acc) (0.5366000135838985, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 13.05it/s] 23%|##3       | 6/26 [00:00<00:00, 21.07it/s] 38%|###8      | 10/26 [00:00<00:00, 26.21it/s] 50%|#####     | 13/26 [00:00<00:00, 26.54it/s] 62%|######1   | 16/26 [00:00<00:00, 26.92it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.50it/s] 88%|########8 | 23/26 [00:00<00:00, 28.85it/s]100%|##########| 26/26 [00:00<00:00, 28.52it/s]100%|##########| 26/26 [00:01<00:00, 25.19it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 780 200
penalty weights 10000.0
args.step pgd_anneal_iters 780 600
dim_v 512
rho, theta 320 tensor(-4.7134e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 781 200
penalty weights 10000.0
args.step pgd_anneal_iters 781 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 782 200
penalty weights 10000.0
args.step pgd_anneal_iters 782 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 783 200
penalty weights 10000.0
args.step pgd_anneal_iters 783 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 784 200
penalty weights 10000.0
args.step pgd_anneal_iters 784 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 785 200
penalty weights 10000.0
args.step pgd_anneal_iters 785 600
dim_v 512
rho, theta 306 tensor(-2.9966e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 786 200
penalty weights 10000.0
args.step pgd_anneal_iters 786 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 787 200
penalty weights 10000.0
args.step pgd_anneal_iters 787 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 788 200
penalty weights 10000.0
args.step pgd_anneal_iters 788 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 789 200
penalty weights 10000.0
args.step pgd_anneal_iters 789 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 790 200
penalty weights 10000.0
args.step pgd_anneal_iters 790 600
dim_v 512
rho, theta 294 tensor(-1.7937e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 791 200
penalty weights 10000.0
args.step pgd_anneal_iters 791 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 792 200
penalty weights 10000.0
args.step pgd_anneal_iters 792 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 793 200
penalty weights 10000.0
args.step pgd_anneal_iters 793 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 794 200
penalty weights 10000.0
args.step pgd_anneal_iters 794 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 795 200
penalty weights 10000.0
args.step pgd_anneal_iters 795 600
dim_v 512
rho, theta 291 tensor(-1.2143e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 796 200
penalty weights 10000.0
args.step pgd_anneal_iters 796 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 797 200
penalty weights 10000.0
args.step pgd_anneal_iters 797 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 798 200
penalty weights 10000.0
args.step pgd_anneal_iters 798 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 799 200
penalty weights 10000.0
args.step pgd_anneal_iters 799 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 800 200
penalty weights 10000.0
args.step pgd_anneal_iters 800 600
dim_v 512
rho, theta 287 tensor(-1.5105e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 801 200
penalty weights 10000.0
args.step pgd_anneal_iters 801 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 802 200
penalty weights 10000.0
args.step pgd_anneal_iters 802 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 803 200
penalty weights 10000.0
args.step pgd_anneal_iters 803 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 804 200
penalty weights 10000.0
args.step pgd_anneal_iters 804 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 805 200
penalty weights 10000.0
args.step pgd_anneal_iters 805 600
dim_v 512
rho, theta 304 tensor(-2.4669e-05, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [30][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm  27.62 ( 27.62)	train_acc   0.68 (  0.54)	train_minacc   0.24 (  0.45)	train_majacc   0.77 (  0.55)	train_corr   0.00 (  0.00)	l1 4.5223 (4.5136)	zero_count 0.0000 (49.0230)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.02it/s] 23%|##3       | 6/26 [00:00<00:00, 23.43it/s]                                               23%|##3       | 6/26 [00:00<00:00, 23.43it/s] 42%|####2     | 11/26 [00:00<00:00, 32.45it/s] 62%|######1   | 16/26 [00:00<00:00, 37.79it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.79it/s] 81%|########  | 21/26 [00:00<00:00, 36.08it/s]100%|##########| 26/26 [00:00<00:00, 40.03it/s]100%|##########| 26/26 [00:00<00:00, 31.28it/s]
Test: [   0/  26]	Loss 0.681 (0.681)	test_acc   0.54 (  0.54)	test_minacc   0.38 (  0.38)	test_majacc   0.56 (  0.56)	Loss_d 0.681 (0.681)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.56 (  0.56)	test_corr_d   0.10 (  0.10)
Test: [  10/  26]	Loss 0.684 (0.683)	test_acc   0.49 (  0.53)	test_minacc   0.51 (  0.47)	test_majacc   0.49 (  0.54)	Loss_d 0.684 (0.683)	test_acc_d   0.49 (  0.53)	test_minacc_d   0.51 (  0.47)	test_majacc_d   0.49 (  0.54)	test_corr_d   0.16 (  0.14)
Test: [  20/  26]	Loss 0.685 (0.682)	test_acc   0.49 (  0.52)	test_minacc   0.45 (  0.48)	test_majacc   0.50 (  0.53)	Loss_d 0.685 (0.682)	test_acc_d   0.49 (  0.52)	test_minacc_d   0.45 (  0.48)	test_majacc_d   0.50 (  0.53)	test_corr_d   0.15 (  0.15)
Test: [  26/  26]	Loss 0.678 (0.682)	test_acc   0.68 (  0.53)	test_minacc   0.32 (  0.46)	test_majacc   0.75 (  0.54)	Loss_d 0.678 (0.682)	test_acc_d   0.68 (  0.53)	test_minacc_d   0.32 (  0.46)	test_majacc_d   0.75 (  0.54)	test_corr_d   0.12 (  0.15)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.98it/s]
Test: [  0/  1]	Loss 0.748 (0.748)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.748 (0.748)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.25 (  0.25)
Test: [  1/  1]	Loss 0.748 (0.748)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.748 (0.748)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.25 (  0.25)
Overall Timing[ 30/  1]	epoch_time 0.0498 (0.0435)	validation_time 0.0004 (0.0006)	train_time 0.0494 (0.0428)
record: (train_acc, test_acc) (0.6366000083088875, 0.6630000472068787)
last accs (train_acc, test_acc) (0.5283000186383724, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.72it/s] 19%|#9        | 5/26 [00:00<00:00, 21.92it/s] 35%|###4      | 9/26 [00:00<00:00, 27.16it/s] 46%|####6     | 12/26 [00:00<00:00, 28.04it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.00it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.07it/s] 85%|########4 | 22/26 [00:00<00:00, 28.94it/s] 96%|#########6| 25/26 [00:00<00:00, 28.69it/s]100%|##########| 26/26 [00:00<00:00, 26.01it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 806 200
penalty weights 10000.0
args.step pgd_anneal_iters 806 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 807 200
penalty weights 10000.0
args.step pgd_anneal_iters 807 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 808 200
penalty weights 10000.0
args.step pgd_anneal_iters 808 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 809 200
penalty weights 10000.0
args.step pgd_anneal_iters 809 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 810 200
penalty weights 10000.0
args.step pgd_anneal_iters 810 600
dim_v 512
rho, theta 300 tensor(-2.3463e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 811 200
penalty weights 10000.0
args.step pgd_anneal_iters 811 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 812 200
penalty weights 10000.0
args.step pgd_anneal_iters 812 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 813 200
penalty weights 10000.0
args.step pgd_anneal_iters 813 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 814 200
penalty weights 10000.0
args.step pgd_anneal_iters 814 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 815 200
penalty weights 10000.0
args.step pgd_anneal_iters 815 600
dim_v 512
rho, theta 292 tensor(-1.8366e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 816 200
penalty weights 10000.0
args.step pgd_anneal_iters 816 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 817 200
penalty weights 10000.0
args.step pgd_anneal_iters 817 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 818 200
penalty weights 10000.0
args.step pgd_anneal_iters 818 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 819 200
penalty weights 10000.0
args.step pgd_anneal_iters 819 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 820 200
penalty weights 10000.0
args.step pgd_anneal_iters 820 600
dim_v 512
rho, theta 285 tensor(-1.0464e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 821 200
penalty weights 10000.0
args.step pgd_anneal_iters 821 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 822 200
penalty weights 10000.0
args.step pgd_anneal_iters 822 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 823 200
penalty weights 10000.0
args.step pgd_anneal_iters 823 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 824 200
penalty weights 10000.0
args.step pgd_anneal_iters 824 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 825 200
penalty weights 10000.0
args.step pgd_anneal_iters 825 600
dim_v 512
rho, theta 284 tensor(-1.0884e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 826 200
penalty weights 10000.0
args.step pgd_anneal_iters 826 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 827 200
penalty weights 10000.0
args.step pgd_anneal_iters 827 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 828 200
penalty weights 10000.0
args.step pgd_anneal_iters 828 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 829 200
penalty weights 10000.0
args.step pgd_anneal_iters 829 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 830 200
penalty weights 10000.0
args.step pgd_anneal_iters 830 600
dim_v 512
rho, theta 299 tensor(-1.9889e-05, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 831 200
penalty weights 10000.0
args.step pgd_anneal_iters 831 600
final projection at end of training
dim_v 512
rho, theta 298 tensor(-3.2932e-06, device='cuda:0')
Epoch: [31][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm  27.62 ( 27.62)	train_acc   0.63 (  0.53)	train_minacc   0.34 (  0.46)	train_majacc   0.69 (  0.54)	train_corr   0.00 (  0.00)	l1 4.5089 (4.5131)	zero_count 212.0000 (47.8100)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 27.15it/s] 27%|##6       | 7/26 [00:00<00:00, 32.33it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.33it/s] 46%|####6     | 12/26 [00:00<00:00, 33.87it/s] 65%|######5   | 17/26 [00:00<00:00, 38.68it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.68it/s] 85%|########4 | 22/26 [00:00<00:00, 41.06it/s]100%|##########| 26/26 [00:00<00:00, 35.56it/s]
Test: [   0/  26]	Loss 0.681 (0.681)	test_acc   0.54 (  0.54)	test_minacc   0.38 (  0.38)	test_majacc   0.56 (  0.56)	Loss_d 0.681 (0.681)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.56 (  0.56)	test_corr_d   0.09 (  0.09)
Test: [  10/  26]	Loss 0.685 (0.684)	test_acc   0.49 (  0.52)	test_minacc   0.51 (  0.47)	test_majacc   0.48 (  0.53)	Loss_d 0.685 (0.684)	test_acc_d   0.49 (  0.52)	test_minacc_d   0.51 (  0.47)	test_majacc_d   0.48 (  0.53)	test_corr_d   0.15 (  0.13)
Test: [  20/  26]	Loss 0.686 (0.683)	test_acc   0.49 (  0.51)	test_minacc   0.45 (  0.47)	test_majacc   0.50 (  0.52)	Loss_d 0.686 (0.683)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.45 (  0.47)	test_majacc_d   0.50 (  0.52)	test_corr_d   0.14 (  0.14)
Test: [  26/  26]	Loss 0.679 (0.683)	test_acc   0.63 (  0.52)	test_minacc   0.34 (  0.46)	test_majacc   0.69 (  0.53)	Loss_d 0.679 (0.683)	test_acc_d   0.63 (  0.52)	test_minacc_d   0.34 (  0.46)	test_majacc_d   0.69 (  0.53)	test_corr_d   0.12 (  0.14)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.74it/s]
Test: [  0/  1]	Loss 0.745 (0.745)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.745 (0.745)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.25 (  0.25)
Test: [  1/  1]	Loss 0.745 (0.745)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.745 (0.745)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.25 (  0.25)
Overall Timing[ 31/  1]	epoch_time 0.0434 (0.0435)	validation_time 0.0004 (0.0006)	train_time 0.0430 (0.0428)
record: (train_acc, test_acc) (0.6366000083088875, 0.6630000472068787)
last accs (train_acc, test_acc) (0.5243000145852565, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.34it/s] 15%|#5        | 4/26 [00:00<00:01, 19.46it/s] 31%|###       | 8/26 [00:00<00:00, 26.78it/s] 42%|####2     | 11/26 [00:00<00:00, 27.14it/s] 54%|#####3    | 14/26 [00:00<00:00, 27.39it/s] 69%|######9   | 18/26 [00:00<00:00, 30.13it/s] 85%|########4 | 22/26 [00:00<00:00, 30.27it/s]100%|##########| 26/26 [00:00<00:00, 30.45it/s]100%|##########| 26/26 [00:00<00:00, 26.11it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 832 200
penalty weights 10000.0
args.step pgd_anneal_iters 832 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 833 200
penalty weights 10000.0
args.step pgd_anneal_iters 833 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 834 200
penalty weights 10000.0
args.step pgd_anneal_iters 834 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 835 200
penalty weights 10000.0
args.step pgd_anneal_iters 835 600
dim_v 512
rho, theta 301 tensor(-1.6884e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 836 200
penalty weights 10000.0
args.step pgd_anneal_iters 836 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 837 200
penalty weights 10000.0
args.step pgd_anneal_iters 837 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 838 200
penalty weights 10000.0
args.step pgd_anneal_iters 838 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 839 200
penalty weights 10000.0
args.step pgd_anneal_iters 839 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 840 200
penalty weights 10000.0
args.step pgd_anneal_iters 840 600
dim_v 512
rho, theta 294 tensor(-1.8194e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 841 200
penalty weights 10000.0
args.step pgd_anneal_iters 841 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 842 200
penalty weights 10000.0
args.step pgd_anneal_iters 842 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 843 200
penalty weights 10000.0
args.step pgd_anneal_iters 843 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 844 200
penalty weights 10000.0
args.step pgd_anneal_iters 844 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 845 200
penalty weights 10000.0
args.step pgd_anneal_iters 845 600
dim_v 512
rho, theta 287 tensor(-9.6692e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 846 200
penalty weights 10000.0
args.step pgd_anneal_iters 846 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 847 200
penalty weights 10000.0
args.step pgd_anneal_iters 847 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 848 200
penalty weights 10000.0
args.step pgd_anneal_iters 848 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 849 200
penalty weights 10000.0
args.step pgd_anneal_iters 849 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 850 200
penalty weights 10000.0
args.step pgd_anneal_iters 850 600
dim_v 512
rho, theta 283 tensor(-7.7251e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 851 200
penalty weights 10000.0
args.step pgd_anneal_iters 851 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 852 200
penalty weights 10000.0
args.step pgd_anneal_iters 852 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 853 200
penalty weights 10000.0
args.step pgd_anneal_iters 853 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 854 200
penalty weights 10000.0
args.step pgd_anneal_iters 854 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 855 200
penalty weights 10000.0
args.step pgd_anneal_iters 855 600
dim_v 512
rho, theta 293 tensor(-1.4381e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 856 200
penalty weights 10000.0
args.step pgd_anneal_iters 856 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 857 200
penalty weights 10000.0
args.step pgd_anneal_iters 857 600
final projection at end of training
dim_v 512
rho, theta 302 tensor(-5.9376e-06, device='cuda:0')
Epoch: [32][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm  27.62 ( 27.62)	train_acc   0.61 (  0.52)	train_minacc   0.46 (  0.47)	train_majacc   0.64 (  0.53)	train_corr   0.00 (  0.00)	l1 4.5110 (4.5119)	zero_count 0.0000 (51.0900)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.25it/s] 23%|##3       | 6/26 [00:00<00:00, 26.17it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.17it/s] 42%|####2     | 11/26 [00:00<00:00, 34.23it/s] 62%|######1   | 16/26 [00:00<00:00, 39.13it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.13it/s] 81%|########  | 21/26 [00:00<00:00, 37.14it/s]100%|##########| 26/26 [00:00<00:00, 40.46it/s]100%|##########| 26/26 [00:00<00:00, 33.18it/s]
Test: [   0/  26]	Loss 0.682 (0.682)	test_acc   0.54 (  0.54)	test_minacc   0.38 (  0.38)	test_majacc   0.56 (  0.56)	Loss_d 0.682 (0.682)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.56 (  0.56)	test_corr_d   0.09 (  0.09)
Test: [  10/  26]	Loss 0.686 (0.685)	test_acc   0.49 (  0.52)	test_minacc   0.51 (  0.48)	test_majacc   0.48 (  0.52)	Loss_d 0.686 (0.685)	test_acc_d   0.49 (  0.52)	test_minacc_d   0.51 (  0.48)	test_majacc_d   0.48 (  0.52)	test_corr_d   0.14 (  0.12)
Test: [  20/  26]	Loss 0.686 (0.684)	test_acc   0.49 (  0.51)	test_minacc   0.45 (  0.48)	test_majacc   0.49 (  0.52)	Loss_d 0.686 (0.684)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.45 (  0.48)	test_majacc_d   0.49 (  0.52)	test_corr_d   0.14 (  0.13)
Test: [  26/  26]	Loss 0.680 (0.684)	test_acc   0.61 (  0.52)	test_minacc   0.46 (  0.47)	test_majacc   0.64 (  0.53)	Loss_d 0.680 (0.684)	test_acc_d   0.61 (  0.52)	test_minacc_d   0.46 (  0.47)	test_majacc_d   0.64 (  0.53)	test_corr_d   0.11 (  0.13)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.19it/s]
Test: [  0/  1]	Loss 0.743 (0.743)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.743 (0.743)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.25 (  0.25)
Test: [  1/  1]	Loss 0.743 (0.743)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.743 (0.743)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.25 (  0.25)
Overall Timing[ 32/  1]	epoch_time 0.0416 (0.0434)	validation_time 0.0004 (0.0006)	train_time 0.0412 (0.0428)
record: (train_acc, test_acc) (0.6366000083088875, 0.6630000472068787)
last accs (train_acc, test_acc) (0.5210000126957893, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 18.68it/s] 23%|##3       | 6/26 [00:00<00:00, 22.34it/s] 35%|###4      | 9/26 [00:00<00:00, 24.97it/s] 50%|#####     | 13/26 [00:00<00:00, 26.99it/s] 65%|######5   | 17/26 [00:00<00:00, 30.05it/s] 81%|########  | 21/26 [00:00<00:00, 30.11it/s] 96%|#########6| 25/26 [00:00<00:00, 30.41it/s]100%|##########| 26/26 [00:00<00:00, 26.72it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 858 200
penalty weights 10000.0
args.step pgd_anneal_iters 858 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 859 200
penalty weights 10000.0
args.step pgd_anneal_iters 859 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 860 200
penalty weights 10000.0
args.step pgd_anneal_iters 860 600
dim_v 512
rho, theta 308 tensor(-1.1228e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 861 200
penalty weights 10000.0
args.step pgd_anneal_iters 861 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 862 200
penalty weights 10000.0
args.step pgd_anneal_iters 862 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 863 200
penalty weights 10000.0
args.step pgd_anneal_iters 863 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 864 200
penalty weights 10000.0
args.step pgd_anneal_iters 864 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 865 200
penalty weights 10000.0
args.step pgd_anneal_iters 865 600
dim_v 512
rho, theta 295 tensor(-1.8421e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 866 200
penalty weights 10000.0
args.step pgd_anneal_iters 866 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 867 200
penalty weights 10000.0
args.step pgd_anneal_iters 867 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 868 200
penalty weights 10000.0
args.step pgd_anneal_iters 868 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 869 200
penalty weights 10000.0
args.step pgd_anneal_iters 869 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 870 200
penalty weights 10000.0
args.step pgd_anneal_iters 870 600
dim_v 512
rho, theta 363 tensor(-5.1601e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 871 200
penalty weights 10000.0
args.step pgd_anneal_iters 871 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 872 200
penalty weights 10000.0
args.step pgd_anneal_iters 872 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 873 200
penalty weights 10000.0
args.step pgd_anneal_iters 873 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 874 200
penalty weights 10000.0
args.step pgd_anneal_iters 874 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 875 200
penalty weights 10000.0
args.step pgd_anneal_iters 875 600
dim_v 512
rho, theta 288 tensor(-6.8407e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 876 200
penalty weights 10000.0
args.step pgd_anneal_iters 876 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 877 200
penalty weights 10000.0
args.step pgd_anneal_iters 877 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 878 200
penalty weights 10000.0
args.step pgd_anneal_iters 878 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 879 200
penalty weights 10000.0
args.step pgd_anneal_iters 879 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 880 200
penalty weights 10000.0
args.step pgd_anneal_iters 880 600
dim_v 512
rho, theta 284 tensor(-1.0633e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 881 200
penalty weights 10000.0
args.step pgd_anneal_iters 881 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 882 200
penalty weights 10000.0
args.step pgd_anneal_iters 882 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 883 200
penalty weights 10000.0
args.step pgd_anneal_iters 883 600
final projection at end of training
dim_v 512
rho, theta 295 tensor(-7.2734e-06, device='cuda:0')
Epoch: [33][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm  27.62 ( 27.62)	train_acc   0.60 (  0.52)	train_minacc   0.54 (  0.47)	train_majacc   0.61 (  0.53)	train_corr   0.00 (  0.00)	l1 4.5127 (4.5114)	zero_count 0.0000 (47.8140)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.91it/s] 23%|##3       | 6/26 [00:00<00:00, 25.57it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.57it/s] 42%|####2     | 11/26 [00:00<00:00, 33.86it/s] 62%|######1   | 16/26 [00:00<00:00, 38.80it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.80it/s] 81%|########  | 21/26 [00:00<00:00, 38.18it/s]100%|##########| 26/26 [00:00<00:00, 41.39it/s]100%|##########| 26/26 [00:00<00:00, 33.25it/s]
Test: [   0/  26]	Loss 0.683 (0.683)	test_acc   0.54 (  0.54)	test_minacc   0.38 (  0.38)	test_majacc   0.56 (  0.56)	Loss_d 0.683 (0.683)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.56 (  0.56)	test_corr_d   0.09 (  0.09)
Test: [  10/  26]	Loss 0.687 (0.685)	test_acc   0.49 (  0.51)	test_minacc   0.49 (  0.48)	test_majacc   0.49 (  0.52)	Loss_d 0.687 (0.685)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.49 (  0.48)	test_majacc_d   0.49 (  0.52)	test_corr_d   0.14 (  0.12)
Test: [  20/  26]	Loss 0.686 (0.685)	test_acc   0.48 (  0.51)	test_minacc   0.45 (  0.48)	test_majacc   0.48 (  0.51)	Loss_d 0.686 (0.685)	test_acc_d   0.48 (  0.51)	test_minacc_d   0.45 (  0.48)	test_majacc_d   0.48 (  0.51)	test_corr_d   0.13 (  0.12)
Test: [  26/  26]	Loss 0.680 (0.684)	test_acc   0.60 (  0.51)	test_minacc   0.54 (  0.48)	test_majacc   0.61 (  0.52)	Loss_d 0.680 (0.684)	test_acc_d   0.60 (  0.51)	test_minacc_d   0.54 (  0.48)	test_majacc_d   0.61 (  0.52)	test_corr_d   0.11 (  0.13)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.72it/s]
Test: [  0/  1]	Loss 0.741 (0.741)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.741 (0.741)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.24 (  0.24)
Test: [  1/  1]	Loss 0.741 (0.741)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.741 (0.741)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.24 (  0.24)
Overall Timing[ 33/  1]	epoch_time 0.0441 (0.0434)	validation_time 0.0004 (0.0006)	train_time 0.0438 (0.0428)
record: (train_acc, test_acc) (0.6366000083088875, 0.6630000472068787)
last accs (train_acc, test_acc) (0.5147000136077404, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 12.16it/s] 23%|##3       | 6/26 [00:00<00:00, 23.68it/s] 35%|###4      | 9/26 [00:00<00:00, 24.80it/s] 46%|####6     | 12/26 [00:00<00:00, 25.88it/s] 62%|######1   | 16/26 [00:00<00:00, 29.07it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.76it/s] 85%|########4 | 22/26 [00:00<00:00, 29.07it/s]100%|##########| 26/26 [00:00<00:00, 31.58it/s]100%|##########| 26/26 [00:00<00:00, 26.30it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 884 200
penalty weights 10000.0
args.step pgd_anneal_iters 884 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 885 200
penalty weights 10000.0
args.step pgd_anneal_iters 885 600
dim_v 512
rho, theta 310 tensor(-5.6500e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 886 200
penalty weights 10000.0
args.step pgd_anneal_iters 886 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 887 200
penalty weights 10000.0
args.step pgd_anneal_iters 887 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 888 200
penalty weights 10000.0
args.step pgd_anneal_iters 888 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 889 200
penalty weights 10000.0
args.step pgd_anneal_iters 889 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 890 200
penalty weights 10000.0
args.step pgd_anneal_iters 890 600
dim_v 512
rho, theta 295 tensor(-1.7657e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 891 200
penalty weights 10000.0
args.step pgd_anneal_iters 891 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 892 200
penalty weights 10000.0
args.step pgd_anneal_iters 892 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 893 200
penalty weights 10000.0
args.step pgd_anneal_iters 893 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 894 200
penalty weights 10000.0
args.step pgd_anneal_iters 894 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 895 200
penalty weights 10000.0
args.step pgd_anneal_iters 895 600
dim_v 512
rho, theta 291 tensor(-7.1395e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 896 200
penalty weights 10000.0
args.step pgd_anneal_iters 896 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 897 200
penalty weights 10000.0
args.step pgd_anneal_iters 897 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 898 200
penalty weights 10000.0
args.step pgd_anneal_iters 898 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 899 200
penalty weights 10000.0
args.step pgd_anneal_iters 899 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 900 200
penalty weights 10000.0
args.step pgd_anneal_iters 900 600
dim_v 512
rho, theta 280 tensor(-5.6423e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 901 200
penalty weights 10000.0
args.step pgd_anneal_iters 901 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 902 200
penalty weights 10000.0
args.step pgd_anneal_iters 902 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 903 200
penalty weights 10000.0
args.step pgd_anneal_iters 903 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 904 200
penalty weights 10000.0
args.step pgd_anneal_iters 904 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 905 200
penalty weights 10000.0
args.step pgd_anneal_iters 905 600
dim_v 512
rho, theta 279 tensor(-7.9036e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 906 200
penalty weights 10000.0
args.step pgd_anneal_iters 906 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 907 200
penalty weights 10000.0
args.step pgd_anneal_iters 907 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 908 200
penalty weights 10000.0
args.step pgd_anneal_iters 908 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 909 200
penalty weights 10000.0
args.step pgd_anneal_iters 909 600
final projection at end of training
dim_v 512
rho, theta 292 tensor(-9.0371e-06, device='cuda:0')
Epoch: [34][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm  27.62 ( 27.62)	train_acc   0.57 (  0.51)	train_minacc   0.56 (  0.47)	train_majacc   0.57 (  0.52)	train_corr   0.00 (  0.00)	l1 4.5145 (4.5116)	zero_count 0.0000 (51.3240)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.94it/s] 23%|##3       | 6/26 [00:00<00:00, 30.20it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.20it/s] 42%|####2     | 11/26 [00:00<00:00, 38.85it/s] 62%|######1   | 16/26 [00:00<00:00, 39.41it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.41it/s] 81%|########  | 21/26 [00:00<00:00, 39.94it/s]100%|##########| 26/26 [00:00<00:00, 36.17it/s]
Test: [   0/  26]	Loss 0.683 (0.683)	test_acc   0.54 (  0.54)	test_minacc   0.38 (  0.38)	test_majacc   0.56 (  0.56)	Loss_d 0.683 (0.683)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.56 (  0.56)	test_corr_d   0.08 (  0.08)
Test: [  10/  26]	Loss 0.687 (0.686)	test_acc   0.49 (  0.51)	test_minacc   0.49 (  0.48)	test_majacc   0.49 (  0.51)	Loss_d 0.687 (0.686)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.49 (  0.48)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.13 (  0.11)
Test: [  20/  26]	Loss 0.687 (0.685)	test_acc   0.48 (  0.51)	test_minacc   0.47 (  0.48)	test_majacc   0.49 (  0.51)	Loss_d 0.687 (0.685)	test_acc_d   0.48 (  0.51)	test_minacc_d   0.47 (  0.48)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.13 (  0.12)
Test: [  26/  26]	Loss 0.681 (0.685)	test_acc   0.57 (  0.51)	test_minacc   0.56 (  0.47)	test_majacc   0.57 (  0.52)	Loss_d 0.681 (0.685)	test_acc_d   0.57 (  0.51)	test_minacc_d   0.56 (  0.47)	test_majacc_d   0.57 (  0.52)	test_corr_d   0.10 (  0.12)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.30it/s]
Test: [  0/  1]	Loss 0.739 (0.739)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.739 (0.739)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.24 (  0.24)
Test: [  1/  1]	Loss 0.739 (0.739)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.739 (0.739)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.24 (  0.24)
Overall Timing[ 34/  1]	epoch_time 0.0424 (0.0434)	validation_time 0.0004 (0.0005)	train_time 0.0419 (0.0428)
record: (train_acc, test_acc) (0.6366000083088875, 0.6630000472068787)
last accs (train_acc, test_acc) (0.5111000103652478, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.60it/s] 19%|#9        | 5/26 [00:00<00:01, 19.82it/s] 31%|###       | 8/26 [00:00<00:00, 23.31it/s] 42%|####2     | 11/26 [00:00<00:00, 25.30it/s] 58%|#####7    | 15/26 [00:00<00:00, 29.03it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.93it/s] 88%|########8 | 23/26 [00:00<00:00, 30.25it/s]100%|##########| 26/26 [00:01<00:00, 25.57it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 910 200
penalty weights 10000.0
args.step pgd_anneal_iters 910 600
dim_v 512
rho, theta 305 tensor(-1.7250e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 911 200
penalty weights 10000.0
args.step pgd_anneal_iters 911 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 912 200
penalty weights 10000.0
args.step pgd_anneal_iters 912 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 913 200
penalty weights 10000.0
args.step pgd_anneal_iters 913 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 914 200
penalty weights 10000.0
args.step pgd_anneal_iters 914 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 915 200
penalty weights 10000.0
args.step pgd_anneal_iters 915 600
dim_v 512
rho, theta 293 tensor(-1.5813e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 916 200
penalty weights 10000.0
args.step pgd_anneal_iters 916 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 917 200
penalty weights 10000.0
args.step pgd_anneal_iters 917 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 918 200
penalty weights 10000.0
args.step pgd_anneal_iters 918 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 919 200
penalty weights 10000.0
args.step pgd_anneal_iters 919 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 920 200
penalty weights 10000.0
args.step pgd_anneal_iters 920 600
dim_v 512
rho, theta 288 tensor(-9.1573e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 921 200
penalty weights 10000.0
args.step pgd_anneal_iters 921 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 922 200
penalty weights 10000.0
args.step pgd_anneal_iters 922 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 923 200
penalty weights 10000.0
args.step pgd_anneal_iters 923 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 924 200
penalty weights 10000.0
args.step pgd_anneal_iters 924 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 925 200
penalty weights 10000.0
args.step pgd_anneal_iters 925 600
dim_v 512
rho, theta 279 tensor(-5.4785e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 926 200
penalty weights 10000.0
args.step pgd_anneal_iters 926 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 927 200
penalty weights 10000.0
args.step pgd_anneal_iters 927 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 928 200
penalty weights 10000.0
args.step pgd_anneal_iters 928 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 929 200
penalty weights 10000.0
args.step pgd_anneal_iters 929 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 930 200
penalty weights 10000.0
args.step pgd_anneal_iters 930 600
dim_v 512
rho, theta 277 tensor(-5.4030e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 931 200
penalty weights 10000.0
args.step pgd_anneal_iters 931 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 932 200
penalty weights 10000.0
args.step pgd_anneal_iters 932 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 933 200
penalty weights 10000.0
args.step pgd_anneal_iters 933 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 934 200
penalty weights 10000.0
args.step pgd_anneal_iters 934 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 935 200
penalty weights 10000.0
args.step pgd_anneal_iters 935 600
dim_v 512
rho, theta 291 tensor(-1.0748e-05, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [35][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm  27.62 ( 27.62)	train_acc   0.56 (  0.51)	train_minacc   0.56 (  0.47)	train_majacc   0.56 (  0.52)	train_corr   0.00 (  0.00)	l1 4.5166 (4.5120)	zero_count 0.0000 (51.9480)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.85it/s] 23%|##3       | 6/26 [00:00<00:00, 27.79it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.79it/s] 42%|####2     | 11/26 [00:00<00:00, 35.14it/s] 62%|######1   | 16/26 [00:00<00:00, 39.79it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.79it/s] 81%|########  | 21/26 [00:00<00:00, 38.34it/s]100%|##########| 26/26 [00:00<00:00, 41.45it/s]100%|##########| 26/26 [00:00<00:00, 33.63it/s]
Test: [   0/  26]	Loss 0.683 (0.683)	test_acc   0.54 (  0.54)	test_minacc   0.40 (  0.40)	test_majacc   0.56 (  0.56)	Loss_d 0.683 (0.683)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.56 (  0.56)	test_corr_d   0.08 (  0.08)
Test: [  10/  26]	Loss 0.688 (0.686)	test_acc   0.49 (  0.51)	test_minacc   0.49 (  0.49)	test_majacc   0.50 (  0.51)	Loss_d 0.688 (0.686)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.50 (  0.51)	test_corr_d   0.13 (  0.11)
Test: [  20/  26]	Loss 0.687 (0.686)	test_acc   0.49 (  0.51)	test_minacc   0.47 (  0.48)	test_majacc   0.49 (  0.51)	Loss_d 0.687 (0.686)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.47 (  0.48)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.12 (  0.11)
Test: [  26/  26]	Loss 0.681 (0.685)	test_acc   0.55 (  0.51)	test_minacc   0.59 (  0.48)	test_majacc   0.55 (  0.52)	Loss_d 0.681 (0.685)	test_acc_d   0.55 (  0.51)	test_minacc_d   0.59 (  0.48)	test_majacc_d   0.55 (  0.52)	test_corr_d   0.10 (  0.12)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.05it/s]
Test: [  0/  1]	Loss 0.737 (0.737)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.737 (0.737)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.24 (  0.24)
Test: [  1/  1]	Loss 0.737 (0.737)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.737 (0.737)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.24 (  0.24)
Overall Timing[ 35/  1]	epoch_time 0.0398 (0.0433)	validation_time 0.0003 (0.0005)	train_time 0.0394 (0.0427)
record: (train_acc, test_acc) (0.6366000083088875, 0.6630000472068787)
last accs (train_acc, test_acc) (0.5106000168621541, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.20it/s] 19%|#9        | 5/26 [00:00<00:00, 23.82it/s] 35%|###4      | 9/26 [00:00<00:00, 28.90it/s] 46%|####6     | 12/26 [00:00<00:00, 29.02it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.62it/s] 73%|#######3  | 19/26 [00:00<00:00, 30.87it/s] 88%|########8 | 23/26 [00:00<00:00, 30.71it/s]100%|##########| 26/26 [00:00<00:00, 27.55it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 936 200
penalty weights 10000.0
args.step pgd_anneal_iters 936 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 937 200
penalty weights 10000.0
args.step pgd_anneal_iters 937 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 938 200
penalty weights 10000.0
args.step pgd_anneal_iters 938 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 939 200
penalty weights 10000.0
args.step pgd_anneal_iters 939 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 940 200
penalty weights 10000.0
args.step pgd_anneal_iters 940 600
dim_v 512
rho, theta 290 tensor(-1.2483e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 941 200
penalty weights 10000.0
args.step pgd_anneal_iters 941 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 942 200
penalty weights 10000.0
args.step pgd_anneal_iters 942 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 943 200
penalty weights 10000.0
args.step pgd_anneal_iters 943 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 944 200
penalty weights 10000.0
args.step pgd_anneal_iters 944 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 945 200
penalty weights 10000.0
args.step pgd_anneal_iters 945 600
dim_v 512
rho, theta 287 tensor(-1.0413e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 946 200
penalty weights 10000.0
args.step pgd_anneal_iters 946 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 947 200
penalty weights 10000.0
args.step pgd_anneal_iters 947 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 948 200
penalty weights 10000.0
args.step pgd_anneal_iters 948 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 949 200
penalty weights 10000.0
args.step pgd_anneal_iters 949 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 950 200
penalty weights 10000.0
args.step pgd_anneal_iters 950 600
dim_v 512
rho, theta 277 tensor(-5.4013e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 951 200
penalty weights 10000.0
args.step pgd_anneal_iters 951 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 952 200
penalty weights 10000.0
args.step pgd_anneal_iters 952 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 953 200
penalty weights 10000.0
args.step pgd_anneal_iters 953 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 954 200
penalty weights 10000.0
args.step pgd_anneal_iters 954 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 955 200
penalty weights 10000.0
args.step pgd_anneal_iters 955 600
dim_v 512
rho, theta 273 tensor(-4.1680e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 956 200
penalty weights 10000.0
args.step pgd_anneal_iters 956 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 957 200
penalty weights 10000.0
args.step pgd_anneal_iters 957 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 958 200
penalty weights 10000.0
args.step pgd_anneal_iters 958 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 959 200
penalty weights 10000.0
args.step pgd_anneal_iters 959 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 960 200
penalty weights 10000.0
args.step pgd_anneal_iters 960 600
dim_v 512
rho, theta 284 tensor(-8.6466e-06, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 961 200
penalty weights 10000.0
args.step pgd_anneal_iters 961 600
final projection at end of training
dim_v 512
rho, theta 285 tensor(-1.6456e-06, device='cuda:0')
Epoch: [36][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  27.62 ( 27.62)	train_acc   0.55 (  0.51)	train_minacc   0.59 (  0.47)	train_majacc   0.54 (  0.52)	train_corr   0.00 (  0.00)	l1 4.5089 (4.5118)	zero_count 227.0000 (50.0180)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.75it/s] 23%|##3       | 6/26 [00:00<00:00, 25.27it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.27it/s] 42%|####2     | 11/26 [00:00<00:00, 33.03it/s] 62%|######1   | 16/26 [00:00<00:00, 38.55it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.55it/s] 81%|########  | 21/26 [00:00<00:00, 37.57it/s]100%|##########| 26/26 [00:00<00:00, 40.77it/s]100%|##########| 26/26 [00:00<00:00, 32.30it/s]
Test: [   0/  26]	Loss 0.684 (0.684)	test_acc   0.54 (  0.54)	test_minacc   0.40 (  0.40)	test_majacc   0.56 (  0.56)	Loss_d 0.684 (0.684)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.56 (  0.56)	test_corr_d   0.08 (  0.08)
Test: [  10/  26]	Loss 0.688 (0.687)	test_acc   0.50 (  0.51)	test_minacc   0.48 (  0.48)	test_majacc   0.50 (  0.51)	Loss_d 0.688 (0.687)	test_acc_d   0.50 (  0.51)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.50 (  0.51)	test_corr_d   0.12 (  0.10)
Test: [  20/  26]	Loss 0.687 (0.686)	test_acc   0.49 (  0.51)	test_minacc   0.45 (  0.47)	test_majacc   0.50 (  0.51)	Loss_d 0.687 (0.686)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.45 (  0.47)	test_majacc_d   0.50 (  0.51)	test_corr_d   0.12 (  0.11)
Test: [  26/  26]	Loss 0.682 (0.686)	test_acc   0.54 (  0.51)	test_minacc   0.59 (  0.47)	test_majacc   0.53 (  0.52)	Loss_d 0.682 (0.686)	test_acc_d   0.54 (  0.51)	test_minacc_d   0.59 (  0.47)	test_majacc_d   0.53 (  0.52)	test_corr_d   0.10 (  0.11)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 56.29it/s]
Test: [  0/  1]	Loss 0.736 (0.736)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.736 (0.736)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.24 (  0.24)
Test: [  1/  1]	Loss 0.736 (0.736)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.736 (0.736)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.24 (  0.24)
Overall Timing[ 36/  1]	epoch_time 0.0438 (0.0433)	validation_time 0.0004 (0.0005)	train_time 0.0433 (0.0427)
record: (train_acc, test_acc) (0.6366000083088875, 0.6630000472068787)
last accs (train_acc, test_acc) (0.5098000174462796, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 18.89it/s] 23%|##3       | 6/26 [00:00<00:00, 22.88it/s] 35%|###4      | 9/26 [00:00<00:00, 24.42it/s] 50%|#####     | 13/26 [00:00<00:00, 27.76it/s] 62%|######1   | 16/26 [00:00<00:00, 27.86it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.87it/s] 88%|########8 | 23/26 [00:00<00:00, 29.98it/s]100%|##########| 26/26 [00:01<00:00, 25.96it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 962 200
penalty weights 10000.0
args.step pgd_anneal_iters 962 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 963 200
penalty weights 10000.0
args.step pgd_anneal_iters 963 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 964 200
penalty weights 10000.0
args.step pgd_anneal_iters 964 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 965 200
penalty weights 10000.0
args.step pgd_anneal_iters 965 600
dim_v 512
rho, theta 292 tensor(-9.2292e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 966 200
penalty weights 10000.0
args.step pgd_anneal_iters 966 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 967 200
penalty weights 10000.0
args.step pgd_anneal_iters 967 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 968 200
penalty weights 10000.0
args.step pgd_anneal_iters 968 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 969 200
penalty weights 10000.0
args.step pgd_anneal_iters 969 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 970 200
penalty weights 10000.0
args.step pgd_anneal_iters 970 600
dim_v 512
rho, theta 287 tensor(-1.1121e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 971 200
penalty weights 10000.0
args.step pgd_anneal_iters 971 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 972 200
penalty weights 10000.0
args.step pgd_anneal_iters 972 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 973 200
penalty weights 10000.0
args.step pgd_anneal_iters 973 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 974 200
penalty weights 10000.0
args.step pgd_anneal_iters 974 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 975 200
penalty weights 10000.0
args.step pgd_anneal_iters 975 600
dim_v 512
rho, theta 279 tensor(-5.5313e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 976 200
penalty weights 10000.0
args.step pgd_anneal_iters 976 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 977 200
penalty weights 10000.0
args.step pgd_anneal_iters 977 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 978 200
penalty weights 10000.0
args.step pgd_anneal_iters 978 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 979 200
penalty weights 10000.0
args.step pgd_anneal_iters 979 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 980 200
penalty weights 10000.0
args.step pgd_anneal_iters 980 600
dim_v 512
rho, theta 274 tensor(-3.2685e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 981 200
penalty weights 10000.0
args.step pgd_anneal_iters 981 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 982 200
penalty weights 10000.0
args.step pgd_anneal_iters 982 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 983 200
penalty weights 10000.0
args.step pgd_anneal_iters 983 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 984 200
penalty weights 10000.0
args.step pgd_anneal_iters 984 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 985 200
penalty weights 10000.0
args.step pgd_anneal_iters 985 600
dim_v 512
rho, theta 272 tensor(-6.1744e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 986 200
penalty weights 10000.0
args.step pgd_anneal_iters 986 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 987 200
penalty weights 10000.0
args.step pgd_anneal_iters 987 600
final projection at end of training
dim_v 512
rho, theta 284 tensor(-2.8242e-06, device='cuda:0')
Epoch: [37][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  27.62 ( 27.62)	train_acc   0.54 (  0.51)	train_minacc   0.59 (  0.46)	train_majacc   0.53 (  0.52)	train_corr   0.00 (  0.00)	l1 4.5102 (4.5111)	zero_count 0.0000 (53.7030)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.77it/s] 19%|#9        | 5/26 [00:00<00:00, 26.02it/s]                                               19%|#9        | 5/26 [00:00<00:00, 26.02it/s] 42%|####2     | 11/26 [00:00<00:00, 39.18it/s] 62%|######1   | 16/26 [00:00<00:00, 41.91it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.91it/s] 81%|########  | 21/26 [00:00<00:00, 39.42it/s]100%|##########| 26/26 [00:00<00:00, 41.72it/s]100%|##########| 26/26 [00:00<00:00, 34.95it/s]
Test: [   0/  26]	Loss 0.684 (0.684)	test_acc   0.54 (  0.54)	test_minacc   0.40 (  0.40)	test_majacc   0.56 (  0.56)	Loss_d 0.684 (0.684)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.56 (  0.56)	test_corr_d   0.08 (  0.08)
Test: [  10/  26]	Loss 0.688 (0.687)	test_acc   0.50 (  0.51)	test_minacc   0.48 (  0.48)	test_majacc   0.50 (  0.51)	Loss_d 0.688 (0.687)	test_acc_d   0.50 (  0.51)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.50 (  0.51)	test_corr_d   0.12 (  0.10)
Test: [  20/  26]	Loss 0.687 (0.686)	test_acc   0.49 (  0.51)	test_minacc   0.45 (  0.47)	test_majacc   0.50 (  0.52)	Loss_d 0.687 (0.686)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.45 (  0.47)	test_majacc_d   0.50 (  0.52)	test_corr_d   0.12 (  0.11)
Test: [  26/  26]	Loss 0.682 (0.686)	test_acc   0.54 (  0.51)	test_minacc   0.59 (  0.47)	test_majacc   0.53 (  0.52)	Loss_d 0.682 (0.686)	test_acc_d   0.54 (  0.51)	test_minacc_d   0.59 (  0.47)	test_majacc_d   0.53 (  0.52)	test_corr_d   0.10 (  0.11)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.39it/s]
Test: [  0/  1]	Loss 0.735 (0.735)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.735 (0.735)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.24 (  0.24)
Test: [  1/  1]	Loss 0.735 (0.735)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.735 (0.735)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.24 (  0.24)
Overall Timing[ 37/  1]	epoch_time 0.0421 (0.0433)	validation_time 0.0004 (0.0005)	train_time 0.0417 (0.0427)
record: (train_acc, test_acc) (0.6366000083088875, 0.6630000472068787)
last accs (train_acc, test_acc) (0.5107000160217285, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.77it/s] 15%|#5        | 4/26 [00:00<00:01, 14.19it/s] 31%|###       | 8/26 [00:00<00:00, 20.68it/s] 46%|####6     | 12/26 [00:00<00:00, 25.22it/s] 58%|#####7    | 15/26 [00:00<00:00, 25.88it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.51it/s] 88%|########8 | 23/26 [00:00<00:00, 28.25it/s]100%|##########| 26/26 [00:01<00:00, 23.68it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 988 200
penalty weights 10000.0
args.step pgd_anneal_iters 988 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 989 200
penalty weights 10000.0
args.step pgd_anneal_iters 989 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 990 200
penalty weights 10000.0
args.step pgd_anneal_iters 990 600
dim_v 512
rho, theta 293 tensor(-6.0205e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 991 200
penalty weights 10000.0
args.step pgd_anneal_iters 991 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 992 200
penalty weights 10000.0
args.step pgd_anneal_iters 992 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 993 200
penalty weights 10000.0
args.step pgd_anneal_iters 993 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 994 200
penalty weights 10000.0
args.step pgd_anneal_iters 994 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 995 200
penalty weights 10000.0
args.step pgd_anneal_iters 995 600
dim_v 512
rho, theta 287 tensor(-1.1976e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 996 200
penalty weights 10000.0
args.step pgd_anneal_iters 996 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 997 200
penalty weights 10000.0
args.step pgd_anneal_iters 997 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 998 200
penalty weights 10000.0
args.step pgd_anneal_iters 998 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 999 200
penalty weights 10000.0
args.step pgd_anneal_iters 999 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1000 200
penalty weights 10000.0
args.step pgd_anneal_iters 1000 600
dim_v 512
rho, theta 344 tensor(-3.5866e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1001 200
penalty weights 10000.0
args.step pgd_anneal_iters 1001 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1002 200
penalty weights 10000.0
args.step pgd_anneal_iters 1002 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1003 200
penalty weights 10000.0
args.step pgd_anneal_iters 1003 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1004 200
penalty weights 10000.0
args.step pgd_anneal_iters 1004 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1005 200
penalty weights 10000.0
args.step pgd_anneal_iters 1005 600
dim_v 512
rho, theta 280 tensor(-3.2360e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1006 200
penalty weights 10000.0
args.step pgd_anneal_iters 1006 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1007 200
penalty weights 10000.0
args.step pgd_anneal_iters 1007 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1008 200
penalty weights 10000.0
args.step pgd_anneal_iters 1008 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1009 200
penalty weights 10000.0
args.step pgd_anneal_iters 1009 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1010 200
penalty weights 10000.0
args.step pgd_anneal_iters 1010 600
dim_v 512
rho, theta 269 tensor(-4.6130e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1011 200
penalty weights 10000.0
args.step pgd_anneal_iters 1011 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1012 200
penalty weights 10000.0
args.step pgd_anneal_iters 1012 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1013 200
penalty weights 10000.0
args.step pgd_anneal_iters 1013 600
final projection at end of training
dim_v 512
rho, theta 274 tensor(-3.4038e-06, device='cuda:0')
Epoch: [38][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  27.62 ( 27.62)	train_acc   0.53 (  0.51)	train_minacc   0.61 (  0.46)	train_majacc   0.52 (  0.52)	train_corr   0.00 (  0.00)	l1 4.5111 (4.5108)	zero_count 0.0000 (51.0510)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.22it/s] 19%|#9        | 5/26 [00:00<00:00, 23.91it/s] 38%|###8      | 10/26 [00:00<00:00, 34.45it/s]                                                38%|###8      | 10/26 [00:00<00:00, 34.45it/s] 58%|#####7    | 15/26 [00:00<00:00, 34.97it/s] 77%|#######6  | 20/26 [00:00<00:00, 38.45it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 38.45it/s] 96%|#########6| 25/26 [00:00<00:00, 41.38it/s]100%|##########| 26/26 [00:00<00:00, 34.60it/s]
Test: [   0/  26]	Loss 0.684 (0.684)	test_acc   0.54 (  0.54)	test_minacc   0.40 (  0.40)	test_majacc   0.56 (  0.56)	Loss_d 0.684 (0.684)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.56 (  0.56)	test_corr_d   0.08 (  0.08)
Test: [  10/  26]	Loss 0.689 (0.687)	test_acc   0.50 (  0.51)	test_minacc   0.46 (  0.48)	test_majacc   0.51 (  0.51)	Loss_d 0.689 (0.687)	test_acc_d   0.50 (  0.51)	test_minacc_d   0.46 (  0.48)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.11 (  0.10)
Test: [  20/  26]	Loss 0.688 (0.687)	test_acc   0.49 (  0.51)	test_minacc   0.45 (  0.47)	test_majacc   0.50 (  0.52)	Loss_d 0.688 (0.687)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.45 (  0.47)	test_majacc_d   0.50 (  0.52)	test_corr_d   0.11 (  0.10)
Test: [  26/  26]	Loss 0.682 (0.686)	test_acc   0.53 (  0.51)	test_minacc   0.61 (  0.46)	test_majacc   0.52 (  0.52)	Loss_d 0.682 (0.686)	test_acc_d   0.53 (  0.51)	test_minacc_d   0.61 (  0.46)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.09 (  0.11)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.05it/s]
Test: [  0/  1]	Loss 0.734 (0.734)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.734 (0.734)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.23 (  0.23)
Test: [  1/  1]	Loss 0.734 (0.734)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.734 (0.734)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.23 (  0.23)
Overall Timing[ 38/  1]	epoch_time 0.0428 (0.0433)	validation_time 0.0004 (0.0005)	train_time 0.0424 (0.0427)
record: (train_acc, test_acc) (0.6366000083088875, 0.6630000472068787)
last accs (train_acc, test_acc) (0.5100000123679638, 0.49900001287460327)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.33it/s] 12%|#1        | 3/26 [00:00<00:02,  8.11it/s] 27%|##6       | 7/26 [00:00<00:01, 15.86it/s] 42%|####2     | 11/26 [00:00<00:00, 21.53it/s] 54%|#####3    | 14/26 [00:00<00:00, 23.37it/s] 65%|######5   | 17/26 [00:00<00:00, 24.26it/s] 81%|########  | 21/26 [00:01<00:00, 27.53it/s] 96%|#########6| 25/26 [00:01<00:00, 28.36it/s]100%|##########| 26/26 [00:01<00:00, 21.13it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1014 200
penalty weights 10000.0
args.step pgd_anneal_iters 1014 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1015 200
penalty weights 10000.0
args.step pgd_anneal_iters 1015 600
dim_v 512
rho, theta 297 tensor(-3.0418e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1016 200
penalty weights 10000.0
args.step pgd_anneal_iters 1016 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1017 200
penalty weights 10000.0
args.step pgd_anneal_iters 1017 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1018 200
penalty weights 10000.0
args.step pgd_anneal_iters 1018 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1019 200
penalty weights 10000.0
args.step pgd_anneal_iters 1019 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1020 200
penalty weights 10000.0
args.step pgd_anneal_iters 1020 600
dim_v 512
rho, theta 286 tensor(-1.1605e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1021 200
penalty weights 10000.0
args.step pgd_anneal_iters 1021 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1022 200
penalty weights 10000.0
args.step pgd_anneal_iters 1022 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1023 200
penalty weights 10000.0
args.step pgd_anneal_iters 1023 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1024 200
penalty weights 10000.0
args.step pgd_anneal_iters 1024 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1025 200
penalty weights 10000.0
args.step pgd_anneal_iters 1025 600
dim_v 512
rho, theta 281 tensor(-4.9036e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1026 200
penalty weights 10000.0
args.step pgd_anneal_iters 1026 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1027 200
penalty weights 10000.0
args.step pgd_anneal_iters 1027 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1028 200
penalty weights 10000.0
args.step pgd_anneal_iters 1028 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1029 200
penalty weights 10000.0
args.step pgd_anneal_iters 1029 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1030 200
penalty weights 10000.0
args.step pgd_anneal_iters 1030 600
dim_v 512
rho, theta 273 tensor(-3.1221e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1031 200
penalty weights 10000.0
args.step pgd_anneal_iters 1031 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1032 200
penalty weights 10000.0
args.step pgd_anneal_iters 1032 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1033 200
penalty weights 10000.0
args.step pgd_anneal_iters 1033 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1034 200
penalty weights 10000.0
args.step pgd_anneal_iters 1034 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1035 200
penalty weights 10000.0
args.step pgd_anneal_iters 1035 600
dim_v 512
rho, theta 267 tensor(-3.4660e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1036 200
penalty weights 10000.0
args.step pgd_anneal_iters 1036 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1037 200
penalty weights 10000.0
args.step pgd_anneal_iters 1037 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1038 200
penalty weights 10000.0
args.step pgd_anneal_iters 1038 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1039 200
penalty weights 10000.0
args.step pgd_anneal_iters 1039 600
final projection at end of training
dim_v 512
rho, theta 267 tensor(-4.2720e-06, device='cuda:0')
Epoch: [39][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  27.62 ( 27.62)	train_acc   0.52 (  0.51)	train_minacc   0.61 (  0.46)	train_majacc   0.50 (  0.52)	train_corr   0.00 (  0.00)	l1 4.5122 (4.5110)	zero_count 0.0000 (54.1320)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.00it/s] 27%|##6       | 7/26 [00:00<00:00, 31.92it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.92it/s] 50%|#####     | 13/26 [00:00<00:00, 37.58it/s] 73%|#######3  | 19/26 [00:00<00:00, 42.43it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 42.43it/s] 92%|#########2| 24/26 [00:00<00:00, 44.00it/s]100%|##########| 26/26 [00:00<00:00, 35.86it/s]
Test: [   0/  26]	Loss 0.685 (0.685)	test_acc   0.54 (  0.54)	test_minacc   0.40 (  0.40)	test_majacc   0.56 (  0.56)	Loss_d 0.685 (0.685)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.56 (  0.56)	test_corr_d   0.07 (  0.07)
Test: [  10/  26]	Loss 0.689 (0.688)	test_acc   0.50 (  0.51)	test_minacc   0.46 (  0.48)	test_majacc   0.51 (  0.51)	Loss_d 0.689 (0.688)	test_acc_d   0.50 (  0.51)	test_minacc_d   0.46 (  0.48)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.11 (  0.09)
Test: [  20/  26]	Loss 0.688 (0.687)	test_acc   0.49 (  0.51)	test_minacc   0.45 (  0.47)	test_majacc   0.50 (  0.52)	Loss_d 0.688 (0.687)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.45 (  0.47)	test_majacc_d   0.50 (  0.52)	test_corr_d   0.11 (  0.10)
Test: [  26/  26]	Loss 0.683 (0.687)	test_acc   0.52 (  0.51)	test_minacc   0.61 (  0.46)	test_majacc   0.51 (  0.52)	Loss_d 0.683 (0.687)	test_acc_d   0.52 (  0.51)	test_minacc_d   0.61 (  0.46)	test_majacc_d   0.51 (  0.52)	test_corr_d   0.09 (  0.10)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.35it/s]
Test: [  0/  1]	Loss 0.733 (0.733)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.733 (0.733)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.23 (  0.23)
Test: [  1/  1]	Loss 0.733 (0.733)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.733 (0.733)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.23 (  0.23)
Overall Timing[ 39/  1]	epoch_time 0.0432 (0.0433)	validation_time 0.0003 (0.0005)	train_time 0.0429 (0.0427)
record: (train_acc, test_acc) (0.6366000083088875, 0.6630000472068787)
last accs (train_acc, test_acc) (0.5100000169277191, 0.49900001287460327)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.95it/s] 19%|#9        | 5/26 [00:00<00:01, 18.15it/s] 31%|###       | 8/26 [00:00<00:00, 21.95it/s] 42%|####2     | 11/26 [00:00<00:00, 24.08it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.70it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.85it/s] 85%|########4 | 22/26 [00:00<00:00, 29.14it/s]100%|##########| 26/26 [00:01<00:00, 29.55it/s]100%|##########| 26/26 [00:01<00:00, 24.22it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1040 200
penalty weights 10000.0
args.step pgd_anneal_iters 1040 600
dim_v 512
rho, theta 282 tensor(-7.8181e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1041 200
penalty weights 10000.0
args.step pgd_anneal_iters 1041 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1042 200
penalty weights 10000.0
args.step pgd_anneal_iters 1042 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1043 200
penalty weights 10000.0
args.step pgd_anneal_iters 1043 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1044 200
penalty weights 10000.0
args.step pgd_anneal_iters 1044 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1045 200
penalty weights 10000.0
args.step pgd_anneal_iters 1045 600
dim_v 512
rho, theta 286 tensor(-1.0510e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1046 200
penalty weights 10000.0
args.step pgd_anneal_iters 1046 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1047 200
penalty weights 10000.0
args.step pgd_anneal_iters 1047 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1048 200
penalty weights 10000.0
args.step pgd_anneal_iters 1048 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1049 200
penalty weights 10000.0
args.step pgd_anneal_iters 1049 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1050 200
penalty weights 10000.0
args.step pgd_anneal_iters 1050 600
dim_v 512
rho, theta 280 tensor(-6.2634e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1051 200
penalty weights 10000.0
args.step pgd_anneal_iters 1051 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1052 200
penalty weights 10000.0
args.step pgd_anneal_iters 1052 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1053 200
penalty weights 10000.0
args.step pgd_anneal_iters 1053 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1054 200
penalty weights 10000.0
args.step pgd_anneal_iters 1054 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1055 200
penalty weights 10000.0
args.step pgd_anneal_iters 1055 600
dim_v 512
rho, theta 272 tensor(-3.3658e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1056 200
penalty weights 10000.0
args.step pgd_anneal_iters 1056 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1057 200
penalty weights 10000.0
args.step pgd_anneal_iters 1057 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1058 200
penalty weights 10000.0
args.step pgd_anneal_iters 1058 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1059 200
penalty weights 10000.0
args.step pgd_anneal_iters 1059 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1060 200
penalty weights 10000.0
args.step pgd_anneal_iters 1060 600
dim_v 512
rho, theta 267 tensor(-2.4144e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1061 200
penalty weights 10000.0
args.step pgd_anneal_iters 1061 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1062 200
penalty weights 10000.0
args.step pgd_anneal_iters 1062 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1063 200
penalty weights 10000.0
args.step pgd_anneal_iters 1063 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1064 200
penalty weights 10000.0
args.step pgd_anneal_iters 1064 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1065 200
penalty weights 10000.0
args.step pgd_anneal_iters 1065 600
dim_v 512
rho, theta 269 tensor(-5.4024e-06, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [40][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  27.62 ( 27.62)	train_acc   0.51 (  0.51)	train_minacc   0.59 (  0.45)	train_majacc   0.49 (  0.52)	train_corr   0.00 (  0.00)	l1 4.5137 (4.5113)	zero_count 0.0000 (55.0680)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.24it/s] 27%|##6       | 7/26 [00:00<00:00, 34.09it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.09it/s] 50%|#####     | 13/26 [00:00<00:00, 41.04it/s] 69%|######9   | 18/26 [00:00<00:00, 42.05it/s]                                                69%|######9   | 18/26 [00:00<00:00, 42.05it/s] 88%|########8 | 23/26 [00:00<00:00, 42.85it/s]100%|##########| 26/26 [00:00<00:00, 37.42it/s]
Test: [   0/  26]	Loss 0.685 (0.685)	test_acc   0.54 (  0.54)	test_minacc   0.40 (  0.40)	test_majacc   0.56 (  0.56)	Loss_d 0.685 (0.685)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.56 (  0.56)	test_corr_d   0.07 (  0.07)
Test: [  10/  26]	Loss 0.689 (0.688)	test_acc   0.50 (  0.51)	test_minacc   0.45 (  0.47)	test_majacc   0.51 (  0.51)	Loss_d 0.689 (0.688)	test_acc_d   0.50 (  0.51)	test_minacc_d   0.45 (  0.47)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.11 (  0.09)
Test: [  20/  26]	Loss 0.688 (0.687)	test_acc   0.50 (  0.51)	test_minacc   0.43 (  0.46)	test_majacc   0.51 (  0.52)	Loss_d 0.688 (0.687)	test_acc_d   0.50 (  0.51)	test_minacc_d   0.43 (  0.46)	test_majacc_d   0.51 (  0.52)	test_corr_d   0.11 (  0.10)
Test: [  26/  26]	Loss 0.683 (0.687)	test_acc   0.51 (  0.51)	test_minacc   0.59 (  0.45)	test_majacc   0.49 (  0.52)	Loss_d 0.683 (0.687)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.59 (  0.45)	test_majacc_d   0.49 (  0.52)	test_corr_d   0.09 (  0.10)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.85it/s]
Test: [  0/  1]	Loss 0.732 (0.732)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.732 (0.732)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.23 (  0.23)
Test: [  1/  1]	Loss 0.732 (0.732)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.732 (0.732)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.23 (  0.23)
Overall Timing[ 40/  1]	epoch_time 0.0436 (0.0433)	validation_time 0.0003 (0.0005)	train_time 0.0433 (0.0427)
record: (train_acc, test_acc) (0.6366000083088875, 0.6630000472068787)
last accs (train_acc, test_acc) (0.510300012588501, 0.49800002574920654)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.55it/s] 19%|#9        | 5/26 [00:00<00:01, 16.32it/s] 35%|###4      | 9/26 [00:00<00:00, 23.09it/s] 46%|####6     | 12/26 [00:00<00:00, 25.22it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.24it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.39it/s] 88%|########8 | 23/26 [00:00<00:00, 29.94it/s]100%|##########| 26/26 [00:01<00:00, 24.19it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1066 200
penalty weights 10000.0
args.step pgd_anneal_iters 1066 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1067 200
penalty weights 10000.0
args.step pgd_anneal_iters 1067 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1068 200
penalty weights 10000.0
args.step pgd_anneal_iters 1068 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1069 200
penalty weights 10000.0
args.step pgd_anneal_iters 1069 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1070 200
penalty weights 10000.0
args.step pgd_anneal_iters 1070 600
dim_v 512
rho, theta 282 tensor(-8.3253e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1071 200
penalty weights 10000.0
args.step pgd_anneal_iters 1071 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1072 200
penalty weights 10000.0
args.step pgd_anneal_iters 1072 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1073 200
penalty weights 10000.0
args.step pgd_anneal_iters 1073 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1074 200
penalty weights 10000.0
args.step pgd_anneal_iters 1074 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1075 200
penalty weights 10000.0
args.step pgd_anneal_iters 1075 600
dim_v 512
rho, theta 278 tensor(-7.4089e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1076 200
penalty weights 10000.0
args.step pgd_anneal_iters 1076 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1077 200
penalty weights 10000.0
args.step pgd_anneal_iters 1077 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1078 200
penalty weights 10000.0
args.step pgd_anneal_iters 1078 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1079 200
penalty weights 10000.0
args.step pgd_anneal_iters 1079 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1080 200
penalty weights 10000.0
args.step pgd_anneal_iters 1080 600
dim_v 512
rho, theta 269 tensor(-3.4562e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1081 200
penalty weights 10000.0
args.step pgd_anneal_iters 1081 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1082 200
penalty weights 10000.0
args.step pgd_anneal_iters 1082 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1083 200
penalty weights 10000.0
args.step pgd_anneal_iters 1083 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1084 200
penalty weights 10000.0
args.step pgd_anneal_iters 1084 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1085 200
penalty weights 10000.0
args.step pgd_anneal_iters 1085 600
dim_v 512
rho, theta 266 tensor(-1.9502e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1086 200
penalty weights 10000.0
args.step pgd_anneal_iters 1086 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1087 200
penalty weights 10000.0
args.step pgd_anneal_iters 1087 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1088 200
penalty weights 10000.0
args.step pgd_anneal_iters 1088 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1089 200
penalty weights 10000.0
args.step pgd_anneal_iters 1089 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1090 200
penalty weights 10000.0
args.step pgd_anneal_iters 1090 600
dim_v 512
rho, theta 265 tensor(-4.4869e-06, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1091 200
penalty weights 10000.0
args.step pgd_anneal_iters 1091 600
final projection at end of training
dim_v 512
rho, theta 265 tensor(-1.0379e-06, device='cuda:0')
Epoch: [41][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  27.62 ( 27.62)	train_acc   0.50 (  0.51)	train_minacc   0.59 (  0.45)	train_majacc   0.48 (  0.52)	train_corr   0.00 (  0.00)	l1 4.5089 (4.5112)	zero_count 246.0000 (52.5990)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.47it/s] 27%|##6       | 7/26 [00:00<00:00, 35.65it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.65it/s] 46%|####6     | 12/26 [00:00<00:00, 40.59it/s] 65%|######5   | 17/26 [00:00<00:00, 42.72it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.72it/s] 85%|########4 | 22/26 [00:00<00:00, 40.26it/s]100%|##########| 26/26 [00:00<00:00, 37.18it/s]
Test: [   0/  26]	Loss 0.685 (0.685)	test_acc   0.55 (  0.55)	test_minacc   0.40 (  0.40)	test_majacc   0.57 (  0.57)	Loss_d 0.685 (0.685)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.57 (  0.57)	test_corr_d   0.07 (  0.07)
Test: [  10/  26]	Loss 0.690 (0.688)	test_acc   0.51 (  0.51)	test_minacc   0.45 (  0.47)	test_majacc   0.52 (  0.52)	Loss_d 0.690 (0.688)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.45 (  0.47)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.10 (  0.09)
Test: [  20/  26]	Loss 0.688 (0.687)	test_acc   0.50 (  0.51)	test_minacc   0.43 (  0.45)	test_majacc   0.51 (  0.52)	Loss_d 0.688 (0.687)	test_acc_d   0.50 (  0.51)	test_minacc_d   0.43 (  0.45)	test_majacc_d   0.51 (  0.52)	test_corr_d   0.11 (  0.10)
Test: [  26/  26]	Loss 0.683 (0.687)	test_acc   0.50 (  0.51)	test_minacc   0.59 (  0.45)	test_majacc   0.48 (  0.52)	Loss_d 0.683 (0.687)	test_acc_d   0.50 (  0.51)	test_minacc_d   0.59 (  0.45)	test_majacc_d   0.48 (  0.52)	test_corr_d   0.09 (  0.10)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.53it/s]
Test: [  0/  1]	Loss 0.731 (0.731)	test_acc   0.50 (  0.50)	test_minacc   0.49 (  0.49)	test_majacc   0.50 (  0.50)	Loss_d 0.731 (0.731)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.23 (  0.23)
Test: [  1/  1]	Loss 0.731 (0.731)	test_acc   0.50 (  0.50)	test_minacc   0.49 (  0.49)	test_majacc   0.50 (  0.50)	Loss_d 0.731 (0.731)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.23 (  0.23)
Overall Timing[ 41/  1]	epoch_time 0.0413 (0.0432)	validation_time 0.0004 (0.0005)	train_time 0.0408 (0.0427)
record: (train_acc, test_acc) (0.6366000083088875, 0.6630000472068787)
last accs (train_acc, test_acc) (0.5098000075519085, 0.49500003457069397)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 29.35it/s] 23%|##3       | 6/26 [00:00<00:00, 28.94it/s] 35%|###4      | 9/26 [00:00<00:00, 28.90it/s] 50%|#####     | 13/26 [00:00<00:00, 32.07it/s] 65%|######5   | 17/26 [00:00<00:00, 31.53it/s] 81%|########  | 21/26 [00:00<00:00, 30.95it/s] 96%|#########6| 25/26 [00:00<00:00, 30.90it/s]100%|##########| 26/26 [00:00<00:00, 28.88it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1092 200
penalty weights 10000.0
args.step pgd_anneal_iters 1092 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1093 200
penalty weights 10000.0
args.step pgd_anneal_iters 1093 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1094 200
penalty weights 10000.0
args.step pgd_anneal_iters 1094 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1095 200
penalty weights 10000.0
args.step pgd_anneal_iters 1095 600
dim_v 512
rho, theta 281 tensor(-5.8759e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1096 200
penalty weights 10000.0
args.step pgd_anneal_iters 1096 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1097 200
penalty weights 10000.0
args.step pgd_anneal_iters 1097 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1098 200
penalty weights 10000.0
args.step pgd_anneal_iters 1098 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1099 200
penalty weights 10000.0
args.step pgd_anneal_iters 1099 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1100 200
penalty weights 10000.0
args.step pgd_anneal_iters 1100 600
dim_v 512
rho, theta 276 tensor(-7.7378e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1101 200
penalty weights 10000.0
args.step pgd_anneal_iters 1101 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1102 200
penalty weights 10000.0
args.step pgd_anneal_iters 1102 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1103 200
penalty weights 10000.0
args.step pgd_anneal_iters 1103 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1104 200
penalty weights 10000.0
args.step pgd_anneal_iters 1104 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1105 200
penalty weights 10000.0
args.step pgd_anneal_iters 1105 600
dim_v 512
rho, theta 267 tensor(-3.6848e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1106 200
penalty weights 10000.0
args.step pgd_anneal_iters 1106 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1107 200
penalty weights 10000.0
args.step pgd_anneal_iters 1107 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1108 200
penalty weights 10000.0
args.step pgd_anneal_iters 1108 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1109 200
penalty weights 10000.0
args.step pgd_anneal_iters 1109 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1110 200
penalty weights 10000.0
args.step pgd_anneal_iters 1110 600
dim_v 512
rho, theta 274 tensor(-1.5623e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1111 200
penalty weights 10000.0
args.step pgd_anneal_iters 1111 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1112 200
penalty weights 10000.0
args.step pgd_anneal_iters 1112 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1113 200
penalty weights 10000.0
args.step pgd_anneal_iters 1113 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1114 200
penalty weights 10000.0
args.step pgd_anneal_iters 1114 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1115 200
penalty weights 10000.0
args.step pgd_anneal_iters 1115 600
dim_v 512
rho, theta 261 tensor(-3.1959e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1116 200
penalty weights 10000.0
args.step pgd_anneal_iters 1116 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1117 200
penalty weights 10000.0
args.step pgd_anneal_iters 1117 600
final projection at end of training
dim_v 512
rho, theta 261 tensor(-1.6362e-06, device='cuda:0')
Epoch: [42][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  27.62 ( 27.62)	train_acc   0.49 (  0.51)	train_minacc   0.59 (  0.44)	train_majacc   0.47 (  0.52)	train_corr   0.00 (  0.00)	l1 4.5097 (4.5107)	zero_count 0.0000 (56.2380)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.13it/s] 23%|##3       | 6/26 [00:00<00:00, 28.80it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.80it/s] 42%|####2     | 11/26 [00:00<00:00, 32.65it/s] 62%|######1   | 16/26 [00:00<00:00, 38.58it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.58it/s] 81%|########  | 21/26 [00:00<00:00, 42.26it/s]100%|##########| 26/26 [00:00<00:00, 43.94it/s]100%|##########| 26/26 [00:00<00:00, 35.60it/s]
Test: [   0/  26]	Loss 0.685 (0.685)	test_acc   0.55 (  0.55)	test_minacc   0.40 (  0.40)	test_majacc   0.57 (  0.57)	Loss_d 0.685 (0.685)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.57 (  0.57)	test_corr_d   0.07 (  0.07)
Test: [  10/  26]	Loss 0.690 (0.688)	test_acc   0.51 (  0.51)	test_minacc   0.45 (  0.46)	test_majacc   0.52 (  0.52)	Loss_d 0.690 (0.688)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.45 (  0.46)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.10 (  0.09)
Test: [  20/  26]	Loss 0.688 (0.688)	test_acc   0.50 (  0.51)	test_minacc   0.42 (  0.45)	test_majacc   0.52 (  0.52)	Loss_d 0.688 (0.688)	test_acc_d   0.50 (  0.51)	test_minacc_d   0.42 (  0.45)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.11 (  0.09)
Test: [  26/  26]	Loss 0.683 (0.687)	test_acc   0.49 (  0.51)	test_minacc   0.59 (  0.45)	test_majacc   0.47 (  0.52)	Loss_d 0.683 (0.687)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.59 (  0.45)	test_majacc_d   0.47 (  0.52)	test_corr_d   0.09 (  0.10)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.73it/s]
Test: [  0/  1]	Loss 0.730 (0.730)	test_acc   0.49 (  0.49)	test_minacc   0.49 (  0.49)	test_majacc   0.50 (  0.50)	Loss_d 0.730 (0.730)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.23 (  0.23)
Test: [  1/  1]	Loss 0.730 (0.730)	test_acc   0.49 (  0.49)	test_minacc   0.49 (  0.49)	test_majacc   0.50 (  0.50)	Loss_d 0.730 (0.730)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.23 (  0.23)
Overall Timing[ 42/  1]	epoch_time 0.0405 (0.0432)	validation_time 0.0003 (0.0005)	train_time 0.0401 (0.0426)
record: (train_acc, test_acc) (0.6366000083088875, 0.6630000472068787)
last accs (train_acc, test_acc) (0.5090000119507313, 0.49000000953674316)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.56it/s] 15%|#5        | 4/26 [00:00<00:01, 18.44it/s] 31%|###       | 8/26 [00:00<00:00, 24.46it/s] 46%|####6     | 12/26 [00:00<00:00, 28.22it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.01it/s] 69%|######9   | 18/26 [00:00<00:00, 28.34it/s] 85%|########4 | 22/26 [00:00<00:00, 30.74it/s]100%|##########| 26/26 [00:00<00:00, 31.18it/s]100%|##########| 26/26 [00:00<00:00, 26.54it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1118 200
penalty weights 10000.0
args.step pgd_anneal_iters 1118 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1119 200
penalty weights 10000.0
args.step pgd_anneal_iters 1119 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1120 200
penalty weights 10000.0
args.step pgd_anneal_iters 1120 600
dim_v 512
rho, theta 279 tensor(-3.7449e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1121 200
penalty weights 10000.0
args.step pgd_anneal_iters 1121 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1122 200
penalty weights 10000.0
args.step pgd_anneal_iters 1122 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1123 200
penalty weights 10000.0
args.step pgd_anneal_iters 1123 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1124 200
penalty weights 10000.0
args.step pgd_anneal_iters 1124 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1125 200
penalty weights 10000.0
args.step pgd_anneal_iters 1125 600
dim_v 512
rho, theta 279 tensor(-8.5439e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1126 200
penalty weights 10000.0
args.step pgd_anneal_iters 1126 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1127 200
penalty weights 10000.0
args.step pgd_anneal_iters 1127 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1128 200
penalty weights 10000.0
args.step pgd_anneal_iters 1128 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1129 200
penalty weights 10000.0
args.step pgd_anneal_iters 1129 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1130 200
penalty weights 10000.0
args.step pgd_anneal_iters 1130 600
dim_v 512
rho, theta 344 tensor(-2.3980e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1131 200
penalty weights 10000.0
args.step pgd_anneal_iters 1131 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1132 200
penalty weights 10000.0
args.step pgd_anneal_iters 1132 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1133 200
penalty weights 10000.0
args.step pgd_anneal_iters 1133 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1134 200
penalty weights 10000.0
args.step pgd_anneal_iters 1134 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1135 200
penalty weights 10000.0
args.step pgd_anneal_iters 1135 600
dim_v 512
rho, theta 317 tensor(-1.5160e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1136 200
penalty weights 10000.0
args.step pgd_anneal_iters 1136 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1137 200
penalty weights 10000.0
args.step pgd_anneal_iters 1137 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1138 200
penalty weights 10000.0
args.step pgd_anneal_iters 1138 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1139 200
penalty weights 10000.0
args.step pgd_anneal_iters 1139 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1140 200
penalty weights 10000.0
args.step pgd_anneal_iters 1140 600
dim_v 512
rho, theta 266 tensor(-2.8074e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1141 200
penalty weights 10000.0
args.step pgd_anneal_iters 1141 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1142 200
penalty weights 10000.0
args.step pgd_anneal_iters 1142 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1143 200
penalty weights 10000.0
args.step pgd_anneal_iters 1143 600
final projection at end of training
dim_v 512
rho, theta 260 tensor(-2.0919e-06, device='cuda:0')
Epoch: [43][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  27.62 ( 27.62)	train_acc   0.48 (  0.51)	train_minacc   0.61 (  0.44)	train_majacc   0.45 (  0.52)	train_corr   0.00 (  0.00)	l1 4.5103 (4.5105)	zero_count 0.0000 (51.4800)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.48it/s] 23%|##3       | 6/26 [00:00<00:00, 28.97it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.97it/s] 42%|####2     | 11/26 [00:00<00:00, 36.11it/s] 65%|######5   | 17/26 [00:00<00:00, 39.55it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.55it/s] 88%|########8 | 23/26 [00:00<00:00, 44.34it/s]100%|##########| 26/26 [00:00<00:00, 35.87it/s]
Test: [   0/  26]	Loss 0.686 (0.686)	test_acc   0.55 (  0.55)	test_minacc   0.40 (  0.40)	test_majacc   0.57 (  0.57)	Loss_d 0.686 (0.686)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.57 (  0.57)	test_corr_d   0.07 (  0.07)
Test: [  10/  26]	Loss 0.690 (0.688)	test_acc   0.51 (  0.51)	test_minacc   0.45 (  0.46)	test_majacc   0.52 (  0.51)	Loss_d 0.690 (0.688)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.45 (  0.46)	test_majacc_d   0.52 (  0.51)	test_corr_d   0.10 (  0.08)
Test: [  20/  26]	Loss 0.688 (0.688)	test_acc   0.49 (  0.51)	test_minacc   0.40 (  0.45)	test_majacc   0.51 (  0.52)	Loss_d 0.688 (0.688)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.40 (  0.45)	test_majacc_d   0.51 (  0.52)	test_corr_d   0.10 (  0.09)
Test: [  26/  26]	Loss 0.684 (0.688)	test_acc   0.49 (  0.51)	test_minacc   0.61 (  0.45)	test_majacc   0.46 (  0.52)	Loss_d 0.684 (0.688)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.61 (  0.45)	test_majacc_d   0.46 (  0.52)	test_corr_d   0.09 (  0.09)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.56it/s]
Test: [  0/  1]	Loss 0.729 (0.729)	test_acc   0.49 (  0.49)	test_minacc   0.48 (  0.48)	test_majacc   0.50 (  0.50)	Loss_d 0.729 (0.729)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.23 (  0.23)
Test: [  1/  1]	Loss 0.729 (0.729)	test_acc   0.49 (  0.49)	test_minacc   0.48 (  0.48)	test_majacc   0.50 (  0.50)	Loss_d 0.729 (0.729)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.23 (  0.23)
Overall Timing[ 43/  1]	epoch_time 0.0447 (0.0432)	validation_time 0.0004 (0.0005)	train_time 0.0443 (0.0426)
record: (train_acc, test_acc) (0.6366000083088875, 0.6630000472068787)
last accs (train_acc, test_acc) (0.5086000154614448, 0.48600003123283386)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.43it/s] 15%|#5        | 4/26 [00:00<00:01, 13.37it/s] 27%|##6       | 7/26 [00:00<00:01, 17.77it/s] 42%|####2     | 11/26 [00:00<00:00, 23.15it/s] 54%|#####3    | 14/26 [00:00<00:00, 24.63it/s] 65%|######5   | 17/26 [00:00<00:00, 25.20it/s] 81%|########  | 21/26 [00:00<00:00, 28.23it/s] 92%|#########2| 24/26 [00:01<00:00, 28.57it/s]100%|##########| 26/26 [00:01<00:00, 22.79it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1144 200
penalty weights 10000.0
args.step pgd_anneal_iters 1144 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1145 200
penalty weights 10000.0
args.step pgd_anneal_iters 1145 600
dim_v 512
rho, theta 277 tensor(-1.8713e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1146 200
penalty weights 10000.0
args.step pgd_anneal_iters 1146 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1147 200
penalty weights 10000.0
args.step pgd_anneal_iters 1147 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1148 200
penalty weights 10000.0
args.step pgd_anneal_iters 1148 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1149 200
penalty weights 10000.0
args.step pgd_anneal_iters 1149 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1150 200
penalty weights 10000.0
args.step pgd_anneal_iters 1150 600
dim_v 512
rho, theta 279 tensor(-8.4417e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1151 200
penalty weights 10000.0
args.step pgd_anneal_iters 1151 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1152 200
penalty weights 10000.0
args.step pgd_anneal_iters 1152 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1153 200
penalty weights 10000.0
args.step pgd_anneal_iters 1153 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1154 200
penalty weights 10000.0
args.step pgd_anneal_iters 1154 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1155 200
penalty weights 10000.0
args.step pgd_anneal_iters 1155 600
dim_v 512
rho, theta 271 tensor(-3.5780e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1156 200
penalty weights 10000.0
args.step pgd_anneal_iters 1156 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1157 200
penalty weights 10000.0
args.step pgd_anneal_iters 1157 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1158 200
penalty weights 10000.0
args.step pgd_anneal_iters 1158 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1159 200
penalty weights 10000.0
args.step pgd_anneal_iters 1159 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1160 200
penalty weights 10000.0
args.step pgd_anneal_iters 1160 600
dim_v 512
rho, theta 309 tensor(-1.4228e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1161 200
penalty weights 10000.0
args.step pgd_anneal_iters 1161 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1162 200
penalty weights 10000.0
args.step pgd_anneal_iters 1162 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1163 200
penalty weights 10000.0
args.step pgd_anneal_iters 1163 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1164 200
penalty weights 10000.0
args.step pgd_anneal_iters 1164 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1165 200
penalty weights 10000.0
args.step pgd_anneal_iters 1165 600
dim_v 512
rho, theta 261 tensor(-2.2149e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1166 200
penalty weights 10000.0
args.step pgd_anneal_iters 1166 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1167 200
penalty weights 10000.0
args.step pgd_anneal_iters 1167 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1168 200
penalty weights 10000.0
args.step pgd_anneal_iters 1168 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1169 200
penalty weights 10000.0
args.step pgd_anneal_iters 1169 600
final projection at end of training
dim_v 512
rho, theta 259 tensor(-2.6740e-06, device='cuda:0')
Epoch: [44][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  27.62 ( 27.62)	train_acc   0.47 (  0.51)	train_minacc   0.61 (  0.44)	train_majacc   0.44 (  0.52)	train_corr   0.00 (  0.00)	l1 4.5110 (4.5106)	zero_count 0.0000 (54.9510)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 28.46it/s] 31%|###       | 8/26 [00:00<00:00, 40.07it/s]                                               31%|###       | 8/26 [00:00<00:00, 40.07it/s] 50%|#####     | 13/26 [00:00<00:00, 42.69it/s] 69%|######9   | 18/26 [00:00<00:00, 44.52it/s]                                                69%|######9   | 18/26 [00:00<00:00, 44.52it/s] 88%|########8 | 23/26 [00:00<00:00, 44.81it/s]100%|##########| 26/26 [00:00<00:00, 39.04it/s]
Test: [   0/  26]	Loss 0.686 (0.686)	test_acc   0.56 (  0.56)	test_minacc   0.40 (  0.40)	test_majacc   0.58 (  0.58)	Loss_d 0.686 (0.686)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.58 (  0.58)	test_corr_d   0.07 (  0.07)
Test: [  10/  26]	Loss 0.690 (0.689)	test_acc   0.50 (  0.51)	test_minacc   0.43 (  0.46)	test_majacc   0.52 (  0.52)	Loss_d 0.690 (0.689)	test_acc_d   0.50 (  0.51)	test_minacc_d   0.43 (  0.46)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.09 (  0.08)
Test: [  20/  26]	Loss 0.688 (0.688)	test_acc   0.50 (  0.51)	test_minacc   0.40 (  0.45)	test_majacc   0.52 (  0.52)	Loss_d 0.688 (0.688)	test_acc_d   0.50 (  0.51)	test_minacc_d   0.40 (  0.45)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.10 (  0.09)
Test: [  26/  26]	Loss 0.684 (0.688)	test_acc   0.48 (  0.51)	test_minacc   0.61 (  0.45)	test_majacc   0.45 (  0.52)	Loss_d 0.684 (0.688)	test_acc_d   0.48 (  0.51)	test_minacc_d   0.61 (  0.45)	test_majacc_d   0.45 (  0.52)	test_corr_d   0.09 (  0.09)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.30it/s]
Test: [  0/  1]	Loss 0.729 (0.729)	test_acc   0.49 (  0.49)	test_minacc   0.48 (  0.48)	test_majacc   0.51 (  0.51)	Loss_d 0.729 (0.729)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.23 (  0.23)
Test: [  1/  1]	Loss 0.729 (0.729)	test_acc   0.49 (  0.49)	test_minacc   0.48 (  0.48)	test_majacc   0.51 (  0.51)	Loss_d 0.729 (0.729)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.23 (  0.23)
Overall Timing[ 44/  1]	epoch_time 0.0424 (0.0432)	validation_time 0.0003 (0.0005)	train_time 0.0420 (0.0426)
record: (train_acc, test_acc) (0.6366000083088875, 0.6630000472068787)
last accs (train_acc, test_acc) (0.509400013834238, 0.48600003123283386)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.99it/s] 23%|##3       | 6/26 [00:00<00:00, 24.15it/s] 38%|###8      | 10/26 [00:00<00:00, 28.60it/s] 50%|#####     | 13/26 [00:00<00:00, 28.40it/s] 62%|######1   | 16/26 [00:00<00:00, 28.60it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.90it/s] 92%|#########2| 24/26 [00:00<00:00, 30.66it/s]100%|##########| 26/26 [00:00<00:00, 26.80it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1170 200
penalty weights 10000.0
args.step pgd_anneal_iters 1170 600
dim_v 512
rho, theta 264 tensor(-4.7864e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1171 200
penalty weights 10000.0
args.step pgd_anneal_iters 1171 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1172 200
penalty weights 10000.0
args.step pgd_anneal_iters 1172 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1173 200
penalty weights 10000.0
args.step pgd_anneal_iters 1173 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1174 200
penalty weights 10000.0
args.step pgd_anneal_iters 1174 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1175 200
penalty weights 10000.0
args.step pgd_anneal_iters 1175 600
dim_v 512
rho, theta 278 tensor(-7.7849e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1176 200
penalty weights 10000.0
args.step pgd_anneal_iters 1176 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1177 200
penalty weights 10000.0
args.step pgd_anneal_iters 1177 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1178 200
penalty weights 10000.0
args.step pgd_anneal_iters 1178 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1179 200
penalty weights 10000.0
args.step pgd_anneal_iters 1179 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1180 200
penalty weights 10000.0
args.step pgd_anneal_iters 1180 600
dim_v 512
rho, theta 273 tensor(-4.5943e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1181 200
penalty weights 10000.0
args.step pgd_anneal_iters 1181 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1182 200
penalty weights 10000.0
args.step pgd_anneal_iters 1182 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1183 200
penalty weights 10000.0
args.step pgd_anneal_iters 1183 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1184 200
penalty weights 10000.0
args.step pgd_anneal_iters 1184 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1185 200
penalty weights 10000.0
args.step pgd_anneal_iters 1185 600
dim_v 512
rho, theta 285 tensor(-1.9757e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1186 200
penalty weights 10000.0
args.step pgd_anneal_iters 1186 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1187 200
penalty weights 10000.0
args.step pgd_anneal_iters 1187 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1188 200
penalty weights 10000.0
args.step pgd_anneal_iters 1188 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1189 200
penalty weights 10000.0
args.step pgd_anneal_iters 1189 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1190 200
penalty weights 10000.0
args.step pgd_anneal_iters 1190 600
dim_v 512
rho, theta 264 tensor(-1.4377e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1191 200
penalty weights 10000.0
args.step pgd_anneal_iters 1191 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1192 200
penalty weights 10000.0
args.step pgd_anneal_iters 1192 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1193 200
penalty weights 10000.0
args.step pgd_anneal_iters 1193 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1194 200
penalty weights 10000.0
args.step pgd_anneal_iters 1194 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1195 200
penalty weights 10000.0
args.step pgd_anneal_iters 1195 600
dim_v 512
rho, theta 258 tensor(-3.5128e-06, device='cuda:0')
final projection at end of training
dim_v 512
rho, theta 258 tensor(-1.4729e-08, device='cuda:0')
Epoch: [45][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  27.62 ( 27.62)	train_acc   0.47 (  0.51)	train_minacc   0.61 (  0.44)	train_majacc   0.44 (  0.52)	train_corr   0.00 (  0.00)	l1 4.5123 (4.5109)	zero_count 0.0000 (56.2770)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 16.80it/s] 31%|###       | 8/26 [00:00<00:00, 30.44it/s]                                               31%|###       | 8/26 [00:00<00:00, 30.44it/s] 50%|#####     | 13/26 [00:00<00:00, 36.47it/s] 69%|######9   | 18/26 [00:00<00:00, 40.38it/s]                                                69%|######9   | 18/26 [00:00<00:00, 40.38it/s] 88%|########8 | 23/26 [00:00<00:00, 38.71it/s]100%|##########| 26/26 [00:00<00:00, 34.66it/s]
Test: [   0/  26]	Loss 0.686 (0.686)	test_acc   0.56 (  0.56)	test_minacc   0.40 (  0.40)	test_majacc   0.59 (  0.59)	Loss_d 0.686 (0.686)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.07 (  0.07)
Test: [  10/  26]	Loss 0.690 (0.689)	test_acc   0.51 (  0.51)	test_minacc   0.42 (  0.46)	test_majacc   0.53 (  0.52)	Loss_d 0.690 (0.689)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.42 (  0.46)	test_majacc_d   0.53 (  0.52)	test_corr_d   0.09 (  0.08)
Test: [  20/  26]	Loss 0.688 (0.688)	test_acc   0.50 (  0.51)	test_minacc   0.40 (  0.45)	test_majacc   0.52 (  0.52)	Loss_d 0.688 (0.688)	test_acc_d   0.50 (  0.51)	test_minacc_d   0.40 (  0.45)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.10 (  0.09)
Test: [  26/  26]	Loss 0.684 (0.688)	test_acc   0.46 (  0.51)	test_minacc   0.61 (  0.44)	test_majacc   0.44 (  0.52)	Loss_d 0.684 (0.688)	test_acc_d   0.46 (  0.51)	test_minacc_d   0.61 (  0.44)	test_majacc_d   0.44 (  0.52)	test_corr_d   0.09 (  0.09)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.71it/s]
Test: [  0/  1]	Loss 0.728 (0.728)	test_acc   0.49 (  0.49)	test_minacc   0.48 (  0.48)	test_majacc   0.51 (  0.51)	Loss_d 0.728 (0.728)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.23 (  0.23)
Test: [  1/  1]	Loss 0.728 (0.728)	test_acc   0.49 (  0.49)	test_minacc   0.48 (  0.48)	test_majacc   0.51 (  0.51)	Loss_d 0.728 (0.728)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.23 (  0.23)
Overall Timing[ 45/  1]	epoch_time 0.0434 (0.0432)	validation_time 0.0004 (0.0005)	train_time 0.0430 (0.0426)
record: (train_acc, test_acc) (0.6366000083088875, 0.6630000472068787)
last accs (train_acc, test_acc) (0.5090000091195106, 0.48500001430511475)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.34it/s] 19%|#9        | 5/26 [00:00<00:00, 24.74it/s] 35%|###4      | 9/26 [00:00<00:00, 30.58it/s] 50%|#####     | 13/26 [00:00<00:00, 30.98it/s] 65%|######5   | 17/26 [00:00<00:00, 30.34it/s] 81%|########  | 21/26 [00:00<00:00, 30.36it/s] 96%|#########6| 25/26 [00:00<00:00, 30.15it/s]100%|##########| 26/26 [00:00<00:00, 27.80it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1196 200
penalty weights 10000.0
args.step pgd_anneal_iters 1196 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1197 200
penalty weights 10000.0
args.step pgd_anneal_iters 1197 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1198 200
penalty weights 10000.0
args.step pgd_anneal_iters 1198 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1199 200
penalty weights 10000.0
args.step pgd_anneal_iters 1199 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1200 200
penalty weights 10000.0
args.step pgd_anneal_iters 1200 600
dim_v 512
rho, theta 274 tensor(-6.1365e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1201 200
penalty weights 10000.0
args.step pgd_anneal_iters 1201 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1202 200
penalty weights 10000.0
args.step pgd_anneal_iters 1202 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1203 200
penalty weights 10000.0
args.step pgd_anneal_iters 1203 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1204 200
penalty weights 10000.0
args.step pgd_anneal_iters 1204 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1205 200
penalty weights 10000.0
args.step pgd_anneal_iters 1205 600
dim_v 512
rho, theta 273 tensor(-5.5254e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1206 200
penalty weights 10000.0
args.step pgd_anneal_iters 1206 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1207 200
penalty weights 10000.0
args.step pgd_anneal_iters 1207 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1208 200
penalty weights 10000.0
args.step pgd_anneal_iters 1208 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1209 200
penalty weights 10000.0
args.step pgd_anneal_iters 1209 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1210 200
penalty weights 10000.0
args.step pgd_anneal_iters 1210 600
dim_v 512
rho, theta 276 tensor(-2.1552e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1211 200
penalty weights 10000.0
args.step pgd_anneal_iters 1211 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1212 200
penalty weights 10000.0
args.step pgd_anneal_iters 1212 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1213 200
penalty weights 10000.0
args.step pgd_anneal_iters 1213 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1214 200
penalty weights 10000.0
args.step pgd_anneal_iters 1214 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1215 200
penalty weights 10000.0
args.step pgd_anneal_iters 1215 600
dim_v 512
rho, theta 264 tensor(-1.2074e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1216 200
penalty weights 10000.0
args.step pgd_anneal_iters 1216 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1217 200
penalty weights 10000.0
args.step pgd_anneal_iters 1217 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1218 200
penalty weights 10000.0
args.step pgd_anneal_iters 1218 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1219 200
penalty weights 10000.0
args.step pgd_anneal_iters 1219 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1220 200
penalty weights 10000.0
args.step pgd_anneal_iters 1220 600
dim_v 512
rho, theta 259 tensor(-2.9381e-06, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1221 200
penalty weights 10000.0
args.step pgd_anneal_iters 1221 600
final projection at end of training
dim_v 512
rho, theta 262 tensor(-8.2495e-07, device='cuda:0')
Epoch: [46][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  27.62 ( 27.62)	train_acc   0.47 (  0.51)	train_minacc   0.61 (  0.44)	train_majacc   0.44 (  0.52)	train_corr   0.00 (  0.00)	l1 4.5089 (4.5108)	zero_count 252.0000 (43.6230)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 26.17it/s] 31%|###       | 8/26 [00:00<00:00, 37.41it/s]                                               31%|###       | 8/26 [00:00<00:00, 37.41it/s] 50%|#####     | 13/26 [00:00<00:00, 41.20it/s] 69%|######9   | 18/26 [00:00<00:00, 43.30it/s]                                                69%|######9   | 18/26 [00:00<00:00, 43.30it/s] 88%|########8 | 23/26 [00:00<00:00, 38.70it/s]100%|##########| 26/26 [00:00<00:00, 36.92it/s]
Test: [   0/  26]	Loss 0.686 (0.686)	test_acc   0.56 (  0.56)	test_minacc   0.40 (  0.40)	test_majacc   0.59 (  0.59)	Loss_d 0.686 (0.686)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.07 (  0.07)
Test: [  10/  26]	Loss 0.690 (0.689)	test_acc   0.51 (  0.51)	test_minacc   0.41 (  0.46)	test_majacc   0.53 (  0.52)	Loss_d 0.690 (0.689)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.41 (  0.46)	test_majacc_d   0.53 (  0.52)	test_corr_d   0.09 (  0.08)
Test: [  20/  26]	Loss 0.688 (0.688)	test_acc   0.50 (  0.51)	test_minacc   0.40 (  0.45)	test_majacc   0.52 (  0.52)	Loss_d 0.688 (0.688)	test_acc_d   0.50 (  0.51)	test_minacc_d   0.40 (  0.45)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.10 (  0.09)
Test: [  26/  26]	Loss 0.684 (0.688)	test_acc   0.47 (  0.51)	test_minacc   0.61 (  0.44)	test_majacc   0.44 (  0.52)	Loss_d 0.684 (0.688)	test_acc_d   0.47 (  0.51)	test_minacc_d   0.61 (  0.44)	test_majacc_d   0.44 (  0.52)	test_corr_d   0.09 (  0.09)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.09it/s]
Test: [  0/  1]	Loss 0.728 (0.728)	test_acc   0.48 (  0.48)	test_minacc   0.48 (  0.48)	test_majacc   0.51 (  0.51)	Loss_d 0.728 (0.728)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.22 (  0.22)
Test: [  1/  1]	Loss 0.728 (0.728)	test_acc   0.48 (  0.48)	test_minacc   0.48 (  0.48)	test_majacc   0.51 (  0.51)	Loss_d 0.728 (0.728)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.22 (  0.22)
Overall Timing[ 46/  1]	epoch_time 0.0455 (0.0432)	validation_time 0.0004 (0.0005)	train_time 0.0451 (0.0427)
record: (train_acc, test_acc) (0.6366000083088875, 0.6630000472068787)
last accs (train_acc, test_acc) (0.5084000116884708, 0.4790000319480896)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.61it/s]  8%|7         | 2/26 [00:00<00:03,  6.16it/s] 15%|#5        | 4/26 [00:00<00:02, 10.37it/s] 31%|###       | 8/26 [00:00<00:00, 19.27it/s] 42%|####2     | 11/26 [00:00<00:00, 21.91it/s] 54%|#####3    | 14/26 [00:00<00:00, 24.24it/s] 69%|######9   | 18/26 [00:00<00:00, 27.88it/s] 81%|########  | 21/26 [00:00<00:00, 27.99it/s] 96%|#########6| 25/26 [00:01<00:00, 29.01it/s]100%|##########| 26/26 [00:01<00:00, 21.58it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1222 200
penalty weights 10000.0
args.step pgd_anneal_iters 1222 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1223 200
penalty weights 10000.0
args.step pgd_anneal_iters 1223 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1224 200
penalty weights 10000.0
args.step pgd_anneal_iters 1224 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1225 200
penalty weights 10000.0
args.step pgd_anneal_iters 1225 600
dim_v 512
rho, theta 278 tensor(-4.5513e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1226 200
penalty weights 10000.0
args.step pgd_anneal_iters 1226 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1227 200
penalty weights 10000.0
args.step pgd_anneal_iters 1227 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1228 200
penalty weights 10000.0
args.step pgd_anneal_iters 1228 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1229 200
penalty weights 10000.0
args.step pgd_anneal_iters 1229 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1230 200
penalty weights 10000.0
args.step pgd_anneal_iters 1230 600
dim_v 512
rho, theta 277 tensor(-6.2623e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1231 200
penalty weights 10000.0
args.step pgd_anneal_iters 1231 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1232 200
penalty weights 10000.0
args.step pgd_anneal_iters 1232 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1233 200
penalty weights 10000.0
args.step pgd_anneal_iters 1233 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1234 200
penalty weights 10000.0
args.step pgd_anneal_iters 1234 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1235 200
penalty weights 10000.0
args.step pgd_anneal_iters 1235 600
dim_v 512
rho, theta 281 tensor(-2.5042e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1236 200
penalty weights 10000.0
args.step pgd_anneal_iters 1236 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1237 200
penalty weights 10000.0
args.step pgd_anneal_iters 1237 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1238 200
penalty weights 10000.0
args.step pgd_anneal_iters 1238 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1239 200
penalty weights 10000.0
args.step pgd_anneal_iters 1239 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1240 200
penalty weights 10000.0
args.step pgd_anneal_iters 1240 600
dim_v 512
rho, theta 316 tensor(-5.6559e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1241 200
penalty weights 10000.0
args.step pgd_anneal_iters 1241 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1242 200
penalty weights 10000.0
args.step pgd_anneal_iters 1242 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1243 200
penalty weights 10000.0
args.step pgd_anneal_iters 1243 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1244 200
penalty weights 10000.0
args.step pgd_anneal_iters 1244 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1245 200
penalty weights 10000.0
args.step pgd_anneal_iters 1245 600
dim_v 512
rho, theta 261 tensor(-2.5170e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1246 200
penalty weights 10000.0
args.step pgd_anneal_iters 1246 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1247 200
penalty weights 10000.0
args.step pgd_anneal_iters 1247 600
final projection at end of training
dim_v 512
rho, theta 260 tensor(-1.3045e-06, device='cuda:0')
Epoch: [47][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  27.63 ( 27.62)	train_acc   0.45 (  0.51)	train_minacc   0.61 (  0.44)	train_majacc   0.42 (  0.52)	train_corr   0.00 (  0.00)	l1 4.5095 (4.5105)	zero_count 0.0000 (54.2490)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02, 11.39it/s] 27%|##6       | 7/26 [00:00<00:00, 27.37it/s]                                               27%|##6       | 7/26 [00:00<00:00, 27.37it/s] 46%|####6     | 12/26 [00:00<00:00, 34.94it/s] 65%|######5   | 17/26 [00:00<00:00, 39.71it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.71it/s] 85%|########4 | 22/26 [00:00<00:00, 38.72it/s]100%|##########| 26/26 [00:00<00:00, 34.23it/s]
Test: [   0/  26]	Loss 0.686 (0.686)	test_acc   0.56 (  0.56)	test_minacc   0.40 (  0.40)	test_majacc   0.59 (  0.59)	Loss_d 0.686 (0.686)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.07 (  0.07)
Test: [  10/  26]	Loss 0.691 (0.689)	test_acc   0.51 (  0.50)	test_minacc   0.41 (  0.46)	test_majacc   0.53 (  0.51)	Loss_d 0.691 (0.689)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.41 (  0.46)	test_majacc_d   0.53 (  0.51)	test_corr_d   0.09 (  0.08)
Test: [  20/  26]	Loss 0.689 (0.688)	test_acc   0.51 (  0.51)	test_minacc   0.40 (  0.44)	test_majacc   0.52 (  0.52)	Loss_d 0.689 (0.688)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.40 (  0.44)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.10 (  0.09)
Test: [  26/  26]	Loss 0.684 (0.688)	test_acc   0.45 (  0.51)	test_minacc   0.61 (  0.44)	test_majacc   0.42 (  0.52)	Loss_d 0.684 (0.688)	test_acc_d   0.45 (  0.51)	test_minacc_d   0.61 (  0.44)	test_majacc_d   0.42 (  0.52)	test_corr_d   0.09 (  0.09)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.98it/s]
Test: [  0/  1]	Loss 0.727 (0.727)	test_acc   0.48 (  0.48)	test_minacc   0.47 (  0.47)	test_majacc   0.51 (  0.51)	Loss_d 0.727 (0.727)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.22 (  0.22)
Test: [  1/  1]	Loss 0.727 (0.727)	test_acc   0.48 (  0.48)	test_minacc   0.47 (  0.47)	test_majacc   0.51 (  0.51)	Loss_d 0.727 (0.727)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.22 (  0.22)
Overall Timing[ 47/  1]	epoch_time 0.0419 (0.0432)	validation_time 0.0004 (0.0005)	train_time 0.0415 (0.0427)
record: (train_acc, test_acc) (0.6366000083088875, 0.6630000472068787)
last accs (train_acc, test_acc) (0.5068000126481056, 0.4750000238418579)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.95it/s] 15%|#5        | 4/26 [00:00<00:01, 17.59it/s] 31%|###       | 8/26 [00:00<00:00, 22.98it/s] 46%|####6     | 12/26 [00:00<00:00, 27.31it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.14it/s] 69%|######9   | 18/26 [00:00<00:00, 27.51it/s] 85%|########4 | 22/26 [00:00<00:00, 30.02it/s]100%|##########| 26/26 [00:00<00:00, 30.05it/s]100%|##########| 26/26 [00:01<00:00, 24.49it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1248 200
penalty weights 10000.0
args.step pgd_anneal_iters 1248 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1249 200
penalty weights 10000.0
args.step pgd_anneal_iters 1249 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1250 200
penalty weights 10000.0
args.step pgd_anneal_iters 1250 600
dim_v 512
rho, theta 276 tensor(-2.9178e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1251 200
penalty weights 10000.0
args.step pgd_anneal_iters 1251 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1252 200
penalty weights 10000.0
args.step pgd_anneal_iters 1252 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1253 200
penalty weights 10000.0
args.step pgd_anneal_iters 1253 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1254 200
penalty weights 10000.0
args.step pgd_anneal_iters 1254 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1255 200
penalty weights 10000.0
args.step pgd_anneal_iters 1255 600
dim_v 512
rho, theta 281 tensor(-6.9902e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1256 200
penalty weights 10000.0
args.step pgd_anneal_iters 1256 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1257 200
penalty weights 10000.0
args.step pgd_anneal_iters 1257 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1258 200
penalty weights 10000.0
args.step pgd_anneal_iters 1258 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1259 200
penalty weights 10000.0
args.step pgd_anneal_iters 1259 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1260 200
penalty weights 10000.0
args.step pgd_anneal_iters 1260 600
dim_v 512
rho, theta 364 tensor(-1.4514e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1261 200
penalty weights 10000.0
args.step pgd_anneal_iters 1261 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1262 200
penalty weights 10000.0
args.step pgd_anneal_iters 1262 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1263 200
penalty weights 10000.0
args.step pgd_anneal_iters 1263 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1264 200
penalty weights 10000.0
args.step pgd_anneal_iters 1264 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1265 200
penalty weights 10000.0
args.step pgd_anneal_iters 1265 600
dim_v 512
rho, theta 352 tensor(-4.9980e-08, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1266 200
penalty weights 10000.0
args.step pgd_anneal_iters 1266 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1267 200
penalty weights 10000.0
args.step pgd_anneal_iters 1267 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1268 200
penalty weights 10000.0
args.step pgd_anneal_iters 1268 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1269 200
penalty weights 10000.0
args.step pgd_anneal_iters 1269 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1270 200
penalty weights 10000.0
args.step pgd_anneal_iters 1270 600
dim_v 512
rho, theta 288 tensor(-2.8775e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1271 200
penalty weights 10000.0
args.step pgd_anneal_iters 1271 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1272 200
penalty weights 10000.0
args.step pgd_anneal_iters 1272 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1273 200
penalty weights 10000.0
args.step pgd_anneal_iters 1273 600
final projection at end of training
dim_v 512
rho, theta 266 tensor(-1.8520e-06, device='cuda:0')
Epoch: [48][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  27.63 ( 27.63)	train_acc   0.45 (  0.51)	train_minacc   0.61 (  0.44)	train_majacc   0.42 (  0.52)	train_corr   0.00 (  0.00)	l1 4.5097 (4.5102)	zero_count 0.0000 (48.5550)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.95it/s] 27%|##6       | 7/26 [00:00<00:00, 27.17it/s]                                               27%|##6       | 7/26 [00:00<00:00, 27.17it/s] 50%|#####     | 13/26 [00:00<00:00, 36.16it/s] 73%|#######3  | 19/26 [00:00<00:00, 42.21it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 42.21it/s] 92%|#########2| 24/26 [00:00<00:00, 44.44it/s]100%|##########| 26/26 [00:00<00:00, 34.96it/s]
Test: [   0/  26]	Loss 0.687 (0.687)	test_acc   0.56 (  0.56)	test_minacc   0.36 (  0.36)	test_majacc   0.59 (  0.59)	Loss_d 0.687 (0.687)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.07 (  0.07)
Test: [  10/  26]	Loss 0.691 (0.689)	test_acc   0.51 (  0.50)	test_minacc   0.41 (  0.46)	test_majacc   0.53 (  0.51)	Loss_d 0.691 (0.689)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.41 (  0.46)	test_majacc_d   0.53 (  0.51)	test_corr_d   0.09 (  0.08)
Test: [  20/  26]	Loss 0.689 (0.689)	test_acc   0.51 (  0.51)	test_minacc   0.40 (  0.44)	test_majacc   0.53 (  0.52)	Loss_d 0.689 (0.689)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.40 (  0.44)	test_majacc_d   0.53 (  0.52)	test_corr_d   0.10 (  0.08)
Test: [  26/  26]	Loss 0.684 (0.688)	test_acc   0.45 (  0.51)	test_minacc   0.61 (  0.44)	test_majacc   0.42 (  0.52)	Loss_d 0.684 (0.688)	test_acc_d   0.45 (  0.51)	test_minacc_d   0.61 (  0.44)	test_majacc_d   0.42 (  0.52)	test_corr_d   0.09 (  0.09)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 57.89it/s]
Test: [  0/  1]	Loss 0.726 (0.726)	test_acc   0.47 (  0.47)	test_minacc   0.47 (  0.47)	test_majacc   0.51 (  0.51)	Loss_d 0.726 (0.726)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.22 (  0.22)
Test: [  1/  1]	Loss 0.726 (0.726)	test_acc   0.47 (  0.47)	test_minacc   0.47 (  0.47)	test_majacc   0.51 (  0.51)	Loss_d 0.726 (0.726)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.22 (  0.22)
Overall Timing[ 48/  1]	epoch_time 0.0411 (0.0432)	validation_time 0.0004 (0.0005)	train_time 0.0407 (0.0426)
record: (train_acc, test_acc) (0.6366000083088875, 0.6630000472068787)
last accs (train_acc, test_acc) (0.5057000138759613, 0.47300001978874207)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.52it/s] 15%|#5        | 4/26 [00:00<00:01, 17.25it/s] 27%|##6       | 7/26 [00:00<00:00, 21.63it/s] 42%|####2     | 11/26 [00:00<00:00, 27.11it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.69it/s] 69%|######9   | 18/26 [00:00<00:00, 28.37it/s] 85%|########4 | 22/26 [00:00<00:00, 29.35it/s]100%|##########| 26/26 [00:00<00:00, 31.66it/s]100%|##########| 26/26 [00:01<00:00, 25.57it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1274 200
penalty weights 10000.0
args.step pgd_anneal_iters 1274 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1275 200
penalty weights 10000.0
args.step pgd_anneal_iters 1275 600
dim_v 512
rho, theta 274 tensor(-1.4877e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1276 200
penalty weights 10000.0
args.step pgd_anneal_iters 1276 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1277 200
penalty weights 10000.0
args.step pgd_anneal_iters 1277 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1278 200
penalty weights 10000.0
args.step pgd_anneal_iters 1278 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1279 200
penalty weights 10000.0
args.step pgd_anneal_iters 1279 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1280 200
penalty weights 10000.0
args.step pgd_anneal_iters 1280 600
dim_v 512
rho, theta 278 tensor(-6.8979e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1281 200
penalty weights 10000.0
args.step pgd_anneal_iters 1281 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1282 200
penalty weights 10000.0
args.step pgd_anneal_iters 1282 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1283 200
penalty weights 10000.0
args.step pgd_anneal_iters 1283 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1284 200
penalty weights 10000.0
args.step pgd_anneal_iters 1284 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1285 200
penalty weights 10000.0
args.step pgd_anneal_iters 1285 600
dim_v 512
rho, theta 270 tensor(-2.9261e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1286 200
penalty weights 10000.0
args.step pgd_anneal_iters 1286 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1287 200
penalty weights 10000.0
args.step pgd_anneal_iters 1287 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1288 200
penalty weights 10000.0
args.step pgd_anneal_iters 1288 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1289 200
penalty weights 10000.0
args.step pgd_anneal_iters 1289 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1290 200
penalty weights 10000.0
args.step pgd_anneal_iters 1290 600
dim_v 512
rho, theta 372 tensor(4.9985e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1291 200
penalty weights 10000.0
args.step pgd_anneal_iters 1291 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1292 200
penalty weights 10000.0
args.step pgd_anneal_iters 1292 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1293 200
penalty weights 10000.0
args.step pgd_anneal_iters 1293 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1294 200
penalty weights 10000.0
args.step pgd_anneal_iters 1294 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1295 200
penalty weights 10000.0
args.step pgd_anneal_iters 1295 600
dim_v 512
rho, theta 266 tensor(-2.8449e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1296 200
penalty weights 10000.0
args.step pgd_anneal_iters 1296 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1297 200
penalty weights 10000.0
args.step pgd_anneal_iters 1297 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1298 200
penalty weights 10000.0
args.step pgd_anneal_iters 1298 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1299 200
penalty weights 10000.0
args.step pgd_anneal_iters 1299 600
final projection at end of training
dim_v 512
rho, theta 256 tensor(-2.0372e-06, device='cuda:0')
Epoch: [49][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  27.63 ( 27.63)	train_acc   0.44 (  0.51)	train_minacc   0.61 (  0.44)	train_majacc   0.41 (  0.52)	train_corr   0.00 (  0.00)	l1 4.5104 (4.5103)	zero_count 0.0000 (52.2600)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.09it/s] 23%|##3       | 6/26 [00:00<00:00, 29.75it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.75it/s] 42%|####2     | 11/26 [00:00<00:00, 37.66it/s] 62%|######1   | 16/26 [00:00<00:00, 41.09it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.09it/s] 81%|########  | 21/26 [00:00<00:00, 39.48it/s]100%|##########| 26/26 [00:00<00:00, 42.20it/s]100%|##########| 26/26 [00:00<00:00, 35.16it/s]
Test: [   0/  26]	Loss 0.687 (0.687)	test_acc   0.56 (  0.56)	test_minacc   0.36 (  0.36)	test_majacc   0.59 (  0.59)	Loss_d 0.687 (0.687)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.06 (  0.06)
Test: [  10/  26]	Loss 0.691 (0.689)	test_acc   0.51 (  0.50)	test_minacc   0.41 (  0.46)	test_majacc   0.53 (  0.51)	Loss_d 0.691 (0.689)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.41 (  0.46)	test_majacc_d   0.53 (  0.51)	test_corr_d   0.08 (  0.08)
Test: [  20/  26]	Loss 0.689 (0.689)	test_acc   0.51 (  0.51)	test_minacc   0.40 (  0.44)	test_majacc   0.52 (  0.52)	Loss_d 0.689 (0.689)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.40 (  0.44)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.09 (  0.08)
Test: [  26/  26]	Loss 0.685 (0.688)	test_acc   0.45 (  0.50)	test_minacc   0.61 (  0.44)	test_majacc   0.42 (  0.52)	Loss_d 0.685 (0.688)	test_acc_d   0.45 (  0.50)	test_minacc_d   0.61 (  0.44)	test_majacc_d   0.42 (  0.52)	test_corr_d   0.08 (  0.09)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.97it/s]
Test: [  0/  1]	Loss 0.726 (0.726)	test_acc   0.47 (  0.47)	test_minacc   0.46 (  0.46)	test_majacc   0.51 (  0.51)	Loss_d 0.726 (0.726)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.46 (  0.46)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.22 (  0.22)
Test: [  1/  1]	Loss 0.726 (0.726)	test_acc   0.47 (  0.47)	test_minacc   0.46 (  0.46)	test_majacc   0.51 (  0.51)	Loss_d 0.726 (0.726)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.46 (  0.46)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.22 (  0.22)
Overall Timing[ 49/  1]	epoch_time 0.0404 (0.0431)	validation_time 0.0004 (0.0005)	train_time 0.0400 (0.0426)
record: (train_acc, test_acc) (0.6366000083088875, 0.6630000472068787)
last accs (train_acc, test_acc) (0.5045000069737434, 0.4660000205039978)
done saving aggregate.csv to ./aggregate.csv
wandb: - 0.164 MB of 0.164 MB uploadedwandb: \ 0.164 MB of 0.164 MB uploadedThread SenderThread:
Traceback (most recent call last):
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/internal_util.py", line 48, in run
    self._run()
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/internal_util.py", line 99, in _run
    self._process(record)
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/internal.py", line 327, in _process
    self._sm.send(record)
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/sender.py", line 398, in send
    send_handler(record)
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/sender.py", line 420, in send_request
    send_handler(record)
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/sender.py", line 654, in send_request_defer
    self._flush_job()
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/sender.py", line 1706, in _flush_job
    artifact = self._job_builder.build(api=self._api)
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/job_builder.py", line 552, in build
    artifact.add_file(
  File "/home/zd16/scratch/mypython3/wandb/sdk/artifacts/artifact.py", line 1196, in add_file
    return self._add_local_file(
  File "/home/zd16/scratch/mypython3/wandb/sdk/artifacts/artifact.py", line 1459, in _add_local_file
    with tempfile.NamedTemporaryFile(dir=get_staging_dir(), delete=False) as f:
  File "/usr/local/python/3.9.16/lib/python3.9/tempfile.py", line 545, in NamedTemporaryFile
    (fd, name) = _mkstemp_inner(dir, prefix, suffix, flags, output_type)
  File "/usr/local/python/3.9.16/lib/python3.9/tempfile.py", line 255, in _mkstemp_inner
    fd = _os.open(file, flags, 0o600)
OSError: [Errno 122] Disk quota exceeded: '/home/zd16/.local/share/wandb/artifacts/staging/tmpulmjdk0n'
wandb: ERROR Internal wandb error: file data was not synced
